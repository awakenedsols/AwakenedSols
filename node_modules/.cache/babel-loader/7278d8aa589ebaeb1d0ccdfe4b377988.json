{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { NativeUIElementBridge } from \"./NativeUIElementBridge\";\nimport { runOn, enumGetBox, typeCast, EnumUtil, markType } from \"./type\";\nimport { NativeUIComponent } from \"./NativeUIComponent\";\nimport { NativeUIButtonClickedEventArgs } from \"./NativeUIButtonClickedEventArgs\";\nimport { NativeUIDisplayDensity_$type } from \"./NativeUIDisplayDensity\";\n/**\n * @hidden\n */\n\nvar IgcButtonBridge =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgcButtonBridge, _super);\n\n  function IgcButtonBridge() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.e = null;\n    _this.c = null;\n    _this.f = null;\n    _this.g = null;\n    _this.d = null;\n    return _this;\n  }\n\n  IgcButtonBridge.prototype.addHandler = function (a, b, c, d) {\n    switch (c) {\n      case 1:\n        var e = a;\n        this.e = e.listen(\"click\", runOn(this, this.h));\n        this.c = d;\n        this.f = b;\n        break;\n    }\n  };\n\n  IgcButtonBridge.prototype.h = function (a) {\n    if (this.c != null) {\n      var b = new NativeUIButtonClickedEventArgs();\n      this.c(this.f, b);\n    }\n  };\n\n  IgcButtonBridge.prototype.getValue = function (a, b) {\n    switch (b) {\n      case 3:\n        return this.d != null ? this.d : this.g;\n\n      case 1:\n        var c = a.getProperty(\"size\");\n        var d = 1;\n\n        switch (c) {\n          case \"small\":\n            d = 2;\n            break;\n\n          case \"medium\":\n            d = 3;\n            break;\n\n          case \"large\":\n            d = 1;\n            break;\n\n          default:\n            d = 1;\n            break;\n        }\n\n        return enumGetBox(NativeUIDisplayDensity_$type, d);\n    }\n\n    return null;\n  };\n\n  IgcButtonBridge.prototype.removeHandler = function (a, b, c, d) {\n    switch (c) {\n      case 1:\n        if (this.e != null) {\n          this.e();\n        }\n\n        this.c = null;\n        this.f = null;\n        break;\n    }\n  };\n\n  IgcButtonBridge.prototype.setValue = function (a, b, c) {\n    switch (b) {\n      case 3:\n        if (typeCast(NativeUIComponent.$, c) !== null) {\n          this.d = c;\n          a.append(this.d.u);\n        } else {\n          this.g = c == null ? null : c.toString();\n          a.setText(this.g);\n        }\n\n        break;\n\n      case 1:\n        var d = \"large\";\n\n        switch (EnumUtil.getEnumValue(NativeUIDisplayDensity_$type, c)) {\n          case 0:\n            d = \"large\";\n            break;\n\n          case 1:\n            d = \"large\";\n            break;\n\n          case 2:\n            d = \"small\";\n            break;\n\n          case 3:\n            d = \"medium\";\n            break;\n        }\n\n        a.setProperty(\"size\", d);\n        break;\n    }\n  };\n\n  IgcButtonBridge.$t = markType(IgcButtonBridge, 'IgcButtonBridge', NativeUIElementBridge.$);\n  return IgcButtonBridge;\n}(NativeUIElementBridge);\n\nexport { IgcButtonBridge };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/IgcButtonBridge.js"],"names":["__extends","NativeUIElementBridge","runOn","enumGetBox","typeCast","EnumUtil","markType","NativeUIComponent","NativeUIButtonClickedEventArgs","NativeUIDisplayDensity_$type","IgcButtonBridge","_super","_this","apply","arguments","e","c","f","g","d","prototype","addHandler","a","b","listen","h","getValue","getProperty","removeHandler","setValue","$","append","u","toString","setText","getEnumValue","setProperty","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { NativeUIElementBridge } from \"./NativeUIElementBridge\";\nimport { runOn, enumGetBox, typeCast, EnumUtil, markType } from \"./type\";\nimport { NativeUIComponent } from \"./NativeUIComponent\";\nimport { NativeUIButtonClickedEventArgs } from \"./NativeUIButtonClickedEventArgs\";\nimport { NativeUIDisplayDensity_$type } from \"./NativeUIDisplayDensity\";\n/**\n * @hidden\n */\nvar IgcButtonBridge = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgcButtonBridge, _super);\n    function IgcButtonBridge() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.e = null;\n        _this.c = null;\n        _this.f = null;\n        _this.g = null;\n        _this.d = null;\n        return _this;\n    }\n    IgcButtonBridge.prototype.addHandler = function (a, b, c, d) {\n        switch (c) {\n            case 1:\n                var e = a;\n                this.e = e.listen(\"click\", runOn(this, this.h));\n                this.c = d;\n                this.f = b;\n                break;\n        }\n    };\n    IgcButtonBridge.prototype.h = function (a) {\n        if (this.c != null) {\n            var b = new NativeUIButtonClickedEventArgs();\n            this.c(this.f, b);\n        }\n    };\n    IgcButtonBridge.prototype.getValue = function (a, b) {\n        switch (b) {\n            case 3: return this.d != null ? this.d : this.g;\n            case 1:\n                var c = a.getProperty(\"size\");\n                var d = 1;\n                switch (c) {\n                    case \"small\":\n                        d = 2;\n                        break;\n                    case \"medium\":\n                        d = 3;\n                        break;\n                    case \"large\":\n                        d = 1;\n                        break;\n                    default:\n                        d = 1;\n                        break;\n                }\n                return enumGetBox(NativeUIDisplayDensity_$type, d);\n        }\n        return null;\n    };\n    IgcButtonBridge.prototype.removeHandler = function (a, b, c, d) {\n        switch (c) {\n            case 1:\n                if (this.e != null) {\n                    this.e();\n                }\n                this.c = null;\n                this.f = null;\n                break;\n        }\n    };\n    IgcButtonBridge.prototype.setValue = function (a, b, c) {\n        switch (b) {\n            case 3:\n                if (typeCast(NativeUIComponent.$, c) !== null) {\n                    this.d = c;\n                    a.append(this.d.u);\n                }\n                else {\n                    this.g = c == null ? null : c.toString();\n                    a.setText(this.g);\n                }\n                break;\n            case 1:\n                var d = \"large\";\n                switch (EnumUtil.getEnumValue(NativeUIDisplayDensity_$type, c)) {\n                    case 0:\n                        d = \"large\";\n                        break;\n                    case 1:\n                        d = \"large\";\n                        break;\n                    case 2:\n                        d = \"small\";\n                        break;\n                    case 3:\n                        d = \"medium\";\n                        break;\n                }\n                a.setProperty(\"size\", d);\n                break;\n        }\n    };\n    IgcButtonBridge.$t = markType(IgcButtonBridge, 'IgcButtonBridge', NativeUIElementBridge.$);\n    return IgcButtonBridge;\n}(NativeUIElementBridge));\nexport { IgcButtonBridge };\n"]},"metadata":{},"sourceType":"module"}