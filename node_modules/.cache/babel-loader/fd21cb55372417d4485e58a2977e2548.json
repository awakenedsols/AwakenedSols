{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { CategoryChartDescriptionMetadata } from \"./CategoryChartDescriptionMetadata\";\nimport { CategoryXAxisDescriptionModule } from \"./CategoryXAxisDescriptionModule\";\nimport { NumericYAxisDescriptionModule } from \"./NumericYAxisDescriptionModule\";\n/**\n * @hidden\n */\n\nvar CategoryChartCoreDescriptionModule =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(CategoryChartCoreDescriptionModule, _super);\n\n  function CategoryChartCoreDescriptionModule() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CategoryChartCoreDescriptionModule.register = function (a) {\n    CategoryChartDescriptionMetadata.d(a);\n    CategoryXAxisDescriptionModule.register(a);\n    NumericYAxisDescriptionModule.register(a);\n  };\n\n  CategoryChartCoreDescriptionModule.$t = markType(CategoryChartCoreDescriptionModule, 'CategoryChartCoreDescriptionModule');\n  return CategoryChartCoreDescriptionModule;\n}(Base);\n\nexport { CategoryChartCoreDescriptionModule };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/CategoryChartCoreDescriptionModule.js"],"names":["__extends","Base","markType","CategoryChartDescriptionMetadata","CategoryXAxisDescriptionModule","NumericYAxisDescriptionModule","CategoryChartCoreDescriptionModule","_super","apply","arguments","register","a","d","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA,SAASC,gCAAT,QAAiD,oCAAjD;AACA,SAASC,8BAAT,QAA+C,kCAA/C;AACA,SAASC,6BAAT,QAA8C,iCAA9C;AACA;AACA;AACA;;AACA,IAAIC,kCAAkC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACpFP,EAAAA,SAAS,CAACM,kCAAD,EAAqCC,MAArC,CAAT;;AACA,WAASD,kCAAT,GAA8C;AAC1C,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,kCAAkC,CAACI,QAAnC,GAA8C,UAAUC,CAAV,EAAa;AACvDR,IAAAA,gCAAgC,CAACS,CAAjC,CAAmCD,CAAnC;AACAP,IAAAA,8BAA8B,CAACM,QAA/B,CAAwCC,CAAxC;AACAN,IAAAA,6BAA6B,CAACK,QAA9B,CAAuCC,CAAvC;AACH,GAJD;;AAKAL,EAAAA,kCAAkC,CAACO,EAAnC,GAAwCX,QAAQ,CAACI,kCAAD,EAAqC,oCAArC,CAAhD;AACA,SAAOA,kCAAP;AACH,CAZqE,CAYpEL,IAZoE,CAAtE;;AAaA,SAASK,kCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { CategoryChartDescriptionMetadata } from \"./CategoryChartDescriptionMetadata\";\nimport { CategoryXAxisDescriptionModule } from \"./CategoryXAxisDescriptionModule\";\nimport { NumericYAxisDescriptionModule } from \"./NumericYAxisDescriptionModule\";\n/**\n * @hidden\n */\nvar CategoryChartCoreDescriptionModule = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(CategoryChartCoreDescriptionModule, _super);\n    function CategoryChartCoreDescriptionModule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CategoryChartCoreDescriptionModule.register = function (a) {\n        CategoryChartDescriptionMetadata.d(a);\n        CategoryXAxisDescriptionModule.register(a);\n        NumericYAxisDescriptionModule.register(a);\n    };\n    CategoryChartCoreDescriptionModule.$t = markType(CategoryChartCoreDescriptionModule, 'CategoryChartCoreDescriptionModule');\n    return CategoryChartCoreDescriptionModule;\n}(Base));\nexport { CategoryChartCoreDescriptionModule };\n"]},"metadata":{},"sourceType":"module"}