{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { TreemapNodeStyleMappingTargetType_$type } from \"./TreemapNodeStyleMappingTargetType\";\nimport { TreemapValueMappingMode_$type } from \"./TreemapValueMappingMode\";\nimport { IgrTreemapNodeStyle } from \"./igr-treemap-node-style\";\nimport { TreemapNodeStyleMapping } from \"./TreemapNodeStyleMapping\";\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents a style to apply to a set of nodes in the treemap.\n*/\n\nvar IgrTreemapNodeStyleMapping =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrTreemapNodeStyleMapping, _super);\n\n  function IgrTreemapNodeStyleMapping(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrTreemapNodeStyleMapping.prototype.createImplementation = function () {\n    return new TreemapNodeStyleMapping();\n  };\n\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"targetType\", {\n    /**\n     * Gets or sets the unique name of the mapping.\n    */\n    get: function () {\n      return this.i.bf;\n    },\n    set: function (v) {\n      this.i.bf = ensureEnum(TreemapNodeStyleMappingTargetType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"name\", {\n    /**\n     * Gets or sets the unique name of the mapping.\n    */\n    get: function () {\n      return this.i.bs;\n    },\n    set: function (v) {\n      this.i.bs = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"minimumValue\", {\n    /**\n     * Gets or sets the minimum value to which the mapping applies.\n    */\n    get: function () {\n      return this.i.bl;\n    },\n    set: function (v) {\n      this.i.bl = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"maximumValue\", {\n    /**\n     * Gets or sets the maximum value to which the mapping applies.\n    */\n    get: function () {\n      return this.i.bk;\n    },\n    set: function (v) {\n      this.i.bk = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"value\", {\n    /**\n     * Gets or sets the value to which the mapping applies.\n    */\n    get: function () {\n      return this.i.bn;\n    },\n    set: function (v) {\n      this.i.bn = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"mappingMode\", {\n    /**\n     * Gets or sets the mapping mode to use to evaluate whether the mapping applies.\n    */\n    get: function () {\n      return this.i.bh;\n    },\n    set: function (v) {\n      this.i.bh = ensureEnum(TreemapValueMappingMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrTreemapNodeStyleMapping;\n}(IgrTreemapNodeStyle);\n\nexport { IgrTreemapNodeStyleMapping };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-treemap-node-style-mapping.js"],"names":["__extends","TreemapNodeStyleMappingTargetType_$type","TreemapValueMappingMode_$type","IgrTreemapNodeStyle","TreemapNodeStyleMapping","ensureEnum","IgrTreemapNodeStyleMapping","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","bf","set","v","bs","bl","bk","bn","bh"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { TreemapNodeStyleMappingTargetType_$type } from \"./TreemapNodeStyleMappingTargetType\";\nimport { TreemapValueMappingMode_$type } from \"./TreemapValueMappingMode\";\nimport { IgrTreemapNodeStyle } from \"./igr-treemap-node-style\";\nimport { TreemapNodeStyleMapping } from \"./TreemapNodeStyleMapping\";\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents a style to apply to a set of nodes in the treemap.\n*/\nvar IgrTreemapNodeStyleMapping = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrTreemapNodeStyleMapping, _super);\n    function IgrTreemapNodeStyleMapping(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrTreemapNodeStyleMapping.prototype.createImplementation = function () {\n        return new TreemapNodeStyleMapping();\n    };\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"targetType\", {\n        /**\n         * Gets or sets the unique name of the mapping.\n        */\n        get: function () {\n            return this.i.bf;\n        },\n        set: function (v) {\n            this.i.bf = ensureEnum(TreemapNodeStyleMappingTargetType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"name\", {\n        /**\n         * Gets or sets the unique name of the mapping.\n        */\n        get: function () {\n            return this.i.bs;\n        },\n        set: function (v) {\n            this.i.bs = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"minimumValue\", {\n        /**\n         * Gets or sets the minimum value to which the mapping applies.\n        */\n        get: function () {\n            return this.i.bl;\n        },\n        set: function (v) {\n            this.i.bl = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"maximumValue\", {\n        /**\n         * Gets or sets the maximum value to which the mapping applies.\n        */\n        get: function () {\n            return this.i.bk;\n        },\n        set: function (v) {\n            this.i.bk = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"value\", {\n        /**\n         * Gets or sets the value to which the mapping applies.\n        */\n        get: function () {\n            return this.i.bn;\n        },\n        set: function (v) {\n            this.i.bn = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTreemapNodeStyleMapping.prototype, \"mappingMode\", {\n        /**\n         * Gets or sets the mapping mode to use to evaluate whether the mapping applies.\n        */\n        get: function () {\n            return this.i.bh;\n        },\n        set: function (v) {\n            this.i.bh = ensureEnum(TreemapValueMappingMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrTreemapNodeStyleMapping;\n}(IgrTreemapNodeStyle));\nexport { IgrTreemapNodeStyleMapping };\n"]},"metadata":{},"sourceType":"module"}