{"ast":null,"code":"//\n// System.Xml.XmlResolver.cs\n//\n// Author:\n//   Jason Diamond (jason@injektilo.org)\n//   Atsushi Enomoto (atsushi@ximian.com)\n//\n// (C) 2001 Jason Diamond  http://injektilo.org/\n// Copyright (C) 2004,2009 Novell, Inc (http://www.novell.com)\n//\nimport { __extends } from \"tslib\"; //\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { Base, markType } from \"./type\";\nimport { Uri } from \"./Uri\";\nimport { ArgumentNullException } from \"./ArgumentNullException\";\nimport { InvalidOperationException } from \"./InvalidOperationException\";\nimport { stringStartsWith, stringReplace } from \"./string\";\n/**\n * @hidden\n */\n\nvar XmlResolver =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(XmlResolver, _super);\n\n  function XmlResolver() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  XmlResolver.prototype.d = function (a, b) {\n    if (a == null) {\n      if (b == null) {\n        throw new ArgumentNullException(0, \"Either baseUri or relativeUri are required.\");\n      }\n\n      if (stringStartsWith(b, \"http:\") || stringStartsWith(b, \"https:\") || stringStartsWith(b, \"ftp:\") || stringStartsWith(b, \"file:\")) {\n        return new Uri(0, b);\n      }\n\n      throw new InvalidOperationException(1, b + \" not supported\");\n    }\n\n    if (b == null) {\n      return a;\n    }\n\n    return new Uri(3, a, this.c(b));\n  };\n\n  XmlResolver.prototype.c = function (a) {\n    return stringReplace(stringReplace(stringReplace(stringReplace(stringReplace(a, \"<\", \"%3C\"), \">\", \"%3E\"), \"#\", \"%23\"), \"%\", \"%25\"), \"\\\"\", \"%22\");\n  };\n\n  XmlResolver.$t = markType(XmlResolver, 'XmlResolver');\n  return XmlResolver;\n}(Base);\n\nexport { XmlResolver };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/XmlResolver.js"],"names":["__extends","Base","markType","Uri","ArgumentNullException","InvalidOperationException","stringStartsWith","stringReplace","XmlResolver","_super","apply","arguments","prototype","d","a","b","c","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,gBAAT,EAA2BC,aAA3B,QAAgD,UAAhD;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC7DT,EAAAA,SAAS,CAACQ,WAAD,EAAcC,MAAd,CAAT;;AACA,WAASD,WAAT,GAAuB;AACnB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,WAAW,CAACI,SAAZ,CAAsBC,CAAtB,GAA0B,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACtC,QAAID,CAAC,IAAI,IAAT,EAAe;AACX,UAAIC,CAAC,IAAI,IAAT,EAAe;AACX,cAAM,IAAIX,qBAAJ,CAA0B,CAA1B,EAA6B,6CAA7B,CAAN;AACH;;AACD,UAAIE,gBAAgB,CAACS,CAAD,EAAI,OAAJ,CAAhB,IAAgCT,gBAAgB,CAACS,CAAD,EAAI,QAAJ,CAAhD,IAAiET,gBAAgB,CAACS,CAAD,EAAI,MAAJ,CAAjF,IAAgGT,gBAAgB,CAACS,CAAD,EAAI,OAAJ,CAApH,EAAkI;AAC9H,eAAO,IAAIZ,GAAJ,CAAQ,CAAR,EAAWY,CAAX,CAAP;AACH;;AACD,YAAM,IAAIV,yBAAJ,CAA8B,CAA9B,EAAiCU,CAAC,GAAG,gBAArC,CAAN;AACH;;AACD,QAAIA,CAAC,IAAI,IAAT,EAAe;AACX,aAAOD,CAAP;AACH;;AACD,WAAO,IAAIX,GAAJ,CAAQ,CAAR,EAAWW,CAAX,EAAc,KAAKE,CAAL,CAAOD,CAAP,CAAd,CAAP;AACH,GAdD;;AAeAP,EAAAA,WAAW,CAACI,SAAZ,CAAsBI,CAAtB,GAA0B,UAAUF,CAAV,EAAa;AACnC,WAAOP,aAAa,CAACA,aAAa,CAACA,aAAa,CAACA,aAAa,CAACA,aAAa,CAACO,CAAD,EAAI,GAAJ,EAAS,KAAT,CAAd,EAA+B,GAA/B,EAAoC,KAApC,CAAd,EAA0D,GAA1D,EAA+D,KAA/D,CAAd,EAAqF,GAArF,EAA0F,KAA1F,CAAd,EAAgH,IAAhH,EAAsH,KAAtH,CAApB;AACH,GAFD;;AAGAN,EAAAA,WAAW,CAACS,EAAZ,GAAiBf,QAAQ,CAACM,WAAD,EAAc,aAAd,CAAzB;AACA,SAAOA,WAAP;AACH,CAzB8C,CAyB7CP,IAzB6C,CAA/C;;AA0BA,SAASO,WAAT","sourcesContent":["//\n// System.Xml.XmlResolver.cs\n//\n// Author:\n//   Jason Diamond (jason@injektilo.org)\n//   Atsushi Enomoto (atsushi@ximian.com)\n//\n// (C) 2001 Jason Diamond  http://injektilo.org/\n// Copyright (C) 2004,2009 Novell, Inc (http://www.novell.com)\n//\nimport { __extends } from \"tslib\";\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport { Base, markType } from \"./type\";\nimport { Uri } from \"./Uri\";\nimport { ArgumentNullException } from \"./ArgumentNullException\";\nimport { InvalidOperationException } from \"./InvalidOperationException\";\nimport { stringStartsWith, stringReplace } from \"./string\";\n/**\n * @hidden\n */\nvar XmlResolver = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(XmlResolver, _super);\n    function XmlResolver() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    XmlResolver.prototype.d = function (a, b) {\n        if (a == null) {\n            if (b == null) {\n                throw new ArgumentNullException(0, \"Either baseUri or relativeUri are required.\");\n            }\n            if (stringStartsWith(b, \"http:\") || stringStartsWith(b, \"https:\") || stringStartsWith(b, \"ftp:\") || stringStartsWith(b, \"file:\")) {\n                return new Uri(0, b);\n            }\n            throw new InvalidOperationException(1, b + \" not supported\");\n        }\n        if (b == null) {\n            return a;\n        }\n        return new Uri(3, a, this.c(b));\n    };\n    XmlResolver.prototype.c = function (a) {\n        return stringReplace(stringReplace(stringReplace(stringReplace(stringReplace(a, \"<\", \"%3C\"), \">\", \"%3E\"), \"#\", \"%23\"), \"%\", \"%25\"), \"\\\"\", \"%22\");\n    };\n    XmlResolver.$t = markType(XmlResolver, 'XmlResolver');\n    return XmlResolver;\n}(Base));\nexport { XmlResolver };\n"]},"metadata":{},"sourceType":"module"}