{"ast":null,"code":"import _objectSpread from\"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2;import{useCallback,useEffect,useMemo,useState}from'react';import*as anchor from'@project-serum/anchor';import styled from'styled-components';import{Container,Snackbar}from'@material-ui/core';import Paper from'@material-ui/core/Paper';import Alert from'@material-ui/lab/Alert';import Grid from'@material-ui/core/Grid';import Typography from'@material-ui/core/Typography';import{Connection,PublicKey}from'@solana/web3.js';import{useWallet}from'@solana/wallet-adapter-react';import{WalletDialogButton}from'@solana/wallet-adapter-material-ui';import{awaitTransactionSignatureConfirmation,CANDY_MACHINE_PROGRAM,createAccountsForMint,getCandyMachineState,getCollectionPDA,mintOneToken}from'./candy-machine';import{formatNumber,getAtaForMint,toDate}from'./utils';import{MintButton}from'./MintButton';import{GatewayProvider}from'@civic/solana-gateway-react';import{sendTransaction}from'./connection';import{WalletAdapterNetwork}from'@solana/wallet-adapter-base';import'./home.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var ConnectButton=styled(WalletDialogButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  width: 100%;\\n  height: 60px;\\n  margin-top: 10px;\\n  margin-bottom: 5px;\\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\\n  color: white;\\n  font-size: 16px;\\n  font-weight: bold;\\n\"])));var MintContainer=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\"])));// add your owns styles here\nvar Home=function Home(props){var _anchorWallet$publicK,_candyMachine$state,_candyMachine$state$g;var _useState=useState(false),_useState2=_slicedToArray(_useState,2),isUserMinting=_useState2[0],setIsUserMinting=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),candyMachine=_useState4[0],setCandyMachine=_useState4[1];var _useState5=useState({open:false,message:'',severity:undefined}),_useState6=_slicedToArray(_useState5,2),alertState=_useState6[0],setAlertState=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isActive=_useState8[0],setIsActive=_useState8[1];var _useState9=useState(),_useState10=_slicedToArray(_useState9,2),endDate=_useState10[0],setEndDate=_useState10[1];var _useState11=useState(),_useState12=_slicedToArray(_useState11,2),itemsRemaining=_useState12[0],setItemsRemaining=_useState12[1];var _useState13=useState(false),_useState14=_slicedToArray(_useState13,2),isWhitelistUser=_useState14[0],setIsWhitelistUser=_useState14[1];var _useState15=useState(false),_useState16=_slicedToArray(_useState15,2),isPresale=_useState16[0],setIsPresale=_useState16[1];var _useState17=useState(false),_useState18=_slicedToArray(_useState17,2),isValidBalance=_useState18[0],setIsValidBalance=_useState18[1];var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),discountPrice=_useState20[0],setDiscountPrice=_useState20[1];var _useState21=useState(true),_useState22=_slicedToArray(_useState21,2),needTxnSplit=_useState22[0],setNeedTxnSplit=_useState22[1];var _useState23=useState(),_useState24=_slicedToArray(_useState23,2),setupTxn=_useState24[0],setSetupTxn=_useState24[1];var rpcUrl=props.rpcHost;var wallet=useWallet();var anchorWallet=useMemo(function(){if(!wallet||!wallet.publicKey||!wallet.signAllTransactions||!wallet.signTransaction){return;}return{publicKey:wallet.publicKey,signAllTransactions:wallet.signAllTransactions,signTransaction:wallet.signTransaction};},[wallet]);var refreshCandyMachineState=useCallback(/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var commitment,connection,_cndy$state$goLiveDat,_cndy$state$whitelist,_cndy$state$whitelist2,_cndy$state$gatekeepe,cndy,active,presale,isWLUser,userPrice,mint,token,balance,valid,_balance,_valid,_yield$getCollectionP,_yield$getCollectionP2,collectionPDA,collectionPDAAccount,txnEstimate,_args=arguments;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:commitment=_args.length>0&&_args[0]!==undefined?_args[0]:'confirmed';if(anchorWallet){_context.next=3;break;}return _context.abrupt(\"return\");case 3:connection=new Connection(props.rpcHost,commitment);if(!props.candyMachineId){_context.next=67;break;}console.log(props===null||props===void 0?void 0:props.candyMachineId);_context.prev=6;_context.next=9;return getCandyMachineState(anchorWallet,props.candyMachineId,connection);case 9:cndy=_context.sent;active=(cndy===null||cndy===void 0?void 0:(_cndy$state$goLiveDat=cndy.state.goLiveDate)===null||_cndy$state$goLiveDat===void 0?void 0:_cndy$state$goLiveDat.toNumber())<new Date().getTime()/1000;presale=false;// duplication of state to make sure we have the right values!\nisWLUser=false;userPrice=cndy.state.price;userPrice=isWLUser?userPrice:cndy.state.price;if(!(cndy===null||cndy===void 0?void 0:cndy.state.tokenMint)){_context.next=37;break;}// retrieves the SPL token\nmint=new anchor.web3.PublicKey(cndy.state.tokenMint);_context.next=19;return getAtaForMint(mint,anchorWallet.publicKey);case 19:token=_context.sent[0];_context.prev=20;_context.next=23;return connection.getTokenAccountBalance(token);case 23:balance=_context.sent;valid=new anchor.BN(balance.value.amount).gte(userPrice);// only allow user to mint if token balance >  the user if the balance > 0\nsetIsValidBalance(valid);active=active&&valid;_context.next=35;break;case 29:_context.prev=29;_context.t0=_context[\"catch\"](20);setIsValidBalance(false);active=false;// no whitelist user, no mint\nconsole.log('There was a problem fetching SPL token balance');console.log(_context.t0);case 35:_context.next=45;break;case 37:_context.t1=anchor.BN;_context.next=40;return connection.getBalance(anchorWallet.publicKey);case 40:_context.t2=_context.sent;_balance=new _context.t1(_context.t2);_valid=_balance.gte(userPrice);setIsValidBalance(_valid);active=active&&_valid;case 45:if(cndy.state.isSoldOut){active=false;}_context.next=48;return getCollectionPDA(props.candyMachineId);case 48:_yield$getCollectionP=_context.sent;_yield$getCollectionP2=_slicedToArray(_yield$getCollectionP,1);collectionPDA=_yield$getCollectionP2[0];_context.next=53;return connection.getAccountInfo(collectionPDA);case 53:collectionPDAAccount=_context.sent;setIsActive(cndy.state.isActive=active);setIsPresale(cndy.state.isPresale=presale);setCandyMachine(cndy);txnEstimate=892+(!!collectionPDAAccount&&cndy.state.retainAuthority?182:0)+(cndy.state.tokenMint?177:0)+(cndy.state.whitelistMintSettings?33:0)+(((_cndy$state$whitelist=cndy.state.whitelistMintSettings)===null||_cndy$state$whitelist===void 0?void 0:(_cndy$state$whitelist2=_cndy$state$whitelist.mode)===null||_cndy$state$whitelist2===void 0?void 0:_cndy$state$whitelist2.burnEveryTime)?145:0)+(cndy.state.gatekeeper?33:0)+(((_cndy$state$gatekeepe=cndy.state.gatekeeper)===null||_cndy$state$gatekeepe===void 0?void 0:_cndy$state$gatekeepe.expireOnUse)?66:0);setNeedTxnSplit(txnEstimate>1230);_context.next=65;break;case 61:_context.prev=61;_context.t3=_context[\"catch\"](6);if(_context.t3 instanceof Error){if(_context.t3.message===\"Account does not exist \".concat(props.candyMachineId)){setAlertState({open:true,message:\"Couldn't fetch candy machine state from candy machine with address: \".concat(props.candyMachineId,\", using rpc: \").concat(props.rpcHost,\"! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!\"),severity:'error',hideDuration:null});}else if(_context.t3.message.startsWith('failed to get info about account')){setAlertState({open:true,message:\"Couldn't fetch candy machine state with rpc: \".concat(props.rpcHost,\"! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!\"),severity:'error',hideDuration:null});}}else{setAlertState({open:true,message:\"\".concat(_context.t3),severity:'error',hideDuration:null});}console.log(_context.t3);case 65:_context.next=68;break;case 67:setAlertState({open:true,message:\"Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!\",severity:'error',hideDuration:null});case 68:case\"end\":return _context.stop();}}},_callee,null,[[6,61],[20,29]]);})),[anchorWallet,props.candyMachineId,props.rpcHost]);var onMint=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var beforeTransactions,afterTransactions,_document$getElementB,_setupMint,setupMint,_status,mintResult,status,metadataStatus,remaining,message,_args2=arguments;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:beforeTransactions=_args2.length>0&&_args2[0]!==undefined?_args2[0]:[];afterTransactions=_args2.length>1&&_args2[1]!==undefined?_args2[1]:[];_context2.prev=2;setIsUserMinting(true);(_document$getElementB=document.getElementById('#identity'))===null||_document$getElementB===void 0?void 0:_document$getElementB.click();if(!(wallet.connected&&(candyMachine===null||candyMachine===void 0?void 0:candyMachine.program)&&wallet.publicKey)){_context2.next=41;break;}if(!(needTxnSplit&&setupTxn===undefined)){_context2.next=26;break;}setAlertState({open:true,message:'Please sign account setup transaction',severity:'info'});_context2.next=10;return createAccountsForMint(candyMachine,wallet.publicKey);case 10:setupMint=_context2.sent;_status={err:true};if(!setupMint.transaction){_context2.next=16;break;}_context2.next=15;return awaitTransactionSignatureConfirmation(setupMint.transaction,props.txTimeout,props.connection,true);case 15:_status=_context2.sent;case 16:if(!(_status&&!_status.err)){_context2.next=21;break;}setSetupTxn(setupMint);setAlertState({open:true,message:'Setup transaction succeeded! Please sign minting transaction',severity:'info'});_context2.next=24;break;case 21:setAlertState({open:true,message:'Mint failed! Please try again!',severity:'error'});setIsUserMinting(false);return _context2.abrupt(\"return\");case 24:_context2.next=27;break;case 26:setAlertState({open:true,message:'Please sign minting transaction',severity:'info'});case 27:_context2.next=29;return mintOneToken(candyMachine,wallet.publicKey,beforeTransactions,afterTransactions,(_setupMint=setupMint)!==null&&_setupMint!==void 0?_setupMint:setupTxn);case 29:mintResult=_context2.sent;status={err:true};metadataStatus=null;if(!mintResult){_context2.next=40;break;}_context2.next=35;return awaitTransactionSignatureConfirmation(mintResult.mintTxId,props.txTimeout,props.connection,true);case 35:status=_context2.sent;_context2.next=38;return candyMachine.program.provider.connection.getAccountInfo(mintResult.metadataKey,'processed');case 38:metadataStatus=_context2.sent;console.log('Metadata status: ',!!metadataStatus);case 40:if(status&&!status.err&&metadataStatus){// manual update since the refresh might not detect\n// the change immediately\nconsole.log('status');remaining=itemsRemaining-1;console.log(remaining);setItemsRemaining(remaining);setIsActive(candyMachine.state.isActive=remaining>0);candyMachine.state.isSoldOut=remaining===0;setSetupTxn(undefined);setAlertState({open:true,message:'Congratulations! Mint succeeded!',severity:'success',hideDuration:7000});refreshCandyMachineState('processed');}else if(status&&!status.err){setAlertState({open:true,message:'Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.',severity:'error',hideDuration:8000});refreshCandyMachineState();}else{setAlertState({open:true,message:'Mint failed! Please try again!',severity:'error'});refreshCandyMachineState();}case 41:_context2.next=49;break;case 43:_context2.prev=43;_context2.t0=_context2[\"catch\"](2);message=_context2.t0.msg||'Minting failed! Please try again!';if(!_context2.t0.msg){if(!_context2.t0.message){message='Transaction timeout! Please try again.';}else if(_context2.t0.message.indexOf('0x137')){console.log(_context2.t0);message=\"SOLD OUT!\";}else if(_context2.t0.message.indexOf('0x135')){message=\"Insufficient funds to mint. Please fund your wallet.\";}}else{if(_context2.t0.code===311){console.log(_context2.t0);message=\"SOLD OUT!\";window.location.reload();}else if(_context2.t0.code===312){message=\"Minting period hasn't started yet.\";}}setAlertState({open:true,message:message,severity:'error'});// updates the candy machine state to reflect the latest\n// information on chain\nrefreshCandyMachineState();case 49:_context2.prev=49;setIsUserMinting(false);return _context2.finish(49);case 52:case\"end\":return _context2.stop();}}},_callee2,null,[[2,43,49,52]]);}));return function onMint(){return _ref2.apply(this,arguments);};}();useEffect(function(){refreshCandyMachineState();console.log('use efect');if(candyMachine){console.log('candyMachine');console.log(candyMachine.state);setItemsRemaining(candyMachine.state.itemsRemaining);console.log(itemsRemaining);}},[anchorWallet,props.candyMachineId,props.connection,refreshCandyMachineState]);useEffect(function(){(function loop(){setTimeout(function(){refreshCandyMachineState();loop();},20000);})();},[refreshCandyMachineState]);return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"main\",children:[/*#__PURE__*/_jsx(\"div\",{id:\"mainEmptyDiv\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mintContainer\",children:[anchorWallet&&/*#__PURE__*/_jsxs(Typography,{variant:\"body2\",color:\"textSecondary\",children:[\"Wallet: \",(anchorWallet===null||anchorWallet===void 0?void 0:(_anchorWallet$publicK=anchorWallet.publicKey)===null||_anchorWallet$publicK===void 0?void 0:_anchorWallet$publicK.toBase58())||\"\"]}),/*#__PURE__*/_jsxs(Container,{style:{marginTop:20},children:[/*#__PURE__*/_jsx(Container,{maxWidth:\"xs\",style:{position:'relative'},children:/*#__PURE__*/_jsx(Paper,{style:{padding:24,paddingBottom:24,backgroundColor:'#151A1F',borderRadius:6},children:!wallet.connected?/*#__PURE__*/_jsx(ConnectButton,{children:\"Connect Wallet\"}):/*#__PURE__*/_jsxs(_Fragment,{children:[candyMachine&&/*#__PURE__*/_jsxs(Grid,{container:true,direction:\"row\",justifyContent:\"center\",wrap:\"nowrap\",children:[/*#__PURE__*/_jsxs(Grid,{item:true,xs:3,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:\"Remaining\"}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textPrimary\",style:{fontWeight:'bold'},children:\"\".concat(itemsRemaining)})]}),/*#__PURE__*/_jsxs(Grid,{item:true,xs:4,children:[/*#__PURE__*/_jsx(Typography,{variant:\"body2\",color:\"textSecondary\",children:isWhitelistUser&&discountPrice?'Discount Price':'Price'}),/*#__PURE__*/_jsx(Typography,{variant:\"h6\",color:\"textPrimary\",style:{fontWeight:'bold'},children:isWhitelistUser&&discountPrice?\"\\u25CE \".concat(formatNumber.asNumber(discountPrice)):\"\\u25CE \".concat(formatNumber.asNumber(candyMachine.state.price))})]}),/*#__PURE__*/_jsx(Grid,{item:true,xs:5,children:/*#__PURE__*/_jsx(Typography,{variant:\"caption\",align:\"center\",display:\"block\",style:{fontWeight:'bold'},children:\"MINT TBA\"})})]}),/*#__PURE__*/_jsx(MintContainer,{children:(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.isActive)&&(candyMachine===null||candyMachine===void 0?void 0:candyMachine.state.gatekeeper)&&wallet.publicKey&&wallet.signTransaction?/*#__PURE__*/_jsx(GatewayProvider,{wallet:{publicKey:wallet.publicKey||new PublicKey(CANDY_MACHINE_PROGRAM),//@ts-ignore\nsignTransaction:wallet.signTransaction},gatekeeperNetwork:candyMachine===null||candyMachine===void 0?void 0:(_candyMachine$state=candyMachine.state)===null||_candyMachine$state===void 0?void 0:(_candyMachine$state$g=_candyMachine$state.gatekeeper)===null||_candyMachine$state$g===void 0?void 0:_candyMachine$state$g.gatekeeperNetwork,clusterUrl:props.network===WalletAdapterNetwork.Devnet?'https://api.devnet.solana.com':rpcUrl,handleTransaction:/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(transaction){var userMustSign;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:setIsUserMinting(true);userMustSign=transaction.signatures.find(function(sig){return sig.publicKey.equals(wallet.publicKey);});if(!userMustSign){_context3.next=17;break;}setAlertState({open:true,message:'Please sign one-time Civic Pass issuance',severity:'info'});_context3.prev=4;_context3.next=7;return wallet.signTransaction(transaction);case 7:transaction=_context3.sent;_context3.next=15;break;case 10:_context3.prev=10;_context3.t0=_context3[\"catch\"](4);setAlertState({open:true,message:'User cancelled signing',severity:'error'});// setTimeout(() => window.location.reload(), 2000);\nsetIsUserMinting(false);throw _context3.t0;case 15:_context3.next=18;break;case 17:setAlertState({open:true,message:'Refreshing Civic Pass',severity:'info'});case 18:_context3.prev=18;_context3.next=21;return sendTransaction(props.connection,wallet,transaction,[],true,'confirmed');case 21:setAlertState({open:true,message:'Please sign minting',severity:'info'});_context3.next=30;break;case 24:_context3.prev=24;_context3.t1=_context3[\"catch\"](18);setAlertState({open:true,message:'Solana dropped the transaction, please try again',severity:'warning'});console.error(_context3.t1);// setTimeout(() => window.location.reload(), 2000);\nsetIsUserMinting(false);throw _context3.t1;case 30:_context3.next=32;return onMint();case 32:case\"end\":return _context3.stop();}}},_callee3,null,[[4,10],[18,24]]);}));return function(_x){return _ref3.apply(this,arguments);};}(),broadcastTransaction:false,options:{autoShowModal:false},children:/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,setIsMinting:function setIsMinting(val){return setIsUserMinting(val);},onMint:onMint,isActive:isActive||isPresale&&isWhitelistUser&&isValidBalance})}):/*#__PURE__*/_jsx(MintButton,{candyMachine:candyMachine,isMinting:isUserMinting,setIsMinting:function setIsMinting(val){return setIsUserMinting(val);},onMint:onMint,isActive:isActive||isPresale&&isWhitelistUser&&isValidBalance})})]})})}),/*#__PURE__*/_jsx(Snackbar,{open:alertState.open,autoHideDuration:alertState.hideDuration===undefined?6000:alertState.hideDuration,onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},children:/*#__PURE__*/_jsx(Alert,{onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},severity:alertState.severity,children:alertState.message})})]})]})]}),/*#__PURE__*/_jsx(\"div\",{id:\"about\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"aboutContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"h1\",children:\"ABOUT\"}),/*#__PURE__*/_jsx(\"p\",{children:\"For those beginning or continuing their awakening on NFTs...\"}),/*#__PURE__*/_jsx(\"p\",{children:\"A collection of 2,222 uniquely generated Awakened Sols on the Solana blockchain.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"An alpha group and Sniping tool with unique features only available to holders.\"}),/*#__PURE__*/_jsx(\"p\",{children:\"An open minded community.\"})]})}),/*#__PURE__*/_jsx(\"div\",{id:\"roadmap\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"roadMapContainer\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"h1\",children:\"ROADMAP\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Phase 1\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Artwork Development\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Sniping Tool Development\"}),/*#__PURE__*/_jsx(\"li\",{children:\"2,222 Awakened Sols Mint(0.5 SOL) - 50 OG(FREE) - 500 WL(0.3 SOL)\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Launch Sniping Tool to the public with special features for holders\"})]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Phase 2\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Listing on Secondary Market\"}),/*#__PURE__*/_jsx(\"li\",{children:\"SOL Giveaways, NFT airdrops, WL spots\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Develop extra features based on feedback for Sniping Tool for NFT holders.\"})]}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Phase 3\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Launch Sniping Tool v2\"})]})]})})]});};var getCountdownDate=function getCountdownDate(candyMachine){var _candyMachine$state$e;if(candyMachine.state.isActive&&((_candyMachine$state$e=candyMachine.state.endSettings)===null||_candyMachine$state$e===void 0?void 0:_candyMachine$state$e.endSettingType.date)){return toDate(candyMachine.state.endSettings.number);}return toDate(candyMachine.state.goLiveDate?candyMachine.state.goLiveDate:candyMachine.state.isPresale?new anchor.BN(new Date().getTime()/1000):undefined);};export default Home;","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/Home.tsx"],"names":["useCallback","useEffect","useMemo","useState","anchor","styled","Container","Snackbar","Paper","Alert","Grid","Typography","Connection","PublicKey","useWallet","WalletDialogButton","awaitTransactionSignatureConfirmation","CANDY_MACHINE_PROGRAM","createAccountsForMint","getCandyMachineState","getCollectionPDA","mintOneToken","formatNumber","getAtaForMint","toDate","MintButton","GatewayProvider","sendTransaction","WalletAdapterNetwork","ConnectButton","MintContainer","div","Home","props","isUserMinting","setIsUserMinting","candyMachine","setCandyMachine","open","message","severity","undefined","alertState","setAlertState","isActive","setIsActive","endDate","setEndDate","itemsRemaining","setItemsRemaining","isWhitelistUser","setIsWhitelistUser","isPresale","setIsPresale","isValidBalance","setIsValidBalance","discountPrice","setDiscountPrice","needTxnSplit","setNeedTxnSplit","setupTxn","setSetupTxn","rpcUrl","rpcHost","wallet","anchorWallet","publicKey","signAllTransactions","signTransaction","refreshCandyMachineState","commitment","connection","candyMachineId","console","log","cndy","active","state","goLiveDate","toNumber","Date","getTime","presale","isWLUser","userPrice","price","tokenMint","mint","web3","token","getTokenAccountBalance","balance","valid","BN","value","amount","gte","getBalance","isSoldOut","collectionPDA","getAccountInfo","collectionPDAAccount","txnEstimate","retainAuthority","whitelistMintSettings","mode","burnEveryTime","gatekeeper","expireOnUse","Error","hideDuration","startsWith","onMint","beforeTransactions","afterTransactions","document","getElementById","click","connected","program","setupMint","status","err","transaction","txTimeout","mintResult","metadataStatus","mintTxId","provider","metadataKey","remaining","msg","indexOf","code","window","location","reload","loop","setTimeout","toBase58","marginTop","position","padding","paddingBottom","backgroundColor","borderRadius","fontWeight","asNumber","gatekeeperNetwork","network","Devnet","userMustSign","signatures","find","sig","equals","error","autoShowModal","val","getCountdownDate","endSettings","endSettingType","date","number"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Typewriter from \"typewriter-effect\";\nimport {\n  Commitment,\n  Connection,\n  PublicKey,\n  Transaction,\n} from '@solana/web3.js';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport {\n  awaitTransactionSignatureConfirmation,\n  CANDY_MACHINE_PROGRAM,\n  CandyMachineAccount,\n  createAccountsForMint,\n  getCandyMachineState,\n  getCollectionPDA,\n  mintOneToken,\n  SetupState,\n} from './candy-machine';\nimport { AlertState, formatNumber, getAtaForMint, toDate } from './utils';\nimport { MintButton } from './MintButton';\nimport { GatewayProvider } from '@civic/solana-gateway-react';\nimport { sendTransaction } from './connection';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport './home.css';\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst MintContainer = styled.div``; // add your owns styles here\n\nexport interface HomeProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  txTimeout: number;\n  rpcHost: string;\n  network: WalletAdapterNetwork;\n}\n\nconst Home = (props: HomeProps) => {\n  const [isUserMinting, setIsUserMinting] = useState(false);\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n  const [isActive, setIsActive] = useState(false);\n  const [endDate, setEndDate] = useState<Date>();\n  const [itemsRemaining, setItemsRemaining] = useState<number>();\n  const [isWhitelistUser, setIsWhitelistUser] = useState(false);\n  const [isPresale, setIsPresale] = useState(false);\n  const [isValidBalance, setIsValidBalance] = useState(false);\n  const [discountPrice, setDiscountPrice] = useState<anchor.BN>();\n  const [needTxnSplit, setNeedTxnSplit] = useState(true);\n  const [setupTxn, setSetupTxn] = useState<SetupState>();\n\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n\n  const refreshCandyMachineState = useCallback(\n    async (commitment: Commitment = 'confirmed') => {\n      if (!anchorWallet) {\n        return;\n      }\n\n      const connection = new Connection(props.rpcHost, commitment);\n\n      if (props.candyMachineId) {\n        console.log(props?.candyMachineId);\n        try {\n          const cndy = await getCandyMachineState(\n            anchorWallet,\n            props.candyMachineId,\n            connection,\n          );\n          let active =\n            cndy?.state.goLiveDate?.toNumber() < new Date().getTime() / 1000;\n          let presale = false;\n\n          // duplication of state to make sure we have the right values!\n          let isWLUser = false;\n          let userPrice = cndy.state.price;\n\n          userPrice = isWLUser ? userPrice : cndy.state.price;\n\n          if (cndy?.state.tokenMint) {\n            // retrieves the SPL token\n            const mint = new anchor.web3.PublicKey(cndy.state.tokenMint);\n            const token = (\n              await getAtaForMint(mint, anchorWallet.publicKey)\n            )[0];\n            try {\n              const balance = await connection.getTokenAccountBalance(token);\n\n              const valid = new anchor.BN(balance.value.amount).gte(userPrice);\n\n              // only allow user to mint if token balance >  the user if the balance > 0\n              setIsValidBalance(valid);\n              active = active && valid;\n            } catch (e) {\n              setIsValidBalance(false);\n              active = false;\n              // no whitelist user, no mint\n              console.log('There was a problem fetching SPL token balance');\n              console.log(e);\n            }\n          } else {\n            const balance = new anchor.BN(\n              await connection.getBalance(anchorWallet.publicKey),\n            );\n            const valid = balance.gte(userPrice);\n            setIsValidBalance(valid);\n            active = active && valid;\n          }\n\n          if (cndy.state.isSoldOut) {\n            active = false;\n          }\n\n          const [collectionPDA] = await getCollectionPDA(props.candyMachineId);\n          const collectionPDAAccount = await connection.getAccountInfo(\n            collectionPDA,\n          );\n\n          setIsActive((cndy.state.isActive = active));\n          setIsPresale((cndy.state.isPresale = presale));\n          setCandyMachine(cndy);\n\n          const txnEstimate =\n            892 +\n            (!!collectionPDAAccount && cndy.state.retainAuthority ? 182 : 0) +\n            (cndy.state.tokenMint ? 177 : 0) +\n            (cndy.state.whitelistMintSettings ? 33 : 0) +\n            (cndy.state.whitelistMintSettings?.mode?.burnEveryTime ? 145 : 0) +\n            (cndy.state.gatekeeper ? 33 : 0) +\n            (cndy.state.gatekeeper?.expireOnUse ? 66 : 0);\n\n          setNeedTxnSplit(txnEstimate > 1230);\n        } catch (e) {\n          if (e instanceof Error) {\n            if (\n              e.message === `Account does not exist ${props.candyMachineId}`\n            ) {\n              setAlertState({\n                open: true,\n                message: `Couldn't fetch candy machine state from candy machine with address: ${props.candyMachineId}, using rpc: ${props.rpcHost}! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!`,\n                severity: 'error',\n                hideDuration: null,\n              });\n            } else if (\n              e.message.startsWith('failed to get info about account')\n            ) {\n              setAlertState({\n                open: true,\n                message: `Couldn't fetch candy machine state with rpc: ${props.rpcHost}! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!`,\n                severity: 'error',\n                hideDuration: null,\n              });\n            }\n          } else {\n            setAlertState({\n              open: true,\n              message: `${e}`,\n              severity: 'error',\n              hideDuration: null,\n            });\n          }\n          console.log(e);\n        }\n      } else {\n        setAlertState({\n          open: true,\n          message: `Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!`,\n          severity: 'error',\n          hideDuration: null,\n        });\n      }\n    },\n    [anchorWallet, props.candyMachineId, props.rpcHost],\n  );\n\n  const onMint = async (\n    beforeTransactions: Transaction[] = [],\n    afterTransactions: Transaction[] = [],\n  ) => {\n    try {\n      setIsUserMinting(true);\n      document.getElementById('#identity')?.click();\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        let setupMint: SetupState | undefined;\n        if (needTxnSplit && setupTxn === undefined) {\n          setAlertState({\n            open: true,\n            message: 'Please sign account setup transaction',\n            severity: 'info',\n          });\n          setupMint = await createAccountsForMint(\n            candyMachine,\n            wallet.publicKey,\n          );\n          let status: any = { err: true };\n          if (setupMint.transaction) {\n            status = await awaitTransactionSignatureConfirmation(\n              setupMint.transaction,\n              props.txTimeout,\n              props.connection,\n              true,\n            );\n          }\n          if (status && !status.err) {\n            setSetupTxn(setupMint);\n            setAlertState({\n              open: true,\n              message:\n                'Setup transaction succeeded! Please sign minting transaction',\n              severity: 'info',\n            });\n          } else {\n            setAlertState({\n              open: true,\n              message: 'Mint failed! Please try again!',\n              severity: 'error',\n            });\n            setIsUserMinting(false);\n            return;\n          }\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Please sign minting transaction',\n            severity: 'info',\n          });\n        }\n\n        let mintResult = await mintOneToken(\n          candyMachine,\n          wallet.publicKey,\n          beforeTransactions,\n          afterTransactions,\n          setupMint ?? setupTxn,\n        );\n\n        let status: any = { err: true };\n        let metadataStatus = null;\n        if (mintResult) {\n          status = await awaitTransactionSignatureConfirmation(\n            mintResult.mintTxId,\n            props.txTimeout,\n            props.connection,\n            true,\n          );\n\n          metadataStatus =\n            await candyMachine.program.provider.connection.getAccountInfo(\n              mintResult.metadataKey,\n              'processed',\n            );\n          console.log('Metadata status: ', !!metadataStatus);\n        }\n\n        if (status && !status.err && metadataStatus) {\n          // manual update since the refresh might not detect\n          // the change immediately\n          console.log('status')\n          let remaining = itemsRemaining! - 1;\n          console.log(remaining);\n          setItemsRemaining(remaining);\n          setIsActive((candyMachine.state.isActive = remaining > 0));\n          candyMachine.state.isSoldOut = remaining === 0;\n          setSetupTxn(undefined);\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Mint succeeded!',\n            severity: 'success',\n            hideDuration: 7000,\n          });\n          refreshCandyMachineState('processed');\n        } else if (status && !status.err) {\n          setAlertState({\n            open: true,\n            message:\n              'Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.',\n            severity: 'error',\n            hideDuration: 8000,\n          });\n          refreshCandyMachineState();\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error',\n          });\n          refreshCandyMachineState();\n        }\n      }\n    } catch (error: any) {\n      let message = error.msg || 'Minting failed! Please try again!';\n      if (!error.msg) {\n        if (!error.message) {\n          message = 'Transaction timeout! Please try again.';\n        } else if (error.message.indexOf('0x137')) {\n          console.log(error);\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          console.log(error);\n          message = `SOLD OUT!`;\n          window.location.reload();\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: 'error',\n      });\n      // updates the candy machine state to reflect the latest\n      // information on chain\n      refreshCandyMachineState();\n    } finally {\n      setIsUserMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    refreshCandyMachineState();\n    console.log('use efect');\n    if(candyMachine) {\n      console.log('candyMachine')\n      console.log(candyMachine.state);\n      setItemsRemaining(candyMachine.state.itemsRemaining);\n      console.log(itemsRemaining);\n  } \n  }, [\n    anchorWallet,\n    props.candyMachineId,\n    props.connection,\n    refreshCandyMachineState,\n  ]);\n\n  useEffect(() => {\n    (function loop() {\n      setTimeout(() => {\n        refreshCandyMachineState();\n        loop();\n      }, 20000);\n    })();\n  }, [refreshCandyMachineState]);\n\n  return (\n    <main>\n      \n      {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>} */}\n      <div className=\"main\">\n        <div id=\"mainEmptyDiv\"></div>\n        <div className=\"mintContainer\">\n          {anchorWallet && (\n            <Typography variant=\"body2\" color=\"textSecondary\">\n            Wallet: {(anchorWallet?.publicKey?.toBase58() || \"\")}\n          </Typography>\n          )} \n        \n        <Container style={{ marginTop: 20 }}>\n        <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\n          <Paper\n            style={{\n              padding: 24,\n              paddingBottom: 24,\n              backgroundColor: '#151A1F',\n              borderRadius: 6,\n            }}\n          >\n            {!wallet.connected ? (\n              <ConnectButton>Connect Wallet</ConnectButton>\n            ) : (\n              <>\n                {candyMachine && (\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    wrap=\"nowrap\"\n                  >\n                    <Grid item xs={3}>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        Remaining\n                      </Typography>\n                      <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                        style={{\n                          fontWeight: 'bold',\n                        }}\n                      >\n                        {`${itemsRemaining}`}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {isWhitelistUser && discountPrice\n                          ? 'Discount Price'\n                          : 'Price'}\n                      </Typography>\n                      <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                        style={{ fontWeight: 'bold' }}\n                      >\n                        {isWhitelistUser && discountPrice\n                          ? `◎ ${formatNumber.asNumber(discountPrice)}`\n                          : `◎ ${formatNumber.asNumber(\n                              candyMachine.state.price,\n                            )}`}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={5}>\n                              <Typography\n                                variant=\"caption\"\n                                align=\"center\"\n                                display=\"block\"\n                                style={{ fontWeight: 'bold' }}\n                              >\n                                MINT TBA\n                              </Typography>\n                    </Grid>\n                  </Grid>\n                )}\n                <MintContainer>\n                  {candyMachine?.state.isActive &&\n                  candyMachine?.state.gatekeeper &&\n                  wallet.publicKey &&\n                  wallet.signTransaction ? (\n                    <GatewayProvider\n                      wallet={{\n                        publicKey:\n                          wallet.publicKey ||\n                          new PublicKey(CANDY_MACHINE_PROGRAM),\n                        //@ts-ignore\n                        signTransaction: wallet.signTransaction,\n                      }}\n                      gatekeeperNetwork={\n                        candyMachine?.state?.gatekeeper?.gatekeeperNetwork\n                      }\n                      clusterUrl={\n                        props.network === WalletAdapterNetwork.Devnet\n                          ? 'https://api.devnet.solana.com'\n                          : rpcUrl\n                      }\n                      handleTransaction={async (transaction: Transaction) => {\n                        setIsUserMinting(true);\n                        const userMustSign = transaction.signatures.find(sig =>\n                          sig.publicKey.equals(wallet.publicKey!),\n                        );\n                        if (userMustSign) {\n                          setAlertState({\n                            open: true,\n                            message: 'Please sign one-time Civic Pass issuance',\n                            severity: 'info',\n                          });\n                          try {\n                            transaction = await wallet.signTransaction!(\n                              transaction,\n                            );\n                          } catch (e) {\n                            setAlertState({\n                              open: true,\n                              message: 'User cancelled signing',\n                              severity: 'error',\n                            });\n                            // setTimeout(() => window.location.reload(), 2000);\n                            setIsUserMinting(false);\n                            throw e;\n                          }\n                        } else {\n                          setAlertState({\n                            open: true,\n                            message: 'Refreshing Civic Pass',\n                            severity: 'info',\n                          });\n                        }\n                        try {\n                          await sendTransaction(\n                            props.connection,\n                            wallet,\n                            transaction,\n                            [],\n                            true,\n                            'confirmed',\n                          );\n                          setAlertState({\n                            open: true,\n                            message: 'Please sign minting',\n                            severity: 'info',\n                          });\n                        } catch (e) {\n                          setAlertState({\n                            open: true,\n                            message:\n                              'Solana dropped the transaction, please try again',\n                            severity: 'warning',\n                          });\n                          console.error(e);\n                          // setTimeout(() => window.location.reload(), 2000);\n                          setIsUserMinting(false);\n                          throw e;\n                        }\n                        await onMint();\n                      }}\n                      broadcastTransaction={false}\n                      options={{ autoShowModal: false }}\n                    >\n                      <MintButton\n                        candyMachine={candyMachine}\n                        isMinting={isUserMinting}\n                        setIsMinting={val => setIsUserMinting(val)}\n                        onMint={onMint}\n                        isActive={\n                          isActive ||\n                          (isPresale && isWhitelistUser && isValidBalance)\n                        }\n                      />\n                    </GatewayProvider>\n                  ) : (\n                    <MintButton \n                      candyMachine={candyMachine}\n                      isMinting={isUserMinting}\n                      setIsMinting={val => setIsUserMinting(val)}\n                      onMint={onMint}\n                      isActive={\n                        isActive ||\n                        (isPresale && isWhitelistUser && isValidBalance)\n                      }\n                    />\n                  )}\n                </MintContainer>\n              </>\n            )}\n          </Paper>\n        </Container>\n\n        <Snackbar\n          open={alertState.open}\n          autoHideDuration={\n            alertState.hideDuration === undefined ? 6000 : alertState.hideDuration\n          }\n          onClose={() => setAlertState({ ...alertState, open: false })}\n        >\n          <Alert\n            onClose={() => setAlertState({ ...alertState, open: false })}\n            severity={alertState.severity}\n          >\n            {alertState.message}\n          </Alert>\n        </Snackbar>\n      </Container>\n          </div>\n\n        </div>\n\n        {<div id=\"about\"><div className=\"aboutContainer\">\n          <h1 className=\"h1\">ABOUT</h1>\n          <p>For those beginning or continuing their awakening on NFTs...\n          </p><p>A collection of 2,222 uniquely generated Awakened Sols on the Solana blockchain.  \n          </p><p>An alpha group and Sniping tool with unique features only available to holders.\n          </p><p>An open minded community.\n          </p>\n          </div></div>}\n\n          {<div id=\"roadmap\">\n            <div className=\"roadMapContainer\">\n          <h1 className=\"h1\">ROADMAP</h1>\n          <ul><h3>Phase 1</h3>\n            <li>Artwork Development</li>\n            <li>Sniping Tool Development</li>\n            <li>2,222 Awakened Sols Mint(0.5 SOL) - 50 OG(FREE) - 500 WL(0.3 SOL)</li>\n            <li>Launch Sniping Tool to the public with special features for holders</li>\n          </ul>\n          <ul><h3>Phase 2</h3>\n            <li>Listing on Secondary Market</li>\n            <li>SOL Giveaways, NFT airdrops, WL spots</li>\n            <li>Develop extra features based on feedback for Sniping Tool for NFT holders.</li>\n          </ul>\n          <ul><h3>Phase 3</h3>\n            <li>Launch Sniping Tool v2</li>\n          </ul>\n          </div>\n          </div>}\n\n    </main>\n  );\n};\n\nconst getCountdownDate = (\n  candyMachine: CandyMachineAccount,\n): Date | undefined => {\n  if (\n    candyMachine.state.isActive &&\n    candyMachine.state.endSettings?.endSettingType.date\n  ) {\n    return toDate(candyMachine.state.endSettings.number);\n  }\n\n  return toDate(\n    candyMachine.state.goLiveDate\n      ? candyMachine.state.goLiveDate\n      : candyMachine.state.isPresale\n      ? new anchor.BN(new Date().getTime() / 1000)\n      : undefined,\n  );\n};\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}