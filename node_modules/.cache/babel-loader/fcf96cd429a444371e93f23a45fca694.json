{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { FragmentBaseDescription } from \"./FragmentBaseDescription\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar ColumnFragmentDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ColumnFragmentDescription, _super);\n\n  function ColumnFragmentDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.ep = 0;\n    _this.eq = 0;\n    return _this;\n  }\n\n  ColumnFragmentDescription.prototype.get_type = function () {\n    return \"ColumnFragment\";\n  };\n\n  Object.defineProperty(ColumnFragmentDescription.prototype, \"radiusX\", {\n    get: function () {\n      return this.ep;\n    },\n    set: function (a) {\n      this.ep = a;\n      this.e(\"RadiusX\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(ColumnFragmentDescription.prototype, \"radiusY\", {\n    get: function () {\n      return this.eq;\n    },\n    set: function (a) {\n      this.eq = a;\n      this.e(\"RadiusY\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  ColumnFragmentDescription.$t = markType(ColumnFragmentDescription, 'ColumnFragmentDescription', FragmentBaseDescription.$);\n  return ColumnFragmentDescription;\n}(FragmentBaseDescription);\n\nexport { ColumnFragmentDescription };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/ColumnFragmentDescription.js"],"names":["__extends","FragmentBaseDescription","markType","ColumnFragmentDescription","_super","_this","call","ep","eq","prototype","get_type","Object","defineProperty","get","set","a","e","enumerable","configurable","$t","$"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA;AACA;AACA;;AACA,IAAIC,yBAAyB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC3EJ,EAAAA,SAAS,CAACG,yBAAD,EAA4BC,MAA5B,CAAT;;AACA,WAASD,yBAAT,GAAqC;AACjC,QAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACAD,IAAAA,KAAK,CAACE,EAAN,GAAW,CAAX;AACAF,IAAAA,KAAK,CAACG,EAAN,GAAW,CAAX;AACA,WAAOH,KAAP;AACH;;AACDF,EAAAA,yBAAyB,CAACM,SAA1B,CAAoCC,QAApC,GAA+C,YAAY;AACvD,WAAO,gBAAP;AACH,GAFD;;AAGAC,EAAAA,MAAM,CAACC,cAAP,CAAsBT,yBAAyB,CAACM,SAAhD,EAA2D,SAA3D,EAAsE;AAClEI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKN,EAAZ;AACH,KAHiE;AAIlEO,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,EAAL,GAAUQ,CAAV;AACA,WAAKC,CAAL,CAAO,SAAP;AACH,KAPiE;AAQlEC,IAAAA,UAAU,EAAE,KARsD;AASlEC,IAAAA,YAAY,EAAE;AAToD,GAAtE;AAWAP,EAAAA,MAAM,CAACC,cAAP,CAAsBT,yBAAyB,CAACM,SAAhD,EAA2D,SAA3D,EAAsE;AAClEI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKL,EAAZ;AACH,KAHiE;AAIlEM,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKP,EAAL,GAAUO,CAAV;AACA,WAAKC,CAAL,CAAO,SAAP;AACH,KAPiE;AAQlEC,IAAAA,UAAU,EAAE,KARsD;AASlEC,IAAAA,YAAY,EAAE;AAToD,GAAtE;AAWAf,EAAAA,yBAAyB,CAACgB,EAA1B,GAA+BjB,QAAQ,CAACC,yBAAD,EAA4B,2BAA5B,EAAyDF,uBAAuB,CAACmB,CAAjF,CAAvC;AACA,SAAOjB,yBAAP;AACH,CAnC4D,CAmC3DF,uBAnC2D,CAA7D;;AAoCA,SAASE,yBAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { FragmentBaseDescription } from \"./FragmentBaseDescription\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar ColumnFragmentDescription = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ColumnFragmentDescription, _super);\n    function ColumnFragmentDescription() {\n        var _this = _super.call(this) || this;\n        _this.ep = 0;\n        _this.eq = 0;\n        return _this;\n    }\n    ColumnFragmentDescription.prototype.get_type = function () {\n        return \"ColumnFragment\";\n    };\n    Object.defineProperty(ColumnFragmentDescription.prototype, \"radiusX\", {\n        get: function () {\n            return this.ep;\n        },\n        set: function (a) {\n            this.ep = a;\n            this.e(\"RadiusX\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(ColumnFragmentDescription.prototype, \"radiusY\", {\n        get: function () {\n            return this.eq;\n        },\n        set: function (a) {\n            this.eq = a;\n            this.e(\"RadiusY\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    ColumnFragmentDescription.$t = markType(ColumnFragmentDescription, 'ColumnFragmentDescription', FragmentBaseDescription.$);\n    return ColumnFragmentDescription;\n}(FragmentBaseDescription));\nexport { ColumnFragmentDescription };\n"]},"metadata":{},"sourceType":"module"}