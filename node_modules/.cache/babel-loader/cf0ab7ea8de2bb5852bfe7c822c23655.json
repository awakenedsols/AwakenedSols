{"ast":null,"code":"import { FinancialCalculationDataSource as FinancialCalculationDataSource_internal } from \"./FinancialCalculationDataSource\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents the data contract between a financial series and the\n * decoupled calculation responsibilities which implement its mathmatical logic.\n * The FinancialCalculationDataSource contract represents the subset\n * of data which needs to be provided in order to test or run a calculation,\n * and its intentionally a subset of the information available to the series,\n * in order to make calculation strategies more easily testable and usable in isolation to\n * the financial series container.\n*/\n\nvar IgrFinancialCalculationDataSource =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrFinancialCalculationDataSource() {\n    this._implementation = this.createImplementation();\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  }\n\n  IgrFinancialCalculationDataSource.prototype.createImplementation = function () {\n    return new FinancialCalculationDataSource_internal();\n  };\n\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrFinancialCalculationDataSource.prototype.onImplementationCreated = function () {};\n\n  IgrFinancialCalculationDataSource.prototype._provideImplementation = function (i) {\n    this._implementation = i;\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  };\n\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"openColumn\", {\n    get: function () {\n      return this.i.series.getOpenColumnAsArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"highColumn\", {\n    get: function () {\n      return this.i.series.getHighColumnAsArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"lowColumn\", {\n    get: function () {\n      return this.i.series.getLowColumnAsArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"closeColumn\", {\n    get: function () {\n      return this.i.series.getCloseColumnAsArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"volumeColumn\", {\n    get: function () {\n      return this.i.series.getVolumeColumnAsArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"indicatorColumn\", {\n    get: function () {\n      return this.i.series.indicatorColumn.asArray();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"typicalColumn\", {\n    /**\n    * An enumerable list of typical prices provided by the series to use\n    * in calculations.\n    */\n    get: function () {\n      if (this.i.typicalColumn == null) {\n        return null;\n      }\n\n      return this.i.typicalColumn.externalObject;\n    },\n    set: function (v) {\n      v == null ? this.i.typicalColumn = null : this.i.typicalColumn = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"trueRange\", {\n    /**\n     * And enumerable list of true range values provided by the series to use\n     * in calculations.\n    */\n    get: function () {\n      if (this.i.trueRange == null) {\n        return null;\n      }\n\n      return this.i.trueRange.externalObject;\n    },\n    set: function (v) {\n      v == null ? this.i.trueRange = null : this.i.trueRange = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"trueLow\", {\n    /**\n     * An enumerable list of true low values provided by the series to use\n     * in calculations.\n    */\n    get: function () {\n      if (this.i.trueLow == null) {\n        return null;\n      }\n\n      return this.i.trueLow.externalObject;\n    },\n    set: function (v) {\n      v == null ? this.i.trueLow = null : this.i.trueLow = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"period\", {\n    /**\n     * The period to use when calculating, if applicable.\n    */\n    get: function () {\n      return this.i.period;\n    },\n    set: function (v) {\n      this.i.period = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"shortPeriod\", {\n    /**\n     * The short period to use when calculating, if applicable.\n    */\n    get: function () {\n      return this.i.shortPeriod;\n    },\n    set: function (v) {\n      this.i.shortPeriod = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"longPeriod\", {\n    /**\n     * The long period to use when calculating, if applicable.\n    */\n    get: function () {\n      return this.i.longPeriod;\n    },\n    set: function (v) {\n      this.i.longPeriod = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"count\", {\n    /**\n     * The count of the values in the series.\n    */\n    get: function () {\n      return this.i.count;\n    },\n    set: function (v) {\n      this.i.count = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"calculateFrom\", {\n    /**\n     * The starting index from which to calculate\n    */\n    get: function () {\n      return this.i.calculateFrom;\n    },\n    set: function (v) {\n      this.i.calculateFrom = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"calculateCount\", {\n    /**\n     * The number of items from the starting index from which to calculate\n    */\n    get: function () {\n      return this.i.calculateCount;\n    },\n    set: function (v) {\n      this.i.calculateCount = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"multiplier\", {\n    /**\n     * If the calculation supports some sort of scaling factor,\n     * this value will be used.\n    */\n    get: function () {\n      return this.i.multiplier;\n    },\n    set: function (v) {\n      this.i.multiplier = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"minimumValue\", {\n    /**\n     * If the calculation determines the range of indicator values,\n     * it will set the minimum and maximux properties.\n     * This will contain the previous minimum value when the indicator\n     * calculation is called again, in case this makes the update of the\n     * value speedier.\n    */\n    get: function () {\n      return this.i.minimumValue;\n    },\n    set: function (v) {\n      this.i.minimumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"maximumValue\", {\n    /**\n     * If the calculation determines the range of indicator values,\n     * it will set the minimum and maximux properties.\n     * This will contain the previous minimum value when the indicator\n     * calculation is called again, in case this makes the update of the\n     * value speedier.\n    */\n    get: function () {\n      return this.i.maximumValue;\n    },\n    set: function (v) {\n      this.i.maximumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"specifiesRange\", {\n    /**\n     * The calculation strategy should set this to true if it\n     * specifes the minimum and maximum value properties.\n    */\n    get: function () {\n      return this.i.specifiesRange;\n    },\n    set: function (v) {\n      this.i.specifiesRange = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrFinancialCalculationDataSource.prototype.findByName = function (name) {\n    if (this.typicalColumn && this.typicalColumn.name && this.typicalColumn.name == name) {\n      return this.typicalColumn;\n    }\n\n    if (this.trueRange && this.trueRange.name && this.trueRange.name == name) {\n      return this.trueRange;\n    }\n\n    if (this.trueLow && this.trueLow.name && this.trueLow.name == name) {\n      return this.trueLow;\n    }\n\n    return null;\n  };\n\n  return IgrFinancialCalculationDataSource;\n}();\n\nexport { IgrFinancialCalculationDataSource };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-financial-calculation-data-source.js"],"names":["FinancialCalculationDataSource","FinancialCalculationDataSource_internal","ensureBool","IgrFinancialCalculationDataSource","_implementation","createImplementation","externalObject","onImplementationCreated","prototype","Object","defineProperty","get","enumerable","configurable","_provideImplementation","i","series","getOpenColumnAsArray","getHighColumnAsArray","getLowColumnAsArray","getCloseColumnAsArray","getVolumeColumnAsArray","indicatorColumn","asArray","typicalColumn","set","v","trueRange","trueLow","period","shortPeriod","longPeriod","count","calculateFrom","calculateCount","multiplier","minimumValue","maximumValue","specifiesRange","findByName","name"],"mappings":"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","sourcesContent":["import { FinancialCalculationDataSource as FinancialCalculationDataSource_internal } from \"./FinancialCalculationDataSource\";\nimport { ensureBool } from \"igniteui-react-core\";\n/**\n * Represents the data contract between a financial series and the\n * decoupled calculation responsibilities which implement its mathmatical logic.\n * The FinancialCalculationDataSource contract represents the subset\n * of data which needs to be provided in order to test or run a calculation,\n * and its intentionally a subset of the information available to the series,\n * in order to make calculation strategies more easily testable and usable in isolation to\n * the financial series container.\n*/\nvar IgrFinancialCalculationDataSource = /** @class */ /*@__PURE__*/ (function () {\n    function IgrFinancialCalculationDataSource() {\n        this._implementation = this.createImplementation();\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    }\n    IgrFinancialCalculationDataSource.prototype.createImplementation = function () {\n        return new FinancialCalculationDataSource_internal();\n    };\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrFinancialCalculationDataSource.prototype.onImplementationCreated = function () {\n    };\n    IgrFinancialCalculationDataSource.prototype._provideImplementation = function (i) {\n        this._implementation = i;\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    };\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"openColumn\", {\n        get: function () {\n            return this.i.series.getOpenColumnAsArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"highColumn\", {\n        get: function () {\n            return this.i.series.getHighColumnAsArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"lowColumn\", {\n        get: function () {\n            return this.i.series.getLowColumnAsArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"closeColumn\", {\n        get: function () {\n            return this.i.series.getCloseColumnAsArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"volumeColumn\", {\n        get: function () {\n            return this.i.series.getVolumeColumnAsArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"indicatorColumn\", {\n        get: function () {\n            return this.i.series.indicatorColumn.asArray();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"typicalColumn\", {\n        /**\n     * An enumerable list of typical prices provided by the series to use\n     * in calculations.\n    */\n        get: function () {\n            if (this.i.typicalColumn == null) {\n                return null;\n            }\n            return this.i.typicalColumn.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.typicalColumn = null : this.i.typicalColumn = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"trueRange\", {\n        /**\n         * And enumerable list of true range values provided by the series to use\n         * in calculations.\n        */\n        get: function () {\n            if (this.i.trueRange == null) {\n                return null;\n            }\n            return this.i.trueRange.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.trueRange = null : this.i.trueRange = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"trueLow\", {\n        /**\n         * An enumerable list of true low values provided by the series to use\n         * in calculations.\n        */\n        get: function () {\n            if (this.i.trueLow == null) {\n                return null;\n            }\n            return this.i.trueLow.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.trueLow = null : this.i.trueLow = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"period\", {\n        /**\n         * The period to use when calculating, if applicable.\n        */\n        get: function () {\n            return this.i.period;\n        },\n        set: function (v) {\n            this.i.period = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"shortPeriod\", {\n        /**\n         * The short period to use when calculating, if applicable.\n        */\n        get: function () {\n            return this.i.shortPeriod;\n        },\n        set: function (v) {\n            this.i.shortPeriod = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"longPeriod\", {\n        /**\n         * The long period to use when calculating, if applicable.\n        */\n        get: function () {\n            return this.i.longPeriod;\n        },\n        set: function (v) {\n            this.i.longPeriod = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"count\", {\n        /**\n         * The count of the values in the series.\n        */\n        get: function () {\n            return this.i.count;\n        },\n        set: function (v) {\n            this.i.count = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"calculateFrom\", {\n        /**\n         * The starting index from which to calculate\n        */\n        get: function () {\n            return this.i.calculateFrom;\n        },\n        set: function (v) {\n            this.i.calculateFrom = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"calculateCount\", {\n        /**\n         * The number of items from the starting index from which to calculate\n        */\n        get: function () {\n            return this.i.calculateCount;\n        },\n        set: function (v) {\n            this.i.calculateCount = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"multiplier\", {\n        /**\n         * If the calculation supports some sort of scaling factor,\n         * this value will be used.\n        */\n        get: function () {\n            return this.i.multiplier;\n        },\n        set: function (v) {\n            this.i.multiplier = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"minimumValue\", {\n        /**\n         * If the calculation determines the range of indicator values,\n         * it will set the minimum and maximux properties.\n         * This will contain the previous minimum value when the indicator\n         * calculation is called again, in case this makes the update of the\n         * value speedier.\n        */\n        get: function () {\n            return this.i.minimumValue;\n        },\n        set: function (v) {\n            this.i.minimumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"maximumValue\", {\n        /**\n         * If the calculation determines the range of indicator values,\n         * it will set the minimum and maximux properties.\n         * This will contain the previous minimum value when the indicator\n         * calculation is called again, in case this makes the update of the\n         * value speedier.\n        */\n        get: function () {\n            return this.i.maximumValue;\n        },\n        set: function (v) {\n            this.i.maximumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialCalculationDataSource.prototype, \"specifiesRange\", {\n        /**\n         * The calculation strategy should set this to true if it\n         * specifes the minimum and maximum value properties.\n        */\n        get: function () {\n            return this.i.specifiesRange;\n        },\n        set: function (v) {\n            this.i.specifiesRange = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrFinancialCalculationDataSource.prototype.findByName = function (name) {\n        if (this.typicalColumn && this.typicalColumn.name && this.typicalColumn.name == name) {\n            return this.typicalColumn;\n        }\n        if (this.trueRange && this.trueRange.name && this.trueRange.name == name) {\n            return this.trueRange;\n        }\n        if (this.trueLow && this.trueLow.name && this.trueLow.name == name) {\n            return this.trueLow;\n        }\n        return null;\n    };\n    return IgrFinancialCalculationDataSource;\n}());\nexport { IgrFinancialCalculationDataSource };\n"]},"metadata":{},"sourceType":"module"}