{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FilterExpressionDescriptionMetadata } from \"./FilterExpressionDescriptionMetadata\";\nimport { OperationFilterExpressionDescription } from \"./OperationFilterExpressionDescription\";\n/**\n * @hidden\n */\n\nvar OperationFilterExpressionDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(OperationFilterExpressionDescriptionMetadata, _super);\n\n  function OperationFilterExpressionDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  OperationFilterExpressionDescriptionMetadata.b = function (a) {\n    if (OperationFilterExpressionDescriptionMetadata.a == null) {\n      OperationFilterExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      OperationFilterExpressionDescriptionMetadata.c(OperationFilterExpressionDescriptionMetadata.a);\n    }\n\n    if (a.g(OperationFilterExpressionDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(OperationFilterExpressionDescriptionMetadata.a);\n    FilterExpressionDescriptionMetadata.d(a);\n  };\n\n  OperationFilterExpressionDescriptionMetadata.c = function (a) {\n    FilterExpressionDescriptionMetadata.c(a);\n    a.item(\"PropertyName\", \"String\");\n    a.item(\"ValueRef\", \"(w:Value,wf:Value)DataRef\");\n    a.item(\"Left\", \"ExportedType:IFilterExpression\");\n    a.item(\"Right\", \"ExportedType:IFilterExpression\");\n    a.item(\"Operator\", \"ExportedType:string:FilterExpressionOperatorType\");\n    a.item(\"Operator@names\", \"None;Equal;NotEqual;GreaterThan;GreaterThanOrEqual;LessThan;LessThanOrEqual;And;Or;Not;Add;Subtract;Multiply;Divide;Modulo;Grouping\");\n  };\n\n  OperationFilterExpressionDescriptionMetadata.d = function (a) {\n    OperationFilterExpressionDescriptionMetadata.b(a);\n    a.u(\"OperationFilterExpression\", function () {\n      return new OperationFilterExpressionDescription();\n    });\n    a.t(\"OperationFilterExpression\", OperationFilterExpressionDescriptionMetadata.a);\n  };\n\n  OperationFilterExpressionDescriptionMetadata.$t = markType(OperationFilterExpressionDescriptionMetadata, 'OperationFilterExpressionDescriptionMetadata');\n  OperationFilterExpressionDescriptionMetadata.a = null;\n  return OperationFilterExpressionDescriptionMetadata;\n}(Base);\n\nexport { OperationFilterExpressionDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/OperationFilterExpressionDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","FilterExpressionDescriptionMetadata","OperationFilterExpressionDescription","OperationFilterExpressionDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","u","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,mCAAT,QAAoD,uCAApD;AACA,SAASC,oCAAT,QAAqD,wCAArD;AACA;AACA;AACA;;AACA,IAAIC,4CAA4C;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC9FR,EAAAA,SAAS,CAACO,4CAAD,EAA+CC,MAA/C,CAAT;;AACA,WAASD,4CAAT,GAAwD;AACpD,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,4CAA4C,CAACI,CAA7C,GAAiD,UAAUC,CAAV,EAAa;AAC1D,QAAIL,4CAA4C,CAACK,CAA7C,IAAkD,IAAtD,EAA4D;AACxDL,MAAAA,4CAA4C,CAACK,CAA7C,GAAiD,IAAIR,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAjD;AACAK,MAAAA,4CAA4C,CAACM,CAA7C,CAA+CN,4CAA4C,CAACK,CAA5F;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,4CAA4C,CAACK,CAAjD,CAAJ,EAAyD;AACrD;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,4CAA4C,CAACK,CAAjD;AACAP,IAAAA,mCAAmC,CAACW,CAApC,CAAsCJ,CAAtC;AACH,GAVD;;AAWAL,EAAAA,4CAA4C,CAACM,CAA7C,GAAiD,UAAUD,CAAV,EAAa;AAC1DP,IAAAA,mCAAmC,CAACQ,CAApC,CAAsCD,CAAtC;AACAA,IAAAA,CAAC,CAACK,IAAF,CAAO,cAAP,EAAuB,QAAvB;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,UAAP,EAAmB,2BAAnB;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,MAAP,EAAe,gCAAf;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,OAAP,EAAgB,gCAAhB;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,UAAP,EAAmB,kDAAnB;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,gBAAP,EAAyB,qIAAzB;AACH,GARD;;AASAV,EAAAA,4CAA4C,CAACS,CAA7C,GAAiD,UAAUJ,CAAV,EAAa;AAC1DL,IAAAA,4CAA4C,CAACI,CAA7C,CAA+CC,CAA/C;AACAA,IAAAA,CAAC,CAACM,CAAF,CAAI,2BAAJ,EAAiC,YAAY;AAAE,aAAO,IAAIZ,oCAAJ,EAAP;AAAoD,KAAnG;AACAM,IAAAA,CAAC,CAACO,CAAF,CAAI,2BAAJ,EAAiCZ,4CAA4C,CAACK,CAA9E;AACH,GAJD;;AAKAL,EAAAA,4CAA4C,CAACa,EAA7C,GAAkDjB,QAAQ,CAACI,4CAAD,EAA+C,8CAA/C,CAA1D;AACAA,EAAAA,4CAA4C,CAACK,CAA7C,GAAiD,IAAjD;AACA,SAAOL,4CAAP;AACH,CAjC+E,CAiC9EN,IAjC8E,CAAhF;;AAkCA,SAASM,4CAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FilterExpressionDescriptionMetadata } from \"./FilterExpressionDescriptionMetadata\";\nimport { OperationFilterExpressionDescription } from \"./OperationFilterExpressionDescription\";\n/**\n * @hidden\n */\nvar OperationFilterExpressionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(OperationFilterExpressionDescriptionMetadata, _super);\n    function OperationFilterExpressionDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OperationFilterExpressionDescriptionMetadata.b = function (a) {\n        if (OperationFilterExpressionDescriptionMetadata.a == null) {\n            OperationFilterExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            OperationFilterExpressionDescriptionMetadata.c(OperationFilterExpressionDescriptionMetadata.a);\n        }\n        if (a.g(OperationFilterExpressionDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(OperationFilterExpressionDescriptionMetadata.a);\n        FilterExpressionDescriptionMetadata.d(a);\n    };\n    OperationFilterExpressionDescriptionMetadata.c = function (a) {\n        FilterExpressionDescriptionMetadata.c(a);\n        a.item(\"PropertyName\", \"String\");\n        a.item(\"ValueRef\", \"(w:Value,wf:Value)DataRef\");\n        a.item(\"Left\", \"ExportedType:IFilterExpression\");\n        a.item(\"Right\", \"ExportedType:IFilterExpression\");\n        a.item(\"Operator\", \"ExportedType:string:FilterExpressionOperatorType\");\n        a.item(\"Operator@names\", \"None;Equal;NotEqual;GreaterThan;GreaterThanOrEqual;LessThan;LessThanOrEqual;And;Or;Not;Add;Subtract;Multiply;Divide;Modulo;Grouping\");\n    };\n    OperationFilterExpressionDescriptionMetadata.d = function (a) {\n        OperationFilterExpressionDescriptionMetadata.b(a);\n        a.u(\"OperationFilterExpression\", function () { return new OperationFilterExpressionDescription(); });\n        a.t(\"OperationFilterExpression\", OperationFilterExpressionDescriptionMetadata.a);\n    };\n    OperationFilterExpressionDescriptionMetadata.$t = markType(OperationFilterExpressionDescriptionMetadata, 'OperationFilterExpressionDescriptionMetadata');\n    OperationFilterExpressionDescriptionMetadata.a = null;\n    return OperationFilterExpressionDescriptionMetadata;\n}(Base));\nexport { OperationFilterExpressionDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}