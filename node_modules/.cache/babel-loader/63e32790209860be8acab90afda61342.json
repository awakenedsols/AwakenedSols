{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/Thug Rugs/ThugRugzClient/src/HoverRugz.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport './HoverRugz.css';\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { getParsedNftAccountsByOwner } from \"@nfteyez/sol-rayz\";\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\nimport { getCandyMachineState } from \"./candy-machine\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectButton = styled(WalletDialogButton)``;\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nconst HoverRugz = props => {\n  _s();\n\n  const [balance, setBalance] = useState();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n  const [alertState, setAlertState] = useState({\n    open: false,\n    message: \"\",\n    severity: undefined\n  });\n  let mintedItems = undefined;\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState();\n\n  const getAllNftData = async () => {\n    try {\n      if (wallet) {\n        let ownerToken = wallet.publicKey;\n        const nfts = await getParsedNftAccountsByOwner({\n          publicAddress: ownerToken,\n          connection: props.connection\n        });\n        return nfts;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }; //Function to get all nft data\n\n\n  const getNftTokenData = async () => {\n    try {\n      let nftData = await getAllNftData();\n      let nftArray = [];\n\n      if (nftData) {\n        for (var x = 0; x < nftData.length; x++) {\n          nftArray.push({\n            name: nftData[x].data.name,\n            uri: nftData[x].data.uri\n          }); //console.log(nftArray[x]);\n        }\n      }\n\n      return nftArray;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed\n      } = await getCandyMachineState(wallet, props.candyMachineId, props.connection);\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  useEffect(() => {\n    var start = document.getElementById(\"start\");\n    var logo = document.getElementById(\"logo\");\n    var message = document.getElementById(\"message\");\n    var game = document.getElementById(\"game\");\n    var block = document.getElementById(\"block\");\n    var hole = document.getElementById(\"hole\");\n    var character = document.querySelector(\"#character\");\n    var jumping = 0;\n    var scoreCounter = 0;\n\n    function blockAnimations() {\n      block === null || block === void 0 ? void 0 : block.setAttribute(\"style\", \"animation: block 2s infinite linear;\");\n      block === null || block === void 0 ? void 0 : block.addEventListener('animationiteration', () => {\n        var random = Math.random() * 50 + 40;\n        block === null || block === void 0 ? void 0 : block.setAttribute(\"style\", \"bottom: -\" + random + \"%;\");\n        scoreCounter++;\n      });\n    }\n\n    function gravity() {\n      const loop = setInterval(function () {\n        var characterTop;\n        console.log(character);\n        console.log(block);\n\n        if (character && block) {\n          var blockLeft = parseInt(getComputedStyle(block).getPropertyValue(\"left\"));\n          var blockTop = parseInt(getComputedStyle(block).getPropertyValue(\"top\"));\n          characterTop = parseInt(getComputedStyle(character).getPropertyValue(\"top\"));\n          character === null || character === void 0 ? void 0 : character.setAttribute(\"style\", \"top:\" + (characterTop + 1) + \"px\");\n          var cBottom = characterTop + 160;\n          console.log('blockleft: ' + blockLeft);\n          console.log(characterTop);\n          console.log(cBottom);\n          console.log(blockTop);\n          var characterLocation = window.screen.availWidth * .2;\n\n          if (characterTop > 1000 || blockLeft <= characterLocation && cBottom >= blockTop + 160) {\n            //stop gravity\n            clearInterval(loop); //message and Restart button\n\n            if (message) {\n              message.textContent = \"Game Over. Score: \" + scoreCounter;\n            }\n\n            start === null || start === void 0 ? void 0 : start.setAttribute(\"style\", \"display:block;\");\n\n            if (start) {\n              start.textContent = \"Restart\";\n            } //reset character\n\n\n            character === null || character === void 0 ? void 0 : character.setAttribute(\"style\", \"top:40%;\");\n            character === null || character === void 0 ? void 0 : character.setAttribute(\"style\", \"opacity:50%;\"); //stop block\n\n            block === null || block === void 0 ? void 0 : block.setAttribute(\"style\", \"animation: none;\");\n            block === null || block === void 0 ? void 0 : block.setAttribute(\"style\", \"opacity:50%;\"); //reset score\n\n            scoreCounter = 0;\n          }\n        }\n      }, 30);\n    }\n\n    function jump() {\n      jumping = 1;\n      var jumpCount = 0;\n      var jumpInterval = setInterval(function () {\n        var characterTop;\n\n        if (character) {\n          characterTop = parseInt(getComputedStyle(character).getPropertyValue(\"top\"));\n\n          if (characterTop > 6 && jumpCount < 15) {\n            character === null || character === void 0 ? void 0 : character.setAttribute(\"style\", \"top:\" + (characterTop - 3) + \"px\");\n          }\n        }\n\n        if (jumpCount > 20) {\n          clearInterval(jumpInterval);\n          jumping = 0;\n          jumpCount = 0;\n        }\n\n        jumpCount++;\n      }, 10);\n    } // game?.addEventListener('click', () => {\n    //   jump();\n    // });\n\n\n    function startGame() {\n      start === null || start === void 0 ? void 0 : start.setAttribute(\"style\", \"display:none;\");\n      console.log('start');\n      character === null || character === void 0 ? void 0 : character.setAttribute(\"style\", \"opacity:1;\");\n      block === null || block === void 0 ? void 0 : block.setAttribute(\"style\", \"opacity:1;\");\n      logo === null || logo === void 0 ? void 0 : logo.setAttribute(\"style\", \"display:none;\");\n      blockAnimations();\n      gravity();\n      document.addEventListener('keydown', event => {\n        if (event.code === 'Space') {\n          jump();\n        }\n      });\n      logo === null || logo === void 0 ? void 0 : logo.setAttribute(\"style\", \"display:none;\");\n    }\n\n    ;\n\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        mintedItems = await getNftTokenData().then(res => mintedItems = res);\n        console.log(mintedItems);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n\n      var startButton = document.getElementById(\"start\");\n      startButton === null || startButton === void 0 ? void 0 : startButton.addEventListener('click', () => {\n        startGame();\n      });\n    })();\n  }, [wallet, props.connection]);\n  useEffect(refreshCandyMachineState, [wallet, props.candyMachineId, props.connection]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        id: \"logo\",\n        src: \"assets/logo.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 280,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 281,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"start\",\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 282,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hole\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(Snackbar, {\n      open: alertState.open,\n      autoHideDuration: 6000,\n      onClose: () => setAlertState({ ...alertState,\n        open: false\n      }),\n      children: /*#__PURE__*/_jsxDEV(Alert, {\n        onClose: () => setAlertState({ ...alertState,\n          open: false\n        }),\n        severity: alertState.severity,\n        children: alertState.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      children: \"blockAnimations();\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HoverRugz, \"yHayHpgobvE+v8EDXLv1P69gkss=\", false, function () {\n  return [useAnchorWallet];\n});\n\n_c = HoverRugz;\nexport default HoverRugz;\n\nvar _c;\n\n$RefreshReg$(_c, \"HoverRugz\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/Thug Rugs/ThugRugzClient/src/HoverRugz.tsx"],"names":["useEffect","useState","styled","Button","Snackbar","Alert","LAMPORTS_PER_SOL","getParsedNftAccountsByOwner","useAnchorWallet","WalletDialogButton","getCandyMachineState","ConnectButton","CounterText","span","MintContainer","div","MintButton","HoverRugz","props","balance","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","itemsAvailable","setItemsAvailable","itemsRedeemed","setItemsRedeemed","itemsRemaining","setItemsRemaining","alertState","setAlertState","open","message","severity","undefined","mintedItems","startDate","setStartDate","Date","wallet","candyMachine","setCandyMachine","getAllNftData","ownerToken","publicKey","nfts","publicAddress","connection","error","console","log","getNftTokenData","nftData","nftArray","x","length","push","name","data","uri","refreshCandyMachineState","goLiveDate","candyMachineId","start","document","getElementById","logo","game","block","hole","character","querySelector","jumping","scoreCounter","blockAnimations","setAttribute","addEventListener","random","Math","gravity","loop","setInterval","characterTop","blockLeft","parseInt","getComputedStyle","getPropertyValue","blockTop","cBottom","characterLocation","window","screen","availWidth","clearInterval","textContent","jump","jumpCount","jumpInterval","startGame","event","code","getBalance","then","res","startButton"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport './HoverRugz.css';\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { TokenAccountsFilter } from \"@solana/web3.js\";\nimport * as web3js from \"@solana/web3.js\";\nimport axios from \"axios\";\nimport { getParsedNftAccountsByOwner,isValidSolanaAddress, createConnectionConfig,} from \"@nfteyez/sol-rayz\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport Typewriter from \"typewriter-effect\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\nimport { Filter } from \"@material-ui/icons\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { off } from \"process\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HoverRugzProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst HoverRugz = (props: HoverRugzProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n  \n  let mintedItems : any[] | undefined = undefined;\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const getAllNftData = async () => {\n    try {\n      if(wallet){\n        let ownerToken = wallet.publicKey;\n        const nfts = await getParsedNftAccountsByOwner({\n          publicAddress: ownerToken,\n          connection: props.connection\n        });\n        return nfts;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n//Function to get all nft data\nconst getNftTokenData = async () => {\n  try {\n      let nftData = await getAllNftData();\n      let nftArray = []\n      if(nftData){\n        for(var x=0; x<nftData.length; x++){\n          nftArray.push({name: nftData[x].data.name, uri: nftData[x].data.uri})\n          //console.log(nftArray[x]);\n        }\n      }\n      return nftArray;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  \n\n  useEffect(() => {\n    var start = document.getElementById(\"start\");\n  var logo = document.getElementById(\"logo\");\n  var message = document.getElementById(\"message\");\n  var game = document.getElementById(\"game\");\n  var block = document.getElementById(\"block\");\n  var hole = document.getElementById(\"hole\");\n  var character = document.querySelector(\"#character\");\n  var jumping = 0;\n  var scoreCounter = 0;\n\n  function blockAnimations(){\n    block?.setAttribute(\"style\", \"animation: block 2s infinite linear;\")\n\n    block?.addEventListener('animationiteration', () => {\n      var random = ((Math.random()*50) + 40);\n      block?.setAttribute(\"style\", \"bottom: -\" + random + \"%;\")\n      scoreCounter++;\n    });\n  }\n\n  function gravity(){\n    const loop = setInterval(function(){\n      var characterTop;\n      console.log(character)\n      console.log(block);\n      if(character && block) {\n\n        var blockLeft = parseInt(getComputedStyle(block).getPropertyValue(\"left\"));\n        var blockTop = parseInt(getComputedStyle(block).getPropertyValue(\"top\"));\n        characterTop = parseInt(getComputedStyle(character).getPropertyValue(\"top\"));\n        character?.setAttribute(\"style\", \"top:\" + (characterTop + 1) + \"px\" )\n        var cBottom = characterTop + 160 ;\n        console.log('blockleft: ' + blockLeft)\n        console.log(characterTop);\n        console.log(cBottom);\n        console.log(blockTop);        \n\n        var characterLocation = window.screen.availWidth * .2;\n        if( (characterTop > 1000) || ((blockLeft<=characterLocation) && (cBottom>=blockTop+160)) ){\n          //stop gravity\n          clearInterval(loop);\n\n          //message and Restart button\n          if(message){\n            message.textContent = \"Game Over. Score: \" + scoreCounter;\n          }\n\n          start?.setAttribute(\"style\", \"display:block;\")\n          if(start){\n            start.textContent = \"Restart\";\n          }\n\n          //reset character\n          character?.setAttribute(\"style\", \"top:40%;\" )\n          character?.setAttribute(\"style\", \"opacity:50%;\" )\n\n          //stop block\n          block?.setAttribute(\"style\", \"animation: none;\")\n          block?.setAttribute(\"style\", \"opacity:50%;\" )\n\n          //reset score\n          scoreCounter = 0;\n        }\n    }\n    }, 30);\n  }\n\n  function jump(){\n    jumping = 1;\n    var jumpCount = 0;\n\n    var jumpInterval = setInterval(function() {\n        \n      var characterTop;\n      if(character) {\n        characterTop = parseInt(getComputedStyle(character).getPropertyValue(\"top\"));\n        if(characterTop > 6 && jumpCount<15){        \n          character?.setAttribute(\"style\", \"top:\" + (characterTop - 3) + \"px\" )\n        }\n      }\n\n      if(jumpCount>20){\n        clearInterval(jumpInterval);\n        jumping = 0;\n        jumpCount = 0;\n      }\n      jumpCount++;\n    }, 10);\n\n  }\n\n  // game?.addEventListener('click', () => {\n  //   jump();\n  // });\n\nfunction startGame() {\n    start?.setAttribute(\"style\", \"display:none;\")\n\n    console.log('start');\n\n    character?.setAttribute(\"style\", \"opacity:1;\");\n    block?.setAttribute(\"style\", \"opacity:1;\");\n    logo?.setAttribute(\"style\", \"display:none;\");\n\n\n    blockAnimations();\n    gravity();\n\n    document.addEventListener('keydown', event => {\n      if (event.code === 'Space') {\n        jump();\n      }\n    });\n\n    logo?.setAttribute(\"style\", \"display:none;\")\n  };\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n\n        \n        mintedItems = await getNftTokenData().then(res => (mintedItems = res));\n        console.log(mintedItems)\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n\n      var startButton = document.getElementById(\"start\");\n      startButton?.addEventListener('click', () => {\n        startGame();\n      });\n\n\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n  return (\n    <main>\n      \n      {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>} */}\n      \n    <div id=\"game\">\n      <img id=\"logo\" src=\"assets/logo.png\"></img>\n      <p id=\"message\"></p>\n      <div id=\"start\">Start</div>\n      <div id=\"block\"></div>\n      <div id=\"hole\"></div>\n      <div id=\"character\"></div>\n    </div>\n\n\n      {/* <MintContainer>\n        {!wallet ? (\n            <div className=\"connectButton\"><ConnectButton id=\"button\">Connect Wallet</ConnectButton></div>\n          \n        ) : ( <div></div>)}\n        </MintContainer> */}\n\n        <Snackbar\n            open={alertState.open}\n            autoHideDuration={6000}\n            onClose={() => setAlertState({ ...alertState, open: false })}\n        >\n            <Alert\n            onClose={() => setAlertState({ ...alertState, open: false })}\n            severity={alertState.severity}\n            >\n            {alertState.message}\n            </Alert>\n        </Snackbar>\n        <script>\n          \n        blockAnimations();\n        </script>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nexport default HoverRugz;\n"]},"metadata":{},"sourceType":"module"}