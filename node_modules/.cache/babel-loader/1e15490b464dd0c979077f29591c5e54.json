{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/Sniper.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport './sniper.css';\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { createTheme } from \"@material-ui/core/styles\";\nimport { Window } from './Window';\nimport { CollectionsTable } from \"./CollectionsTable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n_c = ConnectButton;\nconst MintContainer = styled.div``; // add your owns styles here\n\nconst theme = createTheme({\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        body: {\n          scrollbarColor: \"#6b6b6b #2b2b2b\",\n          \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n            backgroundColor: \"#000000\"\n          },\n          \"&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb\": {\n            borderRadius: 8,\n            backgroundColor: \"#6b6b6b\",\n            minHeight: 24,\n            border: \"3px solid #868600\"\n          },\n          \"&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus\": {\n            backgroundColor: \"#959595\"\n          },\n          \"&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active\": {\n            backgroundColor: \"#959595\"\n          },\n          \"&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover\": {\n            backgroundColor: \"#959595\"\n          },\n          \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n            backgroundColor: \"#2b2b2b\"\n          }\n        }\n      }\n    }\n  }\n}); //icy tools trending collections on eth query\n\nconst TRENDING_COLLECTIONS_QUERY = gql`\nquery TrendingCollections {\n  contracts(orderBy: SALES, orderDirection: DESC) {\n    edges {\n      node {\n        address\n        ... on ERC721Contract {\n          name\n          stats {\n            totalSales\n            average\n            ceiling\n            floor\n            volume\n          }\n          symbol\n        }\n      }\n    }\n  }\n}\n`;\n\nconst Sniper = props => {\n  _s();\n\n  const {\n    newCollectionsData,\n    loading,\n    error\n  } = useQuery(TRENDING_COLLECTIONS_QUERY, {\n    context: {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        \"x-api-key\": \"02b0c4688eec42f99af574960ebf8c28\" //process.env.REACT_APP_ICY_API_KEY\n\n      }\n    }\n  });\n  const [alertState, setAlertState] = useState({\n    open: false,\n    message: '',\n    severity: undefined\n  });\n  const [isHolder, setIsHolder] = useState(false);\n  const [collections, setCollections] = useState();\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n  const anchorWallet = useMemo(() => {\n    if (!wallet || !wallet.publicKey || !wallet.signAllTransactions || !wallet.signTransaction) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction\n    };\n  }, [wallet]);\n\n  const getCollections = async () => {// await fetch(\"api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200\")\n    // .then(response => response.text())\n    // .then(result => setCollections(result))\n    // .catch(error => console.log('error', error));\n    // const response = await fetch(\"api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200\");\n    // let data = await response.text();\n    // setCollections(data);\n    // var config = {\n    //   method: 'get',\n    //   url: 'api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200'\n    // };\n    // axios(config)\n    // .then(function (response) {\n    //   console.log(JSON.stringify(response.data));\n    // })\n    // .catch(function (error) {\n    //   console.log(error);\n    // });\n    //opensea\n    // const options = {method: 'GET', headers: {Accept: 'application/json'}};\n    // fetch('https://api.opensea.io/api/v1/collections?offset=0&limit=300', options)\n    //   .then(response => response.json())\n    //   .then(response => console.log(response))\n    //   .catch(err => console.error(err));\n  };\n\n  useEffect(() => {\n    console.log('use effect'); //getCollections();\n\n    if (collections) {\n      console.log(collections);\n    }\n\n    if (newCollectionsData) {\n      console.log(newCollectionsData);\n    }\n\n    if (error) {\n      console.log(error);\n    }\n\n    if (loading) {\n      console.log('loading');\n    }\n  });\n  const tableStyle = {\n    backgroundColor: '##192026',\n    color: \"white\"\n  };\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    style: {\n      fontFamily: \"SinMedia Sans\"\n    },\n    children: \"\\\"Loading...\\\"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 209,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [!wallet.connected ? /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"xs\",\n          style: {\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              padding: 24,\n              paddingBottom: 10,\n              backgroundColor: '#151A1F',\n              borderRadius: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(ConnectButton, {\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: data ? /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"sniperContainer\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Awakened Sniper\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Window, {\n              title: \"Trending Collections\",\n              children: /*#__PURE__*/_jsxDEV(CollectionsTable, {\n                data: trendingCollecitonsData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Window, {\n              title: \"New Collections\",\n              children: /*#__PURE__*/_jsxDEV(CollectionsTable, {\n                data: newCollectionsData\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"h1\", {\n              children: \"Loading...\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this)\n          }, void 0, false)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: alertState.open,\n          autoHideDuration: alertState.hideDuration === undefined ? 6000 : alertState.hideDuration,\n          onClose: () => setAlertState({ ...alertState,\n            open: false\n          }),\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: () => setAlertState({ ...alertState,\n              open: false\n            }),\n            severity: alertState.severity,\n            children: alertState.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 248,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 211,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Sniper, \"3UtEFlsa/yXOjHwVvU/nW+LLTdU=\", false, function () {\n  return [useQuery, useWallet];\n});\n\n_c2 = Sniper;\nexport default Sniper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConnectButton\");\n$RefreshReg$(_c2, \"Sniper\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/Sniper.tsx"],"names":["useEffect","useMemo","useState","styled","Container","Snackbar","Paper","Alert","useWallet","WalletDialogButton","useQuery","gql","createTheme","Window","CollectionsTable","ConnectButton","MintContainer","div","theme","overrides","MuiCssBaseline","body","scrollbarColor","backgroundColor","borderRadius","minHeight","border","TRENDING_COLLECTIONS_QUERY","Sniper","props","newCollectionsData","loading","error","context","headers","alertState","setAlertState","open","message","severity","undefined","isHolder","setIsHolder","collections","setCollections","rpcUrl","rpcHost","wallet","anchorWallet","publicKey","signAllTransactions","signTransaction","getCollections","console","log","tableStyle","color","fontFamily","connected","position","padding","paddingBottom","data","trendingCollecitonsData","hideDuration"],"mappings":"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","sourcesContent":["import { Key, ReactChild, ReactFragment, ReactPortal, useCallback, useEffect, useMemo, useState } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport './sniper.css';\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport { AlertState, formatNumber, getAtaForMint, toDate } from './utils';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport axios from 'axios';\nimport { useQuery, gql } from \"@apollo/client\";\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell, { tableCellClasses } from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\nimport TablePagination from '@mui/material/TablePagination';\nimport { createTheme } from \"@material-ui/core/styles\";\nimport solanaIcon from './solanaIcon.png'\n\nimport {Window} from './Window';\nimport { Rowing } from '@material-ui/icons';\nimport { isWhiteSpaceLike } from 'typescript';\nimport {CollectionsTable} from \"./CollectionsTable\"\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst MintContainer = styled.div``; // add your owns styles here\n\nexport interface SniperProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  txTimeout: number;\n  rpcHost: string;\n  network: WalletAdapterNetwork;\n}\n\nconst theme = createTheme({\n  overrides: {\n    MuiCssBaseline: {\n      \"@global\": {\n        body: {\n          scrollbarColor: \"#6b6b6b #2b2b2b\",\n          \"&::-webkit-scrollbar, & *::-webkit-scrollbar\": {\n            backgroundColor: \"#000000\",\n          },\n          \"&::-webkit-scrollbar-thumb, & *::-webkit-scrollbar-thumb\": {\n            borderRadius: 8,\n            backgroundColor: \"#6b6b6b\",\n            minHeight: 24,\n            border: \"3px solid #868600\",\n          },\n          \"&::-webkit-scrollbar-thumb:focus, & *::-webkit-scrollbar-thumb:focus\": {\n            backgroundColor: \"#959595\",\n          },\n          \"&::-webkit-scrollbar-thumb:active, & *::-webkit-scrollbar-thumb:active\": {\n            backgroundColor: \"#959595\",\n          },\n          \"&::-webkit-scrollbar-thumb:hover, & *::-webkit-scrollbar-thumb:hover\": {\n            backgroundColor: \"#959595\",\n          },\n          \"&::-webkit-scrollbar-corner, & *::-webkit-scrollbar-corner\": {\n            backgroundColor: \"#2b2b2b\",\n          },\n        },\n      },\n    },\n  },\n});\n\n\n//icy tools trending collections on eth query\nconst TRENDING_COLLECTIONS_QUERY = gql`\nquery TrendingCollections {\n  contracts(orderBy: SALES, orderDirection: DESC) {\n    edges {\n      node {\n        address\n        ... on ERC721Contract {\n          name\n          stats {\n            totalSales\n            average\n            ceiling\n            floor\n            volume\n          }\n          symbol\n        }\n      }\n    }\n  }\n}\n`;\n\nconst Sniper = (props: SniperProps) => {\n  const { newCollectionsData, loading, error } = useQuery(TRENDING_COLLECTIONS_QUERY, {\n    context: {\n        headers: {\n            \"Content-Type\": \"application/json\",\n            \"x-api-key\": \"02b0c4688eec42f99af574960ebf8c28\"//process.env.REACT_APP_ICY_API_KEY\n        }\n    }\n})\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n\n  const [isHolder, setIsHolder] = useState(false);\n  const [collections, setCollections] = useState<string>();\n\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n  \n  const getCollections = async () => {\n\n    // await fetch(\"api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200\")\n    // .then(response => response.text())\n    // .then(result => setCollections(result))\n    // .catch(error => console.log('error', error));\n\n\n    // const response = await fetch(\"api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200\");\n    // let data = await response.text();\n    // setCollections(data);\n\n    // var config = {\n    //   method: 'get',\n    //   url: 'api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200'\n    // };\n    \n    // axios(config)\n    // .then(function (response) {\n    //   console.log(JSON.stringify(response.data));\n    // })\n    // .catch(function (error) {\n    //   console.log(error);\n    // });\n\n    //opensea\n    // const options = {method: 'GET', headers: {Accept: 'application/json'}};\n\n    // fetch('https://api.opensea.io/api/v1/collections?offset=0&limit=300', options)\n    //   .then(response => response.json())\n    //   .then(response => console.log(response))\n    //   .catch(err => console.error(err));\n  }\n\n  useEffect(() => {\n        console.log('use effect');\n        //getCollections();\n        if(collections){\n          console.log(collections);\n        }\n\n        if(newCollectionsData){\n          console.log(newCollectionsData);\n        }\n\n        if(error){\n          console.log(error);\n        }\n\n        if(loading){\n          console.log('loading');\n        }\n  });\n  \n  \n\n  const tableStyle = {\n    backgroundColor: '##192026',\n    color: \"white\"\n  };\n\n  if (loading) return <h1 style={{fontFamily: \"SinMedia Sans\"}}>\"Loading...\"</h1>;\n  return (\n    <main>\n      {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>} */}\n        <div>\n          <Container>\n            {!wallet.connected ? (\n            <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\n              <Paper style={{padding: 24, paddingBottom: 10, backgroundColor: '#151A1F', borderRadius: 6,}}>\n                <ConnectButton>Connect Wallet</ConnectButton>\n              </Paper>\n            </Container>\n            ) : (\n            <>\n            {data ? ( \n            <div id=\"sniperContainer\">\n              <h3>Awakened Sniper</h3>\n              <Window title=\"Trending Collections\">\n                <CollectionsTable data={trendingCollecitonsData}></CollectionsTable>\n              </Window>\n\n              <Window title=\"New Collections\">\n                <CollectionsTable data={newCollectionsData}></CollectionsTable>\n              </Window>\n            </div>\n            ) : (\n              <>\n              <h1>Loading...</h1>\n              </>\n            )}\n            </>\n          )}\n          <Snackbar\n            open={alertState.open}\n            autoHideDuration={\n              alertState.hideDuration === undefined ? 6000 : alertState.hideDuration\n            }\n            onClose={() => setAlertState({ ...alertState, open: false })}\n          >\n          <Alert\n            onClose={() => setAlertState({ ...alertState, open: false })}\n            severity={alertState.severity}\n          >\n            {alertState.message}\n          </Alert>\n        </Snackbar>\n      </Container>\n      </div>\n\n     </main>\n     );\n          \n   };\nexport default Sniper;\n"]},"metadata":{},"sourceType":"module"}