{"ast":null,"code":"import { LegendItemBadgeShape_$type } from \"igniteui-react-core\";\nimport { DataLegendStylingRowEventArgs as DataLegendStylingRowEventArgs_internal } from \"./DataLegendStylingRowEventArgs\";\nimport { ensureEnum, ensureBool, brushToString, stringToBrush } from \"igniteui-react-core\";\n/**\n * Represents styling event args for a row in data legend\n*/\n\nvar IgrDataLegendStylingRowEventArgs =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrDataLegendStylingRowEventArgs() {\n    this._implementation = this.createImplementation();\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  }\n\n  IgrDataLegendStylingRowEventArgs.prototype.createImplementation = function () {\n    return new DataLegendStylingRowEventArgs_internal();\n  };\n\n  Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"i\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrDataLegendStylingRowEventArgs.prototype.onImplementationCreated = function () {};\n\n  IgrDataLegendStylingRowEventArgs.prototype._provideImplementation = function (i) {\n    this._implementation = i;\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  };\n\n  Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"badgeShape\", {\n    /**\n     * Gets or sets shape of legend badge in the Data Legend\n     * This setting applies only to styling series rows\n    */\n    get: function () {\n      return this.i.a;\n    },\n    set: function (v) {\n      this.i.a = ensureEnum(LegendItemBadgeShape_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"isBadgeVisible\", {\n    /**\n     * Gets or sets whether the legend badge is visible in the Data Legend\n     * This setting applies only to styling series rows\n    */\n    get: function () {\n      return this.i.b;\n    },\n    set: function (v) {\n      this.i.b = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"isRowVisible\", {\n    /**\n     * Gets or sets whether the whole row is visible in the Data Legend\n    */\n    get: function () {\n      return this.i.c;\n    },\n    set: function (v) {\n      this.i.c = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"seriesIndex\", {\n    /**\n     * Gets index of series in the chart\n    */\n    get: function () {\n      return this.i.d;\n    },\n    set: function (v) {\n      this.i.d = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"seriesTitle\", {\n    /**\n     * Gets title of series in the chart\n    */\n    get: function () {\n      return this.i.e;\n    },\n    set: function (v) {\n      this.i.e = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"titleText\", {\n    /**\n     * Gets or sets title text displayed in row of Data Legend\n    */\n    get: function () {\n      return this.i.f;\n    },\n    set: function (v) {\n      this.i.f = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"titleTextColor\", {\n    /**\n     * Gets or sets color of title text\n    */\n    get: function () {\n      return brushToString(this.i.g);\n    },\n    set: function (v) {\n      this.i.g = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrDataLegendStylingRowEventArgs;\n}();\n\nexport { IgrDataLegendStylingRowEventArgs };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-data-legend-styling-row-event-args.js"],"names":["LegendItemBadgeShape_$type","DataLegendStylingRowEventArgs","DataLegendStylingRowEventArgs_internal","ensureEnum","ensureBool","brushToString","stringToBrush","IgrDataLegendStylingRowEventArgs","_implementation","createImplementation","externalObject","onImplementationCreated","prototype","Object","defineProperty","get","enumerable","configurable","_provideImplementation","i","a","set","v","b","c","d","e","f","g"],"mappings":"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","sourcesContent":["import { LegendItemBadgeShape_$type } from \"igniteui-react-core\";\nimport { DataLegendStylingRowEventArgs as DataLegendStylingRowEventArgs_internal } from \"./DataLegendStylingRowEventArgs\";\nimport { ensureEnum, ensureBool, brushToString, stringToBrush } from \"igniteui-react-core\";\n/**\n * Represents styling event args for a row in data legend\n*/\nvar IgrDataLegendStylingRowEventArgs = /** @class */ /*@__PURE__*/ (function () {\n    function IgrDataLegendStylingRowEventArgs() {\n        this._implementation = this.createImplementation();\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    }\n    IgrDataLegendStylingRowEventArgs.prototype.createImplementation = function () {\n        return new DataLegendStylingRowEventArgs_internal();\n    };\n    Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"i\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrDataLegendStylingRowEventArgs.prototype.onImplementationCreated = function () {\n    };\n    IgrDataLegendStylingRowEventArgs.prototype._provideImplementation = function (i) {\n        this._implementation = i;\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    };\n    Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"badgeShape\", {\n        /**\n         * Gets or sets shape of legend badge in the Data Legend\n         * This setting applies only to styling series rows\n        */\n        get: function () {\n            return this.i.a;\n        },\n        set: function (v) {\n            this.i.a = ensureEnum(LegendItemBadgeShape_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"isBadgeVisible\", {\n        /**\n         * Gets or sets whether the legend badge is visible in the Data Legend\n         * This setting applies only to styling series rows\n        */\n        get: function () {\n            return this.i.b;\n        },\n        set: function (v) {\n            this.i.b = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"isRowVisible\", {\n        /**\n         * Gets or sets whether the whole row is visible in the Data Legend\n        */\n        get: function () {\n            return this.i.c;\n        },\n        set: function (v) {\n            this.i.c = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"seriesIndex\", {\n        /**\n         * Gets index of series in the chart\n        */\n        get: function () {\n            return this.i.d;\n        },\n        set: function (v) {\n            this.i.d = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"seriesTitle\", {\n        /**\n         * Gets title of series in the chart\n        */\n        get: function () {\n            return this.i.e;\n        },\n        set: function (v) {\n            this.i.e = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"titleText\", {\n        /**\n         * Gets or sets title text displayed in row of Data Legend\n        */\n        get: function () {\n            return this.i.f;\n        },\n        set: function (v) {\n            this.i.f = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDataLegendStylingRowEventArgs.prototype, \"titleTextColor\", {\n        /**\n         * Gets or sets color of title text\n        */\n        get: function () {\n            return brushToString(this.i.g);\n        },\n        set: function (v) {\n            this.i.g = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrDataLegendStylingRowEventArgs;\n}());\nexport { IgrDataLegendStylingRowEventArgs };\n"]},"metadata":{},"sourceType":"module"}