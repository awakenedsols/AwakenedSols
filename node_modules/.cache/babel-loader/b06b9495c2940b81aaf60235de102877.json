{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrHorizontalStackedSeriesBase } from \"./igr-horizontal-stacked-series-base\";\nimport { StackedColumnSeries } from \"./StackedColumnSeries\";\n/**\n * Represents a IgxDataChartComponent stacked column series.\n*/\n\nvar IgrStackedColumnSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrStackedColumnSeries, _super);\n\n  function IgrStackedColumnSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrStackedColumnSeries.prototype.createImplementation = function () {\n    return new StackedColumnSeries();\n  };\n\n  Object.defineProperty(IgrStackedColumnSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedColumnSeries.prototype, \"isColumn\", {\n    /**\n     * Gets whether the current series shows a column shape.\n    */\n    get: function () {\n      return this.i.dh;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedColumnSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n    /**\n     * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n    */\n    get: function () {\n      return this.i.d2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedColumnSeries.prototype, \"radiusX\", {\n    /**\n     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.\n    */\n    get: function () {\n      return this.i.un;\n    },\n    set: function (v) {\n      this.i.un = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedColumnSeries.prototype, \"radiusY\", {\n    /**\n     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.\n    */\n    get: function () {\n      return this.i.uo;\n    },\n    set: function (v) {\n      this.i.uo = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n  \r\n  */\n\n  IgrStackedColumnSeries.prototype.getItemSpan = function () {\n    var iv = this.i.ga();\n    return iv;\n  };\n\n  return IgrStackedColumnSeries;\n}(IgrHorizontalStackedSeriesBase);\n\nexport { IgrStackedColumnSeries };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-stacked-column-series.js"],"names":["__extends","IgrHorizontalStackedSeriesBase","StackedColumnSeries","IgrStackedColumnSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","dh","d2","un","set","v","uo","getItemSpan","iv","ga"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,8BAAT,QAA+C,sCAA/C;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA;AACA;AACA;;AACA,IAAIC,sBAAsB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACxEJ,EAAAA,SAAS,CAACG,sBAAD,EAAyBC,MAAzB,CAAT;;AACA,WAASD,sBAAT,CAAgCE,KAAhC,EAAuC;AACnC,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDF,EAAAA,sBAAsB,CAACI,SAAvB,CAAiCC,oBAAjC,GAAwD,YAAY;AAChE,WAAO,IAAIN,mBAAJ,EAAP;AACH,GAFD;;AAGAO,EAAAA,MAAM,CAACC,cAAP,CAAsBP,sBAAsB,CAACI,SAA7C,EAAwD,GAAxD,EAA6D;AACzD;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANwD;AAOzDC,IAAAA,UAAU,EAAE,KAP6C;AAQzDC,IAAAA,YAAY,EAAE;AAR2C,GAA7D;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,sBAAsB,CAACI,SAA7C,EAAwD,UAAxD,EAAoE;AAChE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOC,EAAd;AACH,KAN+D;AAOhEH,IAAAA,UAAU,EAAE,KAPoD;AAQhEC,IAAAA,YAAY,EAAE;AARkD,GAApE;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,sBAAsB,CAACI,SAA7C,EAAwD,8BAAxD,EAAwF;AACpF;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOE,EAAd;AACH,KANmF;AAOpFJ,IAAAA,UAAU,EAAE,KAPwE;AAQpFC,IAAAA,YAAY,EAAE;AARsE,GAAxF;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,sBAAsB,CAACI,SAA7C,EAAwD,SAAxD,EAAmE;AAC/D;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOG,EAAd;AACH,KAN8D;AAO/DC,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKL,CAAL,CAAOG,EAAP,GAAY,CAACE,CAAb;AACH,KAT8D;AAU/DP,IAAAA,UAAU,EAAE,KAVmD;AAW/DC,IAAAA,YAAY,EAAE;AAXiD,GAAnE;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,sBAAsB,CAACI,SAA7C,EAAwD,SAAxD,EAAmE;AAC/D;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOM,EAAd;AACH,KAN8D;AAO/DF,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKL,CAAL,CAAOM,EAAP,GAAY,CAACD,CAAb;AACH,KAT8D;AAU/DP,IAAAA,UAAU,EAAE,KAVmD;AAW/DC,IAAAA,YAAY,EAAE;AAXiD,GAAnE;AAaA;AACJ;AACA;AACA;;AACIX,EAAAA,sBAAsB,CAACI,SAAvB,CAAiCe,WAAjC,GAA+C,YAAY;AACvD,QAAIC,EAAE,GAAG,KAAKR,CAAL,CAAOS,EAAP,EAAT;AACA,WAAQD,EAAR;AACH,GAHD;;AAIA,SAAOpB,sBAAP;AACH,CAzEyD,CAyExDF,8BAzEwD,CAA1D;;AA0EA,SAASE,sBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrHorizontalStackedSeriesBase } from \"./igr-horizontal-stacked-series-base\";\nimport { StackedColumnSeries } from \"./StackedColumnSeries\";\n/**\n * Represents a IgxDataChartComponent stacked column series.\n*/\nvar IgrStackedColumnSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrStackedColumnSeries, _super);\n    function IgrStackedColumnSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrStackedColumnSeries.prototype.createImplementation = function () {\n        return new StackedColumnSeries();\n    };\n    Object.defineProperty(IgrStackedColumnSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedColumnSeries.prototype, \"isColumn\", {\n        /**\n         * Gets whether the current series shows a column shape.\n        */\n        get: function () {\n            return this.i.dh;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedColumnSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n        /**\n         * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n        */\n        get: function () {\n            return this.i.d2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedColumnSeries.prototype, \"radiusX\", {\n        /**\n         * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.\n        */\n        get: function () {\n            return this.i.un;\n        },\n        set: function (v) {\n            this.i.un = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedColumnSeries.prototype, \"radiusY\", {\n        /**\n         * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.\n        */\n        get: function () {\n            return this.i.uo;\n        },\n        set: function (v) {\n            this.i.uo = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n    \r\n    */\n    IgrStackedColumnSeries.prototype.getItemSpan = function () {\n        var iv = this.i.ga();\n        return (iv);\n    };\n    return IgrStackedColumnSeries;\n}(IgrHorizontalStackedSeriesBase));\nexport { IgrStackedColumnSeries };\n"]},"metadata":{},"sourceType":"module"}