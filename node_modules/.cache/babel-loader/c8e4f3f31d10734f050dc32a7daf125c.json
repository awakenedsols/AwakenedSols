{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStackedAreaSeries } from \"./igr-stacked-area-series\";\nimport { Stacked100AreaSeries } from \"./Stacked100AreaSeries\";\n/**\n * Represents a stacked area series, where values are presented as percentages of the total.\n*/\n\nvar IgrStacked100AreaSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrStacked100AreaSeries, _super);\n\n  function IgrStacked100AreaSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrStacked100AreaSeries.prototype.createImplementation = function () {\n    return new Stacked100AreaSeries();\n  };\n\n  Object.defineProperty(IgrStacked100AreaSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStacked100AreaSeries.prototype, \"isPercentBased\", {\n    get: function () {\n      return this.i.tp;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrStacked100AreaSeries;\n}(IgrStackedAreaSeries);\n\nexport { IgrStacked100AreaSeries };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-stacked-100-area-series.js"],"names":["__extends","IgrStackedAreaSeries","Stacked100AreaSeries","IgrStacked100AreaSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","tp"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,oBAAT,QAAqC,2BAArC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACzEJ,EAAAA,SAAS,CAACG,uBAAD,EAA0BC,MAA1B,CAAT;;AACA,WAASD,uBAAT,CAAiCE,KAAjC,EAAwC;AACpC,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDF,EAAAA,uBAAuB,CAACI,SAAxB,CAAkCC,oBAAlC,GAAyD,YAAY;AACjE,WAAO,IAAIN,oBAAJ,EAAP;AACH,GAFD;;AAGAO,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,GAAzD,EAA8D;AAC1D;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANyD;AAO1DC,IAAAA,UAAU,EAAE,KAP8C;AAQ1DC,IAAAA,YAAY,EAAE;AAR4C,GAA9D;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,gBAAzD,EAA2E;AACvEI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOC,EAAd;AACH,KAHsE;AAIvEH,IAAAA,UAAU,EAAE,KAJ2D;AAKvEC,IAAAA,YAAY,EAAE;AALyD,GAA3E;AAOA,SAAOX,uBAAP;AACH,CA1B0D,CA0BzDF,oBA1ByD,CAA3D;;AA2BA,SAASE,uBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStackedAreaSeries } from \"./igr-stacked-area-series\";\nimport { Stacked100AreaSeries } from \"./Stacked100AreaSeries\";\n/**\n * Represents a stacked area series, where values are presented as percentages of the total.\n*/\nvar IgrStacked100AreaSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrStacked100AreaSeries, _super);\n    function IgrStacked100AreaSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrStacked100AreaSeries.prototype.createImplementation = function () {\n        return new Stacked100AreaSeries();\n    };\n    Object.defineProperty(IgrStacked100AreaSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStacked100AreaSeries.prototype, \"isPercentBased\", {\n        get: function () {\n            return this.i.tp;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrStacked100AreaSeries;\n}(IgrStackedAreaSeries));\nexport { IgrStacked100AreaSeries };\n"]},"metadata":{},"sourceType":"module"}