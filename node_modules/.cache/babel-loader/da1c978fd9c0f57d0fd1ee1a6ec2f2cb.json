{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStyle } from \"igniteui-react-core\";\nimport { MarkerType_$type } from \"./MarkerType\";\nimport { CollisionAvoidanceType_$type } from \"./CollisionAvoidanceType\";\nimport { MarkerOutlineMode_$type } from \"./MarkerOutlineMode\";\nimport { MarkerFillMode_$type } from \"./MarkerFillMode\";\nimport { IgrShapeSeriesBase } from \"./igr-shape-series-base\";\nimport { ScatterPolygonSeries } from \"./ScatterPolygonSeries\";\nimport { ensureEnum, brushToString, stringToBrush } from \"igniteui-react-core\";\n/**\n * Series class which renders polygons as Paths based on lists of points in the ItemsSource.\n*/\n\nvar IgrScatterPolygonSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrScatterPolygonSeries, _super);\n\n  function IgrScatterPolygonSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrScatterPolygonSeries.prototype.createImplementation = function () {\n    return new ScatterPolygonSeries();\n  };\n\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"isPolygon\", {\n    /**\n     * Gets whether the current series shows a polygon shape.\n    */\n    get: function () {\n      return this.i.d7;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n    /**\n     * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n    */\n    get: function () {\n      return this.i.d2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"hasMarkers\", {\n    /**\n     * Returns whether the current series supports visual markers.\n    */\n    get: function () {\n      return this.i.hasMarkers;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"shapeStyle\", {\n    /**\n     * The default style to apply to all Shapes in the series.\n    */\n    get: function () {\n      if (this.i.ud == null) {\n        return null;\n      }\n\n      if (!this.i.ud.externalObject) {\n        var e = new IgrStyle();\n        e._implementation = this.i.ud;\n        this.i.ud.externalObject = e;\n      }\n\n      return this.i.ud.externalObject;\n    },\n    set: function (v) {\n      v == null ? this.i.ud = null : this.i.ud = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerType\", {\n    /**\n     * Gets or sets the marker type for the current series object.\n     * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\n    */\n    get: function () {\n      return this.i.s1;\n    },\n    set: function (v) {\n      this.i.s1 = ensureEnum(MarkerType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerTemplate\", {\n    /**\n     * Gets or sets the MarkerTemplate for the current series object.\n    */\n    get: function () {\n      return this.i.ts;\n    },\n    set: function (v) {\n      this.i.ts = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerThickness\", {\n    /**\n     * Gets or sets thickness of the marker outline\n    */\n    get: function () {\n      return this.i.s9;\n    },\n    set: function (v) {\n      this.i.s9 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"actualMarkerTemplate\", {\n    /**\n     * Gets the effective marker template for the current series object.\n    */\n    get: function () {\n      return this.i.tq;\n    },\n    set: function (v) {\n      this.i.tq = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerBrush\", {\n    /**\n     * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\n    */\n    get: function () {\n      return brushToString(this.i.t9);\n    },\n    set: function (v) {\n      this.i.t9 = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"actualMarkerBrush\", {\n    /**\n     * Gets the effective marker brush for the current series object.\n    */\n    get: function () {\n      return brushToString(this.i.t7);\n    },\n    set: function (v) {\n      this.i.t7 = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerOutline\", {\n    /**\n     * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\n    */\n    get: function () {\n      return brushToString(this.i.ua);\n    },\n    set: function (v) {\n      this.i.ua = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"actualMarkerOutline\", {\n    /**\n     * Gets the effective marker outline for the current series object.\n    */\n    get: function () {\n      return brushToString(this.i.t8);\n    },\n    set: function (v) {\n      this.i.t8 = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerCollisionAvoidance\", {\n    /**\n     * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\n    */\n    get: function () {\n      return this.i.ss;\n    },\n    set: function (v) {\n      this.i.ss = ensureEnum(CollisionAvoidanceType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerOutlineMode\", {\n    /**\n     * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\n    */\n    get: function () {\n      return this.i.sz;\n    },\n    set: function (v) {\n      this.i.sz = ensureEnum(MarkerOutlineMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerFillMode\", {\n    /**\n     * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\n    */\n    get: function () {\n      return this.i.sv;\n    },\n    set: function (v) {\n      this.i.sv = ensureEnum(MarkerFillMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrScatterPolygonSeries.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.shapeStyle && this.shapeStyle.name && this.shapeStyle.name == name) {\n      return this.shapeStyle;\n    }\n\n    return null;\n  };\n\n  return IgrScatterPolygonSeries;\n}(IgrShapeSeriesBase);\n\nexport { IgrScatterPolygonSeries };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-scatter-polygon-series.js"],"names":["__extends","IgrStyle","MarkerType_$type","CollisionAvoidanceType_$type","MarkerOutlineMode_$type","MarkerFillMode_$type","IgrShapeSeriesBase","ScatterPolygonSeries","ensureEnum","brushToString","stringToBrush","IgrScatterPolygonSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","d7","d2","hasMarkers","ud","externalObject","e","set","v","s1","ts","s9","tq","t9","t7","ua","t8","ss","sz","sv","findByName","name","baseResult","shapeStyle"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,4BAAT,QAA6C,0BAA7C;AACA,SAASC,uBAAT,QAAwC,qBAAxC;AACA,SAASC,oBAAT,QAAqC,kBAArC;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AACA,SAASC,oBAAT,QAAqC,wBAArC;AACA,SAASC,UAAT,EAAqBC,aAArB,EAAoCC,aAApC,QAAyD,qBAAzD;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACzEZ,EAAAA,SAAS,CAACW,uBAAD,EAA0BC,MAA1B,CAAT;;AACA,WAASD,uBAAT,CAAiCE,KAAjC,EAAwC;AACpC,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDF,EAAAA,uBAAuB,CAACI,SAAxB,CAAkCC,oBAAlC,GAAyD,YAAY;AACjE,WAAO,IAAIT,oBAAJ,EAAP;AACH,GAFD;;AAGAU,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,GAAzD,EAA8D;AAC1D;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANyD;AAO1DC,IAAAA,UAAU,EAAE,KAP8C;AAQ1DC,IAAAA,YAAY,EAAE;AAR4C,GAA9D;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,WAAzD,EAAsE;AAClE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOC,EAAd;AACH,KANiE;AAOlEH,IAAAA,UAAU,EAAE,KAPsD;AAQlEC,IAAAA,YAAY,EAAE;AARoD,GAAtE;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,8BAAzD,EAAyF;AACrF;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOE,EAAd;AACH,KANoF;AAOrFJ,IAAAA,UAAU,EAAE,KAPyE;AAQrFC,IAAAA,YAAY,EAAE;AARuE,GAAzF;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,YAAzD,EAAuE;AACnE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOG,UAAd;AACH,KANkE;AAOnEL,IAAAA,UAAU,EAAE,KAPuD;AAQnEC,IAAAA,YAAY,EAAE;AARqD,GAAvE;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,YAAzD,EAAuE;AACnE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKI,CAAL,CAAOI,EAAP,IAAa,IAAjB,EAAuB;AACnB,eAAO,IAAP;AACH;;AACD,UAAI,CAAC,KAAKJ,CAAL,CAAOI,EAAP,CAAUC,cAAf,EAA+B;AAC3B,YAAIC,CAAC,GAAG,IAAI5B,QAAJ,EAAR;AACA4B,QAAAA,CAAC,CAACT,eAAF,GAAoB,KAAKG,CAAL,CAAOI,EAA3B;AACA,aAAKJ,CAAL,CAAOI,EAAP,CAAUC,cAAV,GAA2BC,CAA3B;AACH;;AACD,aAAO,KAAKN,CAAL,CAAOI,EAAP,CAAUC,cAAjB;AACH,KAdkE;AAenEE,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACdA,MAAAA,CAAC,IAAI,IAAL,GAAY,KAAKR,CAAL,CAAOI,EAAP,GAAY,IAAxB,GAA+B,KAAKJ,CAAL,CAAOI,EAAP,GAAYI,CAAC,CAACR,CAA7C;AACH,KAjBkE;AAkBnEF,IAAAA,UAAU,EAAE,KAlBuD;AAmBnEC,IAAAA,YAAY,EAAE;AAnBqD,GAAvE;AAqBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,YAAzD,EAAuE;AACnE;AACR;AACA;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOS,EAAd;AACH,KAPkE;AAQnEF,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOS,EAAP,GAAYxB,UAAU,CAACN,gBAAD,EAAmB6B,CAAnB,CAAtB;AACH,KAVkE;AAWnEV,IAAAA,UAAU,EAAE,KAXuD;AAYnEC,IAAAA,YAAY,EAAE;AAZqD,GAAvE;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,gBAAzD,EAA2E;AACvE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOU,EAAd;AACH,KANsE;AAOvEH,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOU,EAAP,GAAYF,CAAZ;AACH,KATsE;AAUvEV,IAAAA,UAAU,EAAE,KAV2D;AAWvEC,IAAAA,YAAY,EAAE;AAXyD,GAA3E;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,iBAAzD,EAA4E;AACxE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOW,EAAd;AACH,KANuE;AAOxEJ,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOW,EAAP,GAAY,CAACH,CAAb;AACH,KATuE;AAUxEV,IAAAA,UAAU,EAAE,KAV4D;AAWxEC,IAAAA,YAAY,EAAE;AAX0D,GAA5E;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,sBAAzD,EAAiF;AAC7E;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOY,EAAd;AACH,KAN4E;AAO7EL,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOY,EAAP,GAAYJ,CAAZ;AACH,KAT4E;AAU7EV,IAAAA,UAAU,EAAE,KAViE;AAW7EC,IAAAA,YAAY,EAAE;AAX+D,GAAjF;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,aAAzD,EAAwE;AACpE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOV,aAAa,CAAC,KAAKc,CAAL,CAAOa,EAAR,CAApB;AACH,KANmE;AAOpEN,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOa,EAAP,GAAY1B,aAAa,CAACqB,CAAD,CAAzB;AACH,KATmE;AAUpEV,IAAAA,UAAU,EAAE,KAVwD;AAWpEC,IAAAA,YAAY,EAAE;AAXsD,GAAxE;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,mBAAzD,EAA8E;AAC1E;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOV,aAAa,CAAC,KAAKc,CAAL,CAAOc,EAAR,CAApB;AACH,KANyE;AAO1EP,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOc,EAAP,GAAY3B,aAAa,CAACqB,CAAD,CAAzB;AACH,KATyE;AAU1EV,IAAAA,UAAU,EAAE,KAV8D;AAW1EC,IAAAA,YAAY,EAAE;AAX4D,GAA9E;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,eAAzD,EAA0E;AACtE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOV,aAAa,CAAC,KAAKc,CAAL,CAAOe,EAAR,CAApB;AACH,KANqE;AAOtER,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOe,EAAP,GAAY5B,aAAa,CAACqB,CAAD,CAAzB;AACH,KATqE;AAUtEV,IAAAA,UAAU,EAAE,KAV0D;AAWtEC,IAAAA,YAAY,EAAE;AAXwD,GAA1E;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,qBAAzD,EAAgF;AAC5E;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOV,aAAa,CAAC,KAAKc,CAAL,CAAOgB,EAAR,CAApB;AACH,KAN2E;AAO5ET,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOgB,EAAP,GAAY7B,aAAa,CAACqB,CAAD,CAAzB;AACH,KAT2E;AAU5EV,IAAAA,UAAU,EAAE,KAVgE;AAW5EC,IAAAA,YAAY,EAAE;AAX8D,GAAhF;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,0BAAzD,EAAqF;AACjF;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOiB,EAAd;AACH,KANgF;AAOjFV,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOiB,EAAP,GAAYhC,UAAU,CAACL,4BAAD,EAA+B4B,CAA/B,CAAtB;AACH,KATgF;AAUjFV,IAAAA,UAAU,EAAE,KAVqE;AAWjFC,IAAAA,YAAY,EAAE;AAXmE,GAArF;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,mBAAzD,EAA8E;AAC1E;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOkB,EAAd;AACH,KANyE;AAO1EX,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOkB,EAAP,GAAYjC,UAAU,CAACJ,uBAAD,EAA0B2B,CAA1B,CAAtB;AACH,KATyE;AAU1EV,IAAAA,UAAU,EAAE,KAV8D;AAW1EC,IAAAA,YAAY,EAAE;AAX4D,GAA9E;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,uBAAuB,CAACI,SAA9C,EAAyD,gBAAzD,EAA2E;AACvE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOmB,EAAd;AACH,KANsE;AAOvEZ,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKR,CAAL,CAAOmB,EAAP,GAAYlC,UAAU,CAACH,oBAAD,EAAuB0B,CAAvB,CAAtB;AACH,KATsE;AAUvEV,IAAAA,UAAU,EAAE,KAV2D;AAWvEC,IAAAA,YAAY,EAAE;AAXyD,GAA3E;;AAaAX,EAAAA,uBAAuB,CAACI,SAAxB,CAAkC4B,UAAlC,GAA+C,UAAUC,IAAV,EAAgB;AAC3D,QAAIC,UAAU,GAAGjC,MAAM,CAACG,SAAP,CAAiB4B,UAAjB,CAA4B7B,IAA5B,CAAiC,IAAjC,EAAuC8B,IAAvC,CAAjB;;AACA,QAAIC,UAAJ,EAAgB;AACZ,aAAOA,UAAP;AACH;;AACD,QAAI,KAAKC,UAAL,IAAmB,KAAKA,UAAL,CAAgBF,IAAnC,IAA2C,KAAKE,UAAL,CAAgBF,IAAhB,IAAwBA,IAAvE,EAA6E;AACzE,aAAO,KAAKE,UAAZ;AACH;;AACD,WAAO,IAAP;AACH,GATD;;AAUA,SAAOnC,uBAAP;AACH,CAhO0D,CAgOzDL,kBAhOyD,CAA3D;;AAiOA,SAASK,uBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStyle } from \"igniteui-react-core\";\nimport { MarkerType_$type } from \"./MarkerType\";\nimport { CollisionAvoidanceType_$type } from \"./CollisionAvoidanceType\";\nimport { MarkerOutlineMode_$type } from \"./MarkerOutlineMode\";\nimport { MarkerFillMode_$type } from \"./MarkerFillMode\";\nimport { IgrShapeSeriesBase } from \"./igr-shape-series-base\";\nimport { ScatterPolygonSeries } from \"./ScatterPolygonSeries\";\nimport { ensureEnum, brushToString, stringToBrush } from \"igniteui-react-core\";\n/**\n * Series class which renders polygons as Paths based on lists of points in the ItemsSource.\n*/\nvar IgrScatterPolygonSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrScatterPolygonSeries, _super);\n    function IgrScatterPolygonSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrScatterPolygonSeries.prototype.createImplementation = function () {\n        return new ScatterPolygonSeries();\n    };\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"isPolygon\", {\n        /**\n         * Gets whether the current series shows a polygon shape.\n        */\n        get: function () {\n            return this.i.d7;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n        /**\n         * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n        */\n        get: function () {\n            return this.i.d2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"hasMarkers\", {\n        /**\n         * Returns whether the current series supports visual markers.\n        */\n        get: function () {\n            return this.i.hasMarkers;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"shapeStyle\", {\n        /**\n         * The default style to apply to all Shapes in the series.\n        */\n        get: function () {\n            if (this.i.ud == null) {\n                return null;\n            }\n            if (!this.i.ud.externalObject) {\n                var e = new IgrStyle();\n                e._implementation = this.i.ud;\n                this.i.ud.externalObject = e;\n            }\n            return this.i.ud.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.ud = null : this.i.ud = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerType\", {\n        /**\n         * Gets or sets the marker type for the current series object.\n         * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\n        */\n        get: function () {\n            return this.i.s1;\n        },\n        set: function (v) {\n            this.i.s1 = ensureEnum(MarkerType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerTemplate\", {\n        /**\n         * Gets or sets the MarkerTemplate for the current series object.\n        */\n        get: function () {\n            return this.i.ts;\n        },\n        set: function (v) {\n            this.i.ts = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerThickness\", {\n        /**\n         * Gets or sets thickness of the marker outline\n        */\n        get: function () {\n            return this.i.s9;\n        },\n        set: function (v) {\n            this.i.s9 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"actualMarkerTemplate\", {\n        /**\n         * Gets the effective marker template for the current series object.\n        */\n        get: function () {\n            return this.i.tq;\n        },\n        set: function (v) {\n            this.i.tq = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerBrush\", {\n        /**\n         * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\n        */\n        get: function () {\n            return brushToString(this.i.t9);\n        },\n        set: function (v) {\n            this.i.t9 = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"actualMarkerBrush\", {\n        /**\n         * Gets the effective marker brush for the current series object.\n        */\n        get: function () {\n            return brushToString(this.i.t7);\n        },\n        set: function (v) {\n            this.i.t7 = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerOutline\", {\n        /**\n         * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\n        */\n        get: function () {\n            return brushToString(this.i.ua);\n        },\n        set: function (v) {\n            this.i.ua = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"actualMarkerOutline\", {\n        /**\n         * Gets the effective marker outline for the current series object.\n        */\n        get: function () {\n            return brushToString(this.i.t8);\n        },\n        set: function (v) {\n            this.i.t8 = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerCollisionAvoidance\", {\n        /**\n         * The desired behavior for markers in this series which are placed too close together for the current view, resulting in a collision.\n        */\n        get: function () {\n            return this.i.ss;\n        },\n        set: function (v) {\n            this.i.ss = ensureEnum(CollisionAvoidanceType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerOutlineMode\", {\n        /**\n         * Gets or sets whether the marker outline is based on the marker brush of the series rather than the marker outlines collection.\n        */\n        get: function () {\n            return this.i.sz;\n        },\n        set: function (v) {\n            this.i.sz = ensureEnum(MarkerOutlineMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterPolygonSeries.prototype, \"markerFillMode\", {\n        /**\n         * Gets or sets whether the marker fill is based on the marker outline of the series rather than the marker brushes collection.\n        */\n        get: function () {\n            return this.i.sv;\n        },\n        set: function (v) {\n            this.i.sv = ensureEnum(MarkerFillMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrScatterPolygonSeries.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.shapeStyle && this.shapeStyle.name && this.shapeStyle.name == name) {\n            return this.shapeStyle;\n        }\n        return null;\n    };\n    return IgrScatterPolygonSeries;\n}(IgrShapeSeriesBase));\nexport { IgrScatterPolygonSeries };\n"]},"metadata":{},"sourceType":"module"}