{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { SplineSeriesBase } from \"./SplineSeriesBase\";\nimport { CategoryLineRasterizer } from \"./CategoryLineRasterizer\";\nimport { typeCast, runOn, markType } from \"igniteui-react-core\";\nimport { Path } from \"igniteui-react-core\";\nimport { ScalerParams } from \"./ScalerParams\";\nimport { SplineSeriesBaseView } from \"./SplineSeriesBaseView\";\nimport { Defaults } from \"./Defaults\";\nimport { ISortingAxis_$type } from \"./ISortingAxis\";\n/**\n * @hidden\n */\n\nvar SplineSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(SplineSeries, _super);\n\n  function SplineSeries() {\n    var _this = _super.call(this) || this;\n\n    _this.vr = null;\n    _this.vr = new CategoryLineRasterizer();\n    _this.ab = SplineSeries.$;\n    return _this;\n  }\n\n  SplineSeries.prototype.get_eg = function () {\n    return true;\n  };\n\n  SplineSeries.prototype.bx = function () {\n    return new SplineSeriesView(this);\n  };\n\n  SplineSeries.prototype.lz = function (a) {\n    _super.prototype.lz.call(this, a);\n\n    this.vs = a;\n  };\n\n  SplineSeries.prototype.preferredCategoryMode = function (a) {\n    return 0;\n  };\n\n  SplineSeries.prototype.kx = function (a, b) {\n    _super.prototype.kx.call(this, a, b);\n\n    var c = b;\n    c.dd();\n  };\n\n  SplineSeries.prototype.s7 = function (a, b) {\n    _super.prototype.s7.call(this, a, b);\n\n    var c = b;\n    var d = c.cr.d;\n    var e = typeCast(SplineSeriesView.$, b);\n    var f = a.f;\n    var g = this.getEffectiveViewport1(b);\n    this.rx.a0(this, this.sh(), runOn(this, this.ri), this.sp(b), this.sq(b));\n    var h = false;\n    var i = this.rx.b;\n\n    if (i != null) {\n      h = true;\n    }\n\n    if (h) {\n      var j = new ScalerParams(0, b.bv, b.bu, this.uo.cg, g);\n      this.s3(f, -1, this.valueColumn.count, this.uo, j, b.q);\n    }\n\n    var k = e.dj;\n    var l = e.dk;\n    var m = e.di;\n    this.rx.ad(k, true, false, true, false);\n    this.rx.ad(l, true, false, true, false);\n    this.rx.ad(m, false, true, false, false);\n    m._opacity = 0.75 * this.rx.j;\n\n    if (b.cv(a)) {\n      e.de(f.count, f, true, 1, this.tf(f, f.count - 1, b.bu, b.bv), d, this.ft);\n      b.cy(a);\n    }\n  };\n\n  Object.defineProperty(SplineSeries.prototype, \"useHighMarkerFidelity\", {\n    get: function () {\n      return this.sk;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  SplineSeries.$t = markType(SplineSeries, 'SplineSeries', SplineSeriesBase.$);\n  return SplineSeries;\n}(SplineSeriesBase);\n\nexport { SplineSeries };\n/**\n * @hidden\n */\n\nvar SplineSeriesView =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(SplineSeriesView, _super);\n\n  function SplineSeriesView(a) {\n    var _this = _super.call(this, a) || this;\n\n    _this.dc = null;\n    _this.dm = new Path();\n    _this.dl = new Path();\n    _this.dn = new Path();\n    _this.dh = new Path();\n    _this.dg = new Path();\n    _this.df = new Path();\n    _this.dc = a;\n    return _this;\n  }\n\n  SplineSeriesView.prototype.as = function () {\n    _super.prototype.as.call(this);\n\n    if (!this.q) {\n      this.dc.qd = Defaults.e;\n    }\n  };\n\n  Object.defineProperty(SplineSeriesView.prototype, \"dj\", {\n    get: function () {\n      return this.dm;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SplineSeriesView.prototype, \"dk\", {\n    get: function () {\n      return this.dn;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(SplineSeriesView.prototype, \"di\", {\n    get: function () {\n      return this.dl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  SplineSeriesView.prototype.dd = function () {\n    this.dl.ak = null;\n    this.dm.ak = null;\n    this.dn.ak = null;\n    this.aq();\n  };\n\n  SplineSeriesView.prototype.de = function (a, b, c, d, e, f, g) {\n    this.dc.vr.a = typeCast(ISortingAxis_$type, this.ct.fetchXAxis()) !== null ? true : false;\n    this.dc.vr.m(this.dm, this.dl, this.dn, a, b, c, d, e, f, g);\n    this.aq();\n  };\n\n  SplineSeriesView.prototype.bc = function () {\n    _super.prototype.bc.call(this);\n\n    this.dg.ak = this.dm.ak;\n    this.dh.ak = this.dn.ak;\n    this.df.ak = this.dl.ak;\n    var a = this.bo();\n    this.dg._stroke = a;\n    this.dg.ac = this.e.fu + 3;\n    this.dh._stroke = a;\n    this.dh.ac = this.e.fu + 3;\n    this.df._fill = a;\n    this.df._opacity = 1;\n  };\n\n  SplineSeriesView.prototype.a6 = function (a, b) {\n    _super.prototype.a6.call(this, a, b);\n\n    if (a.d) {\n      if (b) {\n        a.s(this.df);\n        a.s(this.dg);\n        a.s(this.dh);\n      } else {\n        a.s(this.dl);\n        a.s(this.dm);\n        a.s(this.dn);\n      }\n    }\n  };\n\n  SplineSeriesView.prototype.al = function (a) {\n    _super.prototype.al.call(this, a);\n\n    this.e.a8.exportPathData(a, this.dm, \"lowerShape\", [\"Lower\", \"Main\"]);\n    this.e.a8.exportPathData(a, this.dn, \"upperShape\", [\"Upper\"]);\n    this.e.a8.exportPathData(a, this.dl, \"translucentShape\", [\"Translucent\"]);\n  };\n\n  SplineSeriesView.$t = markType(SplineSeriesView, 'SplineSeriesView', SplineSeriesBaseView.$);\n  return SplineSeriesView;\n}(SplineSeriesBaseView);\n\nexport { SplineSeriesView };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/SplineSeries_combined.js"],"names":["__extends","SplineSeriesBase","CategoryLineRasterizer","typeCast","runOn","markType","Path","ScalerParams","SplineSeriesBaseView","Defaults","ISortingAxis_$type","SplineSeries","_super","_this","call","vr","ab","$","prototype","get_eg","bx","SplineSeriesView","lz","a","vs","preferredCategoryMode","kx","b","c","dd","s7","d","cr","e","f","g","getEffectiveViewport1","rx","a0","sh","ri","sp","sq","h","i","j","bv","bu","uo","cg","s3","valueColumn","count","q","k","dj","l","dk","m","di","ad","_opacity","cv","de","tf","ft","cy","Object","defineProperty","get","sk","enumerable","configurable","$t","dc","dm","dl","dn","dh","dg","df","as","qd","ak","aq","ct","fetchXAxis","bc","bo","_stroke","ac","fu","_fill","a6","s","al","a8","exportPathData"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { SplineSeriesBase } from \"./SplineSeriesBase\";\nimport { CategoryLineRasterizer } from \"./CategoryLineRasterizer\";\nimport { typeCast, runOn, markType } from \"igniteui-react-core\";\nimport { Path } from \"igniteui-react-core\";\nimport { ScalerParams } from \"./ScalerParams\";\nimport { SplineSeriesBaseView } from \"./SplineSeriesBaseView\";\nimport { Defaults } from \"./Defaults\";\nimport { ISortingAxis_$type } from \"./ISortingAxis\";\n/**\n * @hidden\n */\nvar SplineSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(SplineSeries, _super);\n    function SplineSeries() {\n        var _this = _super.call(this) || this;\n        _this.vr = null;\n        _this.vr = new CategoryLineRasterizer();\n        _this.ab = SplineSeries.$;\n        return _this;\n    }\n    SplineSeries.prototype.get_eg = function () {\n        return true;\n    };\n    SplineSeries.prototype.bx = function () {\n        return new SplineSeriesView(this);\n    };\n    SplineSeries.prototype.lz = function (a) {\n        _super.prototype.lz.call(this, a);\n        this.vs = a;\n    };\n    SplineSeries.prototype.preferredCategoryMode = function (a) {\n        return 0;\n    };\n    SplineSeries.prototype.kx = function (a, b) {\n        _super.prototype.kx.call(this, a, b);\n        var c = b;\n        c.dd();\n    };\n    SplineSeries.prototype.s7 = function (a, b) {\n        _super.prototype.s7.call(this, a, b);\n        var c = b;\n        var d = c.cr.d;\n        var e = typeCast(SplineSeriesView.$, b);\n        var f = a.f;\n        var g = this.getEffectiveViewport1(b);\n        this.rx.a0(this, this.sh(), runOn(this, this.ri), this.sp(b), this.sq(b));\n        var h = false;\n        var i = this.rx.b;\n        if (i != null) {\n            h = true;\n        }\n        if (h) {\n            var j = new ScalerParams(0, b.bv, b.bu, this.uo.cg, g);\n            this.s3(f, -1, this.valueColumn.count, this.uo, j, b.q);\n        }\n        var k = e.dj;\n        var l = e.dk;\n        var m = e.di;\n        this.rx.ad(k, true, false, true, false);\n        this.rx.ad(l, true, false, true, false);\n        this.rx.ad(m, false, true, false, false);\n        m._opacity = 0.75 * this.rx.j;\n        if (b.cv(a)) {\n            e.de(f.count, f, true, 1, this.tf(f, f.count - 1, b.bu, b.bv), d, this.ft);\n            b.cy(a);\n        }\n    };\n    Object.defineProperty(SplineSeries.prototype, \"useHighMarkerFidelity\", {\n        get: function () {\n            return this.sk;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SplineSeries.$t = markType(SplineSeries, 'SplineSeries', SplineSeriesBase.$);\n    return SplineSeries;\n}(SplineSeriesBase));\nexport { SplineSeries };\n/**\n * @hidden\n */\nvar SplineSeriesView = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(SplineSeriesView, _super);\n    function SplineSeriesView(a) {\n        var _this = _super.call(this, a) || this;\n        _this.dc = null;\n        _this.dm = new Path();\n        _this.dl = new Path();\n        _this.dn = new Path();\n        _this.dh = new Path();\n        _this.dg = new Path();\n        _this.df = new Path();\n        _this.dc = a;\n        return _this;\n    }\n    SplineSeriesView.prototype.as = function () {\n        _super.prototype.as.call(this);\n        if (!this.q) {\n            this.dc.qd = Defaults.e;\n        }\n    };\n    Object.defineProperty(SplineSeriesView.prototype, \"dj\", {\n        get: function () {\n            return this.dm;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SplineSeriesView.prototype, \"dk\", {\n        get: function () {\n            return this.dn;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(SplineSeriesView.prototype, \"di\", {\n        get: function () {\n            return this.dl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    SplineSeriesView.prototype.dd = function () {\n        this.dl.ak = null;\n        this.dm.ak = null;\n        this.dn.ak = null;\n        this.aq();\n    };\n    SplineSeriesView.prototype.de = function (a, b, c, d, e, f, g) {\n        this.dc.vr.a = typeCast(ISortingAxis_$type, this.ct.fetchXAxis()) !== null ? true : false;\n        this.dc.vr.m(this.dm, this.dl, this.dn, a, b, c, d, e, f, g);\n        this.aq();\n    };\n    SplineSeriesView.prototype.bc = function () {\n        _super.prototype.bc.call(this);\n        this.dg.ak = this.dm.ak;\n        this.dh.ak = this.dn.ak;\n        this.df.ak = this.dl.ak;\n        var a = this.bo();\n        this.dg._stroke = a;\n        this.dg.ac = this.e.fu + 3;\n        this.dh._stroke = a;\n        this.dh.ac = this.e.fu + 3;\n        this.df._fill = a;\n        this.df._opacity = 1;\n    };\n    SplineSeriesView.prototype.a6 = function (a, b) {\n        _super.prototype.a6.call(this, a, b);\n        if (a.d) {\n            if (b) {\n                a.s(this.df);\n                a.s(this.dg);\n                a.s(this.dh);\n            }\n            else {\n                a.s(this.dl);\n                a.s(this.dm);\n                a.s(this.dn);\n            }\n        }\n    };\n    SplineSeriesView.prototype.al = function (a) {\n        _super.prototype.al.call(this, a);\n        this.e.a8.exportPathData(a, this.dm, \"lowerShape\", [\"Lower\", \"Main\"]);\n        this.e.a8.exportPathData(a, this.dn, \"upperShape\", [\"Upper\"]);\n        this.e.a8.exportPathData(a, this.dl, \"translucentShape\", [\"Translucent\"]);\n    };\n    SplineSeriesView.$t = markType(SplineSeriesView, 'SplineSeriesView', SplineSeriesBaseView.$);\n    return SplineSeriesView;\n}(SplineSeriesBaseView));\nexport { SplineSeriesView };\n"]},"metadata":{},"sourceType":"module"}