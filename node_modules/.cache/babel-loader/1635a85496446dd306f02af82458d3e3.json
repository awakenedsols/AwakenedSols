{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SliceClickEventArgsDescriptionMetadata } from \"./SliceClickEventArgsDescriptionMetadata\";\nimport { HoleDimensionsChangedEventArgsDescriptionMetadata } from \"./HoleDimensionsChangedEventArgsDescriptionMetadata\";\nimport { DoughnutChartDescription } from \"./DoughnutChartDescription\";\n/**\n * @hidden\n */\n\nvar DoughnutChartDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DoughnutChartDescriptionMetadata, _super);\n\n  function DoughnutChartDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DoughnutChartDescriptionMetadata.e = function (a) {\n    a.item(\"DataSourceRef\", \"(w:ItemsSource)DataRef:String\");\n    a.item(\"_qualifiedName\", \"String:Infragistics.Controls.Charts.XamDoughnutChart\");\n    a.item(\"Background\", \"(wf:BackColor/ColorTransform)Brush\");\n    a.item(\"Width\", \"(w:Width/DimensionTransform,xam:Width/DimensionTransform)String\");\n    a.item(\"Height\", \"(w:Height/DimensionTransform,xam:Height/DimensionTransform)String\");\n  };\n\n  DoughnutChartDescriptionMetadata.b = function (a) {\n    if (DoughnutChartDescriptionMetadata.a == null) {\n      DoughnutChartDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      DoughnutChartDescriptionMetadata.c(DoughnutChartDescriptionMetadata.a);\n    }\n\n    if (a.g(DoughnutChartDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(DoughnutChartDescriptionMetadata.a);\n    SliceClickEventArgsDescriptionMetadata.d(a);\n    HoleDimensionsChangedEventArgsDescriptionMetadata.d(a);\n  };\n\n  DoughnutChartDescriptionMetadata.c = function (a) {\n    a.item(\"AllowSliceSelection\", \"Boolean\");\n    a.item(\"IsSurfaceInteractionDisabled\", \"Boolean\");\n    a.item(\"AllowSliceExplosion\", \"Boolean\");\n    a.item(\"Series\", \"Collection:RingSeriesBase:RingSeriesCollection:RingSeriesBase\");\n    a.item(\"InnerExtent\", \"Number:double\");\n    a.item(\"SelectedSliceFill\", \"(w:SelectedStyle.Fill,wf:SelectedSliceFill)String\");\n    a.item(\"SelectedSliceStroke\", \"(w:SelectedStyle.Stroke,wf:SelectedSliceStroke)String\");\n    a.item(\"SelectedSliceStrokeThickness\", \"(w:SelectedStyle.StrokeThickness,wf:SelectedSliceStrokeThickness)Number:double\");\n    a.item(\"SelectedSliceOpacity\", \"(w:SelectedStyle.Opacity,wf:SelectedSliceOpacity)Number:double\");\n    a.item(\"PixelScalingRatio\", \"Number:double\");\n    a.item(\"ActualPixelScalingRatio\", \"Number:double\");\n    a.item(\"SliceClickRef\", \"EventRef::sliceClick\");\n    a.item(\"HoleDimensionsChangedRef\", \"EventRef::holeDimensionsChanged\");\n    DoughnutChartDescriptionMetadata.e(a);\n  };\n\n  DoughnutChartDescriptionMetadata.d = function (a) {\n    DoughnutChartDescriptionMetadata.b(a);\n    a.u(\"DoughnutChart\", function () {\n      return new DoughnutChartDescription();\n    });\n    a.t(\"DoughnutChart\", DoughnutChartDescriptionMetadata.a);\n  };\n\n  DoughnutChartDescriptionMetadata.$t = markType(DoughnutChartDescriptionMetadata, 'DoughnutChartDescriptionMetadata');\n  DoughnutChartDescriptionMetadata.a = null;\n  return DoughnutChartDescriptionMetadata;\n}(Base);\n\nexport { DoughnutChartDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/DoughnutChartDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","SliceClickEventArgsDescriptionMetadata","HoleDimensionsChangedEventArgsDescriptionMetadata","DoughnutChartDescription","DoughnutChartDescriptionMetadata","_super","apply","arguments","e","a","item","b","c","g","s","d","u","t","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SliceClickEventArgsDescriptionMetadata } from \"./SliceClickEventArgsDescriptionMetadata\";\nimport { HoleDimensionsChangedEventArgsDescriptionMetadata } from \"./HoleDimensionsChangedEventArgsDescriptionMetadata\";\nimport { DoughnutChartDescription } from \"./DoughnutChartDescription\";\n/**\n * @hidden\n */\nvar DoughnutChartDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DoughnutChartDescriptionMetadata, _super);\n    function DoughnutChartDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DoughnutChartDescriptionMetadata.e = function (a) {\n        a.item(\"DataSourceRef\", \"(w:ItemsSource)DataRef:String\");\n        a.item(\"_qualifiedName\", \"String:Infragistics.Controls.Charts.XamDoughnutChart\");\n        a.item(\"Background\", \"(wf:BackColor/ColorTransform)Brush\");\n        a.item(\"Width\", \"(w:Width/DimensionTransform,xam:Width/DimensionTransform)String\");\n        a.item(\"Height\", \"(w:Height/DimensionTransform,xam:Height/DimensionTransform)String\");\n    };\n    DoughnutChartDescriptionMetadata.b = function (a) {\n        if (DoughnutChartDescriptionMetadata.a == null) {\n            DoughnutChartDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            DoughnutChartDescriptionMetadata.c(DoughnutChartDescriptionMetadata.a);\n        }\n        if (a.g(DoughnutChartDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(DoughnutChartDescriptionMetadata.a);\n        SliceClickEventArgsDescriptionMetadata.d(a);\n        HoleDimensionsChangedEventArgsDescriptionMetadata.d(a);\n    };\n    DoughnutChartDescriptionMetadata.c = function (a) {\n        a.item(\"AllowSliceSelection\", \"Boolean\");\n        a.item(\"IsSurfaceInteractionDisabled\", \"Boolean\");\n        a.item(\"AllowSliceExplosion\", \"Boolean\");\n        a.item(\"Series\", \"Collection:RingSeriesBase:RingSeriesCollection:RingSeriesBase\");\n        a.item(\"InnerExtent\", \"Number:double\");\n        a.item(\"SelectedSliceFill\", \"(w:SelectedStyle.Fill,wf:SelectedSliceFill)String\");\n        a.item(\"SelectedSliceStroke\", \"(w:SelectedStyle.Stroke,wf:SelectedSliceStroke)String\");\n        a.item(\"SelectedSliceStrokeThickness\", \"(w:SelectedStyle.StrokeThickness,wf:SelectedSliceStrokeThickness)Number:double\");\n        a.item(\"SelectedSliceOpacity\", \"(w:SelectedStyle.Opacity,wf:SelectedSliceOpacity)Number:double\");\n        a.item(\"PixelScalingRatio\", \"Number:double\");\n        a.item(\"ActualPixelScalingRatio\", \"Number:double\");\n        a.item(\"SliceClickRef\", \"EventRef::sliceClick\");\n        a.item(\"HoleDimensionsChangedRef\", \"EventRef::holeDimensionsChanged\");\n        DoughnutChartDescriptionMetadata.e(a);\n    };\n    DoughnutChartDescriptionMetadata.d = function (a) {\n        DoughnutChartDescriptionMetadata.b(a);\n        a.u(\"DoughnutChart\", function () { return new DoughnutChartDescription(); });\n        a.t(\"DoughnutChart\", DoughnutChartDescriptionMetadata.a);\n    };\n    DoughnutChartDescriptionMetadata.$t = markType(DoughnutChartDescriptionMetadata, 'DoughnutChartDescriptionMetadata');\n    DoughnutChartDescriptionMetadata.a = null;\n    return DoughnutChartDescriptionMetadata;\n}(Base));\nexport { DoughnutChartDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}