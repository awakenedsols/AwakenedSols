{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { TriangulationSourcePointRecord } from \"./TriangulationSourcePointRecord\";\nimport { Triangle } from \"./Triangle\";\nimport { Triangulator } from \"./Triangulator\";\nimport { boxArray$1 } from \"./array\";\n/**\n * @hidden\n */\n\nvar TriangulationSource =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TriangulationSource, _super);\n\n  function TriangulationSource() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._points = null;\n    _this._triangles = null;\n    return _this;\n  }\n\n  TriangulationSource.create = function (a, b, c) {\n    var d = new TriangulationSource();\n    var e = new Array(a);\n    var f;\n    var g;\n    var h = new Array(a);\n    var i = new Array(a);\n    var j = 0;\n    var k = 0;\n\n    for (var l = 0; l < a; l++) {\n      f = new TriangulationSourcePointRecord();\n      g = b(l);\n      j = g.x;\n      k = g.y;\n      f.pointX = j;\n      f.pointY = k;\n      f.value = c(l);\n      e[l] = f;\n      h[l] = j;\n      i[l] = k;\n    }\n\n    d.points = e;\n    var m = new Triangulator(a, boxArray$1(h), boxArray$1(i));\n    m.x();\n    d.triangles = m.n();\n    return d;\n  };\n\n  TriangulationSource.loadItf = function (a) {\n    a.readBytes(5);\n    var b = a.readInt32();\n    var c = a.readInt32();\n    var d = a.readInt32();\n    var e = a.readInt32();\n    a.readBytes(e);\n    var f = new TriangulationSource();\n    var g = new Array(b);\n    var h;\n\n    for (var i = 0; i < b; i++) {\n      h = new TriangulationSourcePointRecord();\n      h.pointX = a.readDouble();\n      h.pointY = a.readDouble();\n      h.value = a.readSingle();\n      g[i] = h;\n    }\n\n    f.points = g;\n    var j = new Array(c);\n    var k;\n\n    for (var l = 0; l < c; l++) {\n      k = new Triangle();\n      k.v1 = a.readInt32();\n      k.v2 = a.readInt32();\n      k.v3 = a.readInt32();\n      j[l] = k;\n    }\n\n    f.triangles = boxArray$1(j);\n    return f;\n  };\n\n  Object.defineProperty(TriangulationSource.prototype, \"points\", {\n    get: function () {\n      return this._points;\n    },\n    set: function (a) {\n      this._points = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(TriangulationSource.prototype, \"triangles\", {\n    get: function () {\n      return this._triangles;\n    },\n    set: function (a) {\n      this._triangles = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  TriangulationSource.$t = markType(TriangulationSource, 'TriangulationSource');\n  return TriangulationSource;\n}(Base);\n\nexport { TriangulationSource };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/TriangulationSource.js"],"names":["__extends","Base","markType","TriangulationSourcePointRecord","Triangle","Triangulator","boxArray$1","TriangulationSource","_super","_this","apply","arguments","_points","_triangles","create","a","b","c","d","e","Array","f","g","h","i","j","k","l","x","y","pointX","pointY","value","points","m","triangles","n","loadItf","readBytes","readInt32","readDouble","readSingle","v1","v2","v3","Object","defineProperty","prototype","get","set","enumerable","configurable","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { TriangulationSourcePointRecord } from \"./TriangulationSourcePointRecord\";\nimport { Triangle } from \"./Triangle\";\nimport { Triangulator } from \"./Triangulator\";\nimport { boxArray$1 } from \"./array\";\n/**\n * @hidden\n */\nvar TriangulationSource = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TriangulationSource, _super);\n    function TriangulationSource() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._points = null;\n        _this._triangles = null;\n        return _this;\n    }\n    TriangulationSource.create = function (a, b, c) {\n        var d = new TriangulationSource();\n        var e = new Array(a);\n        var f;\n        var g;\n        var h = new Array(a);\n        var i = new Array(a);\n        var j = 0;\n        var k = 0;\n        for (var l = 0; l < a; l++) {\n            f = new TriangulationSourcePointRecord();\n            g = b(l);\n            j = g.x;\n            k = g.y;\n            f.pointX = j;\n            f.pointY = k;\n            f.value = c(l);\n            e[l] = f;\n            h[l] = j;\n            i[l] = k;\n        }\n        d.points = e;\n        var m = new Triangulator(a, boxArray$1(h), boxArray$1(i));\n        m.x();\n        d.triangles = m.n();\n        return d;\n    };\n    TriangulationSource.loadItf = function (a) {\n        a.readBytes(5);\n        var b = a.readInt32();\n        var c = a.readInt32();\n        var d = a.readInt32();\n        var e = a.readInt32();\n        a.readBytes(e);\n        var f = new TriangulationSource();\n        var g = new Array(b);\n        var h;\n        for (var i = 0; i < b; i++) {\n            h = new TriangulationSourcePointRecord();\n            h.pointX = a.readDouble();\n            h.pointY = a.readDouble();\n            h.value = a.readSingle();\n            g[i] = h;\n        }\n        f.points = g;\n        var j = new Array(c);\n        var k;\n        for (var l = 0; l < c; l++) {\n            k = new Triangle();\n            k.v1 = a.readInt32();\n            k.v2 = a.readInt32();\n            k.v3 = a.readInt32();\n            j[l] = k;\n        }\n        f.triangles = boxArray$1(j);\n        return f;\n    };\n    Object.defineProperty(TriangulationSource.prototype, \"points\", {\n        get: function () {\n            return this._points;\n        },\n        set: function (a) {\n            this._points = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TriangulationSource.prototype, \"triangles\", {\n        get: function () {\n            return this._triangles;\n        },\n        set: function (a) {\n            this._triangles = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TriangulationSource.$t = markType(TriangulationSource, 'TriangulationSource');\n    return TriangulationSource;\n}(Base));\nexport { TriangulationSource };\n"]},"metadata":{},"sourceType":"module"}