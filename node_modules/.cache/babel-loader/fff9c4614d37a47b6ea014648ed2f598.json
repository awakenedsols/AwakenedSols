{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgCollection } from \"igniteui-react-core\";\nimport { markType } from \"igniteui-react-core\";\nimport { SyncableObservableCollection$2 } from \"igniteui-react-core\";\nimport { IAxisAnnotation_$type } from './IAxisAnnotation';\nimport { IgrAxisAnnotation } from './igr-axis-annotation';\n\nvar IgrAxisAnnotationCollection =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrAxisAnnotationCollection, _super);\n\n  function IgrAxisAnnotationCollection(list) {\n    var _this = _super.call(this) || this;\n\n    if (!IgrAxisAnnotation.$type) {\n      IgrAxisAnnotation.$type = markType(IgrAxisAnnotation, \"AxisAnnotation\");\n    }\n\n    if (list) {\n      for (var i = 0; i < list.length; i++) {\n        _this.add(list[i]);\n      }\n    }\n\n    return _this;\n  }\n\n  IgrAxisAnnotationCollection.prototype._createInnerColl = function () {\n    if (!IgrAxisAnnotation.$type) {\n      IgrAxisAnnotation.$type = markType(IgrAxisAnnotation, \"AxisAnnotation\");\n    }\n\n    var coll = new SyncableObservableCollection$2(IgrAxisAnnotation.$type, IAxisAnnotation_$type, 0);\n\n    coll.compare = function (ext, int) {\n      var comp = ext;\n\n      if (comp._implementation) {\n        comp = comp._implementation;\n      }\n\n      if (comp.equals) {\n        return comp.equals(int);\n      }\n\n      return comp === int;\n    };\n\n    coll.createTo = function (ext) {\n      return ext._implementation;\n    };\n\n    coll.createFrom = function (int) {\n      var ext = int.externalObject;\n\n      if (!ext) {\n        ext = new IgrAxisAnnotation();\n        ext._implementation = int;\n      }\n\n      return ext;\n    };\n\n    return coll;\n  };\n\n  return IgrAxisAnnotationCollection;\n}(IgCollection);\n\nexport { IgrAxisAnnotationCollection };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-axis-annotation-collection.js"],"names":["__extends","IgCollection","markType","SyncableObservableCollection$2","IAxisAnnotation_$type","IgrAxisAnnotation","IgrAxisAnnotationCollection","_super","list","_this","call","$type","i","length","add","prototype","_createInnerColl","coll","compare","ext","int","comp","_implementation","equals","createTo","createFrom","externalObject"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,8BAAT,QAA+C,qBAA/C;AACA,SAASC,qBAAT,QAAsC,mBAAtC;AACA,SAASC,iBAAT,QAAkC,uBAAlC;;AACA,IAAIC,2BAA2B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC7EP,EAAAA,SAAS,CAACM,2BAAD,EAA8BC,MAA9B,CAAT;;AACA,WAASD,2BAAT,CAAqCE,IAArC,EAA2C;AACvC,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACA,QAAI,CAACL,iBAAiB,CAACM,KAAvB,EAA8B;AAC1BN,MAAAA,iBAAiB,CAACM,KAAlB,GAA0BT,QAAQ,CAACG,iBAAD,EAAoB,gBAApB,CAAlC;AACH;;AACD,QAAIG,IAAJ,EAAU;AACN,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCH,QAAAA,KAAK,CAACK,GAAN,CAAUN,IAAI,CAACI,CAAD,CAAd;AACH;AACJ;;AACD,WAAOH,KAAP;AACH;;AACDH,EAAAA,2BAA2B,CAACS,SAA5B,CAAsCC,gBAAtC,GAAyD,YAAY;AACjE,QAAI,CAACX,iBAAiB,CAACM,KAAvB,EAA8B;AAC1BN,MAAAA,iBAAiB,CAACM,KAAlB,GAA0BT,QAAQ,CAACG,iBAAD,EAAoB,gBAApB,CAAlC;AACH;;AACD,QAAIY,IAAI,GAAG,IAAId,8BAAJ,CAAmCE,iBAAiB,CAACM,KAArD,EAA4DP,qBAA5D,EAAmF,CAAnF,CAAX;;AACAa,IAAAA,IAAI,CAACC,OAAL,GAAe,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/B,UAAIC,IAAI,GAAGF,GAAX;;AACA,UAAIE,IAAI,CAACC,eAAT,EAA0B;AACtBD,QAAAA,IAAI,GAAGA,IAAI,CAACC,eAAZ;AACH;;AACD,UAAID,IAAI,CAACE,MAAT,EAAiB;AACb,eAAOF,IAAI,CAACE,MAAL,CAAYH,GAAZ,CAAP;AACH;;AACD,aAAOC,IAAI,KAAKD,GAAhB;AACH,KATD;;AAUAH,IAAAA,IAAI,CAACO,QAAL,GAAgB,UAAUL,GAAV,EAAe;AAC3B,aAAOA,GAAG,CAACG,eAAX;AACH,KAFD;;AAGAL,IAAAA,IAAI,CAACQ,UAAL,GAAkB,UAAUL,GAAV,EAAe;AAC7B,UAAID,GAAG,GAAGC,GAAG,CAACM,cAAd;;AACA,UAAI,CAACP,GAAL,EAAU;AACNA,QAAAA,GAAG,GAAG,IAAId,iBAAJ,EAAN;AACAc,QAAAA,GAAG,CAACG,eAAJ,GAAsBF,GAAtB;AACH;;AACD,aAAOD,GAAP;AACH,KAPD;;AAQA,WAAOF,IAAP;AACH,GA3BD;;AA4BA,SAAOX,2BAAP;AACH,CA3C8D,CA2C7DL,YA3C6D,CAA/D;;AA4CA,SAASK,2BAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgCollection } from \"igniteui-react-core\";\nimport { markType } from \"igniteui-react-core\";\nimport { SyncableObservableCollection$2 } from \"igniteui-react-core\";\nimport { IAxisAnnotation_$type } from './IAxisAnnotation';\nimport { IgrAxisAnnotation } from './igr-axis-annotation';\nvar IgrAxisAnnotationCollection = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrAxisAnnotationCollection, _super);\n    function IgrAxisAnnotationCollection(list) {\n        var _this = _super.call(this) || this;\n        if (!IgrAxisAnnotation.$type) {\n            IgrAxisAnnotation.$type = markType(IgrAxisAnnotation, \"AxisAnnotation\");\n        }\n        if (list) {\n            for (var i = 0; i < list.length; i++) {\n                _this.add(list[i]);\n            }\n        }\n        return _this;\n    }\n    IgrAxisAnnotationCollection.prototype._createInnerColl = function () {\n        if (!IgrAxisAnnotation.$type) {\n            IgrAxisAnnotation.$type = markType(IgrAxisAnnotation, \"AxisAnnotation\");\n        }\n        var coll = new SyncableObservableCollection$2(IgrAxisAnnotation.$type, IAxisAnnotation_$type, 0);\n        coll.compare = function (ext, int) {\n            var comp = ext;\n            if (comp._implementation) {\n                comp = comp._implementation;\n            }\n            if (comp.equals) {\n                return comp.equals(int);\n            }\n            return comp === int;\n        };\n        coll.createTo = function (ext) {\n            return ext._implementation;\n        };\n        coll.createFrom = function (int) {\n            var ext = int.externalObject;\n            if (!ext) {\n                ext = new IgrAxisAnnotation();\n                ext._implementation = int;\n            }\n            return ext;\n        };\n        return coll;\n    };\n    return IgrAxisAnnotationCollection;\n}(IgCollection));\nexport { IgrAxisAnnotationCollection };\n"]},"metadata":{},"sourceType":"module"}