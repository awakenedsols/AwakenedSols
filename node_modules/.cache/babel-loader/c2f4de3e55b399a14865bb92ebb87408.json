{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgCollection } from \"igniteui-react-core\";\nimport { markType } from \"igniteui-react-core\";\nimport { SyncableObservableCollection$2 } from \"igniteui-react-core\";\nimport { Series as Series_internal } from './Series';\nimport { IgrSeries } from './igr-series';\n\nvar IgrSeriesCollection =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrSeriesCollection, _super);\n\n  function IgrSeriesCollection(list) {\n    var _this = _super.call(this) || this;\n\n    if (!IgrSeries.$type) {\n      IgrSeries.$type = markType(IgrSeries, \"IgrSeries\");\n    }\n\n    if (list) {\n      for (var i = 0; i < list.length; i++) {\n        _this.add(list[i]);\n      }\n    }\n\n    return _this;\n  }\n\n  IgrSeriesCollection.prototype._createInnerColl = function () {\n    if (!IgrSeries.$type) {\n      IgrSeries.$type = markType(IgrSeries, \"IgrSeries\");\n    }\n\n    var coll = new SyncableObservableCollection$2(IgrSeries.$type, Series_internal.$type, 0);\n\n    coll.compare = function (ext, int) {\n      var comp = ext;\n\n      if (comp._implementation) {\n        comp = comp._implementation;\n      }\n\n      if (comp.equals) {\n        return comp.equals(int);\n      }\n\n      return comp === int;\n    };\n\n    coll.createTo = function (ext) {\n      return ext._implementation;\n    };\n\n    coll.createFrom = function (int) {\n      var ext = int.externalObject;\n\n      if (!ext) {\n        ext = IgrSeries._createFromInternal(int);\n\n        if (ext) {\n          ext._implementation = int;\n        }\n      }\n\n      return ext;\n    };\n\n    return coll;\n  };\n\n  return IgrSeriesCollection;\n}(IgCollection);\n\nexport { IgrSeriesCollection };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-series-collection.js"],"names":["__extends","IgCollection","markType","SyncableObservableCollection$2","Series","Series_internal","IgrSeries","IgrSeriesCollection","_super","list","_this","call","$type","i","length","add","prototype","_createInnerColl","coll","compare","ext","int","comp","_implementation","equals","createTo","createFrom","externalObject","_createFromInternal"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,8BAAT,QAA+C,qBAA/C;AACA,SAASC,MAAM,IAAIC,eAAnB,QAA0C,UAA1C;AACA,SAASC,SAAT,QAAuC,cAAvC;;AACA,IAAIC,mBAAmB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACrER,EAAAA,SAAS,CAACO,mBAAD,EAAsBC,MAAtB,CAAT;;AACA,WAASD,mBAAT,CAA6BE,IAA7B,EAAmC;AAC/B,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACA,QAAI,CAACL,SAAS,CAACM,KAAf,EAAsB;AAClBN,MAAAA,SAAS,CAACM,KAAV,GAAkBV,QAAQ,CAACI,SAAD,EAAY,WAAZ,CAA1B;AACH;;AACD,QAAIG,IAAJ,EAAU;AACN,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCH,QAAAA,KAAK,CAACK,GAAN,CAAUN,IAAI,CAACI,CAAD,CAAd;AACH;AACJ;;AACD,WAAOH,KAAP;AACH;;AACDH,EAAAA,mBAAmB,CAACS,SAApB,CAA8BC,gBAA9B,GAAiD,YAAY;AACzD,QAAI,CAACX,SAAS,CAACM,KAAf,EAAsB;AAClBN,MAAAA,SAAS,CAACM,KAAV,GAAkBV,QAAQ,CAACI,SAAD,EAAY,WAAZ,CAA1B;AACH;;AACD,QAAIY,IAAI,GAAG,IAAIf,8BAAJ,CAAmCG,SAAS,CAACM,KAA7C,EAAoDP,eAAe,CAACO,KAApE,EAA2E,CAA3E,CAAX;;AACAM,IAAAA,IAAI,CAACC,OAAL,GAAe,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/B,UAAIC,IAAI,GAAGF,GAAX;;AACA,UAAIE,IAAI,CAACC,eAAT,EAA0B;AACtBD,QAAAA,IAAI,GAAGA,IAAI,CAACC,eAAZ;AACH;;AACD,UAAID,IAAI,CAACE,MAAT,EAAiB;AACb,eAAOF,IAAI,CAACE,MAAL,CAAYH,GAAZ,CAAP;AACH;;AACD,aAAOC,IAAI,KAAKD,GAAhB;AACH,KATD;;AAUAH,IAAAA,IAAI,CAACO,QAAL,GAAgB,UAAUL,GAAV,EAAe;AAC3B,aAAOA,GAAG,CAACG,eAAX;AACH,KAFD;;AAGAL,IAAAA,IAAI,CAACQ,UAAL,GAAkB,UAAUL,GAAV,EAAe;AAC7B,UAAID,GAAG,GAAGC,GAAG,CAACM,cAAd;;AACA,UAAI,CAACP,GAAL,EAAU;AACNA,QAAAA,GAAG,GAAGd,SAAS,CAACsB,mBAAV,CAA8BP,GAA9B,CAAN;;AACA,YAAID,GAAJ,EAAS;AACLA,UAAAA,GAAG,CAACG,eAAJ,GAAsBF,GAAtB;AACH;AACJ;;AACD,aAAOD,GAAP;AACH,KATD;;AAUA,WAAOF,IAAP;AACH,GA7BD;;AA8BA,SAAOX,mBAAP;AACH,CA7CsD,CA6CrDN,YA7CqD,CAAvD;;AA8CA,SAASM,mBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgCollection } from \"igniteui-react-core\";\nimport { markType } from \"igniteui-react-core\";\nimport { SyncableObservableCollection$2 } from \"igniteui-react-core\";\nimport { Series as Series_internal } from './Series';\nimport { IgrSeries as IgrSeries } from './igr-series';\nvar IgrSeriesCollection = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrSeriesCollection, _super);\n    function IgrSeriesCollection(list) {\n        var _this = _super.call(this) || this;\n        if (!IgrSeries.$type) {\n            IgrSeries.$type = markType(IgrSeries, \"IgrSeries\");\n        }\n        if (list) {\n            for (var i = 0; i < list.length; i++) {\n                _this.add(list[i]);\n            }\n        }\n        return _this;\n    }\n    IgrSeriesCollection.prototype._createInnerColl = function () {\n        if (!IgrSeries.$type) {\n            IgrSeries.$type = markType(IgrSeries, \"IgrSeries\");\n        }\n        var coll = new SyncableObservableCollection$2(IgrSeries.$type, Series_internal.$type, 0);\n        coll.compare = function (ext, int) {\n            var comp = ext;\n            if (comp._implementation) {\n                comp = comp._implementation;\n            }\n            if (comp.equals) {\n                return comp.equals(int);\n            }\n            return comp === int;\n        };\n        coll.createTo = function (ext) {\n            return ext._implementation;\n        };\n        coll.createFrom = function (int) {\n            var ext = int.externalObject;\n            if (!ext) {\n                ext = IgrSeries._createFromInternal(int);\n                if (ext) {\n                    ext._implementation = int;\n                }\n            }\n            return ext;\n        };\n        return coll;\n    };\n    return IgrSeriesCollection;\n}(IgCollection));\nexport { IgrSeriesCollection };\n"]},"metadata":{},"sourceType":"module"}