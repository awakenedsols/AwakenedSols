{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrValueBrushScale } from \"./igr-value-brush-scale\";\nimport { IgrContourValueResolver } from \"./igr-contour-value-resolver\";\nimport { IgrScatterTriangulationSeries } from \"./igr-scatter-triangulation-series\";\nimport { ScatterContourSeries } from \"./ScatterContourSeries\";\n/**\n * Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.\n*/\n\nvar IgrScatterContourSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrScatterContourSeries, _super);\n\n  function IgrScatterContourSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrScatterContourSeries.prototype.createImplementation = function () {\n    return new ScatterContourSeries();\n  };\n\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"isLineContour\", {\n    /**\n     * Gets whether the current series shows a line contour shape.\n    */\n    get: function () {\n      return this.i.d0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"valueMemberPath\", {\n    /**\n     * Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.\n    */\n    get: function () {\n      return this.i.sb;\n    },\n    set: function (v) {\n      this.i.sb = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"valueMemberAsLegendLabel\", {\n    /**\n     * Gets or sets the label displayed before series value in the Data Legend.\n    */\n    get: function () {\n      return this.i.r7;\n    },\n    set: function (v) {\n      this.i.r7 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"valueMemberAsLegendUnit\", {\n    /**\n     * Gets or sets the unit displayed after series value in the Data Legend.\n    */\n    get: function () {\n      return this.i.r9;\n    },\n    set: function (v) {\n      this.i.r9 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"fillScale\", {\n    /**\n     * Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\n    */\n    get: function () {\n      if (this.i.r1 == null) {\n        return null;\n      }\n\n      if (!this.i.r1.externalObject) {\n        var e = IgrValueBrushScale._createFromInternal(this.i.r1);\n\n        if (e) {\n          e._implementation = this.i.r1;\n        }\n\n        this.i.r1.externalObject = e;\n      }\n\n      return this.i.r1.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.r1 = null : this.i.r1 = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"actualFillScale\", {\n    /**\n     * Gets actual fill scale that is set on the FillScale property or default FillScale\n    */\n    get: function () {\n      if (this.i.r0 == null) {\n        return null;\n      }\n\n      if (!this.i.r0.externalObject) {\n        var e = IgrValueBrushScale._createFromInternal(this.i.r0);\n\n        if (e) {\n          e._implementation = this.i.r0;\n        }\n\n        this.i.r0.externalObject = e;\n      }\n\n      return this.i.r0.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.r0 = null : this.i.r0 = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrScatterContourSeries.prototype, \"valueResolver\", {\n    /**\n     * Gets or set the ContourValueResolver used to determine the numeric values of contours.\n    */\n    get: function () {\n      if (this.i.ry == null) {\n        return null;\n      }\n\n      if (!this.i.ry.externalObject) {\n        var e = IgrContourValueResolver._createFromInternal(this.i.ry);\n\n        if (e) {\n          e._implementation = this.i.ry;\n        }\n\n        this.i.ry.externalObject = e;\n      }\n\n      return this.i.ry.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.ry = null : this.i.ry = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrScatterContourSeries.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.fillScale && this.fillScale.name && this.fillScale.name == name) {\n      return this.fillScale;\n    }\n\n    if (this.actualFillScale && this.actualFillScale.name && this.actualFillScale.name == name) {\n      return this.actualFillScale;\n    }\n\n    if (this.valueResolver && this.valueResolver.name && this.valueResolver.name == name) {\n      return this.valueResolver;\n    }\n\n    return null;\n  };\n\n  IgrScatterContourSeries.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.fillScale && this.fillScale._styling) {\n      this.fillScale._styling(container, component, this);\n    }\n\n    if (this.actualFillScale && this.actualFillScale._styling) {\n      this.actualFillScale._styling(container, component, this);\n    }\n\n    if (this.valueResolver && this.valueResolver._styling) {\n      this.valueResolver._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n\n  IgrScatterContourSeries.prototype.getItemValue = function (item, memberPathName) {\n    var iv = this.i.hw(item, memberPathName);\n    return iv;\n  };\n\n  return IgrScatterContourSeries;\n}(IgrScatterTriangulationSeries);\n\nexport { IgrScatterContourSeries };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-scatter-contour-series.js"],"names":["__extends","IgrValueBrushScale","IgrContourValueResolver","IgrScatterTriangulationSeries","ScatterContourSeries","IgrScatterContourSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","d0","sb","set","v","r7","r9","r1","externalObject","e","_createFromInternal","_stylingContainer","_styling","r0","ry","findByName","name","baseResult","fillScale","actualFillScale","valueResolver","container","component","parent","_inStyling","getItemValue","item","memberPathName","iv","hw"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrValueBrushScale } from \"./igr-value-brush-scale\";\nimport { IgrContourValueResolver } from \"./igr-contour-value-resolver\";\nimport { IgrScatterTriangulationSeries } from \"./igr-scatter-triangulation-series\";\nimport { ScatterContourSeries } from \"./ScatterContourSeries\";\n/**\n * Series class for rendering isarithmic contours based on a triangulation of X+Y+Value points in the ItemsSource.\n*/\nvar IgrScatterContourSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrScatterContourSeries, _super);\n    function IgrScatterContourSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrScatterContourSeries.prototype.createImplementation = function () {\n        return new ScatterContourSeries();\n    };\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"isLineContour\", {\n        /**\n         * Gets whether the current series shows a line contour shape.\n        */\n        get: function () {\n            return this.i.d0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"valueMemberPath\", {\n        /**\n         * Gets or set the name of the property from which to retrieve the numeric values from the ItemsSource items.\n        */\n        get: function () {\n            return this.i.sb;\n        },\n        set: function (v) {\n            this.i.sb = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"valueMemberAsLegendLabel\", {\n        /**\n         * Gets or sets the label displayed before series value in the Data Legend.\n        */\n        get: function () {\n            return this.i.r7;\n        },\n        set: function (v) {\n            this.i.r7 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"valueMemberAsLegendUnit\", {\n        /**\n         * Gets or sets the unit displayed after series value in the Data Legend.\n        */\n        get: function () {\n            return this.i.r9;\n        },\n        set: function (v) {\n            this.i.r9 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"fillScale\", {\n        /**\n         * Gets or sets the ValueBrushScale to use when determining Brushes for each contour line, based on the values found in ValueMemberPath.\n        */\n        get: function () {\n            if (this.i.r1 == null) {\n                return null;\n            }\n            if (!this.i.r1.externalObject) {\n                var e = IgrValueBrushScale._createFromInternal(this.i.r1);\n                if (e) {\n                    e._implementation = this.i.r1;\n                }\n                this.i.r1.externalObject = e;\n            }\n            return this.i.r1.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.r1 = null : this.i.r1 = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"actualFillScale\", {\n        /**\n         * Gets actual fill scale that is set on the FillScale property or default FillScale\n        */\n        get: function () {\n            if (this.i.r0 == null) {\n                return null;\n            }\n            if (!this.i.r0.externalObject) {\n                var e = IgrValueBrushScale._createFromInternal(this.i.r0);\n                if (e) {\n                    e._implementation = this.i.r0;\n                }\n                this.i.r0.externalObject = e;\n            }\n            return this.i.r0.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.r0 = null : this.i.r0 = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrScatterContourSeries.prototype, \"valueResolver\", {\n        /**\n         * Gets or set the ContourValueResolver used to determine the numeric values of contours.\n        */\n        get: function () {\n            if (this.i.ry == null) {\n                return null;\n            }\n            if (!this.i.ry.externalObject) {\n                var e = IgrContourValueResolver._createFromInternal(this.i.ry);\n                if (e) {\n                    e._implementation = this.i.ry;\n                }\n                this.i.ry.externalObject = e;\n            }\n            return this.i.ry.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.ry = null : this.i.ry = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrScatterContourSeries.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.fillScale && this.fillScale.name && this.fillScale.name == name) {\n            return this.fillScale;\n        }\n        if (this.actualFillScale && this.actualFillScale.name && this.actualFillScale.name == name) {\n            return this.actualFillScale;\n        }\n        if (this.valueResolver && this.valueResolver.name && this.valueResolver.name == name) {\n            return this.valueResolver;\n        }\n        return null;\n    };\n    IgrScatterContourSeries.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.fillScale && this.fillScale._styling) {\n            this.fillScale._styling(container, component, this);\n        }\n        if (this.actualFillScale && this.actualFillScale._styling) {\n            this.actualFillScale._styling(container, component, this);\n        }\n        if (this.valueResolver && this.valueResolver._styling) {\n            this.valueResolver._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    IgrScatterContourSeries.prototype.getItemValue = function (item, memberPathName) {\n        var iv = this.i.hw(item, memberPathName);\n        return (iv);\n    };\n    return IgrScatterContourSeries;\n}(IgrScatterTriangulationSeries));\nexport { IgrScatterContourSeries };\n"]},"metadata":{},"sourceType":"module"}