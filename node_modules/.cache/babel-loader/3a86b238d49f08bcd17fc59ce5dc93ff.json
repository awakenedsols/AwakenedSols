{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrVerticalStackedSeriesBase } from \"./igr-vertical-stacked-series-base\";\nimport { StackedBarSeries } from \"./StackedBarSeries\";\nimport { toPoint } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent stacked bar series.\n*/\n\nvar IgrStackedBarSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrStackedBarSeries, _super);\n\n  function IgrStackedBarSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrStackedBarSeries.prototype.createImplementation = function () {\n    return new StackedBarSeries();\n  };\n\n  Object.defineProperty(IgrStackedBarSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedBarSeries.prototype, \"isBar\", {\n    /**\n     * Gets whether the current series shows a bar shape.\n    */\n    get: function () {\n      return this.i.df;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedBarSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n    /**\n     * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n    */\n    get: function () {\n      return this.i.d2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedBarSeries.prototype, \"radiusX\", {\n    /**\n     * Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.\n    */\n    get: function () {\n      return this.i.un;\n    },\n    set: function (v) {\n      this.i.un = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedBarSeries.prototype, \"radiusY\", {\n    /**\n     * Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.\n    */\n    get: function () {\n      return this.i.uo;\n    },\n    set: function (v) {\n      this.i.uo = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Scrolls the series to display the item for the specified data item.\n   * The series is scrolled by the minimum amount required to place the specified data item within\n   * the central 80% of the visible axis.\n  \r\n  * @param item  * The data item (item) to scroll to.\n  */\n\n  IgrStackedBarSeries.prototype.scrollIntoView = function (item) {\n    var iv = this.i.en(item);\n    return iv;\n  };\n  /**\n   * Gets the index of the item that resides at the provided world coordinates.\n  \r\n  * @param world  * The world coordinates of the requested item.\n  */\n\n\n  IgrStackedBarSeries.prototype.getItemIndex = function (world) {\n    var iv = this.i.hd(toPoint(world));\n    return iv;\n  };\n  /**\n   * Gets the item that is the best match for the specified world coordinates.\n  \r\n  * @param world  * The world coordinates to use.\n  */\n\n\n  IgrStackedBarSeries.prototype.getItem = function (world) {\n    var iv = this.i.ht(toPoint(world));\n    return iv;\n  };\n  /**\n   * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n  \r\n  */\n\n\n  IgrStackedBarSeries.prototype.getItemSpan = function () {\n    var iv = this.i.ga();\n    return iv;\n  };\n\n  return IgrStackedBarSeries;\n}(IgrVerticalStackedSeriesBase);\n\nexport { IgrStackedBarSeries };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-stacked-bar-series.js"],"names":["__extends","IgrVerticalStackedSeriesBase","StackedBarSeries","toPoint","IgrStackedBarSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","df","d2","un","set","v","uo","scrollIntoView","item","iv","en","getItemIndex","world","hd","getItem","ht","getItemSpan","ga"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrVerticalStackedSeriesBase } from \"./igr-vertical-stacked-series-base\";\nimport { StackedBarSeries } from \"./StackedBarSeries\";\nimport { toPoint } from \"igniteui-react-core\";\n/**\n * Represents a IgxDataChartComponent stacked bar series.\n*/\nvar IgrStackedBarSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrStackedBarSeries, _super);\n    function IgrStackedBarSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrStackedBarSeries.prototype.createImplementation = function () {\n        return new StackedBarSeries();\n    };\n    Object.defineProperty(IgrStackedBarSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedBarSeries.prototype, \"isBar\", {\n        /**\n         * Gets whether the current series shows a bar shape.\n        */\n        get: function () {\n            return this.i.df;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedBarSeries.prototype, \"isMarkerlessDisplayPreferred\", {\n        /**\n         * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n        */\n        get: function () {\n            return this.i.d2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedBarSeries.prototype, \"radiusX\", {\n        /**\n         * Gets or sets the x-radius of the ellipse that is used to round the corners of the bar.\n        */\n        get: function () {\n            return this.i.un;\n        },\n        set: function (v) {\n            this.i.un = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedBarSeries.prototype, \"radiusY\", {\n        /**\n         * Gets or sets the y-radius of the ellipse that is used to round the corners of the bar.\n        */\n        get: function () {\n            return this.i.uo;\n        },\n        set: function (v) {\n            this.i.uo = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Scrolls the series to display the item for the specified data item.\n     * The series is scrolled by the minimum amount required to place the specified data item within\n     * the central 80% of the visible axis.\n    \r\n    * @param item  * The data item (item) to scroll to.\n    */\n    IgrStackedBarSeries.prototype.scrollIntoView = function (item) {\n        var iv = this.i.en(item);\n        return (iv);\n    };\n    /**\n     * Gets the index of the item that resides at the provided world coordinates.\n    \r\n    * @param world  * The world coordinates of the requested item.\n    */\n    IgrStackedBarSeries.prototype.getItemIndex = function (world) {\n        var iv = this.i.hd(toPoint(world));\n        return (iv);\n    };\n    /**\n     * Gets the item that is the best match for the specified world coordinates.\n    \r\n    * @param world  * The world coordinates to use.\n    */\n    IgrStackedBarSeries.prototype.getItem = function (world) {\n        var iv = this.i.ht(toPoint(world));\n        return (iv);\n    };\n    /**\n     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n    \r\n    */\n    IgrStackedBarSeries.prototype.getItemSpan = function () {\n        var iv = this.i.ga();\n        return (iv);\n    };\n    return IgrStackedBarSeries;\n}(IgrVerticalStackedSeriesBase));\nexport { IgrStackedBarSeries };\n"]},"metadata":{},"sourceType":"module"}