{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgCollection } from './IgCollection';\nimport { SyncableObservableCollection$2 } from './SyncableObservableCollection$2';\nimport { markType } from './type';\nimport { DataSeries } from './DataSeries';\n\nvar IgrDataSeriesCollection =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrDataSeriesCollection, _super);\n\n  function IgrDataSeriesCollection(list) {\n    var _this = _super.call(this) || this;\n\n    if (!DataSeries.$type) {\n      DataSeries.$type = markType(DataSeries, \"DataSeries\");\n    }\n\n    if (list) {\n      for (var i = 0; i < list.length; i++) {\n        _this.add(list[i]);\n      }\n    }\n\n    return _this;\n  }\n\n  IgrDataSeriesCollection.prototype._createInnerColl = function () {\n    if (!DataSeries.$type) {\n      DataSeries.$type = markType(DataSeries, \"DataSeries\");\n    }\n\n    var coll = new SyncableObservableCollection$2(DataSeries.$type, DataSeries.$type, 0);\n\n    coll.compare = function (ext, int) {\n      var comp = ext;\n\n      if (comp.equals) {\n        return comp.equals(int);\n      }\n\n      return comp === int;\n    };\n\n    coll.createTo = function (ext) {\n      return ext;\n    };\n\n    coll.createFrom = function (int) {\n      return int;\n    };\n\n    return coll;\n  };\n\n  return IgrDataSeriesCollection;\n}(IgCollection);\n\nexport { IgrDataSeriesCollection };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/igr-data-series-collection.js"],"names":["__extends","IgCollection","SyncableObservableCollection$2","markType","DataSeries","IgrDataSeriesCollection","_super","list","_this","call","$type","i","length","add","prototype","_createInnerColl","coll","compare","ext","int","comp","equals","createTo","createFrom"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,8BAAT,QAA+C,kCAA/C;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;;AACA,IAAIC,uBAAuB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACzEN,EAAAA,SAAS,CAACK,uBAAD,EAA0BC,MAA1B,CAAT;;AACA,WAASD,uBAAT,CAAiCE,IAAjC,EAAuC;AACnC,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACA,QAAI,CAACL,UAAU,CAACM,KAAhB,EAAuB;AACnBN,MAAAA,UAAU,CAACM,KAAX,GAAmBP,QAAQ,CAACC,UAAD,EAAa,YAAb,CAA3B;AACH;;AACD,QAAIG,IAAJ,EAAU;AACN,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCH,QAAAA,KAAK,CAACK,GAAN,CAAUN,IAAI,CAACI,CAAD,CAAd;AACH;AACJ;;AACD,WAAOH,KAAP;AACH;;AACDH,EAAAA,uBAAuB,CAACS,SAAxB,CAAkCC,gBAAlC,GAAqD,YAAY;AAC7D,QAAI,CAACX,UAAU,CAACM,KAAhB,EAAuB;AACnBN,MAAAA,UAAU,CAACM,KAAX,GAAmBP,QAAQ,CAACC,UAAD,EAAa,YAAb,CAA3B;AACH;;AACD,QAAIY,IAAI,GAAG,IAAId,8BAAJ,CAAmCE,UAAU,CAACM,KAA9C,EAAqDN,UAAU,CAACM,KAAhE,EAAuE,CAAvE,CAAX;;AACAM,IAAAA,IAAI,CAACC,OAAL,GAAe,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/B,UAAIC,IAAI,GAAGF,GAAX;;AACA,UAAIE,IAAI,CAACC,MAAT,EAAiB;AACb,eAAOD,IAAI,CAACC,MAAL,CAAYF,GAAZ,CAAP;AACH;;AACD,aAAOC,IAAI,KAAKD,GAAhB;AACH,KAND;;AAOAH,IAAAA,IAAI,CAACM,QAAL,GAAgB,UAAUJ,GAAV,EAAe;AAC3B,aAAOA,GAAP;AACH,KAFD;;AAGAF,IAAAA,IAAI,CAACO,UAAL,GAAkB,UAAUJ,GAAV,EAAe;AAC7B,aAAOA,GAAP;AACH,KAFD;;AAGA,WAAOH,IAAP;AACH,GAnBD;;AAoBA,SAAOX,uBAAP;AACH,CAnC0D,CAmCzDJ,YAnCyD,CAA3D;;AAoCA,SAASI,uBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgCollection } from './IgCollection';\nimport { SyncableObservableCollection$2 } from './SyncableObservableCollection$2';\nimport { markType } from './type';\nimport { DataSeries } from './DataSeries';\nvar IgrDataSeriesCollection = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrDataSeriesCollection, _super);\n    function IgrDataSeriesCollection(list) {\n        var _this = _super.call(this) || this;\n        if (!DataSeries.$type) {\n            DataSeries.$type = markType(DataSeries, \"DataSeries\");\n        }\n        if (list) {\n            for (var i = 0; i < list.length; i++) {\n                _this.add(list[i]);\n            }\n        }\n        return _this;\n    }\n    IgrDataSeriesCollection.prototype._createInnerColl = function () {\n        if (!DataSeries.$type) {\n            DataSeries.$type = markType(DataSeries, \"DataSeries\");\n        }\n        var coll = new SyncableObservableCollection$2(DataSeries.$type, DataSeries.$type, 0);\n        coll.compare = function (ext, int) {\n            var comp = ext;\n            if (comp.equals) {\n                return comp.equals(int);\n            }\n            return comp === int;\n        };\n        coll.createTo = function (ext) {\n            return ext;\n        };\n        coll.createFrom = function (int) {\n            return int;\n        };\n        return coll;\n    };\n    return IgrDataSeriesCollection;\n}(IgCollection));\nexport { IgrDataSeriesCollection };\n"]},"metadata":{},"sourceType":"module"}