{"ast":null,"code":"import { __extends, __values } from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { MarkerType_$type } from \"./MarkerType\";\nimport { IgrPropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { StackedFragmentSeries } from \"./StackedFragmentSeries\";\nimport { getModifiedProps, isValidProp, brushToString, stringToBrush, ensureBool, colorToString, stringToColor, ensureEnum, toSpinal, initializePropertiesFromCss, NamePatcher, fromPoint, toPoint, fromRect } from \"igniteui-react-core\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { SeriesOutlineMode_$type } from './SeriesOutlineMode';\nimport { LegendItemBadgeMode_$type } from \"igniteui-react-core\";\nimport { LegendItemBadgeShape_$type } from \"igniteui-react-core\";\nimport { CategoryTransitionInMode_$type } from './CategoryTransitionInMode';\nimport { TransitionInSpeedType_$type } from './TransitionInSpeedType';\n/**\n * Represents a non-visual child of StackedSeriesBase.\n*/\n\nvar IgrStackedFragmentSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrStackedFragmentSeries, _super);\n\n  function IgrStackedFragmentSeries(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this.__p = null;\n    _this._hasUserValues = new Set();\n    _this._stylingContainer = null;\n    _this._stylingParent = null;\n    _this._inStyling = false;\n    _this._propertyUpdated = null;\n    _this._propertyUpdated_wrapped = null;\n\n    if (_this._styling) {\n      NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n    }\n\n    _this._implementation = _this.createImplementation();\n    _this._implementation.externalObject = _this;\n\n    _this.onImplementationCreated();\n\n    return _this;\n  }\n\n  IgrStackedFragmentSeries.prototype.createImplementation = function () {\n    return new StackedFragmentSeries();\n  };\n\n  IgrStackedFragmentSeries.prototype.onImplementationCreated = function () {};\n\n  IgrStackedFragmentSeries.prototype.componentDidMount = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = this.props[p];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  IgrStackedFragmentSeries.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var e_2, _a;\n\n    var mod = getModifiedProps(this.props, nextProps);\n\n    try {\n      for (var _b = __values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = mod[p];\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return true;\n  };\n\n  IgrStackedFragmentSeries.prototype.render = function () {\n    return null;\n  };\n\n  IgrStackedFragmentSeries.prototype.provideRenderer = function (renderer) {\n    this._renderer = renderer;\n    this.i.visualSeriesLink.provideRenderer(renderer);\n  };\n\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"i\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._implementation;\n    }\n    /**\n                               * @hidden\n                               */\n    ,\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrStackedFragmentSeries._createFromInternal = function (internal) {\n    if (!internal) {\n      return null;\n    }\n\n    if (!internal.$type) {\n      return null;\n    }\n\n    var name = internal.$type.name;\n    var externalName = \"Igr\" + name;\n\n    if (!TypeRegistrar.isRegistered(externalName)) {\n      return null;\n    }\n\n    return TypeRegistrar.create(externalName);\n  };\n\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"dataSource\", {\n    /**\n    * Gets or sets the ItemsSource property for the current series object. Normally you will want to provide data to the parent series instead.\n    * But if you have data as individual columns, it can be assigned here. The data must be aligned and have the same number of items for each fragment.\n    */\n    get: function () {\n      return this.i.itemsSource;\n    },\n    set: function (v) {\n      this.i.itemsSource = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"brush\", {\n    /**\n     * Gets or sets the brush of the stacked fragment.\n    */\n    get: function () {\n      return brushToString(this.i.jk);\n    },\n    set: function (v) {\n      this.i.jk = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualBrush\", {\n    /**\n     * Gets the actual brush used by the series.\n    */\n    get: function () {\n      return brushToString(this.i.jf);\n    },\n    set: function (v) {\n      this.i.jf = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isDropShadowEnabled\", {\n    /**\n     * Gets or sets whether drop shadow should be enabled for this series.\n    */\n    get: function () {\n      return this.i.ap;\n    },\n    set: function (v) {\n      this.i.ap = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsDropShadowEnabled\", {\n    /**\n     * Gets whether drop shadow is actually enabled for this series.\n    */\n    get: function () {\n      return this.i.ai;\n    },\n    set: function (v) {\n      this.i.ai = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowBlur\", {\n    /**\n     * Gets or sets the shadow blur.\n     * This property is ignored when\n     * StackedFragmentSeries.UseSingleShadow is set to true.\n    */\n    get: function () {\n      return this.i.bs;\n    },\n    set: function (v) {\n      this.i.bs = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowBlur\", {\n    /**\n     * Gets the actual shadow blur used by the series.\n    */\n    get: function () {\n      return this.i.a9;\n    },\n    set: function (v) {\n      this.i.a9 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowColor\", {\n    /**\n     * Gets or sets the drop shadow color.\n    */\n    get: function () {\n      return colorToString(this.i.jr);\n    },\n    set: function (v) {\n      this.i.jr = stringToColor(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowColor\", {\n    /**\n     * Gets actual the drop shadow color used by the series.\n    */\n    get: function () {\n      return colorToString(this.i.jq);\n    },\n    set: function (v) {\n      this.i.jq = stringToColor(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"useSingleShadow\", {\n    /**\n     * Gets or sets whether drop shadow is applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.\n     * When this property is set to true, no\n     * StackedFragmentSeries.ShadowBlur is applied.\n    */\n    get: function () {\n      return this.i.ax;\n    },\n    set: function (v) {\n      this.i.ax = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualUseSingleShadow\", {\n    /**\n     * Gets whether drop shadow is actually applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.\n    */\n    get: function () {\n      return this.i.an;\n    },\n    set: function (v) {\n      this.i.an = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowOffsetX\", {\n    /**\n     * Gets or sets the drop shadow x-offset.\n    */\n    get: function () {\n      return this.i.bt;\n    },\n    set: function (v) {\n      this.i.bt = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowOffsetX\", {\n    /**\n     * Gets the actual drop shadow x-offset applied to the series.\n    */\n    get: function () {\n      return this.i.ba;\n    },\n    set: function (v) {\n      this.i.ba = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowOffsetY\", {\n    /**\n     * Gets or sets the drop shadow y-offset.\n    */\n    get: function () {\n      return this.i.bu;\n    },\n    set: function (v) {\n      this.i.bu = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowOffsetY\", {\n    /**\n     * Gets the actual drop shadow y-offset applied to the series.\n    */\n    get: function () {\n      return this.i.bb;\n    },\n    set: function (v) {\n      this.i.bb = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeTemplate\", {\n    /**\n     * Gets or sets the LegendItemBadgeTemplate property.\n     * The legend item badge is created according to the LegendItemBadgeTemplate on-demand by\n     * the series object itself.\n    */\n    get: function () {\n      return this.i.gn;\n    },\n    set: function (v) {\n      this.i.gn = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeTemplate\", {\n    /**\n     * Gets the actual legend item badge template used by the series.\n    */\n    get: function () {\n      return this.i.gk;\n    },\n    set: function (v) {\n      this.i.gk = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemTemplate\", {\n    /**\n     * Gets or sets the LegendItemTemplate property.\n     * The legend item control content is created according to the LegendItemTemplate on-demand by\n     * the series object itself.\n    */\n    get: function () {\n      return this.i.go;\n    },\n    set: function (v) {\n      this.i.go = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemTemplate\", {\n    /**\n     * Gets the actual legend item template used by the series.\n    */\n    get: function () {\n      return this.i.gl;\n    },\n    set: function (v) {\n      this.i.gl = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemVisibility\", {\n    /**\n     * Gets or sets the legend item visibility for the current series object.\n    */\n    get: function () {\n      return this.i.kh;\n    },\n    set: function (v) {\n      this.i.kh = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemVisibility\", {\n    /**\n     * Gets the actual visibility of the legend items in the series.\n    */\n    get: function () {\n      return this.i.kf;\n    },\n    set: function (v) {\n      this.i.kf = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeShape\", {\n    /**\n     * Gets or sets the type of legend badge representing the current series in a legend.\n     * This property will be ignored when the LegendItemTemplate or LegendItemBadgeTemplate property is set on the series\n    */\n    get: function () {\n      return this.i.r;\n    },\n    set: function (v) {\n      this.i.r = ensureEnum(LegendItemBadgeShape_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeMode\", {\n    /**\n     * Gets or sets the mode of legend badge representing the current series in a legend.\n     * This property will be ignored when the LegendItemTemplate or LegendItemBadgeTemplate property is set on the series\n    */\n    get: function () {\n      return this.i.p;\n    },\n    set: function (v) {\n      this.i.p = ensureEnum(LegendItemBadgeMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeShape\", {\n    /**\n     * Gets the actual LegendItemBadgeShape of the series.\n    */\n    get: function () {\n      return this.i.q;\n    },\n    set: function (v) {\n      this.i.q = ensureEnum(LegendItemBadgeShape_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeMode\", {\n    /**\n     * Gets the actual LegendItemBadgeMode of the series.\n    */\n    get: function () {\n      return this.i.o;\n    },\n    set: function (v) {\n      this.i.o = ensureEnum(LegendItemBadgeMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerBrush\", {\n    /**\n     * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\n    */\n    get: function () {\n      return brushToString(this.i.jl);\n    },\n    set: function (v) {\n      this.i.jl = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerBrush\", {\n    /**\n     * Gets the actual marker brush of the series.\n    */\n    get: function () {\n      return brushToString(this.i.jg);\n    },\n    set: function (v) {\n      this.i.jg = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerOutline\", {\n    /**\n     * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\n    */\n    get: function () {\n      return brushToString(this.i.jm);\n    },\n    set: function (v) {\n      this.i.jm = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerOutline\", {\n    /**\n     * Gets the actual marker outline of the series.\n    */\n    get: function () {\n      return brushToString(this.i.jh);\n    },\n    set: function (v) {\n      this.i.jh = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerTemplate\", {\n    /**\n     * Gets or sets the MarkerTemplate for the current series object.\n    */\n    get: function () {\n      return this.i.gp;\n    },\n    set: function (v) {\n      this.i.gp = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerTemplate\", {\n    /**\n     * Gets the actual marker template used by the series.\n    */\n    get: function () {\n      return this.i.gm;\n    },\n    set: function (v) {\n      this.i.gm = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerType\", {\n    /**\n     * Gets or sets the marker type for the current series object.\n     * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\n    */\n    get: function () {\n      return this.i.t;\n    },\n    set: function (v) {\n      this.i.t = ensureEnum(MarkerType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerType\", {\n    /**\n     * Gets the actual marker type set used in the series.\n    */\n    get: function () {\n      return this.i.s;\n    },\n    set: function (v) {\n      this.i.s = ensureEnum(MarkerType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"name\", {\n    /**\n     * Gets or sets the Name of the stacked fragment.\n    */\n    get: function () {\n      return this.i.d8;\n    },\n    set: function (v) {\n      this.i.d8 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"opacity\", {\n    /**\n     * Gets or sets the Opacity of the stacked fragment.\n    */\n    get: function () {\n      return this.i.bp;\n    },\n    set: function (v) {\n      this.i.bp = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOpacity\", {\n    /**\n     * Gets the series opacity.\n    */\n    get: function () {\n      return this.i.a6;\n    },\n    set: function (v) {\n      this.i.a6 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"outline\", {\n    /**\n     * Gets or sets the brush to use for the outline of the series.\n     * Some series types, such as LineSeries, do not display outlines.  Therefore, this property does not affect some charts.\n    */\n    get: function () {\n      return brushToString(this.i.jo);\n    },\n    set: function (v) {\n      this.i.jo = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOutline\", {\n    /**\n     * Gets the series outline.\n    */\n    get: function () {\n      return brushToString(this.i.jj);\n    },\n    set: function (v) {\n      this.i.jj = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"areaFillOpacity\", {\n    /**\n     * Gets or sets the AreaFillOpacity of the stacked fragment. This property only applies for area-like series.\n    */\n    get: function () {\n      return this.i.bd;\n    },\n    set: function (v) {\n      this.i.bd = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualAreaFillOpacity\", {\n    /**\n     * Gets the series ActualAreaFillOpacity.  This property only applies for area-like series.\n    */\n    get: function () {\n      return this.i.a2;\n    },\n    set: function (v) {\n      this.i.a2 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerFillOpacity\", {\n    /**\n     * Gets or sets the opacity to use for the marker fills.\n    */\n    get: function () {\n      return this.i.bn;\n    },\n    set: function (v) {\n      this.i.bn = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerFillOpacity\", {\n    /**\n     * Gets the actual opacity to use for hte marker fills.\n    */\n    get: function () {\n      return this.i.a4;\n    },\n    set: function (v) {\n      this.i.a4 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"outlineMode\", {\n    /**\n     * Gets or sets the outline mode to use for the fragment.\n    */\n    get: function () {\n      return this.i.w;\n    },\n    set: function (v) {\n      this.i.w = ensureEnum(SeriesOutlineMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOutlineMode\", {\n    /**\n     * Gets the actual outline mode to use for the fragment.\n    */\n    get: function () {\n      return this.i.v;\n    },\n    set: function (v) {\n      this.i.v = ensureEnum(SeriesOutlineMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"highlightingFadeOpacity\", {\n    /**\n     * Gets or sets the target opacity to fade to for fade style highlighting.\n    */\n    get: function () {\n      return this.i.bm;\n    },\n    set: function (v) {\n      this.i.bm = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualHighlightingFadeOpacity\", {\n    /**\n     * Gets the actual target opacity to fade to for fade style highlighting.\n    */\n    get: function () {\n      return this.i.a3;\n    },\n    set: function (v) {\n      this.i.a3 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"radiusX\", {\n    /**\n     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.\n    */\n    get: function () {\n      return this.i.bq;\n    },\n    set: function (v) {\n      this.i.bq = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualRadiusX\", {\n    /**\n     * Gets the actual corner radius of the series\n    */\n    get: function () {\n      return this.i.a7;\n    },\n    set: function (v) {\n      this.i.a7 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsSplineShapePartOfRange\", {\n    /**\n     * Gets whether the spline part is considered to be part of the range\n    */\n    get: function () {\n      return this.i.ak;\n    },\n    set: function (v) {\n      this.i.ak = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isSplineShapePartOfRange\", {\n    /**\n     * Gets or sets whether to include the spline shape in the axis range requested of the axis.\n    */\n    get: function () {\n      return this.i.ar;\n    },\n    set: function (v) {\n      this.i.ar = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"radiusY\", {\n    /**\n     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.\n    */\n    get: function () {\n      return this.i.br;\n    },\n    set: function (v) {\n      this.i.br = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualRadiusY\", {\n    /**\n     * Gets the actual corner radius of the series\n    */\n    get: function () {\n      return this.i.a8;\n    },\n    set: function (v) {\n      this.i.a8 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"thickness\", {\n    /**\n     * Gets or sets the width of the current series object's line thickness.\n    */\n    get: function () {\n      return this.i.bv;\n    },\n    set: function (v) {\n      this.i.bv = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualThickness\", {\n    /**\n     * Gets or sets the thickness of this stacked fragment.\n    */\n    get: function () {\n      return this.i.bc;\n    },\n    set: function (v) {\n      this.i.bc = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerThickness\", {\n    /**\n     * Gets or sets the width of the current series object's marker thickness.\n    */\n    get: function () {\n      return this.i.bo;\n    },\n    set: function (v) {\n      this.i.bo = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerThickness\", {\n    /**\n     * Gets actual marker thickness of this stacked fragment.\n    */\n    get: function () {\n      return this.i.a5;\n    },\n    set: function (v) {\n      this.i.a5 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"title\", {\n    /**\n     * Gets or sets the Title property.\n     * The legend item control is created according to the Title on-demand by\n     * the series object itself.\n    */\n    get: function () {\n      return this.i.ca;\n    },\n    set: function (v) {\n      this.i.ca = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionEasingFunction\", {\n    /**\n     * Gets or sets the EasingFunction used to morph the current series.\n    */\n    get: function () {\n      return this.i.ad;\n    },\n    set: function (v) {\n      this.i.ad = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionDuration\", {\n    /**\n     * Gets or sets the duration of the current series's morph.\n    */\n    get: function () {\n      return this.i.b4;\n    },\n    set: function (v) {\n      this.i.b4 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInDuration\", {\n    /**\n     * Gets or sets the duration of the current series's transition in morph.\n    */\n    get: function () {\n      return this.i.b5;\n    },\n    set: function (v) {\n      this.i.b5 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInEasingFunction\", {\n    /**\n     * Gets or sets the EasingFunction used to morph the current series during the initial transition.\n    */\n    get: function () {\n      return this.i.ae;\n    },\n    set: function (v) {\n      this.i.ae = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInMode\", {\n    /**\n     * Gets or sets the method by which to animate the data into the chart when the chart data source is swapped.\n     * Note: Transitions are not currently supported for stacked series.\n    */\n    get: function () {\n      return this.i.n;\n    },\n    set: function (v) {\n      this.i.n = ensureEnum(CategoryTransitionInMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isTransitionInEnabled\", {\n    /**\n     * Gets or sets whether the series should transition into the plot area when a new data source is assigned.\n     * Note: Transitions are not currently supported for stacked series.\n    */\n    get: function () {\n      return this.i.as;\n    },\n    set: function (v) {\n      this.i.as = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInSpeedType\", {\n    /**\n     * Gets or sets the duration of the current series's transition in morph.\n    */\n    get: function () {\n      return this.i.z;\n    },\n    set: function (v) {\n      this.i.z = ensureEnum(TransitionInSpeedType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsTransitionInEnabled\", {\n    /**\n     * Gets the the resolved value of whether transition in is enabled.\n    */\n    get: function () {\n      return this.i.al;\n    },\n    set: function (v) {\n      this.i.al = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInDuration\", {\n    /**\n     * Gets the resolved transition in duration\n    */\n    get: function () {\n      return this.i.by;\n    },\n    set: function (v) {\n      this.i.by = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInMode\", {\n    /**\n     * Gets the series transition easing function.\n    */\n    get: function () {\n      return this.i.m;\n    },\n    set: function (v) {\n      this.i.m = ensureEnum(CategoryTransitionInMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInSpeedType\", {\n    /**\n     * Gets the series transition easing function.\n    */\n    get: function () {\n      return this.i.y;\n    },\n    set: function (v) {\n      this.i.y = ensureEnum(TransitionInSpeedType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInEasingFunction\", {\n    /**\n     * Gets the series transition easing function.\n    */\n    get: function () {\n      return this.i.ac;\n    },\n    set: function (v) {\n      this.i.ac = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionEasingFunction\", {\n    /**\n     * Gets the series transition easing function.\n    */\n    get: function () {\n      return this.i.ab;\n    },\n    set: function (v) {\n      this.i.ab = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionDuration\", {\n    /**\n     * Gets the series transition duration.\n    */\n    get: function () {\n      return this.i.bx;\n    },\n    set: function (v) {\n      this.i.bx = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberPath\", {\n    /**\n     * Gets or sets the value mapping property for the current series object.\n    */\n    get: function () {\n      return this.i.e1;\n    },\n    set: function (v) {\n      this.i.e1 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberAsLegendLabel\", {\n    /**\n     * Gets or sets the label displayed before series value in the Data Legend.\n    */\n    get: function () {\n      return this.i.ex;\n    },\n    set: function (v) {\n      this.i.ex = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberAsLegendUnit\", {\n    /**\n     * Gets or sets the unit displayed after series value in the Data Legend.\n    */\n    get: function () {\n      return this.i.ez;\n    },\n    set: function (v) {\n      this.i.ez = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"visibility\", {\n    /**\n     * Gets or sets the Visibility of the stacked fragment.\n    */\n    get: function () {\n      return this.i.ki;\n    },\n    set: function (v) {\n      this.i.ki = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualVisibility\", {\n    /**\n     * Gets the actual visibility of the stacked fragment.\n    */\n    get: function () {\n      return this.i.kg;\n    },\n    set: function (v) {\n      this.i.kg = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"parentOrLocalBrush\", {\n    /**\n     * Gets the resolved brush used between the local series and the parent series.\n    */\n    get: function () {\n      return brushToString(this.i.jp);\n    },\n    set: function (v) {\n      this.i.jp = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrStackedFragmentSeries.prototype.findByName = function (name) {\n    return null;\n  };\n\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"hasUserValues\", {\n    get: function () {\n      return this._hasUserValues;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrStackedFragmentSeries.prototype.__m = function (propertyName) {\n    if (!this._inStyling) {\n      this._hasUserValues.add(propertyName);\n    }\n  };\n\n  IgrStackedFragmentSeries.prototype._styling = function (container, component, parent) {\n    if (this._inStyling) {\n      return;\n    }\n\n    this._inStyling = true;\n    this._stylingContainer = container;\n    this._stylingParent = component;\n    var genericPrefix = \"\";\n    var typeName = this.i.$type.name;\n\n    if (typeName.indexOf(\"Xam\") === 0) {\n      typeName = typeName.substring(3);\n    }\n\n    genericPrefix = toSpinal(\"StackedFragmentSeries\");\n    var additionalPrefixes = [];\n    var prefix = toSpinal(typeName);\n    additionalPrefixes.push(prefix + \"-\");\n    var b = this.i.$type.baseType;\n\n    while (b && b.name != \"Object\" && b.name != \"Base\" && b.name != \"Control\" && b.Name != \"DependencyObject\" && b.Name != \"FrameworkElement\") {\n      typeName = b.name;\n\n      if (typeName.indexOf(\"Xam\") === 0) {\n        typeName = typeName.substring(3);\n      }\n\n      var basePrefix = toSpinal(typeName);\n      additionalPrefixes.push(basePrefix + \"-\");\n      b = b.baseType;\n    }\n\n    if (parent) {\n      var parentTypeName = parent.i.$type.name;\n\n      if (parentTypeName.indexOf(\"Xam\") === 0) {\n        parentTypeName = parentTypeName.substring(3);\n      }\n\n      var parentPrefix = toSpinal(parentTypeName);\n      additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n      additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n    }\n\n    initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n\n    if (this._otherStyling) {\n      this._otherStyling(container, component, parent);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n  * Gets the item index associated with the specified world position\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getItemIndex = function (world) {\n    var iv = this.i.bz(toPoint(world));\n    return iv;\n  };\n  /**\n   * Gets the item that is the best match for the specified world coordinates.\n  \r\n  * @param world  * The world coordinates to use.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getItem = function (world) {\n    var iv = this.i.b8(toPoint(world));\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {\n    var iv = this.i.b2(toPoint(world), skipUnknowns);\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getNextOrExactIndex = function (world, skipUnknowns) {\n    var iv = this.i.b1(toPoint(world), skipUnknowns);\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.bk(toPoint(world), useInterpolation, skipUnknowns);\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.j5(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n  /**\n   * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n  \r\n  * @param world  * The world coordinate for which to get a value bounding box for\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getSeriesValueBoundingBox = function (world) {\n    var iv = this.i.j9(toPoint(world));\n    return fromRect(iv);\n  };\n  /**\n   * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\n  \r\n  * @param world  * The world coordinates for which to get a value marker bounding box for\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getSeriesValueMarkerBoundingBox = function (world) {\n    var iv = this.i.kb(toPoint(world));\n    return fromRect(iv);\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesHighValue = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.bg(toPoint(world), useInterpolation, skipUnknowns);\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesHighValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.j1(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesLowValue = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.bi(toPoint(world), useInterpolation, skipUnknowns);\n    return iv;\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesLowValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.j3(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesValuePositionFromSeriesPixel = function (mouse, useInterpolation, skipUnknowns) {\n    var iv = this.i.j6(toPoint(mouse), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n\n  IgrStackedFragmentSeries.prototype.getSeriesValueFromSeriesPixel = function (mouse, useInterpolation, skipUnknowns) {\n    var iv = this.i.bl(toPoint(mouse), useInterpolation, skipUnknowns);\n    return iv;\n  };\n  /**\n   * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n  \r\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getItemSpan = function () {\n    var iv = this.i.bf();\n    return iv;\n  };\n  /**\n   * Converts a point from coordinates within the series plot area to a world position within axis space.\n  \r\n  * @param seriesPoint  * The pixel location within the plot area of the series.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.toWorldPosition = function (seriesPoint) {\n    var iv = this.i.j7(toPoint(seriesPoint));\n    return fromPoint(iv);\n  };\n  /**\n   * Converts a point from world coordinates to coordinates within the viewport of the series.\n  \r\n  * @param world  * The world position from which to convert.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.fromWorldPosition = function (world) {\n    var iv = this.i.j0(toPoint(world));\n    return fromPoint(iv);\n  };\n  /**\n   * Requests that the provided item should be brought into view if possible.\n  \r\n  * @param item  * The item to attempt to bring into view.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.scrollIntoView = function (item) {\n    var iv = this.i.au(item);\n    return iv;\n  };\n  /**\n   * Gets the effective viewport, adjusted to account for margins and other factors.\n  \r\n  */\n\n\n  IgrStackedFragmentSeries.prototype.getEffectiveViewport = function () {\n    var iv = this.i.j8();\n    return fromRect(iv);\n  };\n  /**\n   * Notifies the series that a visual property has changed, requiring a visual update.\n  \r\n  */\n\n\n  IgrStackedFragmentSeries.prototype.notifyVisualPropertiesChanged = function () {\n    this.i.e5();\n  };\n  /**\n   * Simulates a pointer hover over the series surface.\n  \r\n  * @param point  * The pointer position relative to the series viewport over which to hover.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.simulateHover = function (point) {\n    this.i.fa(toPoint(point));\n  };\n  /**\n   * Moves the cursor point to the provided world position. Some series may react to the current cursor position.\n  \r\n  * @param point  * The cursor point, in world coordinates.\n  */\n\n\n  IgrStackedFragmentSeries.prototype.moveCursorPoint = function (point) {\n    this.i.e4(toPoint(point));\n  };\n\n  IgrStackedFragmentSeries.prototype.replayTransitionIn = function () {\n    this.i.e9();\n  };\n\n  Object.defineProperty(IgrStackedFragmentSeries.prototype, \"propertyUpdated\", {\n    /**\n     * Event raised when a property (including \"effective\" and non-dependency property) value changes.\n    */\n    get: function () {\n      return this._propertyUpdated;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._propertyUpdated_wrapped !== null) {\n        this.i.propertyUpdated = delegateRemove(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n        this._propertyUpdated_wrapped = null;\n        this._propertyUpdated = null;\n      }\n\n      this._propertyUpdated = ev;\n\n      this._propertyUpdated_wrapped = function (o, e) {\n        var outerArgs = new IgrPropertyUpdatedEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforePropertyUpdated) {\n          _this.beforePropertyUpdated(_this, outerArgs);\n        }\n\n        if (_this._propertyUpdated) {\n          _this._propertyUpdated(_this, outerArgs);\n        }\n      };\n\n      this.i.propertyUpdated = delegateCombine(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrStackedFragmentSeries;\n}(React.Component);\n\nexport { IgrStackedFragmentSeries };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-stacked-fragment-series.js"],"names":["__extends","__values","React","delegateCombine","delegateRemove","Visibility_$type","MarkerType_$type","IgrPropertyUpdatedEventArgs","StackedFragmentSeries","getModifiedProps","isValidProp","brushToString","stringToBrush","ensureBool","colorToString","stringToColor","ensureEnum","toSpinal","initializePropertiesFromCss","NamePatcher","fromPoint","toPoint","fromRect","TypeRegistrar","SeriesOutlineMode_$type","LegendItemBadgeMode_$type","LegendItemBadgeShape_$type","CategoryTransitionInMode_$type","TransitionInSpeedType_$type","IgrStackedFragmentSeries","_super","props","_this","call","__p","_hasUserValues","Set","_stylingContainer","_stylingParent","_inStyling","_propertyUpdated","_propertyUpdated_wrapped","_styling","ensureStylablePatched","Object","getPrototypeOf","_implementation","createImplementation","externalObject","onImplementationCreated","prototype","componentDidMount","e_1","_a","_b","keys","_c","next","done","p","value","e_1_1","error","return","shouldComponentUpdate","nextProps","nextState","e_2","mod","e_2_1","render","provideRenderer","renderer","_renderer","i","visualSeriesLink","defineProperty","get","enumerable","configurable","_createFromInternal","internal","$type","name","externalName","isRegistered","create","itemsSource","set","v","jk","jf","ap","ai","bs","a9","jr","jq","ax","an","bt","ba","bu","bb","gn","gk","go","gl","kh","kf","r","q","o","jl","jg","jm","jh","gp","gm","t","s","d8","bp","a6","jo","jj","bd","a2","bn","a4","w","bm","a3","bq","a7","ak","ar","br","a8","bv","bc","bo","a5","ca","ad","b4","b5","ae","n","as","z","al","by","m","y","ac","ab","bx","e1","ex","ez","ki","kg","jp","findByName","__m","propertyName","add","container","component","parent","genericPrefix","typeName","indexOf","substring","additionalPrefixes","prefix","push","b","baseType","Name","basePrefix","parentTypeName","parentPrefix","hasUserValues","_otherStyling","getItemIndex","world","iv","bz","getItem","b8","getPreviousOrExactIndex","skipUnknowns","b2","getNextOrExactIndex","b1","getSeriesValue","useInterpolation","bk","getSeriesValuePosition","j5","getSeriesValueBoundingBox","j9","getSeriesValueMarkerBoundingBox","kb","getSeriesHighValue","bg","getSeriesHighValuePosition","j1","getSeriesLowValue","bi","getSeriesLowValuePosition","j3","getSeriesValuePositionFromSeriesPixel","mouse","j6","getSeriesValueFromSeriesPixel","bl","getItemSpan","bf","toWorldPosition","seriesPoint","j7","fromWorldPosition","j0","scrollIntoView","item","au","getEffectiveViewport","j8","notifyVisualPropertiesChanged","e5","simulateHover","point","fa","moveCursorPoint","e4","replayTransitionIn","e9","ev","propertyUpdated","e","outerArgs","_provideImplementation","beforePropertyUpdated","Component"],"mappings":"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","sourcesContent":["import { __extends, __values } from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { MarkerType_$type } from \"./MarkerType\";\nimport { IgrPropertyUpdatedEventArgs } from \"igniteui-react-core\";\nimport { StackedFragmentSeries } from \"./StackedFragmentSeries\";\nimport { getModifiedProps, isValidProp, brushToString, stringToBrush, ensureBool, colorToString, stringToColor, ensureEnum, toSpinal, initializePropertiesFromCss, NamePatcher, fromPoint, toPoint, fromRect } from \"igniteui-react-core\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { SeriesOutlineMode_$type } from './SeriesOutlineMode';\nimport { LegendItemBadgeMode_$type } from \"igniteui-react-core\";\nimport { LegendItemBadgeShape_$type } from \"igniteui-react-core\";\nimport { CategoryTransitionInMode_$type } from './CategoryTransitionInMode';\nimport { TransitionInSpeedType_$type } from './TransitionInSpeedType';\n/**\n * Represents a non-visual child of StackedSeriesBase.\n*/\nvar IgrStackedFragmentSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrStackedFragmentSeries, _super);\n    function IgrStackedFragmentSeries(props) {\n        var _this = _super.call(this, props) || this;\n        _this.__p = null;\n        _this._hasUserValues = new Set();\n        _this._stylingContainer = null;\n        _this._stylingParent = null;\n        _this._inStyling = false;\n        _this._propertyUpdated = null;\n        _this._propertyUpdated_wrapped = null;\n        if (_this._styling) {\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n        }\n        _this._implementation = _this.createImplementation();\n        _this._implementation.externalObject = _this;\n        _this.onImplementationCreated();\n        return _this;\n    }\n    IgrStackedFragmentSeries.prototype.createImplementation = function () {\n        return new StackedFragmentSeries();\n    };\n    IgrStackedFragmentSeries.prototype.onImplementationCreated = function () {\n    };\n    IgrStackedFragmentSeries.prototype.componentDidMount = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = this.props[p];\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    IgrStackedFragmentSeries.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var e_2, _a;\n        var mod = getModifiedProps(this.props, nextProps);\n        try {\n            for (var _b = __values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = mod[p];\n                }\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return true;\n    };\n    IgrStackedFragmentSeries.prototype.render = function () {\n        return null;\n    };\n    IgrStackedFragmentSeries.prototype.provideRenderer = function (renderer) {\n        this._renderer = renderer;\n        this.i.visualSeriesLink.provideRenderer(renderer);\n    };\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"i\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._implementation;\n        } /**\n                                     * @hidden\n                                     */,\n        enumerable: false,\n        configurable: true\n    });\n    IgrStackedFragmentSeries._createFromInternal = function (internal) {\n        if (!internal) {\n            return null;\n        }\n        if (!internal.$type) {\n            return null;\n        }\n        var name = internal.$type.name;\n        var externalName = \"Igr\" + name;\n        if (!TypeRegistrar.isRegistered(externalName)) {\n            return null;\n        }\n        return TypeRegistrar.create(externalName);\n    };\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"dataSource\", {\n        /**\n     * Gets or sets the ItemsSource property for the current series object. Normally you will want to provide data to the parent series instead.\n     * But if you have data as individual columns, it can be assigned here. The data must be aligned and have the same number of items for each fragment.\n    */\n        get: function () {\n            return this.i.itemsSource;\n        },\n        set: function (v) {\n            this.i.itemsSource = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"brush\", {\n        /**\n         * Gets or sets the brush of the stacked fragment.\n        */\n        get: function () {\n            return brushToString(this.i.jk);\n        },\n        set: function (v) {\n            this.i.jk = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualBrush\", {\n        /**\n         * Gets the actual brush used by the series.\n        */\n        get: function () {\n            return brushToString(this.i.jf);\n        },\n        set: function (v) {\n            this.i.jf = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isDropShadowEnabled\", {\n        /**\n         * Gets or sets whether drop shadow should be enabled for this series.\n        */\n        get: function () {\n            return this.i.ap;\n        },\n        set: function (v) {\n            this.i.ap = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsDropShadowEnabled\", {\n        /**\n         * Gets whether drop shadow is actually enabled for this series.\n        */\n        get: function () {\n            return this.i.ai;\n        },\n        set: function (v) {\n            this.i.ai = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowBlur\", {\n        /**\n         * Gets or sets the shadow blur.\n         * This property is ignored when\n         * StackedFragmentSeries.UseSingleShadow is set to true.\n        */\n        get: function () {\n            return this.i.bs;\n        },\n        set: function (v) {\n            this.i.bs = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowBlur\", {\n        /**\n         * Gets the actual shadow blur used by the series.\n        */\n        get: function () {\n            return this.i.a9;\n        },\n        set: function (v) {\n            this.i.a9 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowColor\", {\n        /**\n         * Gets or sets the drop shadow color.\n        */\n        get: function () {\n            return colorToString(this.i.jr);\n        },\n        set: function (v) {\n            this.i.jr = stringToColor(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowColor\", {\n        /**\n         * Gets actual the drop shadow color used by the series.\n        */\n        get: function () {\n            return colorToString(this.i.jq);\n        },\n        set: function (v) {\n            this.i.jq = stringToColor(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"useSingleShadow\", {\n        /**\n         * Gets or sets whether drop shadow is applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.\n         * When this property is set to true, no\n         * StackedFragmentSeries.ShadowBlur is applied.\n        */\n        get: function () {\n            return this.i.ax;\n        },\n        set: function (v) {\n            this.i.ax = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualUseSingleShadow\", {\n        /**\n         * Gets whether drop shadow is actually applied to the whole StackedFragmentSeries visual or to each of the individual shapes forming the StackedFragmentSeries.\n        */\n        get: function () {\n            return this.i.an;\n        },\n        set: function (v) {\n            this.i.an = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowOffsetX\", {\n        /**\n         * Gets or sets the drop shadow x-offset.\n        */\n        get: function () {\n            return this.i.bt;\n        },\n        set: function (v) {\n            this.i.bt = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowOffsetX\", {\n        /**\n         * Gets the actual drop shadow x-offset applied to the series.\n        */\n        get: function () {\n            return this.i.ba;\n        },\n        set: function (v) {\n            this.i.ba = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"shadowOffsetY\", {\n        /**\n         * Gets or sets the drop shadow y-offset.\n        */\n        get: function () {\n            return this.i.bu;\n        },\n        set: function (v) {\n            this.i.bu = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualShadowOffsetY\", {\n        /**\n         * Gets the actual drop shadow y-offset applied to the series.\n        */\n        get: function () {\n            return this.i.bb;\n        },\n        set: function (v) {\n            this.i.bb = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeTemplate\", {\n        /**\n         * Gets or sets the LegendItemBadgeTemplate property.\n         * The legend item badge is created according to the LegendItemBadgeTemplate on-demand by\n         * the series object itself.\n        */\n        get: function () {\n            return this.i.gn;\n        },\n        set: function (v) {\n            this.i.gn = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeTemplate\", {\n        /**\n         * Gets the actual legend item badge template used by the series.\n        */\n        get: function () {\n            return this.i.gk;\n        },\n        set: function (v) {\n            this.i.gk = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemTemplate\", {\n        /**\n         * Gets or sets the LegendItemTemplate property.\n         * The legend item control content is created according to the LegendItemTemplate on-demand by\n         * the series object itself.\n        */\n        get: function () {\n            return this.i.go;\n        },\n        set: function (v) {\n            this.i.go = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemTemplate\", {\n        /**\n         * Gets the actual legend item template used by the series.\n        */\n        get: function () {\n            return this.i.gl;\n        },\n        set: function (v) {\n            this.i.gl = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemVisibility\", {\n        /**\n         * Gets or sets the legend item visibility for the current series object.\n        */\n        get: function () {\n            return this.i.kh;\n        },\n        set: function (v) {\n            this.i.kh = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemVisibility\", {\n        /**\n         * Gets the actual visibility of the legend items in the series.\n        */\n        get: function () {\n            return this.i.kf;\n        },\n        set: function (v) {\n            this.i.kf = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeShape\", {\n        /**\n         * Gets or sets the type of legend badge representing the current series in a legend.\n         * This property will be ignored when the LegendItemTemplate or LegendItemBadgeTemplate property is set on the series\n        */\n        get: function () {\n            return this.i.r;\n        },\n        set: function (v) {\n            this.i.r = ensureEnum(LegendItemBadgeShape_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"legendItemBadgeMode\", {\n        /**\n         * Gets or sets the mode of legend badge representing the current series in a legend.\n         * This property will be ignored when the LegendItemTemplate or LegendItemBadgeTemplate property is set on the series\n        */\n        get: function () {\n            return this.i.p;\n        },\n        set: function (v) {\n            this.i.p = ensureEnum(LegendItemBadgeMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeShape\", {\n        /**\n         * Gets the actual LegendItemBadgeShape of the series.\n        */\n        get: function () {\n            return this.i.q;\n        },\n        set: function (v) {\n            this.i.q = ensureEnum(LegendItemBadgeShape_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualLegendItemBadgeMode\", {\n        /**\n         * Gets the actual LegendItemBadgeMode of the series.\n        */\n        get: function () {\n            return this.i.o;\n        },\n        set: function (v) {\n            this.i.o = ensureEnum(LegendItemBadgeMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerBrush\", {\n        /**\n         * Gets or sets the brush that specifies how the current series object's marker interiors are painted.\n        */\n        get: function () {\n            return brushToString(this.i.jl);\n        },\n        set: function (v) {\n            this.i.jl = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerBrush\", {\n        /**\n         * Gets the actual marker brush of the series.\n        */\n        get: function () {\n            return brushToString(this.i.jg);\n        },\n        set: function (v) {\n            this.i.jg = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerOutline\", {\n        /**\n         * Gets or sets the brush that specifies how the current series object's marker outlines are painted.\n        */\n        get: function () {\n            return brushToString(this.i.jm);\n        },\n        set: function (v) {\n            this.i.jm = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerOutline\", {\n        /**\n         * Gets the actual marker outline of the series.\n        */\n        get: function () {\n            return brushToString(this.i.jh);\n        },\n        set: function (v) {\n            this.i.jh = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerTemplate\", {\n        /**\n         * Gets or sets the MarkerTemplate for the current series object.\n        */\n        get: function () {\n            return this.i.gp;\n        },\n        set: function (v) {\n            this.i.gp = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerTemplate\", {\n        /**\n         * Gets the actual marker template used by the series.\n        */\n        get: function () {\n            return this.i.gm;\n        },\n        set: function (v) {\n            this.i.gm = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerType\", {\n        /**\n         * Gets or sets the marker type for the current series object.\n         * If the MarkerTemplate property is set, the setting of the MarkerType property will be ignored.\n        */\n        get: function () {\n            return this.i.t;\n        },\n        set: function (v) {\n            this.i.t = ensureEnum(MarkerType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerType\", {\n        /**\n         * Gets the actual marker type set used in the series.\n        */\n        get: function () {\n            return this.i.s;\n        },\n        set: function (v) {\n            this.i.s = ensureEnum(MarkerType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"name\", {\n        /**\n         * Gets or sets the Name of the stacked fragment.\n        */\n        get: function () {\n            return this.i.d8;\n        },\n        set: function (v) {\n            this.i.d8 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"opacity\", {\n        /**\n         * Gets or sets the Opacity of the stacked fragment.\n        */\n        get: function () {\n            return this.i.bp;\n        },\n        set: function (v) {\n            this.i.bp = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOpacity\", {\n        /**\n         * Gets the series opacity.\n        */\n        get: function () {\n            return this.i.a6;\n        },\n        set: function (v) {\n            this.i.a6 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"outline\", {\n        /**\n         * Gets or sets the brush to use for the outline of the series.\n         * Some series types, such as LineSeries, do not display outlines.  Therefore, this property does not affect some charts.\n        */\n        get: function () {\n            return brushToString(this.i.jo);\n        },\n        set: function (v) {\n            this.i.jo = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOutline\", {\n        /**\n         * Gets the series outline.\n        */\n        get: function () {\n            return brushToString(this.i.jj);\n        },\n        set: function (v) {\n            this.i.jj = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"areaFillOpacity\", {\n        /**\n         * Gets or sets the AreaFillOpacity of the stacked fragment. This property only applies for area-like series.\n        */\n        get: function () {\n            return this.i.bd;\n        },\n        set: function (v) {\n            this.i.bd = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualAreaFillOpacity\", {\n        /**\n         * Gets the series ActualAreaFillOpacity.  This property only applies for area-like series.\n        */\n        get: function () {\n            return this.i.a2;\n        },\n        set: function (v) {\n            this.i.a2 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerFillOpacity\", {\n        /**\n         * Gets or sets the opacity to use for the marker fills.\n        */\n        get: function () {\n            return this.i.bn;\n        },\n        set: function (v) {\n            this.i.bn = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerFillOpacity\", {\n        /**\n         * Gets the actual opacity to use for hte marker fills.\n        */\n        get: function () {\n            return this.i.a4;\n        },\n        set: function (v) {\n            this.i.a4 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"outlineMode\", {\n        /**\n         * Gets or sets the outline mode to use for the fragment.\n        */\n        get: function () {\n            return this.i.w;\n        },\n        set: function (v) {\n            this.i.w = ensureEnum(SeriesOutlineMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualOutlineMode\", {\n        /**\n         * Gets the actual outline mode to use for the fragment.\n        */\n        get: function () {\n            return this.i.v;\n        },\n        set: function (v) {\n            this.i.v = ensureEnum(SeriesOutlineMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"highlightingFadeOpacity\", {\n        /**\n         * Gets or sets the target opacity to fade to for fade style highlighting.\n        */\n        get: function () {\n            return this.i.bm;\n        },\n        set: function (v) {\n            this.i.bm = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualHighlightingFadeOpacity\", {\n        /**\n         * Gets the actual target opacity to fade to for fade style highlighting.\n        */\n        get: function () {\n            return this.i.a3;\n        },\n        set: function (v) {\n            this.i.a3 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"radiusX\", {\n        /**\n         * Gets or sets the x-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.\n        */\n        get: function () {\n            return this.i.bq;\n        },\n        set: function (v) {\n            this.i.bq = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualRadiusX\", {\n        /**\n         * Gets the actual corner radius of the series\n        */\n        get: function () {\n            return this.i.a7;\n        },\n        set: function (v) {\n            this.i.a7 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsSplineShapePartOfRange\", {\n        /**\n         * Gets whether the spline part is considered to be part of the range\n        */\n        get: function () {\n            return this.i.ak;\n        },\n        set: function (v) {\n            this.i.ak = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isSplineShapePartOfRange\", {\n        /**\n         * Gets or sets whether to include the spline shape in the axis range requested of the axis.\n        */\n        get: function () {\n            return this.i.ar;\n        },\n        set: function (v) {\n            this.i.ar = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"radiusY\", {\n        /**\n         * Gets or sets the y-radius of the ellipse that is used to round the corners of the column. This only applies to Bar and Column series.\n        */\n        get: function () {\n            return this.i.br;\n        },\n        set: function (v) {\n            this.i.br = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualRadiusY\", {\n        /**\n         * Gets the actual corner radius of the series\n        */\n        get: function () {\n            return this.i.a8;\n        },\n        set: function (v) {\n            this.i.a8 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"thickness\", {\n        /**\n         * Gets or sets the width of the current series object's line thickness.\n        */\n        get: function () {\n            return this.i.bv;\n        },\n        set: function (v) {\n            this.i.bv = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualThickness\", {\n        /**\n         * Gets or sets the thickness of this stacked fragment.\n        */\n        get: function () {\n            return this.i.bc;\n        },\n        set: function (v) {\n            this.i.bc = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"markerThickness\", {\n        /**\n         * Gets or sets the width of the current series object's marker thickness.\n        */\n        get: function () {\n            return this.i.bo;\n        },\n        set: function (v) {\n            this.i.bo = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualMarkerThickness\", {\n        /**\n         * Gets actual marker thickness of this stacked fragment.\n        */\n        get: function () {\n            return this.i.a5;\n        },\n        set: function (v) {\n            this.i.a5 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"title\", {\n        /**\n         * Gets or sets the Title property.\n         * The legend item control is created according to the Title on-demand by\n         * the series object itself.\n        */\n        get: function () {\n            return this.i.ca;\n        },\n        set: function (v) {\n            this.i.ca = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionEasingFunction\", {\n        /**\n         * Gets or sets the EasingFunction used to morph the current series.\n        */\n        get: function () {\n            return this.i.ad;\n        },\n        set: function (v) {\n            this.i.ad = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionDuration\", {\n        /**\n         * Gets or sets the duration of the current series's morph.\n        */\n        get: function () {\n            return this.i.b4;\n        },\n        set: function (v) {\n            this.i.b4 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInDuration\", {\n        /**\n         * Gets or sets the duration of the current series's transition in morph.\n        */\n        get: function () {\n            return this.i.b5;\n        },\n        set: function (v) {\n            this.i.b5 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInEasingFunction\", {\n        /**\n         * Gets or sets the EasingFunction used to morph the current series during the initial transition.\n        */\n        get: function () {\n            return this.i.ae;\n        },\n        set: function (v) {\n            this.i.ae = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInMode\", {\n        /**\n         * Gets or sets the method by which to animate the data into the chart when the chart data source is swapped.\n         * Note: Transitions are not currently supported for stacked series.\n        */\n        get: function () {\n            return this.i.n;\n        },\n        set: function (v) {\n            this.i.n = ensureEnum(CategoryTransitionInMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"isTransitionInEnabled\", {\n        /**\n         * Gets or sets whether the series should transition into the plot area when a new data source is assigned.\n         * Note: Transitions are not currently supported for stacked series.\n        */\n        get: function () {\n            return this.i.as;\n        },\n        set: function (v) {\n            this.i.as = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"transitionInSpeedType\", {\n        /**\n         * Gets or sets the duration of the current series's transition in morph.\n        */\n        get: function () {\n            return this.i.z;\n        },\n        set: function (v) {\n            this.i.z = ensureEnum(TransitionInSpeedType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualIsTransitionInEnabled\", {\n        /**\n         * Gets the the resolved value of whether transition in is enabled.\n        */\n        get: function () {\n            return this.i.al;\n        },\n        set: function (v) {\n            this.i.al = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInDuration\", {\n        /**\n         * Gets the resolved transition in duration\n        */\n        get: function () {\n            return this.i.by;\n        },\n        set: function (v) {\n            this.i.by = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInMode\", {\n        /**\n         * Gets the series transition easing function.\n        */\n        get: function () {\n            return this.i.m;\n        },\n        set: function (v) {\n            this.i.m = ensureEnum(CategoryTransitionInMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInSpeedType\", {\n        /**\n         * Gets the series transition easing function.\n        */\n        get: function () {\n            return this.i.y;\n        },\n        set: function (v) {\n            this.i.y = ensureEnum(TransitionInSpeedType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionInEasingFunction\", {\n        /**\n         * Gets the series transition easing function.\n        */\n        get: function () {\n            return this.i.ac;\n        },\n        set: function (v) {\n            this.i.ac = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionEasingFunction\", {\n        /**\n         * Gets the series transition easing function.\n        */\n        get: function () {\n            return this.i.ab;\n        },\n        set: function (v) {\n            this.i.ab = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualTransitionDuration\", {\n        /**\n         * Gets the series transition duration.\n        */\n        get: function () {\n            return this.i.bx;\n        },\n        set: function (v) {\n            this.i.bx = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberPath\", {\n        /**\n         * Gets or sets the value mapping property for the current series object.\n        */\n        get: function () {\n            return this.i.e1;\n        },\n        set: function (v) {\n            this.i.e1 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberAsLegendLabel\", {\n        /**\n         * Gets or sets the label displayed before series value in the Data Legend.\n        */\n        get: function () {\n            return this.i.ex;\n        },\n        set: function (v) {\n            this.i.ex = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"valueMemberAsLegendUnit\", {\n        /**\n         * Gets or sets the unit displayed after series value in the Data Legend.\n        */\n        get: function () {\n            return this.i.ez;\n        },\n        set: function (v) {\n            this.i.ez = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"visibility\", {\n        /**\n         * Gets or sets the Visibility of the stacked fragment.\n        */\n        get: function () {\n            return this.i.ki;\n        },\n        set: function (v) {\n            this.i.ki = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"actualVisibility\", {\n        /**\n         * Gets the actual visibility of the stacked fragment.\n        */\n        get: function () {\n            return this.i.kg;\n        },\n        set: function (v) {\n            this.i.kg = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"parentOrLocalBrush\", {\n        /**\n         * Gets the resolved brush used between the local series and the parent series.\n        */\n        get: function () {\n            return brushToString(this.i.jp);\n        },\n        set: function (v) {\n            this.i.jp = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrStackedFragmentSeries.prototype.findByName = function (name) {\n        return null;\n    };\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"hasUserValues\", {\n        get: function () {\n            return this._hasUserValues;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrStackedFragmentSeries.prototype.__m = function (propertyName) {\n        if (!this._inStyling) {\n            this._hasUserValues.add(propertyName);\n        }\n    };\n    IgrStackedFragmentSeries.prototype._styling = function (container, component, parent) {\n        if (this._inStyling) {\n            return;\n        }\n        this._inStyling = true;\n        this._stylingContainer = container;\n        this._stylingParent = component;\n        var genericPrefix = \"\";\n        var typeName = this.i.$type.name;\n        if (typeName.indexOf(\"Xam\") === 0) {\n            typeName = typeName.substring(3);\n        }\n        genericPrefix = toSpinal(\"StackedFragmentSeries\");\n        var additionalPrefixes = [];\n        var prefix = toSpinal(typeName);\n        additionalPrefixes.push(prefix + \"-\");\n        var b = this.i.$type.baseType;\n        while (b && b.name != \"Object\" &&\n            b.name != \"Base\" &&\n            b.name != \"Control\" &&\n            b.Name != \"DependencyObject\" &&\n            b.Name != \"FrameworkElement\") {\n            typeName = b.name;\n            if (typeName.indexOf(\"Xam\") === 0) {\n                typeName = typeName.substring(3);\n            }\n            var basePrefix = toSpinal(typeName);\n            additionalPrefixes.push(basePrefix + \"-\");\n            b = b.baseType;\n        }\n        if (parent) {\n            var parentTypeName = parent.i.$type.name;\n            if (parentTypeName.indexOf(\"Xam\") === 0) {\n                parentTypeName = parentTypeName.substring(3);\n            }\n            var parentPrefix = toSpinal(parentTypeName);\n            additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n            additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n        }\n        initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n        if (this._otherStyling) {\n            this._otherStyling(container, component, parent);\n        }\n        this._inStyling = false;\n    };\n    /**\n * Gets the item index associated with the specified world position\n\r\n*/\n    IgrStackedFragmentSeries.prototype.getItemIndex = function (world) {\n        var iv = this.i.bz(toPoint(world));\n        return (iv);\n    };\n    /**\n     * Gets the item that is the best match for the specified world coordinates.\n    \r\n    * @param world  * The world coordinates to use.\n    */\n    IgrStackedFragmentSeries.prototype.getItem = function (world) {\n        var iv = this.i.b8(toPoint(world));\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getPreviousOrExactIndex = function (world, skipUnknowns) {\n        var iv = this.i.b2(toPoint(world), skipUnknowns);\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getNextOrExactIndex = function (world, skipUnknowns) {\n        var iv = this.i.b1(toPoint(world), skipUnknowns);\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.bk(toPoint(world), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.j5(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    /**\n     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n    \r\n    * @param world  * The world coordinate for which to get a value bounding box for\n    */\n    IgrStackedFragmentSeries.prototype.getSeriesValueBoundingBox = function (world) {\n        var iv = this.i.j9(toPoint(world));\n        return fromRect(iv);\n    };\n    /**\n     * If possible, will return the best available value marker bounding box within the series that has the best value match for the world position provided.\n    \r\n    * @param world  * The world coordinates for which to get a value marker bounding box for\n    */\n    IgrStackedFragmentSeries.prototype.getSeriesValueMarkerBoundingBox = function (world) {\n        var iv = this.i.kb(toPoint(world));\n        return fromRect(iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesHighValue = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.bg(toPoint(world), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesHighValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.j1(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesLowValue = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.bi(toPoint(world), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesLowValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.j3(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesValuePositionFromSeriesPixel = function (mouse, useInterpolation, skipUnknowns) {\n        var iv = this.i.j6(toPoint(mouse), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    IgrStackedFragmentSeries.prototype.getSeriesValueFromSeriesPixel = function (mouse, useInterpolation, skipUnknowns) {\n        var iv = this.i.bl(toPoint(mouse), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    /**\n     * For a category plotted series, returns the current width of the items within the categories. This only returns a value if the items have some form of width (e.g. columns, bars, etc.) otherwise 0 is returned.\n    \r\n    */\n    IgrStackedFragmentSeries.prototype.getItemSpan = function () {\n        var iv = this.i.bf();\n        return (iv);\n    };\n    /**\n     * Converts a point from coordinates within the series plot area to a world position within axis space.\n    \r\n    * @param seriesPoint  * The pixel location within the plot area of the series.\n    */\n    IgrStackedFragmentSeries.prototype.toWorldPosition = function (seriesPoint) {\n        var iv = this.i.j7(toPoint(seriesPoint));\n        return fromPoint(iv);\n    };\n    /**\n     * Converts a point from world coordinates to coordinates within the viewport of the series.\n    \r\n    * @param world  * The world position from which to convert.\n    */\n    IgrStackedFragmentSeries.prototype.fromWorldPosition = function (world) {\n        var iv = this.i.j0(toPoint(world));\n        return fromPoint(iv);\n    };\n    /**\n     * Requests that the provided item should be brought into view if possible.\n    \r\n    * @param item  * The item to attempt to bring into view.\n    */\n    IgrStackedFragmentSeries.prototype.scrollIntoView = function (item) {\n        var iv = this.i.au(item);\n        return (iv);\n    };\n    /**\n     * Gets the effective viewport, adjusted to account for margins and other factors.\n    \r\n    */\n    IgrStackedFragmentSeries.prototype.getEffectiveViewport = function () {\n        var iv = this.i.j8();\n        return fromRect(iv);\n    };\n    /**\n     * Notifies the series that a visual property has changed, requiring a visual update.\n    \r\n    */\n    IgrStackedFragmentSeries.prototype.notifyVisualPropertiesChanged = function () {\n        this.i.e5();\n    };\n    /**\n     * Simulates a pointer hover over the series surface.\n    \r\n    * @param point  * The pointer position relative to the series viewport over which to hover.\n    */\n    IgrStackedFragmentSeries.prototype.simulateHover = function (point) {\n        this.i.fa(toPoint(point));\n    };\n    /**\n     * Moves the cursor point to the provided world position. Some series may react to the current cursor position.\n    \r\n    * @param point  * The cursor point, in world coordinates.\n    */\n    IgrStackedFragmentSeries.prototype.moveCursorPoint = function (point) {\n        this.i.e4(toPoint(point));\n    };\n    IgrStackedFragmentSeries.prototype.replayTransitionIn = function () {\n        this.i.e9();\n    };\n    Object.defineProperty(IgrStackedFragmentSeries.prototype, \"propertyUpdated\", {\n        /**\n         * Event raised when a property (including \"effective\" and non-dependency property) value changes.\n        */\n        get: function () {\n            return this._propertyUpdated;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._propertyUpdated_wrapped !== null) {\n                this.i.propertyUpdated = delegateRemove(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n                this._propertyUpdated_wrapped = null;\n                this._propertyUpdated = null;\n            }\n            this._propertyUpdated = ev;\n            this._propertyUpdated_wrapped = function (o, e) {\n                var outerArgs = new IgrPropertyUpdatedEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforePropertyUpdated) {\n                    _this.beforePropertyUpdated(_this, outerArgs);\n                }\n                if (_this._propertyUpdated) {\n                    _this._propertyUpdated(_this, outerArgs);\n                }\n            };\n            this.i.propertyUpdated = delegateCombine(this.i.propertyUpdated, this._propertyUpdated_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrStackedFragmentSeries;\n}(React.Component));\nexport { IgrStackedFragmentSeries };\n"]},"metadata":{},"sourceType":"module"}