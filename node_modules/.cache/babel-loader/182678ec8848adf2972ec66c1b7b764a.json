{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { OperatorSelectorValueChangedEventArgsDescriptionMetadata } from \"./OperatorSelectorValueChangedEventArgsDescriptionMetadata\";\nimport { OperatorSelectorOpeningEventArgsDescriptionMetadata } from \"./OperatorSelectorOpeningEventArgsDescriptionMetadata\";\nimport { OperatorSelectorClosingEventArgsDescriptionMetadata } from \"./OperatorSelectorClosingEventArgsDescriptionMetadata\";\nimport { DataGridComparisonOperatorSelectorDescription } from \"./DataGridComparisonOperatorSelectorDescription\";\n/**\n * @hidden\n */\n\nvar DataGridComparisonOperatorSelectorDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DataGridComparisonOperatorSelectorDescriptionMetadata, _super);\n\n  function DataGridComparisonOperatorSelectorDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DataGridComparisonOperatorSelectorDescriptionMetadata.b = function (a) {\n    if (DataGridComparisonOperatorSelectorDescriptionMetadata.a == null) {\n      DataGridComparisonOperatorSelectorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      DataGridComparisonOperatorSelectorDescriptionMetadata.c(DataGridComparisonOperatorSelectorDescriptionMetadata.a);\n    }\n\n    if (a.g(DataGridComparisonOperatorSelectorDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(DataGridComparisonOperatorSelectorDescriptionMetadata.a);\n    OperatorSelectorValueChangedEventArgsDescriptionMetadata.d(a);\n    OperatorSelectorOpeningEventArgsDescriptionMetadata.d(a);\n    OperatorSelectorClosingEventArgsDescriptionMetadata.d(a);\n  };\n\n  DataGridComparisonOperatorSelectorDescriptionMetadata.c = function (a) {\n    a.item(\"Value\", \"ExportedType:string:ColumnComparisonConditionOperatorType\");\n    a.item(\"Value@names\", \"Equals;NotEquals;LessThan;LessThanOrEqualTo;GreaterThan;GreaterThanOrEqualTo;Top;Bottom;TopPercentile;BottomPercentile;True;False;Contains;DoesNotContain;StartsWith;DoesNotStartWith;EndsWith;DoesNotEndWith;Today;Tomorrow;Yesterday;NextWeek;ThisWeek;LastWeek;NextMonth;ThisMonth;LastMonth;NextQuarter;ThisQuarter;LastQuarter;NextYear;ThisYear;LastYear;YearToDate;Q1;Q2;Q3;Q4;Month;Year;Empty;NotEmpty;IsNull;IsNotNull;Custom\");\n    a.item(\"CustomFilterID\", \"String\");\n    a.item(\"CustomFilterIndex\", \"Number:int\");\n    a.item(\"DataType\", \"ExportedType:string:DataSourceSchemaPropertyType\");\n    a.item(\"DataType@names\", \"StringValue;IntValue;BooleanValue;LongValue;ShortValue;DoubleValue;DecimalValue;SingleValue;DateTimeValue;DateTimeOffsetValue;ByteValue;ObjectValue\");\n    a.item(\"MaxHeight\", \"Number:int\");\n    a.item(\"ValueChangedRef\", \"EventRef::valueChanged\");\n    a.item(\"OpeningRef\", \"EventRef::opening\");\n    a.item(\"ClosingRef\", \"EventRef::closing\");\n  };\n\n  DataGridComparisonOperatorSelectorDescriptionMetadata.d = function (a) {\n    DataGridComparisonOperatorSelectorDescriptionMetadata.b(a);\n    a.u(\"DataGridComparisonOperatorSelector\", function () {\n      return new DataGridComparisonOperatorSelectorDescription();\n    });\n    a.t(\"DataGridComparisonOperatorSelector\", DataGridComparisonOperatorSelectorDescriptionMetadata.a);\n  };\n\n  DataGridComparisonOperatorSelectorDescriptionMetadata.$t = markType(DataGridComparisonOperatorSelectorDescriptionMetadata, 'DataGridComparisonOperatorSelectorDescriptionMetadata');\n  DataGridComparisonOperatorSelectorDescriptionMetadata.a = null;\n  return DataGridComparisonOperatorSelectorDescriptionMetadata;\n}(Base);\n\nexport { DataGridComparisonOperatorSelectorDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/DataGridComparisonOperatorSelectorDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","OperatorSelectorValueChangedEventArgsDescriptionMetadata","OperatorSelectorOpeningEventArgsDescriptionMetadata","OperatorSelectorClosingEventArgsDescriptionMetadata","DataGridComparisonOperatorSelectorDescription","DataGridComparisonOperatorSelectorDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","u","t","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { OperatorSelectorValueChangedEventArgsDescriptionMetadata } from \"./OperatorSelectorValueChangedEventArgsDescriptionMetadata\";\nimport { OperatorSelectorOpeningEventArgsDescriptionMetadata } from \"./OperatorSelectorOpeningEventArgsDescriptionMetadata\";\nimport { OperatorSelectorClosingEventArgsDescriptionMetadata } from \"./OperatorSelectorClosingEventArgsDescriptionMetadata\";\nimport { DataGridComparisonOperatorSelectorDescription } from \"./DataGridComparisonOperatorSelectorDescription\";\n/**\n * @hidden\n */\nvar DataGridComparisonOperatorSelectorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DataGridComparisonOperatorSelectorDescriptionMetadata, _super);\n    function DataGridComparisonOperatorSelectorDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataGridComparisonOperatorSelectorDescriptionMetadata.b = function (a) {\n        if (DataGridComparisonOperatorSelectorDescriptionMetadata.a == null) {\n            DataGridComparisonOperatorSelectorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            DataGridComparisonOperatorSelectorDescriptionMetadata.c(DataGridComparisonOperatorSelectorDescriptionMetadata.a);\n        }\n        if (a.g(DataGridComparisonOperatorSelectorDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(DataGridComparisonOperatorSelectorDescriptionMetadata.a);\n        OperatorSelectorValueChangedEventArgsDescriptionMetadata.d(a);\n        OperatorSelectorOpeningEventArgsDescriptionMetadata.d(a);\n        OperatorSelectorClosingEventArgsDescriptionMetadata.d(a);\n    };\n    DataGridComparisonOperatorSelectorDescriptionMetadata.c = function (a) {\n        a.item(\"Value\", \"ExportedType:string:ColumnComparisonConditionOperatorType\");\n        a.item(\"Value@names\", \"Equals;NotEquals;LessThan;LessThanOrEqualTo;GreaterThan;GreaterThanOrEqualTo;Top;Bottom;TopPercentile;BottomPercentile;True;False;Contains;DoesNotContain;StartsWith;DoesNotStartWith;EndsWith;DoesNotEndWith;Today;Tomorrow;Yesterday;NextWeek;ThisWeek;LastWeek;NextMonth;ThisMonth;LastMonth;NextQuarter;ThisQuarter;LastQuarter;NextYear;ThisYear;LastYear;YearToDate;Q1;Q2;Q3;Q4;Month;Year;Empty;NotEmpty;IsNull;IsNotNull;Custom\");\n        a.item(\"CustomFilterID\", \"String\");\n        a.item(\"CustomFilterIndex\", \"Number:int\");\n        a.item(\"DataType\", \"ExportedType:string:DataSourceSchemaPropertyType\");\n        a.item(\"DataType@names\", \"StringValue;IntValue;BooleanValue;LongValue;ShortValue;DoubleValue;DecimalValue;SingleValue;DateTimeValue;DateTimeOffsetValue;ByteValue;ObjectValue\");\n        a.item(\"MaxHeight\", \"Number:int\");\n        a.item(\"ValueChangedRef\", \"EventRef::valueChanged\");\n        a.item(\"OpeningRef\", \"EventRef::opening\");\n        a.item(\"ClosingRef\", \"EventRef::closing\");\n    };\n    DataGridComparisonOperatorSelectorDescriptionMetadata.d = function (a) {\n        DataGridComparisonOperatorSelectorDescriptionMetadata.b(a);\n        a.u(\"DataGridComparisonOperatorSelector\", function () { return new DataGridComparisonOperatorSelectorDescription(); });\n        a.t(\"DataGridComparisonOperatorSelector\", DataGridComparisonOperatorSelectorDescriptionMetadata.a);\n    };\n    DataGridComparisonOperatorSelectorDescriptionMetadata.$t = markType(DataGridComparisonOperatorSelectorDescriptionMetadata, 'DataGridComparisonOperatorSelectorDescriptionMetadata');\n    DataGridComparisonOperatorSelectorDescriptionMetadata.a = null;\n    return DataGridComparisonOperatorSelectorDescriptionMetadata;\n}(Base));\nexport { DataGridComparisonOperatorSelectorDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}