{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, IEqualityComparer$1_$type, markType } from \"./type\";\nimport { HalfEdge } from \"./HalfEdge\";\n/**\n * @hidden\n */\n\nvar EdgeComparer =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(EdgeComparer, _super);\n\n  function EdgeComparer() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  EdgeComparer.prototype.equalsC = function (a, b) {\n    return a.a == b.a && a.b == b.b || a.a == b.b && a.b == b.a;\n  };\n\n  EdgeComparer.prototype.getHashCodeC = function (a) {\n    return 65536 * Math.max(a.a, a.b) + Math.min(a.a, a.b);\n  };\n\n  EdgeComparer.$t = markType(EdgeComparer, 'EdgeComparer', Base.$, [IEqualityComparer$1_$type.specialize(HalfEdge.$)]);\n  return EdgeComparer;\n}(Base);\n\nexport { EdgeComparer };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/EdgeComparer.js"],"names":["__extends","Base","IEqualityComparer$1_$type","markType","HalfEdge","EdgeComparer","_super","apply","arguments","prototype","equalsC","a","b","getHashCodeC","Math","max","min","$t","$","specialize"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,yBAAf,EAA0CC,QAA1C,QAA0D,QAA1D;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA;AACA;AACA;;AACA,IAAIC,YAAY;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC9DN,EAAAA,SAAS,CAACK,YAAD,EAAeC,MAAf,CAAT;;AACA,WAASD,YAAT,GAAwB;AACpB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,YAAY,CAACI,SAAb,CAAuBC,OAAvB,GAAiC,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AAC7C,WAAQD,CAAC,CAACA,CAAF,IAAOC,CAAC,CAACD,CAAT,IAAcA,CAAC,CAACC,CAAF,IAAOA,CAAC,CAACA,CAAxB,IAA+BD,CAAC,CAACA,CAAF,IAAOC,CAAC,CAACA,CAAT,IAAcD,CAAC,CAACC,CAAF,IAAOA,CAAC,CAACD,CAA7D;AACH,GAFD;;AAGAN,EAAAA,YAAY,CAACI,SAAb,CAAuBI,YAAvB,GAAsC,UAAUF,CAAV,EAAa;AAC/C,WAAO,QAAQG,IAAI,CAACC,GAAL,CAASJ,CAAC,CAACA,CAAX,EAAcA,CAAC,CAACC,CAAhB,CAAR,GAA6BE,IAAI,CAACE,GAAL,CAASL,CAAC,CAACA,CAAX,EAAcA,CAAC,CAACC,CAAhB,CAApC;AACH,GAFD;;AAGAP,EAAAA,YAAY,CAACY,EAAb,GAAkBd,QAAQ,CAACE,YAAD,EAAe,cAAf,EAA+BJ,IAAI,CAACiB,CAApC,EAAuC,CAAChB,yBAAyB,CAACiB,UAA1B,CAAqCf,QAAQ,CAACc,CAA9C,CAAD,CAAvC,CAA1B;AACA,SAAOb,YAAP;AACH,CAb+C,CAa9CJ,IAb8C,CAAhD;;AAcA,SAASI,YAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, IEqualityComparer$1_$type, markType } from \"./type\";\nimport { HalfEdge } from \"./HalfEdge\";\n/**\n * @hidden\n */\nvar EdgeComparer = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(EdgeComparer, _super);\n    function EdgeComparer() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EdgeComparer.prototype.equalsC = function (a, b) {\n        return (a.a == b.a && a.b == b.b) || (a.a == b.b && a.b == b.a);\n    };\n    EdgeComparer.prototype.getHashCodeC = function (a) {\n        return 65536 * Math.max(a.a, a.b) + Math.min(a.a, a.b);\n    };\n    EdgeComparer.$t = markType(EdgeComparer, 'EdgeComparer', Base.$, [IEqualityComparer$1_$type.specialize(HalfEdge.$)]);\n    return EdgeComparer;\n}(Base));\nexport { EdgeComparer };\n"]},"metadata":{},"sourceType":"module"}