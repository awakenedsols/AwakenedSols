{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { MapTileSource } from \"./MapTileSource\";\nimport { markType } from \"./type\";\nimport { Uri } from \"./Uri\";\nimport { stringReplace, stringIsNullOrEmpty, stringStartsWith } from \"./string\";\n/**\n * @hidden\n */\n\nvar OpenStreetMapTileSource =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(OpenStreetMapTileSource, _super);\n\n  function OpenStreetMapTileSource() {\n    var _this = _super.call(this, 134217728, 134217728, 256, 256, 0) || this;\n\n    _this.z = \"tile.openstreetmap.org/{Z}/{X}/{Y}.png\";\n\n    _this.setTilePathUrl(_this.z);\n\n    return _this;\n  }\n\n  OpenStreetMapTileSource.prototype.x = function (a, b, c, d) {\n    var e = a - 8;\n\n    if (e > 0) {\n      var f = this.z;\n      f = stringReplace(f, \"{Z}\", e.toString());\n      f = stringReplace(f, \"{X}\", b.toString());\n      f = stringReplace(f, \"{Y}\", c.toString());\n      d.add(new Uri(0, f));\n    }\n  };\n\n  OpenStreetMapTileSource.prototype.setTilePathUrl = function (a) {\n    if (!stringIsNullOrEmpty(a)) {\n      if (stringStartsWith(a, \"http://\") || stringStartsWith(a, \"https://\")) {\n        this.z = a;\n      } else {\n        var b = \"http://\";\n        b = 'https:' == document.location.protocol ? 'https://' : 'http://';\n        this.z = b + a;\n      }\n    }\n  };\n\n  OpenStreetMapTileSource.$t = markType(OpenStreetMapTileSource, 'OpenStreetMapTileSource', MapTileSource.$);\n  return OpenStreetMapTileSource;\n}(MapTileSource);\n\nexport { OpenStreetMapTileSource };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/OpenStreetMapTileSource.js"],"names":["__extends","MapTileSource","markType","Uri","stringReplace","stringIsNullOrEmpty","stringStartsWith","OpenStreetMapTileSource","_super","_this","call","z","setTilePathUrl","prototype","x","a","b","c","d","e","f","toString","add","document","location","protocol","$t","$"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,GAAT,QAAoB,OAApB;AACA,SAASC,aAAT,EAAwBC,mBAAxB,EAA6CC,gBAA7C,QAAqE,UAArE;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACzER,EAAAA,SAAS,CAACO,uBAAD,EAA0BC,MAA1B,CAAT;;AACA,WAASD,uBAAT,GAAmC;AAC/B,QAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkB,SAAlB,EAA6B,SAA7B,EAAwC,GAAxC,EAA6C,GAA7C,EAAkD,CAAlD,KAAwD,IAApE;;AACAD,IAAAA,KAAK,CAACE,CAAN,GAAU,wCAAV;;AACAF,IAAAA,KAAK,CAACG,cAAN,CAAqBH,KAAK,CAACE,CAA3B;;AACA,WAAOF,KAAP;AACH;;AACDF,EAAAA,uBAAuB,CAACM,SAAxB,CAAkCC,CAAlC,GAAsC,UAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBC,CAAnB,EAAsB;AACxD,QAAIC,CAAC,GAAGJ,CAAC,GAAG,CAAZ;;AACA,QAAII,CAAC,GAAG,CAAR,EAAW;AACP,UAAIC,CAAC,GAAG,KAAKT,CAAb;AACAS,MAAAA,CAAC,GAAGhB,aAAa,CAACgB,CAAD,EAAI,KAAJ,EAAWD,CAAC,CAACE,QAAF,EAAX,CAAjB;AACAD,MAAAA,CAAC,GAAGhB,aAAa,CAACgB,CAAD,EAAI,KAAJ,EAAWJ,CAAC,CAACK,QAAF,EAAX,CAAjB;AACAD,MAAAA,CAAC,GAAGhB,aAAa,CAACgB,CAAD,EAAI,KAAJ,EAAWH,CAAC,CAACI,QAAF,EAAX,CAAjB;AACAH,MAAAA,CAAC,CAACI,GAAF,CAAM,IAAInB,GAAJ,CAAQ,CAAR,EAAWiB,CAAX,CAAN;AACH;AACJ,GATD;;AAUAb,EAAAA,uBAAuB,CAACM,SAAxB,CAAkCD,cAAlC,GAAmD,UAAUG,CAAV,EAAa;AAC5D,QAAI,CAACV,mBAAmB,CAACU,CAAD,CAAxB,EAA6B;AACzB,UAAIT,gBAAgB,CAACS,CAAD,EAAI,SAAJ,CAAhB,IAAkCT,gBAAgB,CAACS,CAAD,EAAI,UAAJ,CAAtD,EAAuE;AACnE,aAAKJ,CAAL,GAASI,CAAT;AACH,OAFD,MAGK;AACD,YAAIC,CAAC,GAAG,SAAR;AACAA,QAAAA,CAAC,GAAK,YAAYO,QAAQ,CAACC,QAAT,CAAkBC,QAA9B,GAAyC,UAAzC,GAAsD,SAA5D;AACA,aAAKd,CAAL,GAASK,CAAC,GAAGD,CAAb;AACH;AACJ;AACJ,GAXD;;AAYAR,EAAAA,uBAAuB,CAACmB,EAAxB,GAA6BxB,QAAQ,CAACK,uBAAD,EAA0B,yBAA1B,EAAqDN,aAAa,CAAC0B,CAAnE,CAArC;AACA,SAAOpB,uBAAP;AACH,CAhC0D,CAgCzDN,aAhCyD,CAA3D;;AAiCA,SAASM,uBAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { MapTileSource } from \"./MapTileSource\";\nimport { markType } from \"./type\";\nimport { Uri } from \"./Uri\";\nimport { stringReplace, stringIsNullOrEmpty, stringStartsWith } from \"./string\";\n/**\n * @hidden\n */\nvar OpenStreetMapTileSource = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(OpenStreetMapTileSource, _super);\n    function OpenStreetMapTileSource() {\n        var _this = _super.call(this, 134217728, 134217728, 256, 256, 0) || this;\n        _this.z = \"tile.openstreetmap.org/{Z}/{X}/{Y}.png\";\n        _this.setTilePathUrl(_this.z);\n        return _this;\n    }\n    OpenStreetMapTileSource.prototype.x = function (a, b, c, d) {\n        var e = a - 8;\n        if (e > 0) {\n            var f = this.z;\n            f = stringReplace(f, \"{Z}\", e.toString());\n            f = stringReplace(f, \"{X}\", b.toString());\n            f = stringReplace(f, \"{Y}\", c.toString());\n            d.add(new Uri(0, f));\n        }\n    };\n    OpenStreetMapTileSource.prototype.setTilePathUrl = function (a) {\n        if (!stringIsNullOrEmpty(a)) {\n            if (stringStartsWith(a, \"http://\") || stringStartsWith(a, \"https://\")) {\n                this.z = a;\n            }\n            else {\n                var b = \"http://\";\n                b = (('https:' == document.location.protocol ? 'https://' : 'http://'));\n                this.z = b + a;\n            }\n        }\n    };\n    OpenStreetMapTileSource.$t = markType(OpenStreetMapTileSource, 'OpenStreetMapTileSource', MapTileSource.$);\n    return OpenStreetMapTileSource;\n}(MapTileSource));\nexport { OpenStreetMapTileSource };\n"]},"metadata":{},"sourceType":"module"}