{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\n/**\n * Financial indicator base class for doing calculating an itemwize indicator.\n * An itemwise indicator's individual values don't depend on any other values in the\n * collection so can always be independently recalculated. Also, because of this, the\n * base class handles all the looping logic and inheritors only need to provide the\n * actual calculation.\n*/\n\nvar IgrItemwiseStrategyBasedIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrItemwiseStrategyBasedIndicator, _super);\n\n  function IgrItemwiseStrategyBasedIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrItemwiseStrategyBasedIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrItemwiseStrategyBasedIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrItemwiseStrategyBasedIndicator };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-itemwise-strategy-based-indicator.js"],"names":["__extends","IgrStrategyBasedIndicator","IgrItemwiseStrategyBasedIndicator","_super","props","call","Object","defineProperty","prototype","get","_implementation","enumerable","configurable"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,iCAAiC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACnFH,EAAAA,SAAS,CAACE,iCAAD,EAAoCC,MAApC,CAAT;;AACA,WAASD,iCAAT,CAA2CE,KAA3C,EAAkD;AAC9C,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDE,EAAAA,MAAM,CAACC,cAAP,CAAsBL,iCAAiC,CAACM,SAAxD,EAAmE,GAAnE,EAAwE;AACpE;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANmE;AAOpEC,IAAAA,UAAU,EAAE,KAPwD;AAQpEC,IAAAA,YAAY,EAAE;AARsD,GAAxE;AAUA,SAAOV,iCAAP;AACH,CAhBoE,CAgBnED,yBAhBmE,CAArE;;AAiBA,SAASC,iCAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\n/**\n * Financial indicator base class for doing calculating an itemwize indicator.\n * An itemwise indicator's individual values don't depend on any other values in the\n * collection so can always be independently recalculated. Also, because of this, the\n * base class handles all the looping logic and inheritors only need to provide the\n * actual calculation.\n*/\nvar IgrItemwiseStrategyBasedIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrItemwiseStrategyBasedIndicator, _super);\n    function IgrItemwiseStrategyBasedIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrItemwiseStrategyBasedIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrItemwiseStrategyBasedIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrItemwiseStrategyBasedIndicator };\n"]},"metadata":{},"sourceType":"module"}