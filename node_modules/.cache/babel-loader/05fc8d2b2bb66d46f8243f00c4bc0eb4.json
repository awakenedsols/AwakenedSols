{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nexport function getColorStringSafe(v) {\n  /*jshint eqnull:true */\n  return v == null ? null : v.colorString();\n}\n;\nexport var wellKnownColors = {\n  aliceblue: \"f0f8ff\",\n  antiquewhite: \"faebd7\",\n  aqua: \"00ffff\",\n  aquamarine: \"7fffd4\",\n  azure: \"f0ffff\",\n  beige: \"f5f5dc\",\n  bisque: \"ffe4c4\",\n  black: \"000000\",\n  blanchedalmond: \"ffebcd\",\n  blue: \"0000ff\",\n  blueviolet: \"8a2be2\",\n  brown: \"a52a2a\",\n  burlywood: \"deb887\",\n  cadetblue: \"5f9ea0\",\n  chartreuse: \"7fff00\",\n  chocolate: \"d2691e\",\n  coral: \"ff7f50\",\n  cornflowerblue: \"6495ed\",\n  cornsilk: \"fff8dc\",\n  crimson: \"dc143c\",\n  cyan: \"00ffff\",\n  darkblue: \"00008b\",\n  darkcyan: \"008b8b\",\n  darkgoldenrod: \"b8860b\",\n  darkgray: \"a9a9a9\",\n  darkgreen: \"006400\",\n  darkkhaki: \"bdb76b\",\n  darkmagenta: \"8b008b\",\n  darkolivegreen: \"556b2f\",\n  darkorange: \"ff8c00\",\n  darkorchid: \"9932cc\",\n  darkred: \"8b0000\",\n  darksalmon: \"e9967a\",\n  darkseagreen: \"8fbc8f\",\n  darkslateblue: \"483d8b\",\n  darkslategray: \"2f4f4f\",\n  darkturquoise: \"00ced1\",\n  darkviolet: \"9400d3\",\n  deeppink: \"ff1493\",\n  deepskyblue: \"00bfff\",\n  dimgray: \"696969\",\n  dodgerblue: \"1e90ff\",\n  feldspar: \"d19275\",\n  firebrick: \"b22222\",\n  floralwhite: \"fffaf0\",\n  forestgreen: \"228b22\",\n  fuchsia: \"ff00ff\",\n  gainsboro: \"dcdcdc\",\n  ghostwhite: \"f8f8ff\",\n  gold: \"ffd700\",\n  goldenrod: \"daa520\",\n  gray: \"808080\",\n  green: \"008000\",\n  greenyellow: \"adff2f\",\n  honeydew: \"f0fff0\",\n  hotpink: \"ff69b4\",\n  indianred: \"cd5c5c\",\n  indigo: \"4b0082\",\n  ivory: \"fffff0\",\n  khaki: \"f0e68c\",\n  lavender: \"e6e6fa\",\n  lavenderblush: \"fff0f5\",\n  lawngreen: \"7cfc00\",\n  lemonchiffon: \"fffacd\",\n  lightblue: \"add8e6\",\n  lightcoral: \"f08080\",\n  lightcyan: \"e0ffff\",\n  lightgoldenrodyellow: \"fafad2\",\n  lightgrey: \"d3d3d3\",\n  lightgreen: \"90ee90\",\n  lightpink: \"ffb6c1\",\n  lightsalmon: \"ffa07a\",\n  lightseagreen: \"20b2aa\",\n  lightskyblue: \"87cefa\",\n  lightslateblue: \"8470ff\",\n  lightslategray: \"778899\",\n  lightsteelblue: \"b0c4de\",\n  lightyellow: \"ffffe0\",\n  lime: \"00ff00\",\n  limegreen: \"32cd32\",\n  linen: \"faf0e6\",\n  magenta: \"ff00ff\",\n  maroon: \"800000\",\n  mediumaquamarine: \"66cdaa\",\n  mediumblue: \"0000cd\",\n  mediumorchid: \"ba55d3\",\n  mediumpurple: \"9370d8\",\n  mediumseagreen: \"3cb371\",\n  mediumslateblue: \"7b68ee\",\n  mediumspringgreen: \"00fa9a\",\n  mediumturquoise: \"48d1cc\",\n  mediumvioletred: \"c71585\",\n  midnightblue: \"191970\",\n  mintcream: \"f5fffa\",\n  mistyrose: \"ffe4e1\",\n  moccasin: \"ffe4b5\",\n  navajowhite: \"ffdead\",\n  navy: \"000080\",\n  oldlace: \"fdf5e6\",\n  olive: \"808000\",\n  olivedrab: \"6b8e23\",\n  orange: \"ffa500\",\n  orangered: \"ff4500\",\n  orchid: \"da70d6\",\n  palegoldenrod: \"eee8aa\",\n  palegreen: \"98fb98\",\n  paleturquoise: \"afeeee\",\n  palevioletred: \"d87093\",\n  papayawhip: \"ffefd5\",\n  peachpuff: \"ffdab9\",\n  peru: \"cd853f\",\n  pink: \"ffc0cb\",\n  plum: \"dda0dd\",\n  powderblue: \"b0e0e6\",\n  purple: \"800080\",\n  red: \"ff0000\",\n  rosybrown: \"bc8f8f\",\n  royalblue: \"4169e1\",\n  saddlebrown: \"8b4513\",\n  salmon: \"fa8072\",\n  sandybrown: \"f4a460\",\n  seagreen: \"2e8b57\",\n  seashell: \"fff5ee\",\n  sienna: \"a0522d\",\n  silver: \"c0c0c0\",\n  skyblue: \"87ceeb\",\n  slateblue: \"6a5acd\",\n  slategray: \"708090\",\n  snow: \"fffafa\",\n  springgreen: \"00ff7f\",\n  steelblue: \"4682b4\",\n  tan: \"d2b48c\",\n  teal: \"008080\",\n  thistle: \"d8bfd8\",\n  tomato: \"ff6347\",\n  turquoise: \"40e0d0\",\n  violet: \"ee82ee\",\n  violetred: \"d02090\",\n  wheat: \"f5deb3\",\n  white: \"ffffff\",\n  whitesmoke: \"f5f5f5\",\n  yellow: \"ffff00\",\n  yellowgreen: \"9acd32\"\n};\nexport function strToColor(str) {\n  var ret = {\n    a: 255,\n    r: 0,\n    g: 0,\n    b: 0\n  };\n  var asColorName = str.replace(\" \", \"\").toLowerCase();\n\n  if (asColorName === \"transparent\") {\n    return {\n      a: 0,\n      r: 0,\n      g: 0,\n      b: 0\n    };\n  }\n\n  if (wellKnownColors[asColorName] !== undefined) {\n    str = wellKnownColors[asColorName];\n  }\n\n  var parts;\n\n  if (str.lastIndexOf(\"rgba\", 0) === 0) {\n    str = str.replace(\"rgba\", \"\").replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\");\n    parts = str.split(\",\");\n    ret.r = parseInt(parts[0], 10);\n    ret.g = parseInt(parts[1], 10);\n    ret.b = parseInt(parts[2], 10);\n    ret.a = parseFloat(parts[3]) * 255.0;\n  } else if (str.lastIndexOf(\"rgb\", 0) === 0) {\n    str = str.replace(\"rgb\", \"\").replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\");\n    parts = str.split(\",\");\n    ret.r = parseInt(parts[0], 10);\n    ret.g = parseInt(parts[1], 10);\n    ret.b = parseInt(parts[2], 10);\n  } else {\n    str = str.replace(\"#\", \"\").replace(\" \", \"\");\n\n    if (str.length === 8) {\n      ret.r = parseInt(str.substr(0, 2), 16);\n      ret.g = parseInt(str.substr(2, 2), 16);\n      ret.b = parseInt(str.substr(4, 2), 16);\n      ret.a = parseInt(str.substr(6, 2), 16);\n    } else if (str.length === 6) {\n      ret.r = parseInt(str.substr(0, 2), 16);\n      ret.g = parseInt(str.substr(2, 2), 16);\n      ret.b = parseInt(str.substr(4, 2), 16);\n    } else if (str.length === 3) {\n      ret.r = parseInt(str.substr(0, 1) + str.substr(0, 1), 16);\n      ret.g = parseInt(str.substr(1, 1) + str.substr(1, 1), 16);\n      ret.b = parseInt(str.substr(2, 1) + str.substr(2, 1), 16);\n    }\n  }\n\n  return ret;\n}\n;\nexport function rgbToHex(color) {\n  /* Convert color from RGB to HEX format. null if non-rgb color is provided.\n      paramType=\"string\" optional=\"false\" Color in RGB format.\n      returnType=\"string|null\" Returns converted color from RGB to HEX format. null if non-rgb color is provided.\n  */\n  var r,\n      g,\n      b,\n      colHex = null;\n\n  if (color.charAt(0) === \"r\") {\n    var colorArr = color.replace(\"rgb(\", \"\").replace(\")\", \"\").split(\",\");\n    r = parseInt(colorArr[0], 10).toString(16);\n    g = parseInt(colorArr[1], 10).toString(16);\n    b = parseInt(colorArr[2], 10).toString(16);\n    r = r.length === 1 ? \"0\" + r : r;\n    g = g.length === 1 ? \"0\" + g : g;\n    b = b.length === 1 ? \"0\" + b : b;\n    colHex = \"#\" + r + g + b;\n  }\n\n  return colHex;\n}","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/colorCore.js"],"names":["getColorStringSafe","v","colorString","wellKnownColors","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dodgerblue","feldspar","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgrey","lightgreen","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslateblue","lightslategray","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","violetred","wheat","white","whitesmoke","yellow","yellowgreen","strToColor","str","ret","a","r","g","b","asColorName","replace","toLowerCase","undefined","parts","lastIndexOf","split","parseInt","parseFloat","length","substr","rgbToHex","color","colHex","charAt","colorArr","toString"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,kBAAT,CAA4BC,CAA5B,EAA+B;AAClC;AACA,SAAOA,CAAC,IAAI,IAAL,GAAY,IAAZ,GAAmBA,CAAC,CAACC,WAAF,EAA1B;AACH;AACD;AACA,OAAO,IAAIC,eAAe,GAAG;AACzBC,EAAAA,SAAS,EAAE,QADc;AAEzBC,EAAAA,YAAY,EAAE,QAFW;AAGzBC,EAAAA,IAAI,EAAE,QAHmB;AAIzBC,EAAAA,UAAU,EAAE,QAJa;AAKzBC,EAAAA,KAAK,EAAE,QALkB;AAMzBC,EAAAA,KAAK,EAAE,QANkB;AAOzBC,EAAAA,MAAM,EAAE,QAPiB;AAQzBC,EAAAA,KAAK,EAAE,QARkB;AASzBC,EAAAA,cAAc,EAAE,QATS;AAUzBC,EAAAA,IAAI,EAAE,QAVmB;AAWzBC,EAAAA,UAAU,EAAE,QAXa;AAYzBC,EAAAA,KAAK,EAAE,QAZkB;AAazBC,EAAAA,SAAS,EAAE,QAbc;AAczBC,EAAAA,SAAS,EAAE,QAdc;AAezBC,EAAAA,UAAU,EAAE,QAfa;AAgBzBC,EAAAA,SAAS,EAAE,QAhBc;AAiBzBC,EAAAA,KAAK,EAAE,QAjBkB;AAkBzBC,EAAAA,cAAc,EAAE,QAlBS;AAmBzBC,EAAAA,QAAQ,EAAE,QAnBe;AAoBzBC,EAAAA,OAAO,EAAE,QApBgB;AAqBzBC,EAAAA,IAAI,EAAE,QArBmB;AAsBzBC,EAAAA,QAAQ,EAAE,QAtBe;AAuBzBC,EAAAA,QAAQ,EAAE,QAvBe;AAwBzBC,EAAAA,aAAa,EAAE,QAxBU;AAyBzBC,EAAAA,QAAQ,EAAE,QAzBe;AA0BzBC,EAAAA,SAAS,EAAE,QA1Bc;AA2BzBC,EAAAA,SAAS,EAAE,QA3Bc;AA4BzBC,EAAAA,WAAW,EAAE,QA5BY;AA6BzBC,EAAAA,cAAc,EAAE,QA7BS;AA8BzBC,EAAAA,UAAU,EAAE,QA9Ba;AA+BzBC,EAAAA,UAAU,EAAE,QA/Ba;AAgCzBC,EAAAA,OAAO,EAAE,QAhCgB;AAiCzBC,EAAAA,UAAU,EAAE,QAjCa;AAkCzBC,EAAAA,YAAY,EAAE,QAlCW;AAmCzBC,EAAAA,aAAa,EAAE,QAnCU;AAoCzBC,EAAAA,aAAa,EAAE,QApCU;AAqCzBC,EAAAA,aAAa,EAAE,QArCU;AAsCzBC,EAAAA,UAAU,EAAE,QAtCa;AAuCzBC,EAAAA,QAAQ,EAAE,QAvCe;AAwCzBC,EAAAA,WAAW,EAAE,QAxCY;AAyCzBC,EAAAA,OAAO,EAAE,QAzCgB;AA0CzBC,EAAAA,UAAU,EAAE,QA1Ca;AA2CzBC,EAAAA,QAAQ,EAAE,QA3Ce;AA4CzBC,EAAAA,SAAS,EAAE,QA5Cc;AA6CzBC,EAAAA,WAAW,EAAE,QA7CY;AA8CzBC,EAAAA,WAAW,EAAE,QA9CY;AA+CzBC,EAAAA,OAAO,EAAE,QA/CgB;AAgDzBC,EAAAA,SAAS,EAAE,QAhDc;AAiDzBC,EAAAA,UAAU,EAAE,QAjDa;AAkDzBC,EAAAA,IAAI,EAAE,QAlDmB;AAmDzBC,EAAAA,SAAS,EAAE,QAnDc;AAoDzBC,EAAAA,IAAI,EAAE,QApDmB;AAqDzBC,EAAAA,KAAK,EAAE,QArDkB;AAsDzBC,EAAAA,WAAW,EAAE,QAtDY;AAuDzBC,EAAAA,QAAQ,EAAE,QAvDe;AAwDzBC,EAAAA,OAAO,EAAE,QAxDgB;AAyDzBC,EAAAA,SAAS,EAAE,QAzDc;AA0DzBC,EAAAA,MAAM,EAAE,QA1DiB;AA2DzBC,EAAAA,KAAK,EAAE,QA3DkB;AA4DzBC,EAAAA,KAAK,EAAE,QA5DkB;AA6DzBC,EAAAA,QAAQ,EAAE,QA7De;AA8DzBC,EAAAA,aAAa,EAAE,QA9DU;AA+DzBC,EAAAA,SAAS,EAAE,QA/Dc;AAgEzBC,EAAAA,YAAY,EAAE,QAhEW;AAiEzBC,EAAAA,SAAS,EAAE,QAjEc;AAkEzBC,EAAAA,UAAU,EAAE,QAlEa;AAmEzBC,EAAAA,SAAS,EAAE,QAnEc;AAoEzBC,EAAAA,oBAAoB,EAAE,QApEG;AAqEzBC,EAAAA,SAAS,EAAE,QArEc;AAsEzBC,EAAAA,UAAU,EAAE,QAtEa;AAuEzBC,EAAAA,SAAS,EAAE,QAvEc;AAwEzBC,EAAAA,WAAW,EAAE,QAxEY;AAyEzBC,EAAAA,aAAa,EAAE,QAzEU;AA0EzBC,EAAAA,YAAY,EAAE,QA1EW;AA2EzBC,EAAAA,cAAc,EAAE,QA3ES;AA4EzBC,EAAAA,cAAc,EAAE,QA5ES;AA6EzBC,EAAAA,cAAc,EAAE,QA7ES;AA8EzBC,EAAAA,WAAW,EAAE,QA9EY;AA+EzBC,EAAAA,IAAI,EAAE,QA/EmB;AAgFzBC,EAAAA,SAAS,EAAE,QAhFc;AAiFzBC,EAAAA,KAAK,EAAE,QAjFkB;AAkFzBC,EAAAA,OAAO,EAAE,QAlFgB;AAmFzBC,EAAAA,MAAM,EAAE,QAnFiB;AAoFzBC,EAAAA,gBAAgB,EAAE,QApFO;AAqFzBC,EAAAA,UAAU,EAAE,QArFa;AAsFzBC,EAAAA,YAAY,EAAE,QAtFW;AAuFzBC,EAAAA,YAAY,EAAE,QAvFW;AAwFzBC,EAAAA,cAAc,EAAE,QAxFS;AAyFzBC,EAAAA,eAAe,EAAE,QAzFQ;AA0FzBC,EAAAA,iBAAiB,EAAE,QA1FM;AA2FzBC,EAAAA,eAAe,EAAE,QA3FQ;AA4FzBC,EAAAA,eAAe,EAAE,QA5FQ;AA6FzBC,EAAAA,YAAY,EAAE,QA7FW;AA8FzBC,EAAAA,SAAS,EAAE,QA9Fc;AA+FzBC,EAAAA,SAAS,EAAE,QA/Fc;AAgGzBC,EAAAA,QAAQ,EAAE,QAhGe;AAiGzBC,EAAAA,WAAW,EAAE,QAjGY;AAkGzBC,EAAAA,IAAI,EAAE,QAlGmB;AAmGzBC,EAAAA,OAAO,EAAE,QAnGgB;AAoGzBC,EAAAA,KAAK,EAAE,QApGkB;AAqGzBC,EAAAA,SAAS,EAAE,QArGc;AAsGzBC,EAAAA,MAAM,EAAE,QAtGiB;AAuGzBC,EAAAA,SAAS,EAAE,QAvGc;AAwGzBC,EAAAA,MAAM,EAAE,QAxGiB;AAyGzBC,EAAAA,aAAa,EAAE,QAzGU;AA0GzBC,EAAAA,SAAS,EAAE,QA1Gc;AA2GzBC,EAAAA,aAAa,EAAE,QA3GU;AA4GzBC,EAAAA,aAAa,EAAE,QA5GU;AA6GzBC,EAAAA,UAAU,EAAE,QA7Ga;AA8GzBC,EAAAA,SAAS,EAAE,QA9Gc;AA+GzBC,EAAAA,IAAI,EAAE,QA/GmB;AAgHzBC,EAAAA,IAAI,EAAE,QAhHmB;AAiHzBC,EAAAA,IAAI,EAAE,QAjHmB;AAkHzBC,EAAAA,UAAU,EAAE,QAlHa;AAmHzBC,EAAAA,MAAM,EAAE,QAnHiB;AAoHzBC,EAAAA,GAAG,EAAE,QApHoB;AAqHzBC,EAAAA,SAAS,EAAE,QArHc;AAsHzBC,EAAAA,SAAS,EAAE,QAtHc;AAuHzBC,EAAAA,WAAW,EAAE,QAvHY;AAwHzBC,EAAAA,MAAM,EAAE,QAxHiB;AAyHzBC,EAAAA,UAAU,EAAE,QAzHa;AA0HzBC,EAAAA,QAAQ,EAAE,QA1He;AA2HzBC,EAAAA,QAAQ,EAAE,QA3He;AA4HzBC,EAAAA,MAAM,EAAE,QA5HiB;AA6HzBC,EAAAA,MAAM,EAAE,QA7HiB;AA8HzBC,EAAAA,OAAO,EAAE,QA9HgB;AA+HzBC,EAAAA,SAAS,EAAE,QA/Hc;AAgIzBC,EAAAA,SAAS,EAAE,QAhIc;AAiIzBC,EAAAA,IAAI,EAAE,QAjImB;AAkIzBC,EAAAA,WAAW,EAAE,QAlIY;AAmIzBC,EAAAA,SAAS,EAAE,QAnIc;AAoIzBC,EAAAA,GAAG,EAAE,QApIoB;AAqIzBC,EAAAA,IAAI,EAAE,QArImB;AAsIzBC,EAAAA,OAAO,EAAE,QAtIgB;AAuIzBC,EAAAA,MAAM,EAAE,QAvIiB;AAwIzBC,EAAAA,SAAS,EAAE,QAxIc;AAyIzBC,EAAAA,MAAM,EAAE,QAzIiB;AA0IzBC,EAAAA,SAAS,EAAE,QA1Ic;AA2IzBC,EAAAA,KAAK,EAAE,QA3IkB;AA4IzBC,EAAAA,KAAK,EAAE,QA5IkB;AA6IzBC,EAAAA,UAAU,EAAE,QA7Ia;AA8IzBC,EAAAA,MAAM,EAAE,QA9IiB;AA+IzBC,EAAAA,WAAW,EAAE;AA/IY,CAAtB;AAiJP,OAAO,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AAC5B,MAAIC,GAAG,GAAG;AACNC,IAAAA,CAAC,EAAE,GADG;AAENC,IAAAA,CAAC,EAAE,CAFG;AAGNC,IAAAA,CAAC,EAAE,CAHG;AAINC,IAAAA,CAAC,EAAE;AAJG,GAAV;AAMA,MAAIC,WAAW,GAAGN,GAAG,CAACO,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,EAAqBC,WAArB,EAAlB;;AACA,MAAIF,WAAW,KAAK,aAApB,EAAmC;AAC/B,WAAO;AAAEJ,MAAAA,CAAC,EAAE,CAAL;AAAQC,MAAAA,CAAC,EAAE,CAAX;AAAcC,MAAAA,CAAC,EAAE,CAAjB;AAAoBC,MAAAA,CAAC,EAAE;AAAvB,KAAP;AACH;;AACD,MAAItJ,eAAe,CAACuJ,WAAD,CAAf,KAAiCG,SAArC,EAAgD;AAC5CT,IAAAA,GAAG,GAAGjJ,eAAe,CAACuJ,WAAD,CAArB;AACH;;AACD,MAAII,KAAJ;;AACA,MAAIV,GAAG,CAACW,WAAJ,CAAgB,MAAhB,EAAwB,CAAxB,MAA+B,CAAnC,EAAsC;AAClCX,IAAAA,GAAG,GAAGA,GAAG,CAACO,OAAJ,CAAY,MAAZ,EAAoB,EAApB,EAAwBA,OAAxB,CAAgC,GAAhC,EAAqC,EAArC,EAAyCA,OAAzC,CAAiD,GAAjD,EAAsD,EAAtD,EAA0DA,OAA1D,CAAkE,GAAlE,EAAuE,EAAvE,CAAN;AACAG,IAAAA,KAAK,GAAGV,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAR;AACAX,IAAAA,GAAG,CAACE,CAAJ,GAAQU,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAhB;AACAT,IAAAA,GAAG,CAACG,CAAJ,GAAQS,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAhB;AACAT,IAAAA,GAAG,CAACI,CAAJ,GAAQQ,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAhB;AACAT,IAAAA,GAAG,CAACC,CAAJ,GAAQY,UAAU,CAACJ,KAAK,CAAC,CAAD,CAAN,CAAV,GAAuB,KAA/B;AACH,GAPD,MAQK,IAAIV,GAAG,CAACW,WAAJ,CAAgB,KAAhB,EAAuB,CAAvB,MAA8B,CAAlC,EAAqC;AACtCX,IAAAA,GAAG,GAAGA,GAAG,CAACO,OAAJ,CAAY,KAAZ,EAAmB,EAAnB,EAAuBA,OAAvB,CAA+B,GAA/B,EAAoC,EAApC,EAAwCA,OAAxC,CAAgD,GAAhD,EAAqD,EAArD,EAAyDA,OAAzD,CAAiE,GAAjE,EAAsE,EAAtE,CAAN;AACAG,IAAAA,KAAK,GAAGV,GAAG,CAACY,KAAJ,CAAU,GAAV,CAAR;AACAX,IAAAA,GAAG,CAACE,CAAJ,GAAQU,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAhB;AACAT,IAAAA,GAAG,CAACG,CAAJ,GAAQS,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAhB;AACAT,IAAAA,GAAG,CAACI,CAAJ,GAAQQ,QAAQ,CAACH,KAAK,CAAC,CAAD,CAAN,EAAW,EAAX,CAAhB;AACH,GANI,MAOA;AACDV,IAAAA,GAAG,GAAGA,GAAG,CAACO,OAAJ,CAAY,GAAZ,EAAiB,EAAjB,EAAqBA,OAArB,CAA6B,GAA7B,EAAkC,EAAlC,CAAN;;AACA,QAAIP,GAAG,CAACe,MAAJ,KAAe,CAAnB,EAAsB;AAClBd,MAAAA,GAAG,CAACE,CAAJ,GAAQU,QAAQ,CAACb,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAhB;AACAf,MAAAA,GAAG,CAACG,CAAJ,GAAQS,QAAQ,CAACb,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAhB;AACAf,MAAAA,GAAG,CAACI,CAAJ,GAAQQ,QAAQ,CAACb,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAhB;AACAf,MAAAA,GAAG,CAACC,CAAJ,GAAQW,QAAQ,CAACb,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAhB;AACH,KALD,MAMK,IAAIhB,GAAG,CAACe,MAAJ,KAAe,CAAnB,EAAsB;AACvBd,MAAAA,GAAG,CAACE,CAAJ,GAAQU,QAAQ,CAACb,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAhB;AACAf,MAAAA,GAAG,CAACG,CAAJ,GAAQS,QAAQ,CAACb,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAhB;AACAf,MAAAA,GAAG,CAACI,CAAJ,GAAQQ,QAAQ,CAACb,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,CAAD,EAAmB,EAAnB,CAAhB;AACH,KAJI,MAKA,IAAIhB,GAAG,CAACe,MAAJ,KAAe,CAAnB,EAAsB;AACvBd,MAAAA,GAAG,CAACE,CAAJ,GAAQU,QAAQ,CAACb,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,IAAmBhB,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,CAApB,EAAsC,EAAtC,CAAhB;AACAf,MAAAA,GAAG,CAACG,CAAJ,GAAQS,QAAQ,CAACb,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,IAAmBhB,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,CAApB,EAAsC,EAAtC,CAAhB;AACAf,MAAAA,GAAG,CAACI,CAAJ,GAAQQ,QAAQ,CAACb,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,IAAmBhB,GAAG,CAACgB,MAAJ,CAAW,CAAX,EAAc,CAAd,CAApB,EAAsC,EAAtC,CAAhB;AACH;AACJ;;AACD,SAAOf,GAAP;AACH;AACD;AACA,OAAO,SAASgB,QAAT,CAAkBC,KAAlB,EAAyB;AAC5B;AACJ;AACA;AACA;AACI,MAAIf,CAAJ;AAAA,MAAOC,CAAP;AAAA,MAAUC,CAAV;AAAA,MAAac,MAAM,GAAG,IAAtB;;AACA,MAAID,KAAK,CAACE,MAAN,CAAa,CAAb,MAAoB,GAAxB,EAA6B;AACzB,QAAIC,QAAQ,GAAGH,KAAK,CAACX,OAAN,CAAc,MAAd,EAAsB,EAAtB,EAA0BA,OAA1B,CAAkC,GAAlC,EAAuC,EAAvC,EAA2CK,KAA3C,CAAiD,GAAjD,CAAf;AACAT,IAAAA,CAAC,GAAGU,QAAQ,CAACQ,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAR,CAA0BC,QAA1B,CAAmC,EAAnC,CAAJ;AACAlB,IAAAA,CAAC,GAAGS,QAAQ,CAACQ,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAR,CAA0BC,QAA1B,CAAmC,EAAnC,CAAJ;AACAjB,IAAAA,CAAC,GAAGQ,QAAQ,CAACQ,QAAQ,CAAC,CAAD,CAAT,EAAc,EAAd,CAAR,CAA0BC,QAA1B,CAAmC,EAAnC,CAAJ;AACAnB,IAAAA,CAAC,GAAGA,CAAC,CAACY,MAAF,KAAa,CAAb,GAAiB,MAAMZ,CAAvB,GAA2BA,CAA/B;AACAC,IAAAA,CAAC,GAAGA,CAAC,CAACW,MAAF,KAAa,CAAb,GAAiB,MAAMX,CAAvB,GAA2BA,CAA/B;AACAC,IAAAA,CAAC,GAAGA,CAAC,CAACU,MAAF,KAAa,CAAb,GAAiB,MAAMV,CAAvB,GAA2BA,CAA/B;AACAc,IAAAA,MAAM,GAAG,MAAMhB,CAAN,GAAUC,CAAV,GAAcC,CAAvB;AACH;;AACD,SAAOc,MAAP;AACH","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nexport function getColorStringSafe(v) {\n    /*jshint eqnull:true */\n    return v == null ? null : v.colorString();\n}\n;\nexport var wellKnownColors = {\n    aliceblue: \"f0f8ff\",\n    antiquewhite: \"faebd7\",\n    aqua: \"00ffff\",\n    aquamarine: \"7fffd4\",\n    azure: \"f0ffff\",\n    beige: \"f5f5dc\",\n    bisque: \"ffe4c4\",\n    black: \"000000\",\n    blanchedalmond: \"ffebcd\",\n    blue: \"0000ff\",\n    blueviolet: \"8a2be2\",\n    brown: \"a52a2a\",\n    burlywood: \"deb887\",\n    cadetblue: \"5f9ea0\",\n    chartreuse: \"7fff00\",\n    chocolate: \"d2691e\",\n    coral: \"ff7f50\",\n    cornflowerblue: \"6495ed\",\n    cornsilk: \"fff8dc\",\n    crimson: \"dc143c\",\n    cyan: \"00ffff\",\n    darkblue: \"00008b\",\n    darkcyan: \"008b8b\",\n    darkgoldenrod: \"b8860b\",\n    darkgray: \"a9a9a9\",\n    darkgreen: \"006400\",\n    darkkhaki: \"bdb76b\",\n    darkmagenta: \"8b008b\",\n    darkolivegreen: \"556b2f\",\n    darkorange: \"ff8c00\",\n    darkorchid: \"9932cc\",\n    darkred: \"8b0000\",\n    darksalmon: \"e9967a\",\n    darkseagreen: \"8fbc8f\",\n    darkslateblue: \"483d8b\",\n    darkslategray: \"2f4f4f\",\n    darkturquoise: \"00ced1\",\n    darkviolet: \"9400d3\",\n    deeppink: \"ff1493\",\n    deepskyblue: \"00bfff\",\n    dimgray: \"696969\",\n    dodgerblue: \"1e90ff\",\n    feldspar: \"d19275\",\n    firebrick: \"b22222\",\n    floralwhite: \"fffaf0\",\n    forestgreen: \"228b22\",\n    fuchsia: \"ff00ff\",\n    gainsboro: \"dcdcdc\",\n    ghostwhite: \"f8f8ff\",\n    gold: \"ffd700\",\n    goldenrod: \"daa520\",\n    gray: \"808080\",\n    green: \"008000\",\n    greenyellow: \"adff2f\",\n    honeydew: \"f0fff0\",\n    hotpink: \"ff69b4\",\n    indianred: \"cd5c5c\",\n    indigo: \"4b0082\",\n    ivory: \"fffff0\",\n    khaki: \"f0e68c\",\n    lavender: \"e6e6fa\",\n    lavenderblush: \"fff0f5\",\n    lawngreen: \"7cfc00\",\n    lemonchiffon: \"fffacd\",\n    lightblue: \"add8e6\",\n    lightcoral: \"f08080\",\n    lightcyan: \"e0ffff\",\n    lightgoldenrodyellow: \"fafad2\",\n    lightgrey: \"d3d3d3\",\n    lightgreen: \"90ee90\",\n    lightpink: \"ffb6c1\",\n    lightsalmon: \"ffa07a\",\n    lightseagreen: \"20b2aa\",\n    lightskyblue: \"87cefa\",\n    lightslateblue: \"8470ff\",\n    lightslategray: \"778899\",\n    lightsteelblue: \"b0c4de\",\n    lightyellow: \"ffffe0\",\n    lime: \"00ff00\",\n    limegreen: \"32cd32\",\n    linen: \"faf0e6\",\n    magenta: \"ff00ff\",\n    maroon: \"800000\",\n    mediumaquamarine: \"66cdaa\",\n    mediumblue: \"0000cd\",\n    mediumorchid: \"ba55d3\",\n    mediumpurple: \"9370d8\",\n    mediumseagreen: \"3cb371\",\n    mediumslateblue: \"7b68ee\",\n    mediumspringgreen: \"00fa9a\",\n    mediumturquoise: \"48d1cc\",\n    mediumvioletred: \"c71585\",\n    midnightblue: \"191970\",\n    mintcream: \"f5fffa\",\n    mistyrose: \"ffe4e1\",\n    moccasin: \"ffe4b5\",\n    navajowhite: \"ffdead\",\n    navy: \"000080\",\n    oldlace: \"fdf5e6\",\n    olive: \"808000\",\n    olivedrab: \"6b8e23\",\n    orange: \"ffa500\",\n    orangered: \"ff4500\",\n    orchid: \"da70d6\",\n    palegoldenrod: \"eee8aa\",\n    palegreen: \"98fb98\",\n    paleturquoise: \"afeeee\",\n    palevioletred: \"d87093\",\n    papayawhip: \"ffefd5\",\n    peachpuff: \"ffdab9\",\n    peru: \"cd853f\",\n    pink: \"ffc0cb\",\n    plum: \"dda0dd\",\n    powderblue: \"b0e0e6\",\n    purple: \"800080\",\n    red: \"ff0000\",\n    rosybrown: \"bc8f8f\",\n    royalblue: \"4169e1\",\n    saddlebrown: \"8b4513\",\n    salmon: \"fa8072\",\n    sandybrown: \"f4a460\",\n    seagreen: \"2e8b57\",\n    seashell: \"fff5ee\",\n    sienna: \"a0522d\",\n    silver: \"c0c0c0\",\n    skyblue: \"87ceeb\",\n    slateblue: \"6a5acd\",\n    slategray: \"708090\",\n    snow: \"fffafa\",\n    springgreen: \"00ff7f\",\n    steelblue: \"4682b4\",\n    tan: \"d2b48c\",\n    teal: \"008080\",\n    thistle: \"d8bfd8\",\n    tomato: \"ff6347\",\n    turquoise: \"40e0d0\",\n    violet: \"ee82ee\",\n    violetred: \"d02090\",\n    wheat: \"f5deb3\",\n    white: \"ffffff\",\n    whitesmoke: \"f5f5f5\",\n    yellow: \"ffff00\",\n    yellowgreen: \"9acd32\"\n};\nexport function strToColor(str) {\n    var ret = {\n        a: 255,\n        r: 0,\n        g: 0,\n        b: 0\n    };\n    var asColorName = str.replace(\" \", \"\").toLowerCase();\n    if (asColorName === \"transparent\") {\n        return { a: 0, r: 0, g: 0, b: 0 };\n    }\n    if (wellKnownColors[asColorName] !== undefined) {\n        str = wellKnownColors[asColorName];\n    }\n    var parts;\n    if (str.lastIndexOf(\"rgba\", 0) === 0) {\n        str = str.replace(\"rgba\", \"\").replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\");\n        parts = str.split(\",\");\n        ret.r = parseInt(parts[0], 10);\n        ret.g = parseInt(parts[1], 10);\n        ret.b = parseInt(parts[2], 10);\n        ret.a = parseFloat(parts[3]) * 255.0;\n    }\n    else if (str.lastIndexOf(\"rgb\", 0) === 0) {\n        str = str.replace(\"rgb\", \"\").replace(\" \", \"\").replace(\"(\", \"\").replace(\")\", \"\");\n        parts = str.split(\",\");\n        ret.r = parseInt(parts[0], 10);\n        ret.g = parseInt(parts[1], 10);\n        ret.b = parseInt(parts[2], 10);\n    }\n    else {\n        str = str.replace(\"#\", \"\").replace(\" \", \"\");\n        if (str.length === 8) {\n            ret.r = parseInt(str.substr(0, 2), 16);\n            ret.g = parseInt(str.substr(2, 2), 16);\n            ret.b = parseInt(str.substr(4, 2), 16);\n            ret.a = parseInt(str.substr(6, 2), 16);\n        }\n        else if (str.length === 6) {\n            ret.r = parseInt(str.substr(0, 2), 16);\n            ret.g = parseInt(str.substr(2, 2), 16);\n            ret.b = parseInt(str.substr(4, 2), 16);\n        }\n        else if (str.length === 3) {\n            ret.r = parseInt(str.substr(0, 1) + str.substr(0, 1), 16);\n            ret.g = parseInt(str.substr(1, 1) + str.substr(1, 1), 16);\n            ret.b = parseInt(str.substr(2, 1) + str.substr(2, 1), 16);\n        }\n    }\n    return ret;\n}\n;\nexport function rgbToHex(color) {\n    /* Convert color from RGB to HEX format. null if non-rgb color is provided.\n        paramType=\"string\" optional=\"false\" Color in RGB format.\n        returnType=\"string|null\" Returns converted color from RGB to HEX format. null if non-rgb color is provided.\n    */\n    var r, g, b, colHex = null;\n    if (color.charAt(0) === \"r\") {\n        var colorArr = color.replace(\"rgb(\", \"\").replace(\")\", \"\").split(\",\");\n        r = parseInt(colorArr[0], 10).toString(16);\n        g = parseInt(colorArr[1], 10).toString(16);\n        b = parseInt(colorArr[2], 10).toString(16);\n        r = r.length === 1 ? \"0\" + r : r;\n        g = g.length === 1 ? \"0\" + g : g;\n        b = b.length === 1 ? \"0\" + b : b;\n        colHex = \"#\" + r + g + b;\n    }\n    return colHex;\n}\n"]},"metadata":{},"sourceType":"module"}