{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TreemapNodeStyleDescriptionMetadata } from \"./TreemapNodeStyleDescriptionMetadata\";\nimport { TreemapNodeStyleMappingDescription } from \"./TreemapNodeStyleMappingDescription\";\n/**\n * @hidden\n */\n\nvar TreemapNodeStyleMappingDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TreemapNodeStyleMappingDescriptionMetadata, _super);\n\n  function TreemapNodeStyleMappingDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TreemapNodeStyleMappingDescriptionMetadata.b = function (a) {\n    if (TreemapNodeStyleMappingDescriptionMetadata.a == null) {\n      TreemapNodeStyleMappingDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TreemapNodeStyleMappingDescriptionMetadata.c(TreemapNodeStyleMappingDescriptionMetadata.a);\n    }\n\n    if (a.g(TreemapNodeStyleMappingDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(TreemapNodeStyleMappingDescriptionMetadata.a);\n  };\n\n  TreemapNodeStyleMappingDescriptionMetadata.c = function (a) {\n    TreemapNodeStyleDescriptionMetadata.c(a);\n    a.item(\"TargetType\", \"ExportedType:string:TreemapNodeStyleMappingTargetType\");\n    a.item(\"TargetType@names\", \"All;Parent;Child\");\n    a.item(\"MinimumValue\", \"Number:double\");\n    a.item(\"MaximumValue\", \"Number:double\");\n    a.item(\"Value\", \"Unknown\");\n    a.item(\"MappingMode\", \"ExportedType:string:TreemapValueMappingMode\");\n    a.item(\"MappingMode@names\", \"Sum;Value;CustomValue\");\n  };\n\n  TreemapNodeStyleMappingDescriptionMetadata.d = function (a) {\n    TreemapNodeStyleMappingDescriptionMetadata.b(a);\n    a.u(\"TreemapNodeStyleMapping\", function () {\n      return new TreemapNodeStyleMappingDescription();\n    });\n    a.t(\"TreemapNodeStyleMapping\", TreemapNodeStyleMappingDescriptionMetadata.a);\n  };\n\n  TreemapNodeStyleMappingDescriptionMetadata.$t = markType(TreemapNodeStyleMappingDescriptionMetadata, 'TreemapNodeStyleMappingDescriptionMetadata');\n  TreemapNodeStyleMappingDescriptionMetadata.a = null;\n  return TreemapNodeStyleMappingDescriptionMetadata;\n}(Base);\n\nexport { TreemapNodeStyleMappingDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/TreemapNodeStyleMappingDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","TreemapNodeStyleDescriptionMetadata","TreemapNodeStyleMappingDescription","TreemapNodeStyleMappingDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","item","d","u","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,mCAAT,QAAoD,uCAApD;AACA,SAASC,kCAAT,QAAmD,sCAAnD;AACA;AACA;AACA;;AACA,IAAIC,0CAA0C;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC5FR,EAAAA,SAAS,CAACO,0CAAD,EAA6CC,MAA7C,CAAT;;AACA,WAASD,0CAAT,GAAsD;AAClD,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,0CAA0C,CAACI,CAA3C,GAA+C,UAAUC,CAAV,EAAa;AACxD,QAAIL,0CAA0C,CAACK,CAA3C,IAAgD,IAApD,EAA0D;AACtDL,MAAAA,0CAA0C,CAACK,CAA3C,GAA+C,IAAIR,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAA/C;AACAK,MAAAA,0CAA0C,CAACM,CAA3C,CAA6CN,0CAA0C,CAACK,CAAxF;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,0CAA0C,CAACK,CAA/C,CAAJ,EAAuD;AACnD;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,0CAA0C,CAACK,CAA/C;AACH,GATD;;AAUAL,EAAAA,0CAA0C,CAACM,CAA3C,GAA+C,UAAUD,CAAV,EAAa;AACxDP,IAAAA,mCAAmC,CAACQ,CAApC,CAAsCD,CAAtC;AACAA,IAAAA,CAAC,CAACI,IAAF,CAAO,YAAP,EAAqB,uDAArB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,kBAAP,EAA2B,kBAA3B;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,cAAP,EAAuB,eAAvB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,cAAP,EAAuB,eAAvB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,OAAP,EAAgB,SAAhB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,aAAP,EAAsB,6CAAtB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,mBAAP,EAA4B,uBAA5B;AACH,GATD;;AAUAT,EAAAA,0CAA0C,CAACU,CAA3C,GAA+C,UAAUL,CAAV,EAAa;AACxDL,IAAAA,0CAA0C,CAACI,CAA3C,CAA6CC,CAA7C;AACAA,IAAAA,CAAC,CAACM,CAAF,CAAI,yBAAJ,EAA+B,YAAY;AAAE,aAAO,IAAIZ,kCAAJ,EAAP;AAAkD,KAA/F;AACAM,IAAAA,CAAC,CAACO,CAAF,CAAI,yBAAJ,EAA+BZ,0CAA0C,CAACK,CAA1E;AACH,GAJD;;AAKAL,EAAAA,0CAA0C,CAACa,EAA3C,GAAgDjB,QAAQ,CAACI,0CAAD,EAA6C,4CAA7C,CAAxD;AACAA,EAAAA,0CAA0C,CAACK,CAA3C,GAA+C,IAA/C;AACA,SAAOL,0CAAP;AACH,CAjC6E,CAiC5EN,IAjC4E,CAA9E;;AAkCA,SAASM,0CAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TreemapNodeStyleDescriptionMetadata } from \"./TreemapNodeStyleDescriptionMetadata\";\nimport { TreemapNodeStyleMappingDescription } from \"./TreemapNodeStyleMappingDescription\";\n/**\n * @hidden\n */\nvar TreemapNodeStyleMappingDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TreemapNodeStyleMappingDescriptionMetadata, _super);\n    function TreemapNodeStyleMappingDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TreemapNodeStyleMappingDescriptionMetadata.b = function (a) {\n        if (TreemapNodeStyleMappingDescriptionMetadata.a == null) {\n            TreemapNodeStyleMappingDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            TreemapNodeStyleMappingDescriptionMetadata.c(TreemapNodeStyleMappingDescriptionMetadata.a);\n        }\n        if (a.g(TreemapNodeStyleMappingDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(TreemapNodeStyleMappingDescriptionMetadata.a);\n    };\n    TreemapNodeStyleMappingDescriptionMetadata.c = function (a) {\n        TreemapNodeStyleDescriptionMetadata.c(a);\n        a.item(\"TargetType\", \"ExportedType:string:TreemapNodeStyleMappingTargetType\");\n        a.item(\"TargetType@names\", \"All;Parent;Child\");\n        a.item(\"MinimumValue\", \"Number:double\");\n        a.item(\"MaximumValue\", \"Number:double\");\n        a.item(\"Value\", \"Unknown\");\n        a.item(\"MappingMode\", \"ExportedType:string:TreemapValueMappingMode\");\n        a.item(\"MappingMode@names\", \"Sum;Value;CustomValue\");\n    };\n    TreemapNodeStyleMappingDescriptionMetadata.d = function (a) {\n        TreemapNodeStyleMappingDescriptionMetadata.b(a);\n        a.u(\"TreemapNodeStyleMapping\", function () { return new TreemapNodeStyleMappingDescription(); });\n        a.t(\"TreemapNodeStyleMapping\", TreemapNodeStyleMappingDescriptionMetadata.a);\n    };\n    TreemapNodeStyleMappingDescriptionMetadata.$t = markType(TreemapNodeStyleMappingDescriptionMetadata, 'TreemapNodeStyleMappingDescriptionMetadata');\n    TreemapNodeStyleMappingDescriptionMetadata.a = null;\n    return TreemapNodeStyleMappingDescriptionMetadata;\n}(Base));\nexport { TreemapNodeStyleMappingDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}