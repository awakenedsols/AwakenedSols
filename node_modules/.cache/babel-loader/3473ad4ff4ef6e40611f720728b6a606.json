{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/UserCollections.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport solanaIcon from './solanaIcon.png';\nimport styled from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserCollections = _ref => {\n  _s();\n\n  let {\n    children,\n    ...props\n  } = _ref;\n  const [data, setData] = useState();\n  const wallet = props.wallet;\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 1\n  };\n\n  const getCollections = async () => {\n    var config = {\n      method: 'get',\n      url: 'https://api-devnet.magiceden.dev/v2/wallets/' + wallet + '/tokens?offset=0&limit=100&listStatus=both'\n    };\n    axios(config).then(function (response) {\n      console.log(JSON.stringify(response.data));\n      setData(response.data);\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    console.log('use effect');\n\n    if (wallet) {\n      console.log('wallettt');\n      console.log(wallet);\n    }\n\n    if (data) {\n      console.log(data);\n    }\n  });\n  const Styles = styled.div`\n  table {\n    background-color: #192026;\n    color:white;\n    border-spacing: 0;\n    position:relative;\n\n    tr {\n      td {\n        border-bottom: 0;\n      }\n    }\n\n    th{\n      background-color: #192026;\n      top:0;\n      position:sticky;\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.2rem;\n    }\n  }\n`;\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      //assign interval to a variable to clear it.\n      console.log('use effect');\n      getCollections();\n\n      if (data) {\n        console.log(data);\n      }\n    }, 5000);\n    return () => clearInterval(intervalId); //This is important\n  }, [useState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: data.map(collection => /*#__PURE__*/_jsxDEV(Slider, {\n        dots: true,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: collection.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"symbolIcon\",\n              src: solanaIcon\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 17\n            }, this), collection.floorPrice]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: collection.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 14\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 12\n      }, this))\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(UserCollections, \"5lknD3jXYujBT9pOqvzz+iT5qBw=\");\n\n_c = UserCollections;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCollections\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/UserCollections.tsx"],"names":["React","solanaIcon","styled","useEffect","useState","axios","Slider","UserCollections","children","props","data","setData","wallet","settings","dots","infinite","speed","slidesToShow","slidesToScroll","getCollections","config","method","url","then","response","console","log","JSON","stringify","catch","error","Styles","div","intervalId","setInterval","clearInterval","map","collection","name","floorPrice","image"],"mappings":"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","sourcesContent":["import React, { ReactNode } from \"react\";\nimport {Row, Col, Container} from \"react-bootstrap\";\nimport enlargeIcon from './enlargeIcon.png'\nimport solanaIcon from './solanaIcon.png'\nimport styled from 'styled-components'\nimport { Key, ReactChild, ReactFragment, ReactPortal, useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\ninterface Props {\n    children?: ReactNode\n    // any props that come into the component\n    wallet: any\n}\n\nexport const UserCollections = ({ children, ...props }: Props) => {\n\n  const [data, setData] = useState<any>();\n  const wallet = props.wallet;\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 1\n  };\n\n  const getCollections = async () => {\n\n    var config = {\n      method: 'get',\n      url: 'https://api-devnet.magiceden.dev/v2/wallets/'+ wallet + '/tokens?offset=0&limit=100&listStatus=both'\n    };\n\n    axios(config)\n    .then(function (response) {\n      console.log(JSON.stringify(response.data));\n      setData(response.data);    \n      return response.data;\n      }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n        console.log('use effect');\n        if(wallet){\n          console.log('wallettt');\n          console.log(wallet);\n        }\n        if(data){\n          console.log(data);\n        }\n  });\n  \n\n  const Styles = styled.div`\n  table {\n    background-color: #192026;\n    color:white;\n    border-spacing: 0;\n    position:relative;\n\n    tr {\n      td {\n        border-bottom: 0;\n      }\n    }\n\n    th{\n      background-color: #192026;\n      top:0;\n      position:sticky;\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.2rem;\n    }\n  }\n`\n\nuseEffect(() => {\n  const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\n    console.log('use effect');\n    getCollections();\n  \n    if(data){\n      console.log(data);\n    }\n  \n  }, 5000)\n\n  return () => clearInterval(intervalId); //This is important\n \n}, [useState])\n\n\nreturn (\n  <>\n  {data ? (\n    <>\n        {data.map((collection:any) => (\n           <Slider dots={true}>\n           <div>\n             <h3>{collection.name}</h3>\n             <p><img className=\"symbolIcon\" src={solanaIcon}></img>{collection.floorPrice}</p>\n             <img src={collection.image}></img>\n           </div>\n         </Slider>\n        ))}\n  </>\n    ) : (\n      <div>\n      <h1>Loading...</h1>\n     </div>\n  )}\n  </>\n);\n};"]},"metadata":{},"sourceType":"module"}