{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrCategoryAxisBase } from \"./igr-category-axis-base\";\nimport { IgrNumericAxisBase } from \"./igr-numeric-axis-base\";\nimport { IgrFragmentBase } from \"./igr-fragment-base\";\nimport { ColumnFragment } from \"./ColumnFragment\";\nimport { toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents one part of a StackedColumnSeries.\n*/\n\nvar IgrColumnFragment =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrColumnFragment, _super);\n\n  function IgrColumnFragment(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrColumnFragment.prototype.createImplementation = function () {\n    return new ColumnFragment();\n  };\n\n  Object.defineProperty(IgrColumnFragment.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrColumnFragment.prototype, \"isColumn\", {\n    /**\n     * Gets whether the current series shows a column shape.\n    */\n    get: function () {\n      return this.i.dh;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrColumnFragment.prototype, \"isMarkerlessDisplayPreferred\", {\n    /**\n     * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n    */\n    get: function () {\n      return this.i.d2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrColumnFragment.prototype, \"radiusX\", {\n    /**\n     * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.\n    */\n    get: function () {\n      return this.i.vl;\n    },\n    set: function (v) {\n      this.i.vl = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrColumnFragment.prototype, \"radiusY\", {\n    /**\n     * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.\n    */\n    get: function () {\n      return this.i.vm;\n    },\n    set: function (v) {\n      this.i.vm = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrColumnFragment.prototype, \"fragmentXAxis\", {\n    /**\n     * Gets or sets the effective x-axis for this series.\n    */\n    get: function () {\n      if (this.i.fragmentXAxis == null) {\n        return null;\n      }\n\n      if (!this.i.fragmentXAxis.externalObject) {\n        var e = IgrCategoryAxisBase._createFromInternal(this.i.fragmentXAxis);\n\n        if (e) {\n          e._implementation = this.i.fragmentXAxis;\n        }\n\n        this.i.fragmentXAxis.externalObject = e;\n      }\n\n      return this.i.fragmentXAxis.externalObject;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrColumnFragment.prototype, \"fragmentYAxis\", {\n    /**\n     * Gets or sets the effective y-axis for this series.\n    */\n    get: function () {\n      if (this.i.fragmentYAxis == null) {\n        return null;\n      }\n\n      if (!this.i.fragmentYAxis.externalObject) {\n        var e = IgrNumericAxisBase._createFromInternal(this.i.fragmentYAxis);\n\n        if (e) {\n          e._implementation = this.i.fragmentYAxis;\n        }\n\n        this.i.fragmentYAxis.externalObject = e;\n      }\n\n      return this.i.fragmentYAxis.externalObject;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrColumnFragment.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.fragmentXAxis && this.fragmentXAxis._styling) {\n      this.fragmentXAxis._styling(container, component, this);\n    }\n\n    if (this.fragmentYAxis && this.fragmentYAxis._styling) {\n      this.fragmentYAxis._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n   * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n  \r\n  * @param world  * The world coordinate for which to get a value bounding box for\n  */\n\n\n  IgrColumnFragment.prototype.getSeriesValueBoundingBox = function (world) {\n    var iv = this.i.pv(toPoint(world));\n    return fromRect(iv);\n  };\n  /**\n   * Gets the item that is the best match for the specified world coordinates.\n  \r\n  * @param world  * The world coordinates to use.\n  */\n\n\n  IgrColumnFragment.prototype.getItem = function (world) {\n    var iv = this.i.ht(toPoint(world));\n    return iv;\n  };\n  /**\n   * Gets the index of the item that resides at the provided world coordinates.\n  \r\n  * @param world  * The world coordinates of the requested item.\n  */\n\n\n  IgrColumnFragment.prototype.getItemIndex = function (world) {\n    var iv = this.i.hd(toPoint(world));\n    return iv;\n  };\n\n  return IgrColumnFragment;\n}(IgrFragmentBase);\n\nexport { IgrColumnFragment };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-column-fragment.js"],"names":["__extends","IgrCategoryAxisBase","IgrNumericAxisBase","IgrFragmentBase","ColumnFragment","toPoint","fromRect","IgrColumnFragment","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","dh","d2","vl","set","v","vm","fragmentXAxis","externalObject","e","_createFromInternal","fragmentYAxis","_styling","container","component","parent","_inStyling","getSeriesValueBoundingBox","world","iv","pv","getItem","ht","getItemIndex","hd"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrCategoryAxisBase } from \"./igr-category-axis-base\";\nimport { IgrNumericAxisBase } from \"./igr-numeric-axis-base\";\nimport { IgrFragmentBase } from \"./igr-fragment-base\";\nimport { ColumnFragment } from \"./ColumnFragment\";\nimport { toPoint, fromRect } from \"igniteui-react-core\";\n/**\n * Represents one part of a StackedColumnSeries.\n*/\nvar IgrColumnFragment = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrColumnFragment, _super);\n    function IgrColumnFragment(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrColumnFragment.prototype.createImplementation = function () {\n        return new ColumnFragment();\n    };\n    Object.defineProperty(IgrColumnFragment.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrColumnFragment.prototype, \"isColumn\", {\n        /**\n         * Gets whether the current series shows a column shape.\n        */\n        get: function () {\n            return this.i.dh;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrColumnFragment.prototype, \"isMarkerlessDisplayPreferred\", {\n        /**\n         * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n        */\n        get: function () {\n            return this.i.d2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrColumnFragment.prototype, \"radiusX\", {\n        /**\n         * Gets or sets the x-radius of the ellipse that is used to round the corners of the column.\n        */\n        get: function () {\n            return this.i.vl;\n        },\n        set: function (v) {\n            this.i.vl = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrColumnFragment.prototype, \"radiusY\", {\n        /**\n         * Gets or sets the y-radius of the ellipse that is used to round the corners of the column.\n        */\n        get: function () {\n            return this.i.vm;\n        },\n        set: function (v) {\n            this.i.vm = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrColumnFragment.prototype, \"fragmentXAxis\", {\n        /**\n         * Gets or sets the effective x-axis for this series.\n        */\n        get: function () {\n            if (this.i.fragmentXAxis == null) {\n                return null;\n            }\n            if (!this.i.fragmentXAxis.externalObject) {\n                var e = IgrCategoryAxisBase._createFromInternal(this.i.fragmentXAxis);\n                if (e) {\n                    e._implementation = this.i.fragmentXAxis;\n                }\n                this.i.fragmentXAxis.externalObject = e;\n            }\n            return this.i.fragmentXAxis.externalObject;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrColumnFragment.prototype, \"fragmentYAxis\", {\n        /**\n         * Gets or sets the effective y-axis for this series.\n        */\n        get: function () {\n            if (this.i.fragmentYAxis == null) {\n                return null;\n            }\n            if (!this.i.fragmentYAxis.externalObject) {\n                var e = IgrNumericAxisBase._createFromInternal(this.i.fragmentYAxis);\n                if (e) {\n                    e._implementation = this.i.fragmentYAxis;\n                }\n                this.i.fragmentYAxis.externalObject = e;\n            }\n            return this.i.fragmentYAxis.externalObject;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrColumnFragment.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.fragmentXAxis && this.fragmentXAxis._styling) {\n            this.fragmentXAxis._styling(container, component, this);\n        }\n        if (this.fragmentYAxis && this.fragmentYAxis._styling) {\n            this.fragmentYAxis._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    /**\n     * If possible, will return the best available value bounding box within the series that has the best value match for the world position provided.\n    \r\n    * @param world  * The world coordinate for which to get a value bounding box for\n    */\n    IgrColumnFragment.prototype.getSeriesValueBoundingBox = function (world) {\n        var iv = this.i.pv(toPoint(world));\n        return fromRect(iv);\n    };\n    /**\n     * Gets the item that is the best match for the specified world coordinates.\n    \r\n    * @param world  * The world coordinates to use.\n    */\n    IgrColumnFragment.prototype.getItem = function (world) {\n        var iv = this.i.ht(toPoint(world));\n        return (iv);\n    };\n    /**\n     * Gets the index of the item that resides at the provided world coordinates.\n    \r\n    * @param world  * The world coordinates of the requested item.\n    */\n    IgrColumnFragment.prototype.getItemIndex = function (world) {\n        var iv = this.i.hd(toPoint(world));\n        return (iv);\n    };\n    return IgrColumnFragment;\n}(IgrFragmentBase));\nexport { IgrColumnFragment };\n"]},"metadata":{},"sourceType":"module"}