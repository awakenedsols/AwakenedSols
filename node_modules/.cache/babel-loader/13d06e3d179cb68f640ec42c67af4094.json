{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrContourValueResolver } from \"./igr-contour-value-resolver\";\nimport { LinearContourValueResolver } from \"./LinearContourValueResolver\";\n/**\n * ContourValueResolver class which resolves contour lines to be distributed at linear intervals from the data minimum to the data maximum.\n*/\n\nvar IgrLinearContourValueResolver =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrLinearContourValueResolver, _super);\n\n  function IgrLinearContourValueResolver(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrLinearContourValueResolver.prototype.createImplementation = function () {\n    return new LinearContourValueResolver();\n  };\n\n  Object.defineProperty(IgrLinearContourValueResolver.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrLinearContourValueResolver.prototype, \"valueCount\", {\n    /**\n     * Gets or sets how many contour values to return.\n    */\n    get: function () {\n      return this.i.valueCount;\n    },\n    set: function (v) {\n      this.i.valueCount = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrLinearContourValueResolver;\n}(IgrContourValueResolver);\n\nexport { IgrLinearContourValueResolver };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-linear-contour-value-resolver.js"],"names":["__extends","IgrContourValueResolver","LinearContourValueResolver","IgrLinearContourValueResolver","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","valueCount","set","v"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AACA;AACA;AACA;;AACA,IAAIC,6BAA6B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC/EJ,EAAAA,SAAS,CAACG,6BAAD,EAAgCC,MAAhC,CAAT;;AACA,WAASD,6BAAT,CAAuCE,KAAvC,EAA8C;AAC1C,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDF,EAAAA,6BAA6B,CAACI,SAA9B,CAAwCC,oBAAxC,GAA+D,YAAY;AACvE,WAAO,IAAIN,0BAAJ,EAAP;AACH,GAFD;;AAGAO,EAAAA,MAAM,CAACC,cAAP,CAAsBP,6BAA6B,CAACI,SAApD,EAA+D,GAA/D,EAAoE;AAChE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KAN+D;AAOhEC,IAAAA,UAAU,EAAE,KAPoD;AAQhEC,IAAAA,YAAY,EAAE;AARkD,GAApE;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,6BAA6B,CAACI,SAApD,EAA+D,YAA/D,EAA6E;AACzE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOC,UAAd;AACH,KANwE;AAOzEC,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOC,UAAP,GAAoB,CAACE,CAArB;AACH,KATwE;AAUzEL,IAAAA,UAAU,EAAE,KAV6D;AAWzEC,IAAAA,YAAY,EAAE;AAX2D,GAA7E;AAaA,SAAOX,6BAAP;AACH,CAhCgE,CAgC/DF,uBAhC+D,CAAjE;;AAiCA,SAASE,6BAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrContourValueResolver } from \"./igr-contour-value-resolver\";\nimport { LinearContourValueResolver } from \"./LinearContourValueResolver\";\n/**\n * ContourValueResolver class which resolves contour lines to be distributed at linear intervals from the data minimum to the data maximum.\n*/\nvar IgrLinearContourValueResolver = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrLinearContourValueResolver, _super);\n    function IgrLinearContourValueResolver(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrLinearContourValueResolver.prototype.createImplementation = function () {\n        return new LinearContourValueResolver();\n    };\n    Object.defineProperty(IgrLinearContourValueResolver.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrLinearContourValueResolver.prototype, \"valueCount\", {\n        /**\n         * Gets or sets how many contour values to return.\n        */\n        get: function () {\n            return this.i.valueCount;\n        },\n        set: function (v) {\n            this.i.valueCount = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrLinearContourValueResolver;\n}(IgrContourValueResolver));\nexport { IgrLinearContourValueResolver };\n"]},"metadata":{},"sourceType":"module"}