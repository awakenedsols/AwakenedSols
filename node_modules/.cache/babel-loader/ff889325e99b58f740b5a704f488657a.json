{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nexport function log10(value) {\n  return Math.log(value) / Math.log(10);\n}\nexport function toDouble(value) {\n  return +value;\n}\nexport var toDecimal = toDouble;\nexport function compareTo(value, other) {\n  if (value == other) {\n    return 0;\n  }\n\n  if (value < other) {\n    return -1;\n  }\n\n  return 1;\n}\nexport function isInfinity(value) {\n  return !isFinite(value) && !isNaN_(value);\n}\nexport function intDivide(value, divisor) {\n  var result = value / divisor;\n  return truncate(result);\n}\nexport function truncate(val) {\n  if (val >= 0) {\n    return Math.floor(val);\n  } else {\n    return Math.ceil(val);\n  }\n}\nexport function logBase(n, n2) {\n  return Math.log(n) / Math.log(n2);\n}\nexport function tryParseNumber(s, v) {\n  var value = Number(s);\n\n  if (value !== null && isFinite(value) && s.trim().length !== 0) {\n    return {\n      p1: value,\n      ret: true\n    };\n  } else {\n    return {\n      p1: 0,\n      ret: false\n    };\n  }\n}\nexport function isNegativeInfinity(v) {\n  return v == Number.NEGATIVE_INFINITY;\n}\nexport function isPositiveInfinity(v) {\n  return v == Number.POSITIVE_INFINITY;\n}\nexport function isNaN_(v) {\n  return v !== v; // http://us6.campaign-archive1.com/?u=2cc20705b76fa66ab84a6634f&id=43bf7f05e9\n}","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/number.js"],"names":["log10","value","Math","log","toDouble","toDecimal","compareTo","other","isInfinity","isFinite","isNaN_","intDivide","divisor","result","truncate","val","floor","ceil","logBase","n","n2","tryParseNumber","s","v","Number","trim","length","p1","ret","isNegativeInfinity","NEGATIVE_INFINITY","isPositiveInfinity","POSITIVE_INFINITY"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASA,KAAT,CAAeC,KAAf,EAAsB;AACzB,SAAOC,IAAI,CAACC,GAAL,CAASF,KAAT,IAAkBC,IAAI,CAACC,GAAL,CAAS,EAAT,CAAzB;AACH;AACD,OAAO,SAASC,QAAT,CAAkBH,KAAlB,EAAyB;AAC5B,SAAO,CAACA,KAAR;AACH;AACD,OAAO,IAAII,SAAS,GAAGD,QAAhB;AACP,OAAO,SAASE,SAAT,CAAmBL,KAAnB,EAA0BM,KAA1B,EAAiC;AACpC,MAAIN,KAAK,IAAIM,KAAb,EAAoB;AAChB,WAAO,CAAP;AACH;;AACD,MAAIN,KAAK,GAAGM,KAAZ,EAAmB;AACf,WAAO,CAAC,CAAR;AACH;;AACD,SAAO,CAAP;AACH;AACD,OAAO,SAASC,UAAT,CAAoBP,KAApB,EAA2B;AAC9B,SAAO,CAACQ,QAAQ,CAACR,KAAD,CAAT,IAAoB,CAACS,MAAM,CAACT,KAAD,CAAlC;AACH;AACD,OAAO,SAASU,SAAT,CAAmBV,KAAnB,EAA0BW,OAA1B,EAAmC;AACtC,MAAIC,MAAM,GAAGZ,KAAK,GAAGW,OAArB;AACA,SAAOE,QAAQ,CAACD,MAAD,CAAf;AACH;AACD,OAAO,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AAC1B,MAAIA,GAAG,IAAI,CAAX,EAAc;AACV,WAAOb,IAAI,CAACc,KAAL,CAAWD,GAAX,CAAP;AACH,GAFD,MAGK;AACD,WAAOb,IAAI,CAACe,IAAL,CAAUF,GAAV,CAAP;AACH;AACJ;AACD,OAAO,SAASG,OAAT,CAAiBC,CAAjB,EAAoBC,EAApB,EAAwB;AAC3B,SAAOlB,IAAI,CAACC,GAAL,CAASgB,CAAT,IAAcjB,IAAI,CAACC,GAAL,CAASiB,EAAT,CAArB;AACH;AACD,OAAO,SAASC,cAAT,CAAwBC,CAAxB,EAA2BC,CAA3B,EAA8B;AACjC,MAAItB,KAAK,GAAGuB,MAAM,CAACF,CAAD,CAAlB;;AACA,MAAIrB,KAAK,KAAK,IAAV,IAAkBQ,QAAQ,CAACR,KAAD,CAA1B,IAAqCqB,CAAC,CAACG,IAAF,GAASC,MAAT,KAAoB,CAA7D,EAAgE;AAC5D,WAAO;AACHC,MAAAA,EAAE,EAAE1B,KADD;AAEH2B,MAAAA,GAAG,EAAE;AAFF,KAAP;AAIH,GALD,MAMK;AACD,WAAO;AACHD,MAAAA,EAAE,EAAE,CADD;AAEHC,MAAAA,GAAG,EAAE;AAFF,KAAP;AAIH;AACJ;AACD,OAAO,SAASC,kBAAT,CAA4BN,CAA5B,EAA+B;AAClC,SAAOA,CAAC,IAAIC,MAAM,CAACM,iBAAnB;AACH;AACD,OAAO,SAASC,kBAAT,CAA4BR,CAA5B,EAA+B;AAClC,SAAOA,CAAC,IAAIC,MAAM,CAACQ,iBAAnB;AACH;AACD,OAAO,SAAStB,MAAT,CAAgBa,CAAhB,EAAmB;AACtB,SAAOA,CAAC,KAAKA,CAAb,CADsB,CACN;AACnB","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nexport function log10(value) {\n    return Math.log(value) / Math.log(10);\n}\nexport function toDouble(value) {\n    return +value;\n}\nexport var toDecimal = toDouble;\nexport function compareTo(value, other) {\n    if (value == other) {\n        return 0;\n    }\n    if (value < other) {\n        return -1;\n    }\n    return 1;\n}\nexport function isInfinity(value) {\n    return !isFinite(value) && !isNaN_(value);\n}\nexport function intDivide(value, divisor) {\n    var result = value / divisor;\n    return truncate(result);\n}\nexport function truncate(val) {\n    if (val >= 0) {\n        return Math.floor(val);\n    }\n    else {\n        return Math.ceil(val);\n    }\n}\nexport function logBase(n, n2) {\n    return Math.log(n) / Math.log(n2);\n}\nexport function tryParseNumber(s, v) {\n    var value = Number(s);\n    if (value !== null && isFinite(value) && s.trim().length !== 0) {\n        return {\n            p1: value,\n            ret: true\n        };\n    }\n    else {\n        return {\n            p1: 0,\n            ret: false\n        };\n    }\n}\nexport function isNegativeInfinity(v) {\n    return v == Number.NEGATIVE_INFINITY;\n}\nexport function isPositiveInfinity(v) {\n    return v == Number.POSITIVE_INFINITY;\n}\nexport function isNaN_(v) {\n    return v !== v; // http://us6.campaign-archive1.com/?u=2cc20705b76fa66ab84a6634f&id=43bf7f05e9\n}\n"]},"metadata":{},"sourceType":"module"}