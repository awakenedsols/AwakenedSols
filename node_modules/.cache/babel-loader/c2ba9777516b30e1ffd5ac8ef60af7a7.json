{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, typeCast, Array_$type, markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\n/**\n * @hidden\n */\n\nvar ArrayAccessHelper =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ArrayAccessHelper, _super);\n\n  function ArrayAccessHelper() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ArrayAccessHelper.b = function (values_) {\n    var a = Array.isArray(values_) ? values_ : null;\n    return a;\n  };\n\n  ArrayAccessHelper.c = function (values_) {\n    var a = Array.isArray(values_) ? values_ : null;\n    return a;\n  };\n\n  ArrayAccessHelper.a = function (a) {\n    if (typeCast(List$1.$.specialize(Array_$type), a) !== null) {\n      return a.asArray();\n    }\n\n    return null;\n  };\n\n  ArrayAccessHelper.$t = markType(ArrayAccessHelper, 'ArrayAccessHelper');\n  return ArrayAccessHelper;\n}(Base);\n\nexport { ArrayAccessHelper };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/ArrayAccessHelper.js"],"names":["__extends","Base","typeCast","Array_$type","markType","List$1","ArrayAccessHelper","_super","apply","arguments","b","values_","a","Array","isArray","c","$","specialize","asArray","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,WAAzB,EAAsCC,QAAtC,QAAsD,QAAtD;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA;AACA;AACA;;AACA,IAAIC,iBAAiB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACnEP,EAAAA,SAAS,CAACM,iBAAD,EAAoBC,MAApB,CAAT;;AACA,WAASD,iBAAT,GAA6B;AACzB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,iBAAiB,CAACI,CAAlB,GAAsB,UAAUC,OAAV,EAAmB;AACrC,QAAIC,CAAC,GAAIC,KAAK,CAACC,OAAN,CAAcH,OAAd,IAAyBA,OAAzB,GAAmC,IAA5C;AACA,WAAOC,CAAP;AACH,GAHD;;AAIAN,EAAAA,iBAAiB,CAACS,CAAlB,GAAsB,UAAUJ,OAAV,EAAmB;AACrC,QAAIC,CAAC,GAAIC,KAAK,CAACC,OAAN,CAAcH,OAAd,IAAyBA,OAAzB,GAAmC,IAA5C;AACA,WAAOC,CAAP;AACH,GAHD;;AAIAN,EAAAA,iBAAiB,CAACM,CAAlB,GAAsB,UAAUA,CAAV,EAAa;AAC/B,QAAIV,QAAQ,CAACG,MAAM,CAACW,CAAP,CAASC,UAAT,CAAoBd,WAApB,CAAD,EAAmCS,CAAnC,CAAR,KAAkD,IAAtD,EAA4D;AACxD,aAAOA,CAAC,CAACM,OAAF,EAAP;AACH;;AACD,WAAO,IAAP;AACH,GALD;;AAMAZ,EAAAA,iBAAiB,CAACa,EAAlB,GAAuBf,QAAQ,CAACE,iBAAD,EAAoB,mBAApB,CAA/B;AACA,SAAOA,iBAAP;AACH,CArBoD,CAqBnDL,IArBmD,CAArD;;AAsBA,SAASK,iBAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, typeCast, Array_$type, markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\n/**\n * @hidden\n */\nvar ArrayAccessHelper = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ArrayAccessHelper, _super);\n    function ArrayAccessHelper() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ArrayAccessHelper.b = function (values_) {\n        var a = (Array.isArray(values_) ? values_ : null);\n        return a;\n    };\n    ArrayAccessHelper.c = function (values_) {\n        var a = (Array.isArray(values_) ? values_ : null);\n        return a;\n    };\n    ArrayAccessHelper.a = function (a) {\n        if (typeCast(List$1.$.specialize(Array_$type), a) !== null) {\n            return a.asArray();\n        }\n        return null;\n    };\n    ArrayAccessHelper.$t = markType(ArrayAccessHelper, 'ArrayAccessHelper');\n    return ArrayAccessHelper;\n}(Base));\nexport { ArrayAccessHelper };\n"]},"metadata":{},"sourceType":"module"}