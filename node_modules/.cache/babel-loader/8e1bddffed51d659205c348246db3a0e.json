{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { PositiveVolumeIndexIndicator } from \"./PositiveVolumeIndexIndicator\";\n/**\n * Represents a IgxDataChartComponent Positive Volume Index (PVI) indicator series.\n * Default required members: Close, Volume\n*\n* You can use the `IgrPositiveVolumeIndexIndicator` with the 'NegativeVolumeIndexIndicator' to identify bull markets.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*    <IgrPositiveVolumeIndexIndicator\n*      name=\"series1\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrPositiveVolumeIndexIndicator ({name:\"series1\"});\n* series.xAxisName = this.xAxis;\n* series.yAxisName = this.yAxis;\n* series.xAxis = this.categoryXAxis;\n* series.yAxis = this.numericYAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* ```\n*/\n\nvar IgrPositiveVolumeIndexIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrPositiveVolumeIndexIndicator, _super);\n\n  function IgrPositiveVolumeIndexIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrPositiveVolumeIndexIndicator.prototype.createImplementation = function () {\n    return new PositiveVolumeIndexIndicator();\n  };\n\n  Object.defineProperty(IgrPositiveVolumeIndexIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrPositiveVolumeIndexIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrPositiveVolumeIndexIndicator };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-positive-volume-index-indicator.js"],"names":["__extends","IgrStrategyBasedIndicator","PositiveVolumeIndexIndicator","IgrPositiveVolumeIndexIndicator","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,SAASC,4BAAT,QAA6C,gCAA7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,+BAA+B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACjFJ,EAAAA,SAAS,CAACG,+BAAD,EAAkCC,MAAlC,CAAT;;AACA,WAASD,+BAAT,CAAyCE,KAAzC,EAAgD;AAC5C,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDF,EAAAA,+BAA+B,CAACI,SAAhC,CAA0CC,oBAA1C,GAAiE,YAAY;AACzE,WAAO,IAAIN,4BAAJ,EAAP;AACH,GAFD;;AAGAO,EAAAA,MAAM,CAACC,cAAP,CAAsBP,+BAA+B,CAACI,SAAtD,EAAiE,GAAjE,EAAsE;AAClE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANiE;AAOlEC,IAAAA,UAAU,EAAE,KAPsD;AAQlEC,IAAAA,YAAY,EAAE;AARoD,GAAtE;AAUA,SAAOX,+BAAP;AACH,CAnBkE,CAmBjEF,yBAnBiE,CAAnE;;AAoBA,SAASE,+BAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { PositiveVolumeIndexIndicator } from \"./PositiveVolumeIndexIndicator\";\n/**\n * Represents a IgxDataChartComponent Positive Volume Index (PVI) indicator series.\n * Default required members: Close, Volume\n*\n* You can use the `IgrPositiveVolumeIndexIndicator` with the 'NegativeVolumeIndexIndicator' to identify bull markets.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*    <IgrPositiveVolumeIndexIndicator\n*      name=\"series1\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrPositiveVolumeIndexIndicator ({name:\"series1\"});\n* series.xAxisName = this.xAxis;\n* series.yAxisName = this.yAxis;\n* series.xAxis = this.categoryXAxis;\n* series.yAxis = this.numericYAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* ```\n*/\nvar IgrPositiveVolumeIndexIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrPositiveVolumeIndexIndicator, _super);\n    function IgrPositiveVolumeIndexIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrPositiveVolumeIndexIndicator.prototype.createImplementation = function () {\n        return new PositiveVolumeIndexIndicator();\n    };\n    Object.defineProperty(IgrPositiveVolumeIndexIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrPositiveVolumeIndexIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrPositiveVolumeIndexIndicator };\n"]},"metadata":{},"sourceType":"module"}