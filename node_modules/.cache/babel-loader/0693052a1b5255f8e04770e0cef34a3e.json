{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, Point_$type, markType } from \"./type\";\nimport { isNaN_, isInfinity } from \"./number\";\n/**\n * @hidden\n */\n\nvar CoreGeometryUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(CoreGeometryUtil, _super);\n\n  function CoreGeometryUtil() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CoreGeometryUtil.a = function (a) {\n    if (isNaN_(a) || isInfinity(a)) {\n      return a;\n    }\n\n    while (a > 360) {\n      a -= 360;\n    }\n\n    while (a < 0) {\n      a += 360;\n    }\n\n    return a;\n  };\n\n  CoreGeometryUtil.b = function (a, b, c, d, e) {\n    var f = {\n      $type: Point_$type,\n      x: (a.x + b.x) / 2,\n      y: (a.y + b.y) / 2\n    };\n    var g = b.x - a.x;\n    var h = b.y - a.y;\n    var i = Math.sqrt(g * g + h * h);\n    var j = h;\n    var k = g * -1;\n\n    if (e == d) {\n      j = h * -1;\n      k = g;\n    }\n\n    var l = Math.max(Math.abs(j), Math.abs(k));\n    j = j / l;\n    k = k / l;\n    var m = Math.sqrt(j * j + k * k);\n    var n = j / m;\n    var o = k / m;\n    var p = i / 2;\n    var q = Math.sqrt(c * c - p * p);\n\n    if (isNaN_(q)) {\n      q = 0;\n    }\n\n    var r = q * n;\n    var s = q * o;\n    var t = {\n      $type: Point_$type,\n      x: f.x + r,\n      y: f.y + s\n    };\n    return t;\n  };\n\n  CoreGeometryUtil.$t = markType(CoreGeometryUtil, 'CoreGeometryUtil');\n  return CoreGeometryUtil;\n}(Base);\n\nexport { CoreGeometryUtil };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/CoreGeometryUtil.js"],"names":["__extends","Base","Point_$type","markType","isNaN_","isInfinity","CoreGeometryUtil","_super","apply","arguments","a","b","c","d","e","f","$type","x","y","g","h","i","Math","sqrt","j","k","l","max","abs","m","n","o","p","q","r","s","t","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, Point_$type, markType } from \"./type\";\nimport { isNaN_, isInfinity } from \"./number\";\n/**\n * @hidden\n */\nvar CoreGeometryUtil = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(CoreGeometryUtil, _super);\n    function CoreGeometryUtil() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CoreGeometryUtil.a = function (a) {\n        if (isNaN_(a) || isInfinity(a)) {\n            return a;\n        }\n        while (a > 360) {\n            a -= 360;\n        }\n        while (a < 0) {\n            a += 360;\n        }\n        return a;\n    };\n    CoreGeometryUtil.b = function (a, b, c, d, e) {\n        var f = { $type: Point_$type, x: (a.x + b.x) / 2, y: (a.y + b.y) / 2 };\n        var g = b.x - a.x;\n        var h = b.y - a.y;\n        var i = Math.sqrt(g * g + h * h);\n        var j = h;\n        var k = g * -1;\n        if (e == d) {\n            j = h * -1;\n            k = g;\n        }\n        var l = Math.max(Math.abs(j), Math.abs(k));\n        j = j / l;\n        k = k / l;\n        var m = Math.sqrt(j * j + k * k);\n        var n = j / m;\n        var o = k / m;\n        var p = i / 2;\n        var q = Math.sqrt(c * c - p * p);\n        if (isNaN_(q)) {\n            q = 0;\n        }\n        var r = q * n;\n        var s = q * o;\n        var t = { $type: Point_$type, x: f.x + r, y: f.y + s };\n        return t;\n    };\n    CoreGeometryUtil.$t = markType(CoreGeometryUtil, 'CoreGeometryUtil');\n    return CoreGeometryUtil;\n}(Base));\nexport { CoreGeometryUtil };\n"]},"metadata":{},"sourceType":"module"}