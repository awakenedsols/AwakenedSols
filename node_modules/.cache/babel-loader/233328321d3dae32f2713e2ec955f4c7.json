{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapImageryDescriptionMetadata } from \"./GeographicMapImageryDescriptionMetadata\";\nimport { ShapeSeriesBaseDescriptionMetadata } from \"./ShapeSeriesBaseDescriptionMetadata\";\nimport { TileSeriesDescription } from \"./TileSeriesDescription\";\n/**\n * @hidden\n */\n\nvar TileSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TileSeriesDescriptionMetadata, _super);\n\n  function TileSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  TileSeriesDescriptionMetadata.b = function (a) {\n    if (TileSeriesDescriptionMetadata.a == null) {\n      TileSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      TileSeriesDescriptionMetadata.c(TileSeriesDescriptionMetadata.a);\n    }\n\n    if (a.g(TileSeriesDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(TileSeriesDescriptionMetadata.a);\n    GeographicMapImageryDescriptionMetadata.d(a);\n  };\n\n  TileSeriesDescriptionMetadata.c = function (a) {\n    ShapeSeriesBaseDescriptionMetadata.c(a);\n    a.item(\"TileImagery\", \"ExportedType:GeographicMapImagery\");\n  };\n\n  TileSeriesDescriptionMetadata.d = function (a) {\n    TileSeriesDescriptionMetadata.b(a);\n    a.u(\"TileSeries\", function () {\n      return new TileSeriesDescription();\n    });\n    a.t(\"TileSeries\", TileSeriesDescriptionMetadata.a);\n  };\n\n  TileSeriesDescriptionMetadata.$t = markType(TileSeriesDescriptionMetadata, 'TileSeriesDescriptionMetadata');\n  TileSeriesDescriptionMetadata.a = null;\n  return TileSeriesDescriptionMetadata;\n}(Base);\n\nexport { TileSeriesDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/TileSeriesDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","GeographicMapImageryDescriptionMetadata","ShapeSeriesBaseDescriptionMetadata","TileSeriesDescription","TileSeriesDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","u","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,uCAAT,QAAwD,2CAAxD;AACA,SAASC,kCAAT,QAAmD,sCAAnD;AACA,SAASC,qBAAT,QAAsC,yBAAtC;AACA;AACA;AACA;;AACA,IAAIC,6BAA6B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC/ET,EAAAA,SAAS,CAACQ,6BAAD,EAAgCC,MAAhC,CAAT;;AACA,WAASD,6BAAT,GAAyC;AACrC,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,6BAA6B,CAACI,CAA9B,GAAkC,UAAUC,CAAV,EAAa;AAC3C,QAAIL,6BAA6B,CAACK,CAA9B,IAAmC,IAAvC,EAA6C;AACzCL,MAAAA,6BAA6B,CAACK,CAA9B,GAAkC,IAAIT,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAlC;AACAM,MAAAA,6BAA6B,CAACM,CAA9B,CAAgCN,6BAA6B,CAACK,CAA9D;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,6BAA6B,CAACK,CAAlC,CAAJ,EAA0C;AACtC;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,6BAA6B,CAACK,CAAlC;AACAR,IAAAA,uCAAuC,CAACY,CAAxC,CAA0CJ,CAA1C;AACH,GAVD;;AAWAL,EAAAA,6BAA6B,CAACM,CAA9B,GAAkC,UAAUD,CAAV,EAAa;AAC3CP,IAAAA,kCAAkC,CAACQ,CAAnC,CAAqCD,CAArC;AACAA,IAAAA,CAAC,CAACK,IAAF,CAAO,aAAP,EAAsB,mCAAtB;AACH,GAHD;;AAIAV,EAAAA,6BAA6B,CAACS,CAA9B,GAAkC,UAAUJ,CAAV,EAAa;AAC3CL,IAAAA,6BAA6B,CAACI,CAA9B,CAAgCC,CAAhC;AACAA,IAAAA,CAAC,CAACM,CAAF,CAAI,YAAJ,EAAkB,YAAY;AAAE,aAAO,IAAIZ,qBAAJ,EAAP;AAAqC,KAArE;AACAM,IAAAA,CAAC,CAACO,CAAF,CAAI,YAAJ,EAAkBZ,6BAA6B,CAACK,CAAhD;AACH,GAJD;;AAKAL,EAAAA,6BAA6B,CAACa,EAA9B,GAAmClB,QAAQ,CAACK,6BAAD,EAAgC,+BAAhC,CAA3C;AACAA,EAAAA,6BAA6B,CAACK,CAA9B,GAAkC,IAAlC;AACA,SAAOL,6BAAP;AACH,CA5BgE,CA4B/DP,IA5B+D,CAAjE;;AA6BA,SAASO,6BAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { GeographicMapImageryDescriptionMetadata } from \"./GeographicMapImageryDescriptionMetadata\";\nimport { ShapeSeriesBaseDescriptionMetadata } from \"./ShapeSeriesBaseDescriptionMetadata\";\nimport { TileSeriesDescription } from \"./TileSeriesDescription\";\n/**\n * @hidden\n */\nvar TileSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TileSeriesDescriptionMetadata, _super);\n    function TileSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    TileSeriesDescriptionMetadata.b = function (a) {\n        if (TileSeriesDescriptionMetadata.a == null) {\n            TileSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            TileSeriesDescriptionMetadata.c(TileSeriesDescriptionMetadata.a);\n        }\n        if (a.g(TileSeriesDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(TileSeriesDescriptionMetadata.a);\n        GeographicMapImageryDescriptionMetadata.d(a);\n    };\n    TileSeriesDescriptionMetadata.c = function (a) {\n        ShapeSeriesBaseDescriptionMetadata.c(a);\n        a.item(\"TileImagery\", \"ExportedType:GeographicMapImagery\");\n    };\n    TileSeriesDescriptionMetadata.d = function (a) {\n        TileSeriesDescriptionMetadata.b(a);\n        a.u(\"TileSeries\", function () { return new TileSeriesDescription(); });\n        a.t(\"TileSeries\", TileSeriesDescriptionMetadata.a);\n    };\n    TileSeriesDescriptionMetadata.$t = markType(TileSeriesDescriptionMetadata, 'TileSeriesDescriptionMetadata');\n    TileSeriesDescriptionMetadata.a = null;\n    return TileSeriesDescriptionMetadata;\n}(Base));\nexport { TileSeriesDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}