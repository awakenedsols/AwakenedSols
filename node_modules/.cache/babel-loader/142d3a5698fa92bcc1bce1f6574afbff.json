{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TriangulationStatusEventArgsDescriptionMetadata } from \"./TriangulationStatusEventArgsDescriptionMetadata\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar ScatterTriangulationSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ScatterTriangulationSeriesDescriptionMetadata, _super);\n\n  function ScatterTriangulationSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ScatterTriangulationSeriesDescriptionMetadata.b = function (a) {\n    if (ScatterTriangulationSeriesDescriptionMetadata.a == null) {\n      ScatterTriangulationSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ScatterTriangulationSeriesDescriptionMetadata.c(ScatterTriangulationSeriesDescriptionMetadata.a);\n    }\n\n    if (a.g(ScatterTriangulationSeriesDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ScatterTriangulationSeriesDescriptionMetadata.a);\n    TriangulationStatusEventArgsDescriptionMetadata.d(a);\n  };\n\n  ScatterTriangulationSeriesDescriptionMetadata.c = function (a) {\n    SeriesDescriptionMetadata.c(a);\n    a.item(\"XMemberPath\", \"String\");\n    a.item(\"YMemberPath\", \"String\");\n    a.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\n    a.item(\"XAxisRef@nameBinding\", \"true\");\n    a.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\n    a.item(\"YAxisRef@nameBinding\", \"true\");\n    a.item(\"TrianglesSourceRef\", \"(w:TrianglesSource,wf:TrianglesSource)DataRef::object\");\n    a.item(\"TriangleVertexMemberPath1\", \"String\");\n    a.item(\"TriangleVertexMemberPath2\", \"String\");\n    a.item(\"TriangleVertexMemberPath3\", \"String\");\n    a.item(\"XMemberAsLegendLabel\", \"String\");\n    a.item(\"YMemberAsLegendLabel\", \"String\");\n    a.item(\"XMemberAsLegendUnit\", \"String\");\n    a.item(\"YMemberAsLegendUnit\", \"String\");\n    a.item(\"TriangulationStatusChangedRef\", \"EventRef::triangulationStatusChanged\");\n  };\n\n  ScatterTriangulationSeriesDescriptionMetadata.d = function (a) {\n    ScatterTriangulationSeriesDescriptionMetadata.b(a);\n    a.t(\"ScatterTriangulationSeries\", ScatterTriangulationSeriesDescriptionMetadata.a);\n  };\n\n  ScatterTriangulationSeriesDescriptionMetadata.$t = markType(ScatterTriangulationSeriesDescriptionMetadata, 'ScatterTriangulationSeriesDescriptionMetadata');\n  ScatterTriangulationSeriesDescriptionMetadata.a = null;\n  return ScatterTriangulationSeriesDescriptionMetadata;\n}(Base);\n\nexport { ScatterTriangulationSeriesDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/ScatterTriangulationSeriesDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","TriangulationStatusEventArgsDescriptionMetadata","SeriesDescriptionMetadata","ScatterTriangulationSeriesDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","t","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { TriangulationStatusEventArgsDescriptionMetadata } from \"./TriangulationStatusEventArgsDescriptionMetadata\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar ScatterTriangulationSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ScatterTriangulationSeriesDescriptionMetadata, _super);\n    function ScatterTriangulationSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScatterTriangulationSeriesDescriptionMetadata.b = function (a) {\n        if (ScatterTriangulationSeriesDescriptionMetadata.a == null) {\n            ScatterTriangulationSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ScatterTriangulationSeriesDescriptionMetadata.c(ScatterTriangulationSeriesDescriptionMetadata.a);\n        }\n        if (a.g(ScatterTriangulationSeriesDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ScatterTriangulationSeriesDescriptionMetadata.a);\n        TriangulationStatusEventArgsDescriptionMetadata.d(a);\n    };\n    ScatterTriangulationSeriesDescriptionMetadata.c = function (a) {\n        SeriesDescriptionMetadata.c(a);\n        a.item(\"XMemberPath\", \"String\");\n        a.item(\"YMemberPath\", \"String\");\n        a.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\n        a.item(\"XAxisRef@nameBinding\", \"true\");\n        a.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\n        a.item(\"YAxisRef@nameBinding\", \"true\");\n        a.item(\"TrianglesSourceRef\", \"(w:TrianglesSource,wf:TrianglesSource)DataRef::object\");\n        a.item(\"TriangleVertexMemberPath1\", \"String\");\n        a.item(\"TriangleVertexMemberPath2\", \"String\");\n        a.item(\"TriangleVertexMemberPath3\", \"String\");\n        a.item(\"XMemberAsLegendLabel\", \"String\");\n        a.item(\"YMemberAsLegendLabel\", \"String\");\n        a.item(\"XMemberAsLegendUnit\", \"String\");\n        a.item(\"YMemberAsLegendUnit\", \"String\");\n        a.item(\"TriangulationStatusChangedRef\", \"EventRef::triangulationStatusChanged\");\n    };\n    ScatterTriangulationSeriesDescriptionMetadata.d = function (a) {\n        ScatterTriangulationSeriesDescriptionMetadata.b(a);\n        a.t(\"ScatterTriangulationSeries\", ScatterTriangulationSeriesDescriptionMetadata.a);\n    };\n    ScatterTriangulationSeriesDescriptionMetadata.$t = markType(ScatterTriangulationSeriesDescriptionMetadata, 'ScatterTriangulationSeriesDescriptionMetadata');\n    ScatterTriangulationSeriesDescriptionMetadata.a = null;\n    return ScatterTriangulationSeriesDescriptionMetadata;\n}(Base));\nexport { ScatterTriangulationSeriesDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}