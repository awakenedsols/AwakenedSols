[{"/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/index.tsx":"1","/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/reportWebVitals.ts":"2","/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/App.tsx":"3","/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/Home.tsx":"4","/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/HoverRugz.tsx":"5","/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/candy-machine.ts":"6","/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/utils.ts":"7","/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/MintButton.tsx":"8","/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/connection.tsx":"9","/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/index.tsx":"10","/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/reportWebVitals.ts":"11","/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/App.tsx":"12","/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/Home.tsx":"13","/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/connection.tsx":"14","/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/utils.ts":"15","/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/candy-machine.ts":"16","/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/MintButton.tsx":"17"},{"size":591,"mtime":1641193760652,"results":"18","hashOfConfig":"19"},{"size":425,"mtime":1636087785453,"results":"20","hashOfConfig":"19"},{"size":3176,"mtime":1652410299485,"results":"21","hashOfConfig":"19"},{"size":57526,"mtime":1652420912344,"results":"22","hashOfConfig":"19"},{"size":9580,"mtime":1652415855589,"results":"23","hashOfConfig":"19"},{"size":17867,"mtime":1652406839895,"results":"24","hashOfConfig":"19"},{"size":3236,"mtime":1652406919672,"results":"25","hashOfConfig":"19"},{"size":4947,"mtime":1652406813896,"results":"26","hashOfConfig":"19"},{"size":16107,"mtime":1652406902867,"results":"27","hashOfConfig":"19"},{"size":591,"mtime":1641193760652,"results":"28","hashOfConfig":"29"},{"size":425,"mtime":1636087785453,"results":"30","hashOfConfig":"29"},{"size":2826,"mtime":1653874176284,"results":"31","hashOfConfig":"29"},{"size":22926,"mtime":1654036720313,"results":"32","hashOfConfig":"29"},{"size":16107,"mtime":1652406902867,"results":"33","hashOfConfig":"29"},{"size":3236,"mtime":1652406919672,"results":"34","hashOfConfig":"29"},{"size":17867,"mtime":1652406839895,"results":"35","hashOfConfig":"29"},{"size":4947,"mtime":1652406813896,"results":"36","hashOfConfig":"29"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},"17pu916",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"39"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":115,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":40,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"39"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"4av9nd",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"61"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/index.tsx",[],["78","79"],"/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/reportWebVitals.ts",[],"/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/App.tsx",["80","81","82","83"],"import \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./Home\";\nimport {Route, Routes} from 'react-router-dom'\nimport HoverRugz from \"./HoverRugz\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { DEFAULT_TIMEOUT } from './connection';\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n        getPhantomWallet(),\n        getSlopeWallet(),\n        getSolflareWallet(),\n        getSolletWallet({ network }),\n        getSolletExtensionWallet({ network })\n    ],\n    []\n  );\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect>\n            <WalletDialogProvider>\n              <Routes>\n                <Route path=\"/\" element={HomeComponent()}/>\n                <Route path=\"/HoverRugz\" element={HoverRugzComponent()}/>\n                </Routes>\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n\nconst HomeComponent = () => {\n  return (\n   <Home\n   candyMachineId={candyMachineId}\n   connection={connection}\n   txTimeout={DEFAULT_TIMEOUT}\n   rpcHost={rpcHost}\n   network={network}\n                />\n  );\n}\nconst HoverRugzComponent = () => {\n  return (\n      <HoverRugz\n      candyMachineId={candyMachineId}\n      connection={connection}\n      txTimeout={DEFAULT_TIMEOUT}\n      rpcHost={rpcHost}\n      network={network}\n                />\n  );\n}","/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/Home.tsx",["84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104","105","106","107","108","109","110","111","112","113","114","115","116","117","118","119","120","121","122","123","124","125","126","127","128","129","130","131","132","133","134","135","136","137","138","139","140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183","184","185","186","187","188","189","190","191","192","193","194","195","196","197","198"],"/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/HoverRugz.tsx",["199","200","201","202","203","204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227","228","229","230","231","232","233","234","235","236","237","238"],"import { useEffect, useLayoutEffect, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport {Navigate} from 'react-router-dom';\nimport Alert from \"@material-ui/lab/Alert\";\nimport './HoverRugz.css';\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { TokenAccountsFilter } from \"@solana/web3.js\";\nimport * as web3js from \"@solana/web3.js\";\nimport axios from \"axios\";\nimport { getParsedNftAccountsByOwner,isValidSolanaAddress, createConnectionConfig,} from \"@nfteyez/sol-rayz\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport Typewriter from \"typewriter-effect\";\n\nimport gameLogo from 'gameLogo.png';\n\nimport {\n  CandyMachineAccount,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\nimport { Filter } from \"@material-ui/icons\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { off } from \"process\";\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HoverRugzProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  txTimeout: number;\n  rpcHost: string;\n  network: WalletAdapterNetwork;\n}\n\nconst HoverRugz = (props: HoverRugzProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [hasThugRug, setHasThugRug] = useState<Boolean>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n  \n  let mintedItems : any[] | undefined = undefined;\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n\n  const getAllNftData = async () => {\n    try {\n      if(wallet){\n        let ownerToken = wallet.publicKey;\n        const nfts = await getParsedNftAccountsByOwner({\n          publicAddress: ownerToken,\n          connection: props.connection\n        });\n        return nfts;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getNftTokenData = async () => {\n    try {\n        let nftData = await getAllNftData();\n        let nftArray = []\n        if(nftData){\n          for(var x=0; x<nftData.length; x++){\n            nftArray.push({name: nftData[x].data.name, uri: nftData[x].data.uri})\n          }\n        }\n        return nftArray;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n  const hasThugRugNFT = () => {\n    var found = false;\n    if(mintedItems !== undefined){\n      for(var i=0; i < mintedItems.length; i++){\n        console.log(mintedItems[i].name);\n        if(mintedItems[i].name.includes(\"Thug Rugz\")){\n          found = true;\n          setHasThugRug(true);\n          console.log('has thugrug')\n        }\n      }\n    }\n    if(found == false){\n      setHasThugRug(false);\n    }\n  }\n\nconst refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      // const {\n      //   candyMachine,\n      //   goLiveDate,\n      //   itemsAvailable,\n      //   itemsRemaining,\n      //   itemsRedeemed,\n      // } = await getCandyMachineState(\n      //   wallet as anchor.Wallet,\n      //   props.candyMachineId,\n      //   props.connection\n      // );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  var scoreCounter = 0;\n\n  useLayoutEffect(() => {\n    setHasThugRug(true);\n    (async () => {\n      console.log('useeffect async')\n      var start = document.getElementById(\"start\");\n      var logo = document.getElementById(\"gameLogo\");\n      var message = document.getElementById(\"message\");\n      var game = document.getElementById(\"game\");\n      var block = document.getElementById(\"block\");\n      var hole = document.getElementById(\"hole\");\n      var character = document.querySelector(\"#character\");\n      var jumping = 0;\n\n      var startButton = document.getElementById(\"start\");\n      console.log(startButton);\n      startButton?.addEventListener('click', () => {\n        console.log('clicked')\n        startGame();\n      });\n    \n      function blockAnimations(){\n        block?.addEventListener('animationiteration', setScore);\n      }\n    \n      function setScore(){\n        console.log('animation iteration' + scoreCounter)\n        var random = ((Math.random()*50) + 40);\n        block?.setAttribute(\"style\", \"bottom: -\" + random + \"%;\")\n        scoreCounter++;\n      }\n\n      function gravity(){\n        const loop = setInterval(function(){\n          var characterTop;\n          //console.log(character)\n          //console.log(block);\n          if(character && block) {\n    \n            var blockLeft = parseInt(getComputedStyle(block).getPropertyValue(\"left\"));\n            var blockTop = parseInt(getComputedStyle(block).getPropertyValue(\"top\"));\n            characterTop = parseInt(getComputedStyle(character).getPropertyValue(\"top\"));\n            character?.setAttribute(\"style\", \"top:\" + (characterTop + 4) + \"px\" )\n            var cBottom = characterTop + 160 ;\n            // console.log('blockleft: ' + blockLeft)\n            // console.log(characterTop);\n            // console.log(cBottom);\n            // console.log(blockTop);        \n    \n            var characterLocation = window.screen.availWidth * .2;\n            if( (characterTop > 1000) || ((blockLeft<=characterLocation) && (cBottom>=blockTop+160)) ){\n              //stop gravity\n              clearInterval(loop);\n\n              block?.removeEventListener('animationiteration', setScore);\n\n              //message and Restart button\n              message?.setAttribute(\"style\", \"display:block;\")\n              if(message){\n                message.textContent = \"Game Over. Score: \" + scoreCounter;\n              }\n              //message?.setAttribute(\"style\", \"margin-top: 10px;\")\n    \n              start?.setAttribute(\"style\", \"display:block;\")\n              if(start){\n                start.textContent = \"Restart\";\n              }\n              start?.setAttribute(\"style\", \"margin-top: 10%;\")\n              \n    \n              //reset character\n              character?.setAttribute(\"style\", \"top:40%;\" )\n              //character?.setAttribute(\"style\", \"opacity:50%;\" )\n    \n              //stop block\n              //block?.setAttribute(\"style\", \"opacity:50%;\" )\n    \n\n              //reset score\n              scoreCounter = 0;\n\n            }\n        }\n        }, 30);\n      }\n    \n      function jump(){\n        jumping = 1;\n        var jumpCount = 0;\n    \n        var jumpInterval = setInterval(function() {\n            \n          var characterTop;\n          if(character) {\n            characterTop = parseInt(getComputedStyle(character).getPropertyValue(\"top\"));\n            if(characterTop > 6 && jumpCount<15){        \n              character?.setAttribute(\"style\", \"top:\" + (characterTop - 2) + \"px\" )\n            }\n          }\n    \n          if(jumpCount>20){\n            clearInterval(jumpInterval);\n            jumping = 0;\n            jumpCount = 0;\n          }\n          jumpCount++;\n        }, 10);\n    \n      }\n    \n      // game?.addEventListener('click', () => {\n      //   jump();\n      // });\n    \n    function startGame() {\n        scoreCounter = 0;\n        start?.setAttribute(\"style\", \"display:none;\")\n        console.log('start');\n    \n        //message and Restart button\n        if(message){\n          message.textContent = \"\";\n        }\n        logo?.setAttribute(\"style\", \"display:none;\");\n    \n        blockAnimations();\n        gravity();\n    \n        document.addEventListener('keydown', event => {\n          if (event.code === 'Space') {\n            jump();\n          }\n        });\n    \n        logo?.setAttribute(\"style\", \"display:none;\")\n      };\n\n    })();\n  })\n\n  useEffect(() => {\n    getNftTokenData();\n    hasThugRugNFT();\n\n    \n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n  return (\n    <main>\n      \n      {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>} */}\n      { hasThugRug  &&\n          <div id=\"game\">\n            <div id=\"gameLogo\"></div>\n            <div id=\"start\">Start</div>\n            <p id=\"message\"></p>\n            <div id=\"block\"></div>\n            <div id=\"hole\"></div>\n            <div id=\"character\"></div>\n          </div>\n      }\n\n        <script>\n          \n        blockAnimations();\n        </script>\n    </main>\n  );\n};\n\n// <Navigate to='/' />\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nexport default HoverRugz;\n","/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/candy-machine.ts",[],"/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/utils.ts",[],"/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/MintButton.tsx",[],["239","240"],"/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/connection.tsx",[],"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/index.tsx",[],["241","242"],"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/reportWebVitals.ts",[],"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/App.tsx",["243","244","245","246"],"import \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./Home\";\nimport {Route, Routes} from 'react-router-dom'\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { DEFAULT_TIMEOUT } from './connection';\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n        getPhantomWallet(),\n        getSlopeWallet(),\n        getSolflareWallet(),\n        getSolletWallet({ network }),\n        getSolletExtensionWallet({ network })\n    ],\n    []\n  );\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect>\n            <WalletDialogProvider>\n              <Routes>\n                <Route path=\"/\" element={HomeComponent()}/>\n                </Routes>\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n\nconst HomeComponent = () => {\n  return (\n   <Home\n   candyMachineId={candyMachineId}\n   connection={connection}\n   txTimeout={DEFAULT_TIMEOUT}\n   rpcHost={rpcHost}\n   network={network}\n                />\n  );\n}","/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/Home.tsx",["247","248","249","250","251","252","253","254","255","256"],"import { useCallback, useEffect, useMemo, useState } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport { BrowserRouter, Route, Link } from \"react-router-dom\";\n\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Typewriter from \"typewriter-effect\";\nimport {\n  Commitment,\n  Connection,\n  PublicKey,\n  Transaction,\n} from '@solana/web3.js';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport {\n  awaitTransactionSignatureConfirmation,\n  CANDY_MACHINE_PROGRAM,\n  CandyMachineAccount,\n  createAccountsForMint,\n  getCandyMachineState,\n  getCollectionPDA,\n  mintOneToken,\n  SetupState,\n} from './candy-machine';\nimport { AlertState, formatNumber, getAtaForMint, toDate } from './utils';\nimport { MintButton } from './MintButton';\nimport { GatewayProvider } from '@civic/solana-gateway-react';\nimport { sendTransaction } from './connection';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport './home.css';\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst MintContainer = styled.div``; // add your owns styles here\n\nexport interface HomeProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  txTimeout: number;\n  rpcHost: string;\n  network: WalletAdapterNetwork;\n}\n\nconst Home = (props: HomeProps) => {\n  const [isUserMinting, setIsUserMinting] = useState(false);\n  const [candyMachine, setCandyMachine] = useState<CandyMachineAccount>();\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n  const [isActive, setIsActive] = useState(false);\n  const [endDate, setEndDate] = useState<Date>();\n  const [itemsRemaining, setItemsRemaining] = useState<number>();\n  const [isWhitelistUser, setIsWhitelistUser] = useState(false);\n  const [isPresale, setIsPresale] = useState(false);\n  const [isValidBalance, setIsValidBalance] = useState(false);\n  const [discountPrice, setDiscountPrice] = useState<anchor.BN>();\n  const [needTxnSplit, setNeedTxnSplit] = useState(true);\n  const [setupTxn, setSetupTxn] = useState<SetupState>();\n\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n\n  const refreshCandyMachineState = useCallback(\n    async (commitment: Commitment = 'confirmed') => {\n      if (!anchorWallet) {\n        return;\n      }\n\n      const connection = new Connection(props.rpcHost, commitment);\n\n      if (props.candyMachineId) {\n        console.log(props?.candyMachineId);\n        try {\n          const cndy = await getCandyMachineState(\n            anchorWallet,\n            props.candyMachineId,\n            connection,\n          );\n          let active =\n            cndy?.state.goLiveDate?.toNumber() < new Date().getTime() / 1000;\n          let presale = false;\n\n          // duplication of state to make sure we have the right values!\n          let isWLUser = false;\n          let userPrice = cndy.state.price;\n\n          userPrice = isWLUser ? userPrice : cndy.state.price;\n\n          if (cndy?.state.tokenMint) {\n            // retrieves the SPL token\n            const mint = new anchor.web3.PublicKey(cndy.state.tokenMint);\n            const token = (\n              await getAtaForMint(mint, anchorWallet.publicKey)\n            )[0];\n            try {\n              const balance = await connection.getTokenAccountBalance(token);\n\n              const valid = new anchor.BN(balance.value.amount).gte(userPrice);\n\n              // only allow user to mint if token balance >  the user if the balance > 0\n              setIsValidBalance(valid);\n              active = active && valid;\n            } catch (e) {\n              setIsValidBalance(false);\n              active = false;\n              // no whitelist user, no mint\n              console.log('There was a problem fetching SPL token balance');\n              console.log(e);\n            }\n          } else {\n            const balance = new anchor.BN(\n              await connection.getBalance(anchorWallet.publicKey),\n            );\n            const valid = balance.gte(userPrice);\n            setIsValidBalance(valid);\n            active = active && valid;\n          }\n\n          if (cndy.state.isSoldOut) {\n            active = false;\n          }\n\n          const [collectionPDA] = await getCollectionPDA(props.candyMachineId);\n          const collectionPDAAccount = await connection.getAccountInfo(\n            collectionPDA,\n          );\n\n          setIsActive((cndy.state.isActive = active));\n          setIsPresale((cndy.state.isPresale = presale));\n          setCandyMachine(cndy);\n\n          const txnEstimate =\n            892 +\n            (!!collectionPDAAccount && cndy.state.retainAuthority ? 182 : 0) +\n            (cndy.state.tokenMint ? 177 : 0) +\n            (cndy.state.whitelistMintSettings ? 33 : 0) +\n            (cndy.state.whitelistMintSettings?.mode?.burnEveryTime ? 145 : 0) +\n            (cndy.state.gatekeeper ? 33 : 0) +\n            (cndy.state.gatekeeper?.expireOnUse ? 66 : 0);\n\n          setNeedTxnSplit(txnEstimate > 1230);\n        } catch (e) {\n          if (e instanceof Error) {\n            if (\n              e.message === `Account does not exist ${props.candyMachineId}`\n            ) {\n              setAlertState({\n                open: true,\n                message: `Couldn't fetch candy machine state from candy machine with address: ${props.candyMachineId}, using rpc: ${props.rpcHost}! You probably typed the REACT_APP_CANDY_MACHINE_ID value in wrong in your .env file, or you are using the wrong RPC!`,\n                severity: 'error',\n                hideDuration: null,\n              });\n            } else if (\n              e.message.startsWith('failed to get info about account')\n            ) {\n              setAlertState({\n                open: true,\n                message: `Couldn't fetch candy machine state with rpc: ${props.rpcHost}! This probably means you have an issue with the REACT_APP_SOLANA_RPC_HOST value in your .env file, or you are not using a custom RPC!`,\n                severity: 'error',\n                hideDuration: null,\n              });\n            }\n          } else {\n            setAlertState({\n              open: true,\n              message: `${e}`,\n              severity: 'error',\n              hideDuration: null,\n            });\n          }\n          console.log(e);\n        }\n      } else {\n        setAlertState({\n          open: true,\n          message: `Your REACT_APP_CANDY_MACHINE_ID value in the .env file doesn't look right! Make sure you enter it in as plain base-58 address!`,\n          severity: 'error',\n          hideDuration: null,\n        });\n      }\n    },\n    [anchorWallet, props.candyMachineId, props.rpcHost],\n  );\n\n  const onMint = async (\n    beforeTransactions: Transaction[] = [],\n    afterTransactions: Transaction[] = [],\n  ) => {\n    try {\n      setIsUserMinting(true);\n      document.getElementById('#identity')?.click();\n      if (wallet.connected && candyMachine?.program && wallet.publicKey) {\n        let setupMint: SetupState | undefined;\n        if (needTxnSplit && setupTxn === undefined) {\n          setAlertState({\n            open: true,\n            message: 'Please sign account setup transaction',\n            severity: 'info',\n          });\n          setupMint = await createAccountsForMint(\n            candyMachine,\n            wallet.publicKey,\n          );\n          let status: any = { err: true };\n          if (setupMint.transaction) {\n            status = await awaitTransactionSignatureConfirmation(\n              setupMint.transaction,\n              props.txTimeout,\n              props.connection,\n              true,\n            );\n          }\n          if (status && !status.err) {\n            setSetupTxn(setupMint);\n            setAlertState({\n              open: true,\n              message:\n                'Setup transaction succeeded! Please sign minting transaction',\n              severity: 'info',\n            });\n          } else {\n            setAlertState({\n              open: true,\n              message: 'Mint failed! Please try again!',\n              severity: 'error',\n            });\n            setIsUserMinting(false);\n            return;\n          }\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Please sign minting transaction',\n            severity: 'info',\n          });\n        }\n\n        let mintResult = await mintOneToken(\n          candyMachine,\n          wallet.publicKey,\n          beforeTransactions,\n          afterTransactions,\n          setupMint ?? setupTxn,\n        );\n\n        let status: any = { err: true };\n        let metadataStatus = null;\n        if (mintResult) {\n          status = await awaitTransactionSignatureConfirmation(\n            mintResult.mintTxId,\n            props.txTimeout,\n            props.connection,\n            true,\n          );\n\n          metadataStatus =\n            await candyMachine.program.provider.connection.getAccountInfo(\n              mintResult.metadataKey,\n              'processed',\n            );\n          console.log('Metadata status: ', !!metadataStatus);\n        }\n\n        if (status && !status.err && metadataStatus) {\n          // manual update since the refresh might not detect\n          // the change immediately\n          console.log('status')\n          let remaining = itemsRemaining! - 1;\n          console.log(remaining);\n          setItemsRemaining(remaining);\n          setIsActive((candyMachine.state.isActive = remaining > 0));\n          candyMachine.state.isSoldOut = remaining === 0;\n          setSetupTxn(undefined);\n          setAlertState({\n            open: true,\n            message: 'Congratulations! Mint succeeded!',\n            severity: 'success',\n            hideDuration: 7000,\n          });\n          refreshCandyMachineState('processed');\n        } else if (status && !status.err) {\n          setAlertState({\n            open: true,\n            message:\n              'Mint likely failed! Anti-bot SOL 0.01 fee potentially charged! Check the explorer to confirm the mint failed and if so, make sure you are eligible to mint before trying again.',\n            severity: 'error',\n            hideDuration: 8000,\n          });\n          refreshCandyMachineState();\n        } else {\n          setAlertState({\n            open: true,\n            message: 'Mint failed! Please try again!',\n            severity: 'error',\n          });\n          refreshCandyMachineState();\n        }\n      }\n    } catch (error: any) {\n      let message = error.msg || 'Minting failed! Please try again!';\n      if (!error.msg) {\n        if (!error.message) {\n          message = 'Transaction timeout! Please try again.';\n        } else if (error.message.indexOf('0x137')) {\n          console.log(error);\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf('0x135')) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          console.log(error);\n          message = `SOLD OUT!`;\n          window.location.reload();\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: 'error',\n      });\n      // updates the candy machine state to reflect the latest\n      // information on chain\n      refreshCandyMachineState();\n    } finally {\n      setIsUserMinting(false);\n    }\n  };\n\n  useEffect(() => {\n    refreshCandyMachineState();\n    console.log('use efect');\n    if(candyMachine) {\n      console.log('candyMachine')\n      console.log(candyMachine.state);\n      setItemsRemaining(candyMachine.state.itemsRemaining);\n      console.log(itemsRemaining);\n  } \n  }, [\n    anchorWallet,\n    props.candyMachineId,\n    props.connection,\n    refreshCandyMachineState,\n  ]);\n\n  useEffect(() => {\n    (function loop() {\n      setTimeout(() => {\n        refreshCandyMachineState();\n        loop();\n      }, 20000);\n    })();\n  }, [refreshCandyMachineState]);\n\n  return (\n    <main>\n      \n      {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>} */}\n      <div className=\"main\">\n        <div id=\"mainEmptyDiv\"></div>\n        <div className=\"mintContainer\">\n          {anchorWallet && (\n            <Typography variant=\"body2\" color=\"textSecondary\">\n            Wallet: {(anchorWallet?.publicKey?.toBase58() || \"\")}\n          </Typography>\n          )} \n        \n        <Container style={{ marginTop: 20 }}>\n        <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\n          <Paper\n            style={{\n              padding: 24,\n              paddingBottom: 24,\n              backgroundColor: '#151A1F',\n              borderRadius: 6,\n            }}\n          >\n            {!wallet.connected ? (\n              <ConnectButton>Connect Wallet</ConnectButton>\n            ) : (\n              <>\n                {candyMachine && (\n                  <Grid\n                    container\n                    direction=\"row\"\n                    justifyContent=\"center\"\n                    wrap=\"nowrap\"\n                  >\n                    <Grid item xs={3}>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        Remaining\n                      </Typography>\n                      <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                        style={{\n                          fontWeight: 'bold',\n                        }}\n                      >\n                        {`${itemsRemaining}`}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={4}>\n                      <Typography variant=\"body2\" color=\"textSecondary\">\n                        {isWhitelistUser && discountPrice\n                          ? 'Discount Price'\n                          : 'Price'}\n                      </Typography>\n                      <Typography\n                        variant=\"h6\"\n                        color=\"textPrimary\"\n                        style={{ fontWeight: 'bold' }}\n                      >\n                        {isWhitelistUser && discountPrice\n                          ? `◎ ${formatNumber.asNumber(discountPrice)}`\n                          : `◎ ${formatNumber.asNumber(\n                              candyMachine.state.price,\n                            )}`}\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={5}>\n                              <Typography\n                                variant=\"caption\"\n                                align=\"center\"\n                                display=\"block\"\n                                style={{ fontWeight: 'bold' }}\n                              >\n                                MINT TBA\n                              </Typography>\n                    </Grid>\n                  </Grid>\n                )}\n                <MintContainer>\n                  {candyMachine?.state.isActive &&\n                  candyMachine?.state.gatekeeper &&\n                  wallet.publicKey &&\n                  wallet.signTransaction ? (\n                    <GatewayProvider\n                      wallet={{\n                        publicKey:\n                          wallet.publicKey ||\n                          new PublicKey(CANDY_MACHINE_PROGRAM),\n                        //@ts-ignore\n                        signTransaction: wallet.signTransaction,\n                      }}\n                      gatekeeperNetwork={\n                        candyMachine?.state?.gatekeeper?.gatekeeperNetwork\n                      }\n                      clusterUrl={\n                        props.network === WalletAdapterNetwork.Devnet\n                          ? 'https://api.devnet.solana.com'\n                          : rpcUrl\n                      }\n                      handleTransaction={async (transaction: Transaction) => {\n                        setIsUserMinting(true);\n                        const userMustSign = transaction.signatures.find(sig =>\n                          sig.publicKey.equals(wallet.publicKey!),\n                        );\n                        if (userMustSign) {\n                          setAlertState({\n                            open: true,\n                            message: 'Please sign one-time Civic Pass issuance',\n                            severity: 'info',\n                          });\n                          try {\n                            transaction = await wallet.signTransaction!(\n                              transaction,\n                            );\n                          } catch (e) {\n                            setAlertState({\n                              open: true,\n                              message: 'User cancelled signing',\n                              severity: 'error',\n                            });\n                            // setTimeout(() => window.location.reload(), 2000);\n                            setIsUserMinting(false);\n                            throw e;\n                          }\n                        } else {\n                          setAlertState({\n                            open: true,\n                            message: 'Refreshing Civic Pass',\n                            severity: 'info',\n                          });\n                        }\n                        try {\n                          await sendTransaction(\n                            props.connection,\n                            wallet,\n                            transaction,\n                            [],\n                            true,\n                            'confirmed',\n                          );\n                          setAlertState({\n                            open: true,\n                            message: 'Please sign minting',\n                            severity: 'info',\n                          });\n                        } catch (e) {\n                          setAlertState({\n                            open: true,\n                            message:\n                              'Solana dropped the transaction, please try again',\n                            severity: 'warning',\n                          });\n                          console.error(e);\n                          // setTimeout(() => window.location.reload(), 2000);\n                          setIsUserMinting(false);\n                          throw e;\n                        }\n                        await onMint();\n                      }}\n                      broadcastTransaction={false}\n                      options={{ autoShowModal: false }}\n                    >\n                      <MintButton\n                        candyMachine={candyMachine}\n                        isMinting={isUserMinting}\n                        setIsMinting={val => setIsUserMinting(val)}\n                        onMint={onMint}\n                        isActive={\n                          isActive ||\n                          (isPresale && isWhitelistUser && isValidBalance)\n                        }\n                      />\n                    </GatewayProvider>\n                  ) : (\n                    <MintButton \n                      candyMachine={candyMachine}\n                      isMinting={isUserMinting}\n                      setIsMinting={val => setIsUserMinting(val)}\n                      onMint={onMint}\n                      isActive={\n                        isActive ||\n                        (isPresale && isWhitelistUser && isValidBalance)\n                      }\n                    />\n                  )}\n                </MintContainer>\n              </>\n            )}\n          </Paper>\n        </Container>\n\n        <Snackbar\n          open={alertState.open}\n          autoHideDuration={\n            alertState.hideDuration === undefined ? 6000 : alertState.hideDuration\n          }\n          onClose={() => setAlertState({ ...alertState, open: false })}\n        >\n          <Alert\n            onClose={() => setAlertState({ ...alertState, open: false })}\n            severity={alertState.severity}\n          >\n            {alertState.message}\n          </Alert>\n        </Snackbar>\n      </Container>\n          </div>\n\n        </div>\n\n        {<div id=\"about\"><div className=\"aboutContainer\">\n          <h1 className=\"h1\">ABOUT</h1>\n          <p>For those beginning or continuing their awakening on NFTs...\n          </p><p>A collection of 2,222 uniquely generated Awakened Sols on the Solana blockchain.  \n          </p><p>An alpha group and Sniping tool with unique features only available to holders.\n          </p><p>An open minded community.\n          </p>\n          </div></div>}\n\n          {<div id=\"roadmap\">\n            <div className=\"roadMapContainer\">\n          <h1 className=\"h1\">ROADMAP</h1>\n          <ul><h3>Phase 1</h3>\n            <li>Artwork Development</li>\n            <li>Sniping Tool Development</li>\n            <li>2,222 Awakened Sols Mint(0.5 SOL) - 50 OG(FREE) - 500 WL(0.3 SOL)</li>\n            <li>Launch Sniping Tool to the public with special features for holders</li>\n          </ul>\n          <ul><h3>Phase 2</h3>\n            <li>Listing on Secondary Market</li>\n            <li>SOL Giveaways, NFT airdrops, WL spots</li>\n            <li>Develop extra features based on feedback for Sniping Tool for NFT holders.</li>\n          </ul>\n          <ul><h3>Phase 3</h3>\n            <li>Launch Sniping Tool v2</li>\n          </ul>\n          </div>\n          </div>}\n\n    </main>\n  );\n};\n\nconst getCountdownDate = (\n  candyMachine: CandyMachineAccount,\n): Date | undefined => {\n  if (\n    candyMachine.state.isActive &&\n    candyMachine.state.endSettings?.endSettingType.date\n  ) {\n    return toDate(candyMachine.state.endSettings.number);\n  }\n\n  return toDate(\n    candyMachine.state.goLiveDate\n      ? candyMachine.state.goLiveDate\n      : candyMachine.state.isPresale\n      ? new anchor.BN(new Date().getTime() / 1000)\n      : undefined,\n  );\n};\n\nexport default Home;\n","/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/connection.tsx",[],"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/utils.ts",[],"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/candy-machine.ts",[],"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/MintButton.tsx",[],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":27,"column":7,"nodeType":"263","messageId":"264","endLine":27,"endColumn":15},{"ruleId":"261","severity":1,"message":"265","line":31,"column":7,"nodeType":"263","messageId":"264","endLine":31,"endColumn":13},{"ruleId":"261","severity":1,"message":"266","line":44,"column":7,"nodeType":"263","messageId":"264","endLine":44,"endColumn":20},{"ruleId":"261","severity":1,"message":"267","line":46,"column":7,"nodeType":"263","messageId":"264","endLine":46,"endColumn":16},{"ruleId":"261","severity":1,"message":"268","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":23},{"ruleId":"261","severity":1,"message":"269","line":3,"column":25,"nodeType":"263","messageId":"264","endLine":3,"endColumn":30},{"ruleId":"261","severity":1,"message":"270","line":3,"column":32,"nodeType":"263","messageId":"264","endLine":3,"endColumn":36},{"ruleId":"261","severity":1,"message":"271","line":67,"column":10,"nodeType":"263","messageId":"264","endLine":67,"endColumn":17},{"ruleId":"261","severity":1,"message":"272","line":67,"column":19,"nodeType":"263","messageId":"264","endLine":67,"endColumn":29},{"ruleId":"261","severity":1,"message":"273","line":69,"column":27,"nodeType":"263","messageId":"264","endLine":69,"endColumn":45},{"ruleId":"261","severity":1,"message":"274","line":72,"column":25,"nodeType":"263","messageId":"264","endLine":72,"endColumn":41},{"ruleId":"275","severity":1,"message":"276","line":375,"column":6,"nodeType":"277","endLine":380,"endColumn":4,"suggestions":"278"},{"ruleId":"279","severity":1,"message":"280","line":626,"column":37,"nodeType":"281","endLine":626,"endColumn":60},{"ruleId":"279","severity":1,"message":"280","line":627,"column":37,"nodeType":"281","endLine":627,"endColumn":59},{"ruleId":"279","severity":1,"message":"280","line":630,"column":37,"nodeType":"281","endLine":630,"endColumn":63},{"ruleId":"279","severity":1,"message":"280","line":631,"column":37,"nodeType":"281","endLine":631,"endColumn":64},{"ruleId":"279","severity":1,"message":"280","line":634,"column":37,"nodeType":"281","endLine":634,"endColumn":63},{"ruleId":"279","severity":1,"message":"280","line":635,"column":37,"nodeType":"281","endLine":635,"endColumn":59},{"ruleId":"279","severity":1,"message":"280","line":655,"column":45,"nodeType":"281","endLine":655,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":661,"column":45,"nodeType":"281","endLine":661,"endColumn":86},{"ruleId":"279","severity":1,"message":"280","line":669,"column":45,"nodeType":"281","endLine":669,"endColumn":73},{"ruleId":"279","severity":1,"message":"280","line":675,"column":45,"nodeType":"281","endLine":675,"endColumn":90},{"ruleId":"279","severity":1,"message":"280","line":683,"column":45,"nodeType":"281","endLine":683,"endColumn":82},{"ruleId":"279","severity":1,"message":"280","line":689,"column":45,"nodeType":"281","endLine":689,"endColumn":94},{"ruleId":"279","severity":1,"message":"280","line":697,"column":45,"nodeType":"281","endLine":697,"endColumn":86},{"ruleId":"279","severity":1,"message":"280","line":703,"column":45,"nodeType":"281","endLine":703,"endColumn":72},{"ruleId":"279","severity":1,"message":"280","line":716,"column":45,"nodeType":"281","endLine":716,"endColumn":85},{"ruleId":"279","severity":1,"message":"280","line":722,"column":45,"nodeType":"281","endLine":722,"endColumn":86},{"ruleId":"279","severity":1,"message":"280","line":730,"column":45,"nodeType":"281","endLine":730,"endColumn":85},{"ruleId":"279","severity":1,"message":"280","line":736,"column":45,"nodeType":"281","endLine":736,"endColumn":84},{"ruleId":"279","severity":1,"message":"280","line":744,"column":45,"nodeType":"281","endLine":744,"endColumn":86},{"ruleId":"279","severity":1,"message":"280","line":750,"column":45,"nodeType":"281","endLine":750,"endColumn":91},{"ruleId":"279","severity":1,"message":"280","line":758,"column":43,"nodeType":"281","endLine":758,"endColumn":83},{"ruleId":"279","severity":1,"message":"280","line":764,"column":45,"nodeType":"281","endLine":764,"endColumn":94},{"ruleId":"279","severity":1,"message":"280","line":775,"column":45,"nodeType":"281","endLine":775,"endColumn":89},{"ruleId":"279","severity":1,"message":"280","line":783,"column":45,"nodeType":"281","endLine":783,"endColumn":89},{"ruleId":"279","severity":1,"message":"280","line":791,"column":45,"nodeType":"281","endLine":791,"endColumn":86},{"ruleId":"279","severity":1,"message":"280","line":799,"column":45,"nodeType":"281","endLine":799,"endColumn":90},{"ruleId":"279","severity":1,"message":"280","line":811,"column":45,"nodeType":"281","endLine":811,"endColumn":86},{"ruleId":"279","severity":1,"message":"280","line":819,"column":45,"nodeType":"281","endLine":819,"endColumn":50},{"ruleId":"279","severity":1,"message":"280","line":822,"column":45,"nodeType":"281","endLine":822,"endColumn":50},{"ruleId":"279","severity":1,"message":"280","line":825,"column":45,"nodeType":"281","endLine":825,"endColumn":50},{"ruleId":"279","severity":1,"message":"280","line":833,"column":45,"nodeType":"281","endLine":833,"endColumn":77},{"ruleId":"279","severity":1,"message":"280","line":841,"column":43,"nodeType":"281","endLine":841,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":849,"column":43,"nodeType":"281","endLine":849,"endColumn":74},{"ruleId":"279","severity":1,"message":"280","line":857,"column":43,"nodeType":"281","endLine":857,"endColumn":73},{"ruleId":"279","severity":1,"message":"280","line":867,"column":45,"nodeType":"281","endLine":867,"endColumn":76},{"ruleId":"279","severity":1,"message":"280","line":875,"column":43,"nodeType":"281","endLine":875,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":883,"column":43,"nodeType":"281","endLine":883,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":891,"column":43,"nodeType":"281","endLine":891,"endColumn":74},{"ruleId":"279","severity":1,"message":"280","line":901,"column":45,"nodeType":"281","endLine":901,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":909,"column":43,"nodeType":"281","endLine":909,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":917,"column":43,"nodeType":"281","endLine":917,"endColumn":76},{"ruleId":"279","severity":1,"message":"280","line":925,"column":43,"nodeType":"281","endLine":925,"endColumn":76},{"ruleId":"279","severity":1,"message":"280","line":936,"column":45,"nodeType":"281","endLine":936,"endColumn":80},{"ruleId":"279","severity":1,"message":"280","line":944,"column":43,"nodeType":"281","endLine":944,"endColumn":77},{"ruleId":"279","severity":1,"message":"280","line":952,"column":43,"nodeType":"281","endLine":952,"endColumn":76},{"ruleId":"279","severity":1,"message":"280","line":960,"column":43,"nodeType":"281","endLine":960,"endColumn":48},{"ruleId":"279","severity":1,"message":"280","line":967,"column":45,"nodeType":"281","endLine":967,"endColumn":83},{"ruleId":"279","severity":1,"message":"280","line":975,"column":43,"nodeType":"281","endLine":975,"endColumn":80},{"ruleId":"279","severity":1,"message":"280","line":983,"column":43,"nodeType":"281","endLine":983,"endColumn":84},{"ruleId":"279","severity":1,"message":"280","line":991,"column":43,"nodeType":"281","endLine":991,"endColumn":83},{"ruleId":"279","severity":1,"message":"280","line":1001,"column":45,"nodeType":"281","endLine":1001,"endColumn":84},{"ruleId":"279","severity":1,"message":"280","line":1009,"column":43,"nodeType":"281","endLine":1009,"endColumn":85},{"ruleId":"279","severity":1,"message":"280","line":1017,"column":43,"nodeType":"281","endLine":1017,"endColumn":81},{"ruleId":"279","severity":1,"message":"280","line":1025,"column":43,"nodeType":"281","endLine":1025,"endColumn":84},{"ruleId":"279","severity":1,"message":"280","line":1035,"column":45,"nodeType":"281","endLine":1035,"endColumn":83},{"ruleId":"279","severity":1,"message":"280","line":1043,"column":43,"nodeType":"281","endLine":1043,"endColumn":82},{"ruleId":"279","severity":1,"message":"280","line":1051,"column":43,"nodeType":"281","endLine":1051,"endColumn":80},{"ruleId":"279","severity":1,"message":"280","line":1059,"column":43,"nodeType":"281","endLine":1059,"endColumn":84},{"ruleId":"279","severity":1,"message":"280","line":1070,"column":45,"nodeType":"281","endLine":1070,"endColumn":85},{"ruleId":"279","severity":1,"message":"280","line":1078,"column":43,"nodeType":"281","endLine":1078,"endColumn":86},{"ruleId":"279","severity":1,"message":"280","line":1086,"column":43,"nodeType":"281","endLine":1086,"endColumn":48},{"ruleId":"279","severity":1,"message":"280","line":1089,"column":43,"nodeType":"281","endLine":1089,"endColumn":48},{"ruleId":"279","severity":1,"message":"280","line":1096,"column":45,"nodeType":"281","endLine":1096,"endColumn":80},{"ruleId":"279","severity":1,"message":"280","line":1104,"column":43,"nodeType":"281","endLine":1104,"endColumn":82},{"ruleId":"279","severity":1,"message":"280","line":1112,"column":43,"nodeType":"281","endLine":1112,"endColumn":82},{"ruleId":"279","severity":1,"message":"280","line":1120,"column":43,"nodeType":"281","endLine":1120,"endColumn":78},{"ruleId":"279","severity":1,"message":"280","line":1130,"column":45,"nodeType":"281","endLine":1130,"endColumn":87},{"ruleId":"279","severity":1,"message":"280","line":1138,"column":43,"nodeType":"281","endLine":1138,"endColumn":84},{"ruleId":"279","severity":1,"message":"280","line":1146,"column":43,"nodeType":"281","endLine":1146,"endColumn":81},{"ruleId":"279","severity":1,"message":"280","line":1154,"column":43,"nodeType":"281","endLine":1154,"endColumn":82},{"ruleId":"279","severity":1,"message":"280","line":1164,"column":45,"nodeType":"281","endLine":1164,"endColumn":79},{"ruleId":"279","severity":1,"message":"280","line":1172,"column":43,"nodeType":"281","endLine":1172,"endColumn":81},{"ruleId":"279","severity":1,"message":"280","line":1180,"column":43,"nodeType":"281","endLine":1180,"endColumn":48},{"ruleId":"279","severity":1,"message":"280","line":1183,"column":43,"nodeType":"281","endLine":1183,"endColumn":48},{"ruleId":"279","severity":1,"message":"280","line":1191,"column":45,"nodeType":"281","endLine":1191,"endColumn":83},{"ruleId":"279","severity":1,"message":"280","line":1199,"column":43,"nodeType":"281","endLine":1199,"endColumn":81},{"ruleId":"279","severity":1,"message":"280","line":1207,"column":43,"nodeType":"281","endLine":1207,"endColumn":82},{"ruleId":"279","severity":1,"message":"280","line":1215,"column":43,"nodeType":"281","endLine":1215,"endColumn":79},{"ruleId":"279","severity":1,"message":"280","line":1227,"column":45,"nodeType":"281","endLine":1227,"endColumn":88},{"ruleId":"279","severity":1,"message":"280","line":1235,"column":43,"nodeType":"281","endLine":1235,"endColumn":86},{"ruleId":"279","severity":1,"message":"280","line":1243,"column":45,"nodeType":"281","endLine":1243,"endColumn":51},{"ruleId":"279","severity":1,"message":"280","line":1246,"column":45,"nodeType":"281","endLine":1246,"endColumn":51},{"ruleId":"279","severity":1,"message":"280","line":1253,"column":45,"nodeType":"281","endLine":1253,"endColumn":89},{"ruleId":"279","severity":1,"message":"280","line":1261,"column":43,"nodeType":"281","endLine":1261,"endColumn":89},{"ruleId":"279","severity":1,"message":"280","line":1269,"column":45,"nodeType":"281","endLine":1269,"endColumn":51},{"ruleId":"279","severity":1,"message":"280","line":1272,"column":45,"nodeType":"281","endLine":1272,"endColumn":51},{"ruleId":"279","severity":1,"message":"280","line":1279,"column":45,"nodeType":"281","endLine":1279,"endColumn":85},{"ruleId":"279","severity":1,"message":"280","line":1287,"column":43,"nodeType":"281","endLine":1287,"endColumn":86},{"ruleId":"279","severity":1,"message":"280","line":1295,"column":45,"nodeType":"281","endLine":1295,"endColumn":51},{"ruleId":"279","severity":1,"message":"280","line":1298,"column":45,"nodeType":"281","endLine":1298,"endColumn":51},{"ruleId":"279","severity":1,"message":"280","line":1305,"column":45,"nodeType":"281","endLine":1305,"endColumn":83},{"ruleId":"279","severity":1,"message":"280","line":1313,"column":43,"nodeType":"281","endLine":1313,"endColumn":80},{"ruleId":"279","severity":1,"message":"280","line":1321,"column":43,"nodeType":"281","endLine":1321,"endColumn":81},{"ruleId":"279","severity":1,"message":"280","line":1329,"column":43,"nodeType":"281","endLine":1329,"endColumn":80},{"ruleId":"279","severity":1,"message":"280","line":1339,"column":45,"nodeType":"281","endLine":1339,"endColumn":82},{"ruleId":"279","severity":1,"message":"280","line":1347,"column":45,"nodeType":"281","endLine":1347,"endColumn":81},{"ruleId":"279","severity":1,"message":"280","line":1355,"column":43,"nodeType":"281","endLine":1355,"endColumn":78},{"ruleId":"279","severity":1,"message":"280","line":1363,"column":43,"nodeType":"281","endLine":1363,"endColumn":81},{"ruleId":"279","severity":1,"message":"280","line":1373,"column":43,"nodeType":"281","endLine":1373,"endColumn":79},{"ruleId":"279","severity":1,"message":"280","line":1381,"column":43,"nodeType":"281","endLine":1381,"endColumn":75},{"ruleId":"279","severity":1,"message":"280","line":1389,"column":43,"nodeType":"281","endLine":1389,"endColumn":80},{"ruleId":"279","severity":1,"message":"280","line":1397,"column":43,"nodeType":"281","endLine":1397,"endColumn":81},{"ruleId":"279","severity":1,"message":"280","line":1408,"column":43,"nodeType":"281","endLine":1408,"endColumn":81},{"ruleId":"279","severity":1,"message":"280","line":1416,"column":47,"nodeType":"281","endLine":1416,"endColumn":52},{"ruleId":"279","severity":1,"message":"280","line":1419,"column":47,"nodeType":"281","endLine":1419,"endColumn":52},{"ruleId":"279","severity":1,"message":"280","line":1422,"column":47,"nodeType":"281","endLine":1422,"endColumn":52},{"ruleId":"261","severity":1,"message":"282","line":1434,"column":7,"nodeType":"263","messageId":"264","endLine":1434,"endColumn":23},{"ruleId":"261","severity":1,"message":"283","line":4,"column":8,"nodeType":"263","messageId":"264","endLine":4,"endColumn":17},{"ruleId":"261","severity":1,"message":"284","line":5,"column":18,"nodeType":"263","messageId":"264","endLine":5,"endColumn":34},{"ruleId":"261","severity":1,"message":"285","line":5,"column":36,"nodeType":"263","messageId":"264","endLine":5,"endColumn":44},{"ruleId":"261","severity":1,"message":"286","line":6,"column":9,"nodeType":"263","messageId":"264","endLine":6,"endColumn":17},{"ruleId":"261","severity":1,"message":"287","line":7,"column":8,"nodeType":"263","messageId":"264","endLine":7,"endColumn":13},{"ruleId":"261","severity":1,"message":"288","line":12,"column":10,"nodeType":"263","messageId":"264","endLine":12,"endColumn":26},{"ruleId":"261","severity":1,"message":"289","line":13,"column":10,"nodeType":"263","messageId":"264","endLine":13,"endColumn":29},{"ruleId":"261","severity":1,"message":"290","line":14,"column":13,"nodeType":"263","messageId":"264","endLine":14,"endColumn":19},{"ruleId":"261","severity":1,"message":"291","line":15,"column":8,"nodeType":"263","messageId":"264","endLine":15,"endColumn":13},{"ruleId":"261","severity":1,"message":"292","line":16,"column":38,"nodeType":"263","messageId":"264","endLine":16,"endColumn":58},{"ruleId":"261","severity":1,"message":"293","line":16,"column":60,"nodeType":"263","messageId":"264","endLine":16,"endColumn":82},{"ruleId":"261","severity":1,"message":"294","line":21,"column":8,"nodeType":"263","messageId":"264","endLine":21,"endColumn":18},{"ruleId":"261","severity":1,"message":"295","line":23,"column":8,"nodeType":"263","messageId":"264","endLine":23,"endColumn":16},{"ruleId":"261","severity":1,"message":"296","line":27,"column":3,"nodeType":"263","messageId":"264","endLine":27,"endColumn":40},{"ruleId":"261","severity":1,"message":"297","line":28,"column":3,"nodeType":"263","messageId":"264","endLine":28,"endColumn":23},{"ruleId":"261","severity":1,"message":"298","line":29,"column":3,"nodeType":"263","messageId":"264","endLine":29,"endColumn":15},{"ruleId":"261","severity":1,"message":"299","line":30,"column":3,"nodeType":"263","messageId":"264","endLine":30,"endColumn":17},{"ruleId":"261","severity":1,"message":"300","line":32,"column":10,"nodeType":"263","messageId":"264","endLine":32,"endColumn":16},{"ruleId":"261","severity":1,"message":"301","line":33,"column":10,"nodeType":"263","messageId":"264","endLine":33,"endColumn":26},{"ruleId":"261","severity":1,"message":"302","line":34,"column":10,"nodeType":"263","messageId":"264","endLine":34,"endColumn":13},{"ruleId":"261","severity":1,"message":"303","line":36,"column":7,"nodeType":"263","messageId":"264","endLine":36,"endColumn":20},{"ruleId":"261","severity":1,"message":"304","line":38,"column":7,"nodeType":"263","messageId":"264","endLine":38,"endColumn":18},{"ruleId":"261","severity":1,"message":"305","line":40,"column":7,"nodeType":"263","messageId":"264","endLine":40,"endColumn":20},{"ruleId":"261","severity":1,"message":"306","line":42,"column":7,"nodeType":"263","messageId":"264","endLine":42,"endColumn":17},{"ruleId":"261","severity":1,"message":"307","line":53,"column":10,"nodeType":"263","messageId":"264","endLine":53,"endColumn":17},{"ruleId":"261","severity":1,"message":"308","line":53,"column":19,"nodeType":"263","messageId":"264","endLine":53,"endColumn":29},{"ruleId":"261","severity":1,"message":"309","line":55,"column":10,"nodeType":"263","messageId":"264","endLine":55,"endColumn":18},{"ruleId":"261","severity":1,"message":"310","line":55,"column":20,"nodeType":"263","messageId":"264","endLine":55,"endColumn":31},{"ruleId":"261","severity":1,"message":"311","line":56,"column":10,"nodeType":"263","messageId":"264","endLine":56,"endColumn":19},{"ruleId":"261","severity":1,"message":"312","line":57,"column":10,"nodeType":"263","messageId":"264","endLine":57,"endColumn":19},{"ruleId":"261","severity":1,"message":"313","line":57,"column":21,"nodeType":"263","messageId":"264","endLine":57,"endColumn":33},{"ruleId":"261","severity":1,"message":"314","line":63,"column":10,"nodeType":"263","messageId":"264","endLine":63,"endColumn":20},{"ruleId":"261","severity":1,"message":"315","line":63,"column":22,"nodeType":"263","messageId":"264","endLine":63,"endColumn":35},{"ruleId":"316","severity":1,"message":"317","line":116,"column":14,"nodeType":"318","messageId":"319","endLine":116,"endColumn":16},{"ruleId":"261","severity":1,"message":"320","line":155,"column":11,"nodeType":"263","messageId":"264","endLine":155,"endColumn":15},{"ruleId":"261","severity":1,"message":"321","line":157,"column":11,"nodeType":"263","messageId":"264","endLine":157,"endColumn":15},{"ruleId":"275","severity":1,"message":"322","line":226,"column":30,"nodeType":"323","endLine":226,"endColumn":31},{"ruleId":"261","severity":1,"message":"324","line":249,"column":13,"nodeType":"263","messageId":"264","endLine":249,"endColumn":20},{"ruleId":"275","severity":1,"message":"325","line":292,"column":6,"nodeType":"277","endLine":292,"endColumn":32,"suggestions":"326"},{"ruleId":"275","severity":1,"message":"327","line":294,"column":39,"nodeType":"277","endLine":298,"endColumn":4,"suggestions":"328"},{"ruleId":"257","replacedBy":"329"},{"ruleId":"259","replacedBy":"330"},{"ruleId":"257","replacedBy":"331"},{"ruleId":"259","replacedBy":"332"},{"ruleId":"261","severity":1,"message":"262","line":26,"column":7,"nodeType":"263","messageId":"264","endLine":26,"endColumn":15},{"ruleId":"261","severity":1,"message":"265","line":30,"column":7,"nodeType":"263","messageId":"264","endLine":30,"endColumn":13},{"ruleId":"261","severity":1,"message":"266","line":43,"column":7,"nodeType":"263","messageId":"264","endLine":43,"endColumn":20},{"ruleId":"261","severity":1,"message":"267","line":45,"column":7,"nodeType":"263","messageId":"264","endLine":45,"endColumn":16},{"ruleId":"261","severity":1,"message":"268","line":3,"column":10,"nodeType":"263","messageId":"264","endLine":3,"endColumn":23},{"ruleId":"261","severity":1,"message":"269","line":3,"column":25,"nodeType":"263","messageId":"264","endLine":3,"endColumn":30},{"ruleId":"261","severity":1,"message":"270","line":3,"column":32,"nodeType":"263","messageId":"264","endLine":3,"endColumn":36},{"ruleId":"261","severity":1,"message":"294","line":11,"column":8,"nodeType":"263","messageId":"264","endLine":11,"endColumn":18},{"ruleId":"261","severity":1,"message":"271","line":67,"column":10,"nodeType":"263","messageId":"264","endLine":67,"endColumn":17},{"ruleId":"261","severity":1,"message":"272","line":67,"column":19,"nodeType":"263","messageId":"264","endLine":67,"endColumn":29},{"ruleId":"261","severity":1,"message":"273","line":69,"column":27,"nodeType":"263","messageId":"264","endLine":69,"endColumn":45},{"ruleId":"261","severity":1,"message":"274","line":72,"column":25,"nodeType":"263","messageId":"264","endLine":72,"endColumn":41},{"ruleId":"275","severity":1,"message":"276","line":375,"column":6,"nodeType":"277","endLine":380,"endColumn":4,"suggestions":"333"},{"ruleId":"261","severity":1,"message":"282","line":634,"column":7,"nodeType":"263","messageId":"264","endLine":634,"endColumn":23},"no-native-reassign",["334"],"no-negated-in-lhs",["335"],"@typescript-eslint/no-unused-vars","'treasury' is assigned a value but never used.","Identifier","unusedVar","'config' is assigned a value but never used.","'startDateSeed' is assigned a value but never used.","'txTimeout' is assigned a value but never used.","'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'endDate' is assigned a value but never used.","'setEndDate' is assigned a value but never used.","'setIsWhitelistUser' is assigned a value but never used.","'setDiscountPrice' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'candyMachine' and 'itemsRemaining'. Either include them or remove the dependency array.","ArrayExpression",["336"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'getCountdownDate' is assigned a value but never used.","'Countdown' is defined but never used.","'CircularProgress' is defined but never used.","'Snackbar' is defined but never used.","'Navigate' is defined but never used.","'Alert' is defined but never used.","'LAMPORTS_PER_SOL' is defined but never used.","'TokenAccountsFilter' is defined but never used.","'web3js' is defined but never used.","'axios' is defined but never used.","'isValidSolanaAddress' is defined but never used.","'createConnectionConfig' is defined but never used.","'Typewriter' is defined but never used.","'gameLogo' is defined but never used.","'awaitTransactionSignatureConfirmation' is defined but never used.","'getCandyMachineState' is defined but never used.","'mintOneToken' is defined but never used.","'shortenAddress' is defined but never used.","'Filter' is defined but never used.","'TOKEN_PROGRAM_ID' is defined but never used.","'off' is defined but never used.","'ConnectButton' is assigned a value but never used.","'CounterText' is assigned a value but never used.","'MintContainer' is assigned a value but never used.","'MintButton' is assigned a value but never used.","'balance' is assigned a value but never used.","'setBalance' is assigned a value but never used.","'isActive' is assigned a value but never used.","'setIsActive' is assigned a value but never used.","'isSoldOut' is assigned a value but never used.","'isMinting' is assigned a value but never used.","'setIsMinting' is assigned a value but never used.","'alertState' is assigned a value but never used.","'setAlertState' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'game' is assigned a value but never used.","'hole' is assigned a value but never used.","Assignments to the 'scoreCounter' variable from inside React Hook useLayoutEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useLayoutEffect.","Literal","'jumping' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getNftTokenData' and 'hasThugRugNFT'. Either include them or remove the dependency array.",["337"],"React Hook useEffect has missing dependencies: 'candyMachine', 'itemsAvailable', 'itemsRedeemed', and 'itemsRemaining'. Either include them or remove the dependency array. You can also do a functional update 'setItemsAvailable(i => ...)' if you only need 'itemsAvailable' in the 'setItemsAvailable' call.",["338"],["334"],["335"],["334"],["335"],["339"],"no-global-assign","no-unsafe-negation",{"desc":"340","fix":"341"},{"desc":"342","fix":"343"},{"desc":"344","fix":"345"},{"desc":"340","fix":"346"},"Update the dependencies array to be: [anchorWallet, candyMachine, itemsRemaining, props.candyMachineId, props.connection, refreshCandyMachineState]",{"range":"347","text":"348"},"Update the dependencies array to be: [wallet, props.connection, getNftTokenData, hasThugRugNFT]",{"range":"349","text":"350"},"Update the dependencies array to be: [wallet, props.candyMachineId, props.connection, itemsAvailable, itemsRemaining, itemsRedeemed, candyMachine]",{"range":"351","text":"352"},{"range":"353","text":"348"},[12624,12725],"[anchorWallet, candyMachine, itemsRemaining, props.candyMachineId, props.connection, refreshCandyMachineState]",[8768,8794],"[wallet, props.connection, getNftTokenData, hasThugRugNFT]",[8836,8901],"[wallet, props.candyMachineId, props.connection, itemsAvailable, itemsRemaining, itemsRedeemed, candyMachine]",[12624,12725]]