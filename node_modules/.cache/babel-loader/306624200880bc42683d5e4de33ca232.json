{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { ForceIndexIndicator } from \"./ForceIndexIndicator\";\n/**\n * Represents a IgxDataChartComponent Force Index indicator series.\n * Default required members: Close, Volume\n*\n* The `IgrForceIndexIndicator` represents a IgxDataChartComponent Force Index indicator series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*\n*     <IgrForceIndexIndicator\n*     name=\"series2\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Candlestick\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* this.financialSeries = new IgrForceIndexIndicator({name: \"financialSeries\"});\n* this.financialSeries.dataSource = this.financialData;\n* this.financialSeries.xAxis = this.timeXAxis;\n* this.financialSeries.yAxis = this.numericYAxis;\n* this.financialSeries.xAxisName = \"timeXAxis\";\n* this.financialSeries.yAxisName = \"numericYAxis\";\n* this.financialSeries.highMemberPath=\"High\"\n* this.financialSeries.lowMemberPath=\"Low\"\n* this.financialSeries.closeMemberPath=\"Close\"\n* this.financialSeries.openMemberPath=\"Open\"\n* this.financialSeries.volumeMemberPath=\"Volume\"\n* ```\n*/\n\nvar IgrForceIndexIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrForceIndexIndicator, _super);\n\n  function IgrForceIndexIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrForceIndexIndicator.prototype.createImplementation = function () {\n    return new ForceIndexIndicator();\n  };\n\n  Object.defineProperty(IgrForceIndexIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrForceIndexIndicator.prototype, \"defaultDisplayType\", {\n    /**\n     * Gets default display type for the current Financial Indicator\n    */\n    get: function () {\n      return this.i.to;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrForceIndexIndicator.prototype, \"period\", {\n    /**\n     * Gets or sets the moving average period for the current AverageTrueRangeSeries object.\n     * The typical, and initial, value for ForceIndiex periods is 0.\n    *\n    * You can use the `period` property to get the moving average period of the current FullStochasticOscillatorIndicator object\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrForceIndexIndicator\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tperiod= {30} />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * this.series.period = 30;\n    * ```\n    */\n    get: function () {\n      return this.i.u2;\n    },\n    set: function (v) {\n      this.i.u2 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrForceIndexIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrForceIndexIndicator };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-force-index-indicator.js"],"names":["__extends","IgrStrategyBasedIndicator","ForceIndexIndicator","IgrForceIndexIndicator","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","to","u2","set","v"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,sBAAsB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACxEJ,EAAAA,SAAS,CAACG,sBAAD,EAAyBC,MAAzB,CAAT;;AACA,WAASD,sBAAT,CAAgCE,KAAhC,EAAuC;AACnC,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDF,EAAAA,sBAAsB,CAACI,SAAvB,CAAiCC,oBAAjC,GAAwD,YAAY;AAChE,WAAO,IAAIN,mBAAJ,EAAP;AACH,GAFD;;AAGAO,EAAAA,MAAM,CAACC,cAAP,CAAsBP,sBAAsB,CAACI,SAA7C,EAAwD,GAAxD,EAA6D;AACzD;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANwD;AAOzDC,IAAAA,UAAU,EAAE,KAP6C;AAQzDC,IAAAA,YAAY,EAAE;AAR2C,GAA7D;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,sBAAsB,CAACI,SAA7C,EAAwD,oBAAxD,EAA8E;AAC1E;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOC,EAAd;AACH,KANyE;AAO1EH,IAAAA,UAAU,EAAE,KAP8D;AAQ1EC,IAAAA,YAAY,EAAE;AAR4D,GAA9E;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,sBAAsB,CAACI,SAA7C,EAAwD,QAAxD,EAAkE;AAC9D;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOE,EAAd;AACH,KAtC6D;AAuC9DC,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKJ,CAAL,CAAOE,EAAP,GAAY,CAACE,CAAb;AACH,KAzC6D;AA0C9DN,IAAAA,UAAU,EAAE,KA1CkD;AA2C9DC,IAAAA,YAAY,EAAE;AA3CgD,GAAlE;AA6CA,SAAOX,sBAAP;AACH,CA1EyD,CA0ExDF,yBA1EwD,CAA1D;;AA2EA,SAASE,sBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { ForceIndexIndicator } from \"./ForceIndexIndicator\";\n/**\n * Represents a IgxDataChartComponent Force Index indicator series.\n * Default required members: Close, Volume\n*\n* The `IgrForceIndexIndicator` represents a IgxDataChartComponent Force Index indicator series.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*\n*     <IgrForceIndexIndicator\n*     name=\"series2\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Candlestick\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* this.financialSeries = new IgrForceIndexIndicator({name: \"financialSeries\"});\n* this.financialSeries.dataSource = this.financialData;\n* this.financialSeries.xAxis = this.timeXAxis;\n* this.financialSeries.yAxis = this.numericYAxis;\n* this.financialSeries.xAxisName = \"timeXAxis\";\n* this.financialSeries.yAxisName = \"numericYAxis\";\n* this.financialSeries.highMemberPath=\"High\"\n* this.financialSeries.lowMemberPath=\"Low\"\n* this.financialSeries.closeMemberPath=\"Close\"\n* this.financialSeries.openMemberPath=\"Open\"\n* this.financialSeries.volumeMemberPath=\"Volume\"\n* ```\n*/\nvar IgrForceIndexIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrForceIndexIndicator, _super);\n    function IgrForceIndexIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrForceIndexIndicator.prototype.createImplementation = function () {\n        return new ForceIndexIndicator();\n    };\n    Object.defineProperty(IgrForceIndexIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrForceIndexIndicator.prototype, \"defaultDisplayType\", {\n        /**\n         * Gets default display type for the current Financial Indicator\n        */\n        get: function () {\n            return this.i.to;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrForceIndexIndicator.prototype, \"period\", {\n        /**\n         * Gets or sets the moving average period for the current AverageTrueRangeSeries object.\n         * The typical, and initial, value for ForceIndiex periods is 0.\n        *\n        * You can use the `period` property to get the moving average period of the current FullStochasticOscillatorIndicator object\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrForceIndexIndicator\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tperiod= {30} />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * this.series.period = 30;\n        * ```\n        */\n        get: function () {\n            return this.i.u2;\n        },\n        set: function (v) {\n            this.i.u2 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrForceIndexIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrForceIndexIndicator };\n"]},"metadata":{},"sourceType":"module"}