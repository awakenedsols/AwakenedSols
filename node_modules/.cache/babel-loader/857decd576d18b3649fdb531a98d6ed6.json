{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/UserCollections.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './userCollections.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const UserCollections = _ref => {\n  _s();\n\n  let {\n    children,\n    ...props\n  } = _ref;\n  const [data, setData] = useState();\n  const wallet = props.wallet;\n  const [slides, setSlides] = useState();\n  const [isHolder, setIsHolder] = useState(true);\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrow: true,\n    initialSlide: 0\n  };\n  const carouelStyle = {\n    height: \"30%\",\n    width: \"30%\",\n    border: \"1px solid white\",\n    borderRadius: \"20px\"\n  };\n\n  const getSlides = () => {\n    if (data) {\n      let slidess = [];\n      slidess.push(data.map((collection, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        \"data-index\": index,\n        className: \"NFTdiv\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          target: \"_blank\",\n          className: \"link\",\n          href: \"https://www.magiceden.io/item-details/\" + collection.mintAddress,\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: collection.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"NFTimage\",\n            src: collection.image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 12\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this)));\n      setSlides(slidess);\n      console.log(slides);\n    }\n  };\n\n  const getCollections = async () => {\n    var config = {\n      method: 'get',\n      url: 'https://api-mainnet.magiceden.dev/v2/wallets/' + wallet + '/tokens?offset=0&limit=10&listStatus=unlisted'\n    };\n    axios(config).then(function (response) {\n      //console.log('axios call user colecction');\n      //console.log(response);\n      //console.log(JSON.stringify(response.data));\n      setData(response.data);\n      getSlides();\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      //assign interval to a variable to clear it.\n      console.log('use effect');\n      getCollections();\n\n      if (data) {\n        console.log('user collections');\n        console.log(data);\n      }\n    }, 2000);\n    return () => clearInterval(intervalId); //This is important\n  }, [slides, wallet]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n      style: {\n        marginTop: \"20px\",\n        textAlign: \"center\"\n      },\n      children: \"My NFTs\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 3\n    }, this), slides ? /*#__PURE__*/_jsxDEV(Slider, { ...settings,\n      className: \"slider\",\n      children: slides\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(UserCollections, \"8QqaQfqFu56muHmjQ7/ctGp08UQ=\");\n\n_c = UserCollections;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCollections\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/UserCollections.tsx"],"names":["React","useEffect","useState","axios","Slider","UserCollections","children","props","data","setData","wallet","slides","setSlides","isHolder","setIsHolder","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrow","initialSlide","carouelStyle","height","width","border","borderRadius","getSlides","slidess","push","map","collection","index","mintAddress","name","image","console","log","getCollections","config","method","url","then","response","catch","error","intervalId","setInterval","clearInterval","marginTop","textAlign"],"mappings":"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","sourcesContent":["import React, { ReactNode } from \"react\";\nimport {Row, Col, Container, Button} from \"react-bootstrap\";\nimport enlargeIcon from './enlargeIcon.png'\nimport solanaIcon from './solanaIcon.png'\nimport styled from 'styled-components'\nimport { Key, ReactChild, ReactFragment, ReactPortal, useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport './userCollections.css';\nimport { getSliderUtilityClass } from \"@mui/base\";\n\ninterface Props {\n    children?: ReactNode\n    // any props that come into the component\n    wallet: any\n}\n\nexport const UserCollections = ({ children, ...props }: Props) => {\n\n  const [data, setData] = useState<any>();\n  const wallet = props.wallet;\n  const [slides, setSlides] = useState<any>();\n  const [isHolder, setIsHolder] = useState(true);\n\n  const settings = {\n    dots: true,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    arrow:true,\n    initialSlide: 0\n  };\n\n  const carouelStyle = {\n    height:\"30%\",\n    width: \"30%\",\n    border: \"1px solid white\",\n    borderRadius: \"20px\"\n  };\n\n  const getSlides = () => {\n    \n    if(data){\n      let slidess = [];\n      slidess.push(\n      data.map((collection:any, index:number) => (\n        \n        <div  data-index={index} key={index} className=\"NFTdiv\">\n           <a target=\"_blank\" className=\"link\" href={\"https://www.magiceden.io/item-details/\" + collection.mintAddress}>\n          <h6>{collection.name}</h6>\n          <img className=\"NFTimage\" src={collection.image}></img>\n          {/* <div style={{display: \"inline-block\"}}>\n            <img className=\"symbolIcon\" src={solanaIcon}></img>{collection.floorPrice}0.2\n          </div> */}\n          </a>\n        </div>\n      )));\n\n      setSlides(slidess);\n      console.log(slides);\n    }\n  }\n\n  const getCollections = async () => {\n    var config = {\n      method: 'get',\n      url: 'https://api-mainnet.magiceden.dev/v2/wallets/'+ wallet + '/tokens?offset=0&limit=10&listStatus=unlisted'\n    };\n\n    axios(config)\n    .then(function (response) {\n      //console.log('axios call user colecction');\n      //console.log(response);\n      //console.log(JSON.stringify(response.data));\n      setData(response.data);    \n      getSlides();\n      return response.data;\n      }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\nuseEffect(() => {\n  const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\n    console.log('use effect');\n    getCollections();\n  \n    if(data){\n      console.log('user collections');\n      console.log(data);\n    }\n  \n  }, 2000)\n\n  return () => clearInterval(intervalId); //This is important\n \n}, [slides, wallet])\n\n\nreturn (\n  <>\n  <h4 style={{marginTop:\"20px\", textAlign:\"center\"}}>My NFTs</h4>\n  {slides ? (\n    <Slider {...settings} className=\"slider\">\n     {slides}\n    </Slider>\n    ) : (\n      <div>\n      <h1>Loading...</h1>\n     </div>\n  )}\n  </>\n);\n};"]},"metadata":{},"sourceType":"module"}