{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/HoverRugz.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useLayoutEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"@material-ui/core\";\nimport './HoverRugz.css';\nimport { getParsedNftAccountsByOwner } from \"@nfteyez/sol-rayz\";\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ConnectButton = styled(WalletDialogButton)``;\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nconst HoverRugz = props => {\n  _s();\n\n  const [balance, setBalance] = useState();\n  const [hasThugRug, setHasThugRug] = useState();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n  const [alertState, setAlertState] = useState({\n    open: false,\n    message: \"\",\n    severity: undefined\n  });\n  let mintedItems = undefined;\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState();\n\n  const getAllNftData = async () => {\n    try {\n      if (wallet) {\n        let ownerToken = wallet.publicKey;\n        const nfts = await getParsedNftAccountsByOwner({\n          publicAddress: ownerToken,\n          connection: props.connection\n        });\n        return nfts;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getNftTokenData = async () => {\n    try {\n      let nftData = await getAllNftData();\n      let nftArray = [];\n\n      if (nftData) {\n        for (var x = 0; x < nftData.length; x++) {\n          nftArray.push({\n            name: nftData[x].data.name,\n            uri: nftData[x].data.uri\n          });\n        }\n      }\n\n      return nftArray;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const hasThugRugNFT = () => {\n    var found = false;\n\n    if (mintedItems !== undefined) {\n      for (var i = 0; i < mintedItems.length; i++) {\n        console.log(mintedItems[i].name);\n\n        if (mintedItems[i].name.includes(\"Thug Rugz\")) {\n          found = true;\n          setHasThugRug(true);\n          console.log('has thugrug');\n        }\n      }\n    }\n\n    if (found == false) {\n      setHasThugRug(false);\n    }\n  };\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return; // const {\n      //   candyMachine,\n      //   goLiveDate,\n      //   itemsAvailable,\n      //   itemsRemaining,\n      //   itemsRedeemed,\n      // } = await getCandyMachineState(\n      //   wallet as anchor.Wallet,\n      //   props.candyMachineId,\n      //   props.connection\n      // );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n      setIsSoldOut(itemsRemaining === 0);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  var scoreCounter = 0;\n  useLayoutEffect(() => {\n    setHasThugRug(true);\n  });\n  useEffect(() => {\n    getNftTokenData();\n    hasThugRugNFT();\n\n    (async () => {\n      console.log('useeffect async');\n      var start = document.getElementById(\"start\");\n      var logo = document.getElementById(\"gameLogo\");\n      var message = document.getElementById(\"message\");\n      var game = document.getElementById(\"game\");\n      var block = document.getElementById(\"block\");\n      var hole = document.getElementById(\"hole\");\n      var character = document.querySelector(\"#character\");\n      var jumping = 0;\n      var startButton = document.getElementById(\"start\");\n      startButton === null || startButton === void 0 ? void 0 : startButton.addEventListener('click', () => {\n        console.log('clicked');\n        startGame();\n      });\n\n      function blockAnimations() {\n        block === null || block === void 0 ? void 0 : block.addEventListener('animationiteration', setScore);\n      }\n\n      function setScore() {\n        console.log('animation iteration' + scoreCounter);\n        var random = Math.random() * 50 + 40;\n        block === null || block === void 0 ? void 0 : block.setAttribute(\"style\", \"bottom: -\" + random + \"%;\");\n        scoreCounter++;\n      }\n\n      function gravity() {\n        const loop = setInterval(function () {\n          var characterTop; //console.log(character)\n          //console.log(block);\n\n          if (character && block) {\n            var blockLeft = parseInt(getComputedStyle(block).getPropertyValue(\"left\"));\n            var blockTop = parseInt(getComputedStyle(block).getPropertyValue(\"top\"));\n            characterTop = parseInt(getComputedStyle(character).getPropertyValue(\"top\"));\n            character === null || character === void 0 ? void 0 : character.setAttribute(\"style\", \"top:\" + (characterTop + 4) + \"px\");\n            var cBottom = characterTop + 160; // console.log('blockleft: ' + blockLeft)\n            // console.log(characterTop);\n            // console.log(cBottom);\n            // console.log(blockTop);        \n\n            var characterLocation = window.screen.availWidth * .2;\n\n            if (characterTop > 1000 || blockLeft <= characterLocation && cBottom >= blockTop + 160) {\n              //stop gravity\n              clearInterval(loop);\n              block === null || block === void 0 ? void 0 : block.removeEventListener('animationiteration', setScore); //message and Restart button\n\n              message === null || message === void 0 ? void 0 : message.setAttribute(\"style\", \"display:block;\");\n\n              if (message) {\n                message.textContent = \"Game Over. Score: \" + scoreCounter;\n              } //message?.setAttribute(\"style\", \"margin-top: 10px;\")\n\n\n              start === null || start === void 0 ? void 0 : start.setAttribute(\"style\", \"display:block;\");\n\n              if (start) {\n                start.textContent = \"Restart\";\n              }\n\n              start === null || start === void 0 ? void 0 : start.setAttribute(\"style\", \"margin-top: 10%;\"); //reset character\n\n              character === null || character === void 0 ? void 0 : character.setAttribute(\"style\", \"top:40%;\"); //character?.setAttribute(\"style\", \"opacity:50%;\" )\n              //stop block\n              //block?.setAttribute(\"style\", \"opacity:50%;\" )\n              //reset score\n\n              scoreCounter = 0;\n            }\n          }\n        }, 30);\n      }\n\n      function jump() {\n        jumping = 1;\n        var jumpCount = 0;\n        var jumpInterval = setInterval(function () {\n          var characterTop;\n\n          if (character) {\n            characterTop = parseInt(getComputedStyle(character).getPropertyValue(\"top\"));\n\n            if (characterTop > 6 && jumpCount < 15) {\n              character === null || character === void 0 ? void 0 : character.setAttribute(\"style\", \"top:\" + (characterTop - 2) + \"px\");\n            }\n          }\n\n          if (jumpCount > 20) {\n            clearInterval(jumpInterval);\n            jumping = 0;\n            jumpCount = 0;\n          }\n\n          jumpCount++;\n        }, 10);\n      } // game?.addEventListener('click', () => {\n      //   jump();\n      // });\n\n\n      function startGame() {\n        scoreCounter = 0;\n        start === null || start === void 0 ? void 0 : start.setAttribute(\"style\", \"display:none;\");\n        console.log('start'); //message and Restart button\n\n        if (message) {\n          message.textContent = \"\";\n        }\n\n        logo === null || logo === void 0 ? void 0 : logo.setAttribute(\"style\", \"display:none;\");\n        blockAnimations();\n        gravity();\n        document.addEventListener('keydown', event => {\n          if (event.code === 'Space') {\n            jump();\n          }\n        });\n        logo === null || logo === void 0 ? void 0 : logo.setAttribute(\"style\", \"display:none;\");\n      }\n\n      ;\n    })();\n  }, [wallet, props.connection]);\n  useEffect(refreshCandyMachineState, [wallet, props.candyMachineId, props.connection]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [hasThugRug && /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"gameLogo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"start\",\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        id: \"message\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"block\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"hole\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 311,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 11\n    }, this), /*#__PURE__*/_jsxDEV(\"script\", {\n      children: \"blockAnimations();\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 302,\n    columnNumber: 5\n  }, this);\n}; // <Navigate to='/' />\n\n\n_s(HoverRugz, \"VwUfJn+IXjjn/n6eUkdVZqjy4Cw=\", false, function () {\n  return [useAnchorWallet];\n});\n\n_c = HoverRugz;\nexport default HoverRugz;\n\nvar _c;\n\n$RefreshReg$(_c, \"HoverRugz\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Thug Rugs/ThugRugzClient/src/HoverRugz.tsx"],"names":["useEffect","useLayoutEffect","useState","styled","Button","getParsedNftAccountsByOwner","useAnchorWallet","WalletDialogButton","ConnectButton","CounterText","span","MintContainer","div","MintButton","HoverRugz","props","balance","setBalance","hasThugRug","setHasThugRug","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","itemsAvailable","setItemsAvailable","itemsRedeemed","setItemsRedeemed","itemsRemaining","setItemsRemaining","alertState","setAlertState","open","message","severity","undefined","mintedItems","startDate","setStartDate","Date","wallet","candyMachine","setCandyMachine","getAllNftData","ownerToken","publicKey","nfts","publicAddress","connection","error","console","log","getNftTokenData","nftData","nftArray","x","length","push","name","data","uri","hasThugRugNFT","found","i","includes","refreshCandyMachineState","scoreCounter","start","document","getElementById","logo","game","block","hole","character","querySelector","jumping","startButton","addEventListener","startGame","blockAnimations","setScore","random","Math","setAttribute","gravity","loop","setInterval","characterTop","blockLeft","parseInt","getComputedStyle","getPropertyValue","blockTop","cBottom","characterLocation","window","screen","availWidth","clearInterval","removeEventListener","textContent","jump","jumpCount","jumpInterval","event","code","candyMachineId"],"mappings":"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","sourcesContent":["import { useEffect, useLayoutEffect, useState } from \"react\";\n\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport {Navigate} from 'react-router-dom';\nimport Alert from \"@material-ui/lab/Alert\";\nimport './HoverRugz.css';\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { TokenAccountsFilter } from \"@solana/web3.js\";\nimport * as web3js from \"@solana/web3.js\";\nimport axios from \"axios\";\nimport { getParsedNftAccountsByOwner,isValidSolanaAddress, createConnectionConfig,} from \"@nfteyez/sol-rayz\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport Typewriter from \"typewriter-effect\";\n\nimport gameLogo from 'gameLogo.png';\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\nimport { Filter } from \"@material-ui/icons\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\nimport { off } from \"process\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HoverRugzProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst HoverRugz = (props: HoverRugzProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [hasThugRug, setHasThugRug] = useState<Boolean>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n  \n  let mintedItems : any[] | undefined = undefined;\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const getAllNftData = async () => {\n    try {\n      if(wallet){\n        let ownerToken = wallet.publicKey;\n        const nfts = await getParsedNftAccountsByOwner({\n          publicAddress: ownerToken,\n          connection: props.connection\n        });\n        return nfts;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const getNftTokenData = async () => {\n    try {\n        let nftData = await getAllNftData();\n        let nftArray = []\n        if(nftData){\n          for(var x=0; x<nftData.length; x++){\n            nftArray.push({name: nftData[x].data.name, uri: nftData[x].data.uri})\n          }\n        }\n        return nftArray;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n  const hasThugRugNFT = () => {\n    var found = false;\n    if(mintedItems !== undefined){\n      for(var i=0; i < mintedItems.length; i++){\n        console.log(mintedItems[i].name);\n        if(mintedItems[i].name.includes(\"Thug Rugz\")){\n          found = true;\n          setHasThugRug(true);\n          console.log('has thugrug')\n        }\n      }\n    }\n    if(found == false){\n      setHasThugRug(false);\n    }\n  }\n\nconst refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      // const {\n      //   candyMachine,\n      //   goLiveDate,\n      //   itemsAvailable,\n      //   itemsRemaining,\n      //   itemsRedeemed,\n      // } = await getCandyMachineState(\n      //   wallet as anchor.Wallet,\n      //   props.candyMachineId,\n      //   props.connection\n      // );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  var scoreCounter = 0;\n\n  useLayoutEffect(() => {\n    setHasThugRug(true);\n  })\n\n  useEffect(() => {\n    getNftTokenData();\n    hasThugRugNFT();\n\n    (async () => {\n      console.log('useeffect async')\n      var start = document.getElementById(\"start\");\n      var logo = document.getElementById(\"gameLogo\");\n      var message = document.getElementById(\"message\");\n      var game = document.getElementById(\"game\");\n      var block = document.getElementById(\"block\");\n      var hole = document.getElementById(\"hole\");\n      var character = document.querySelector(\"#character\");\n      var jumping = 0;\n\n      var startButton = document.getElementById(\"start\");\n      startButton?.addEventListener('click', () => {\n        console.log('clicked')\n        startGame();\n      });\n    \n      function blockAnimations(){\n        block?.addEventListener('animationiteration', setScore);\n      }\n    \n      function setScore(){\n        console.log('animation iteration' + scoreCounter)\n        var random = ((Math.random()*50) + 40);\n        block?.setAttribute(\"style\", \"bottom: -\" + random + \"%;\")\n        scoreCounter++;\n      }\n\n      function gravity(){\n        const loop = setInterval(function(){\n          var characterTop;\n          //console.log(character)\n          //console.log(block);\n          if(character && block) {\n    \n            var blockLeft = parseInt(getComputedStyle(block).getPropertyValue(\"left\"));\n            var blockTop = parseInt(getComputedStyle(block).getPropertyValue(\"top\"));\n            characterTop = parseInt(getComputedStyle(character).getPropertyValue(\"top\"));\n            character?.setAttribute(\"style\", \"top:\" + (characterTop + 4) + \"px\" )\n            var cBottom = characterTop + 160 ;\n            // console.log('blockleft: ' + blockLeft)\n            // console.log(characterTop);\n            // console.log(cBottom);\n            // console.log(blockTop);        \n    \n            var characterLocation = window.screen.availWidth * .2;\n            if( (characterTop > 1000) || ((blockLeft<=characterLocation) && (cBottom>=blockTop+160)) ){\n              //stop gravity\n              clearInterval(loop);\n\n              block?.removeEventListener('animationiteration', setScore);\n\n              //message and Restart button\n              message?.setAttribute(\"style\", \"display:block;\")\n              if(message){\n                message.textContent = \"Game Over. Score: \" + scoreCounter;\n              }\n              //message?.setAttribute(\"style\", \"margin-top: 10px;\")\n    \n              start?.setAttribute(\"style\", \"display:block;\")\n              if(start){\n                start.textContent = \"Restart\";\n              }\n              start?.setAttribute(\"style\", \"margin-top: 10%;\")\n              \n    \n              //reset character\n              character?.setAttribute(\"style\", \"top:40%;\" )\n              //character?.setAttribute(\"style\", \"opacity:50%;\" )\n    \n              //stop block\n              //block?.setAttribute(\"style\", \"opacity:50%;\" )\n    \n\n              //reset score\n              scoreCounter = 0;\n\n            }\n        }\n        }, 30);\n      }\n    \n      function jump(){\n        jumping = 1;\n        var jumpCount = 0;\n    \n        var jumpInterval = setInterval(function() {\n            \n          var characterTop;\n          if(character) {\n            characterTop = parseInt(getComputedStyle(character).getPropertyValue(\"top\"));\n            if(characterTop > 6 && jumpCount<15){        \n              character?.setAttribute(\"style\", \"top:\" + (characterTop - 2) + \"px\" )\n            }\n          }\n    \n          if(jumpCount>20){\n            clearInterval(jumpInterval);\n            jumping = 0;\n            jumpCount = 0;\n          }\n          jumpCount++;\n        }, 10);\n    \n      }\n    \n      // game?.addEventListener('click', () => {\n      //   jump();\n      // });\n    \n    function startGame() {\n        scoreCounter = 0;\n        start?.setAttribute(\"style\", \"display:none;\")\n        console.log('start');\n    \n        //message and Restart button\n        if(message){\n          message.textContent = \"\";\n        }\n        logo?.setAttribute(\"style\", \"display:none;\");\n    \n        blockAnimations();\n        gravity();\n    \n        document.addEventListener('keydown', event => {\n          if (event.code === 'Space') {\n            jump();\n          }\n        });\n    \n        logo?.setAttribute(\"style\", \"display:none;\")\n      };\n\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n  return (\n    <main>\n      \n      {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>} */}\n      { hasThugRug  &&\n          <div id=\"game\">\n            <div id=\"gameLogo\"></div>\n            <div id=\"start\">Start</div>\n            <p id=\"message\"></p>\n            <div id=\"block\"></div>\n            <div id=\"hole\"></div>\n            <div id=\"character\"></div>\n          </div>\n      }\n\n        <script>\n          \n        blockAnimations();\n        </script>\n    </main>\n  );\n};\n\n// <Navigate to='/' />\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nexport default HoverRugz;\n"]},"metadata":{},"sourceType":"module"}