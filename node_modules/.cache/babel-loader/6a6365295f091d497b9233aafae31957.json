{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { markEnum } from \"./type\";\nexport var DateTimeKind_$type = /*@__PURE__*/markEnum(\"DateTimeKind\", \"Unspecified,0|Utc,1|Local,2\");\nexport function dateKind() {\n  return 2\n  /* Local */\n  ;\n}\n;\nexport function defaultDVDateParse(str) {\n  return new Date(parseInt(str.replace(\"/Date(\", \"\").replace(\")/\", \"\"), 10));\n}\nexport function dateNow() {\n  return new Date();\n}\n;\nexport function dateMinValue() {\n  var d = new Date(1, 0, 1, 0, 0, 0, 0);\n  d.setFullYear(1);\n  return d;\n}\n;\nexport function dateMaxValue() {\n  return new Date(9999, 12, 31, 23, 59, 59, 0.9999999);\n}\n;\nexport function dateFromMilliseconds(value) {\n  return new Date(value);\n}\n;\nexport function dateStdTimezoneOffset(date) {\n  var jan, jul, janOffset, julOffset;\n  jan = new Date(date.getFullYear(), 0, 1);\n  jul = new Date(date.getFullYear(), 6, 1);\n  julOffset = jul.getTimezoneOffset();\n  janOffset = jan.getTimezoneOffset();\n  return Math.max(janOffset, julOffset);\n}\n;\nexport function dateIsDST(date) {\n  return date.getTimezoneOffset() < dateStdTimezoneOffset(date);\n}\n;\nexport function dateFromValues(year, month, day, hour, minute, second, millisecond) {\n  return new Date(year, month - 1, day, hour, minute, second, millisecond);\n}\nexport function dateFromTicks(ticks) {\n  return new Date(ticks);\n}\nexport function dateAddSeconds(value, seconds) {\n  return dateAddDays(value, seconds / 86400);\n}\nexport function dateAddMinutes(value, minutes) {\n  return dateAddDays(value, minutes / 1440);\n}\nexport function dateAddHours(value, hours) {\n  return dateAddDays(value, hours / 24);\n}\nexport function dateAddDays(value, days) {\n  var result = new Date(+value + days * 86400000); // Correct for any daylight saving time shifts\n\n  if (!dateIsDST(value)) {\n    if (dateIsDST(result)) {\n      result = new Date(+result - 3600000);\n    }\n  } else {\n    if (!dateIsDST(result)) {\n      result = new Date(+result + 3600000);\n    }\n  }\n\n  return result;\n}\nexport function dateAddMonths(value, num) {\n  var result = new Date(value.getTime());\n  var currentMonth = result.getMonth() + result.getFullYear() * 12;\n  result.setMonth(result.getMonth() + num);\n  var diff = result.getMonth() + result.getFullYear() * 12 - currentMonth; // If don't get the right number, set date to\n  // last day of previous month\n\n  if (diff != num) {\n    result.setDate(0);\n  }\n\n  return result;\n}\nexport function dateAddYears(value, num) {\n  var result = new Date(value.getTime());\n  result.setFullYear(result.getFullYear() + num);\n  return result;\n}\nexport function dateIsLeapYear(year) {\n  return year % 4 === 0 && (year % 100 !== 0 || year % 400 == 0);\n}\nexport function dateToFileTime(value) {\n  return (+value - +new Date(1600, 11, 31, 19, 0, 0, 0)) * 10000;\n}\nexport function dateFromFileTime(value) {\n  // TODO: Test this\n  return +(value / 10000) + +new Date(1600, 11, 31, 19, 0, 0, 0);\n}\nexport function dateFromFileTimeUtc(value) {\n  return new Date(+(value / 10000) + +Date.UTC(1600, 12, 1, 0, 0, 0, 0));\n}\nexport function dateGetMonth(value) {\n  return value.getMonth() + 1;\n}\nexport function dateToday() {\n  var r = new Date();\n  r.setHours(0, 0, 0, 0);\n  return r;\n}\nexport function dateGetTimeOfDay(value) {\n  return value.getHours() * 3600000 + value.getMinutes() * 60000 + value.getSeconds() * 1000 + value.getMilliseconds();\n}\nexport function dateGetDate(value) {\n  return new Date(+value - dateGetTimeOfDay(value));\n}\nexport function dateEquals(d1, d2) {\n  return d2 instanceof Date && +d1 === +d2;\n}\nexport function dateAdd(d, t) {\n  return new Date(+d + t);\n}\n;\nexport function dateSubtract(d, t) {\n  return new Date(+d - t);\n}\n;\nexport function daysInMonth(year, month) {\n  switch (month) {\n    case 1:\n      return 31;\n    // Jan\n\n    case 2:\n      return dateIsLeapYear(year) ? 29 : 28;\n    // Feb\n\n    case 3:\n      return 31;\n    // Mar\n\n    case 4:\n      return 30;\n    // Apr\n\n    case 5:\n      return 31;\n    // May\n\n    case 6:\n      return 30;\n    // Jun\n\n    case 7:\n      return 31;\n    // Jul\n\n    case 8:\n      return 31;\n    // Aug\n\n    case 9:\n      return 30;\n    // Sep\n\n    case 10:\n      return 31;\n    // Oct\n\n    case 11:\n      return 30;\n    // Nov\n\n    case 12:\n      return 31;\n    // Dec\n  } // TODO: throw error here?\n\n\n  return 0;\n}","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/date.js"],"names":["markEnum","DateTimeKind_$type","dateKind","defaultDVDateParse","str","Date","parseInt","replace","dateNow","dateMinValue","d","setFullYear","dateMaxValue","dateFromMilliseconds","value","dateStdTimezoneOffset","date","jan","jul","janOffset","julOffset","getFullYear","getTimezoneOffset","Math","max","dateIsDST","dateFromValues","year","month","day","hour","minute","second","millisecond","dateFromTicks","ticks","dateAddSeconds","seconds","dateAddDays","dateAddMinutes","minutes","dateAddHours","hours","days","result","dateAddMonths","num","getTime","currentMonth","getMonth","setMonth","diff","setDate","dateAddYears","dateIsLeapYear","dateToFileTime","dateFromFileTime","dateFromFileTimeUtc","UTC","dateGetMonth","dateToday","r","setHours","dateGetTimeOfDay","getHours","getMinutes","getSeconds","getMilliseconds","dateGetDate","dateEquals","d1","d2","dateAdd","t","dateSubtract","daysInMonth"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { markEnum } from \"./type\";\nexport var DateTimeKind_$type = /*@__PURE__*/ markEnum(\"DateTimeKind\", \"Unspecified,0|Utc,1|Local,2\");\nexport function dateKind() {\n    return 2 /* Local */;\n}\n;\nexport function defaultDVDateParse(str) {\n    return new Date(parseInt(str.replace(\"/Date(\", \"\").replace(\")/\", \"\"), 10));\n}\nexport function dateNow() {\n    return new Date();\n}\n;\nexport function dateMinValue() {\n    var d = new Date(1, 0, 1, 0, 0, 0, 0);\n    d.setFullYear(1);\n    return d;\n}\n;\nexport function dateMaxValue() {\n    return new Date(9999, 12, 31, 23, 59, 59, 0.9999999);\n}\n;\nexport function dateFromMilliseconds(value) {\n    return new Date(value);\n}\n;\nexport function dateStdTimezoneOffset(date) {\n    var jan, jul, janOffset, julOffset;\n    jan = new Date(date.getFullYear(), 0, 1);\n    jul = new Date(date.getFullYear(), 6, 1);\n    julOffset = jul.getTimezoneOffset();\n    janOffset = jan.getTimezoneOffset();\n    return Math.max(janOffset, julOffset);\n}\n;\nexport function dateIsDST(date) {\n    return date.getTimezoneOffset() < dateStdTimezoneOffset(date);\n}\n;\nexport function dateFromValues(year, month, day, hour, minute, second, millisecond) {\n    return new Date(year, month - 1, day, hour, minute, second, millisecond);\n}\nexport function dateFromTicks(ticks) {\n    return new Date(ticks);\n}\nexport function dateAddSeconds(value, seconds) {\n    return dateAddDays(value, seconds / 86400);\n}\nexport function dateAddMinutes(value, minutes) {\n    return dateAddDays(value, minutes / 1440);\n}\nexport function dateAddHours(value, hours) {\n    return dateAddDays(value, hours / 24);\n}\nexport function dateAddDays(value, days) {\n    var result = new Date(+value + (days * 86400000));\n    // Correct for any daylight saving time shifts\n    if (!dateIsDST(value)) {\n        if (dateIsDST(result)) {\n            result = new Date(+result - 3600000);\n        }\n    }\n    else {\n        if (!dateIsDST(result)) {\n            result = new Date(+result + 3600000);\n        }\n    }\n    return result;\n}\nexport function dateAddMonths(value, num) {\n    var result = new Date(value.getTime());\n    var currentMonth = result.getMonth() + result.getFullYear() * 12;\n    result.setMonth(result.getMonth() + num);\n    var diff = result.getMonth() + result.getFullYear() * 12 - currentMonth;\n    // If don't get the right number, set date to\n    // last day of previous month\n    if (diff != num) {\n        result.setDate(0);\n    }\n    return result;\n}\nexport function dateAddYears(value, num) {\n    var result = new Date(value.getTime());\n    result.setFullYear(result.getFullYear() + num);\n    return result;\n}\nexport function dateIsLeapYear(year) {\n    return year % 4 === 0 && (year % 100 !== 0 || year % 400 == 0);\n}\nexport function dateToFileTime(value) {\n    return (+value - +new Date(1600, 11, 31, 19, 0, 0, 0)) * 10000;\n}\nexport function dateFromFileTime(value) {\n    // TODO: Test this\n    return +(value / 10000) + +new Date(1600, 11, 31, 19, 0, 0, 0);\n}\nexport function dateFromFileTimeUtc(value) {\n    return new Date(+(value / 10000) + +Date.UTC(1600, 12, 1, 0, 0, 0, 0));\n}\nexport function dateGetMonth(value) {\n    return value.getMonth() + 1;\n}\nexport function dateToday() {\n    var r = new Date();\n    r.setHours(0, 0, 0, 0);\n    return r;\n}\nexport function dateGetTimeOfDay(value) {\n    return (value.getHours() * 3600000) +\n        (value.getMinutes() * 60000) +\n        (value.getSeconds() * 1000) +\n        value.getMilliseconds();\n}\nexport function dateGetDate(value) {\n    return new Date(+value - dateGetTimeOfDay(value));\n}\nexport function dateEquals(d1, d2) {\n    return d2 instanceof Date && +d1 === +d2;\n}\nexport function dateAdd(d, t) { return new Date(+d + t); }\n;\nexport function dateSubtract(d, t) { return new Date(+d - t); }\n;\nexport function daysInMonth(year, month) {\n    switch (month) {\n        case 1: return 31; // Jan\n        case 2: return dateIsLeapYear(year) ? 29 : 28; // Feb\n        case 3: return 31; // Mar\n        case 4: return 30; // Apr\n        case 5: return 31; // May\n        case 6: return 30; // Jun\n        case 7: return 31; // Jul\n        case 8: return 31; // Aug\n        case 9: return 30; // Sep\n        case 10: return 31; // Oct\n        case 11: return 30; // Nov\n        case 12: return 31; // Dec\n    }\n    // TODO: throw error here?\n    return 0;\n}\n"]},"metadata":{},"sourceType":"module"}