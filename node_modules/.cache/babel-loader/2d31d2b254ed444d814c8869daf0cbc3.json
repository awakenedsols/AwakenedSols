{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\nimport { ChartSeriesEventArgsDescription } from \"./ChartSeriesEventArgsDescription\";\n/**\n * @hidden\n */\n\nvar ChartSeriesEventArgsDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ChartSeriesEventArgsDescriptionMetadata, _super);\n\n  function ChartSeriesEventArgsDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ChartSeriesEventArgsDescriptionMetadata.b = function (a) {\n    if (ChartSeriesEventArgsDescriptionMetadata.a == null) {\n      ChartSeriesEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ChartSeriesEventArgsDescriptionMetadata.c(ChartSeriesEventArgsDescriptionMetadata.a);\n    }\n\n    if (a.g(ChartSeriesEventArgsDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ChartSeriesEventArgsDescriptionMetadata.a);\n    SeriesDescriptionMetadata.d(a);\n  };\n\n  ChartSeriesEventArgsDescriptionMetadata.c = function (a) {\n    a.item(\"Series\", \"ExportedType:Series\");\n  };\n\n  ChartSeriesEventArgsDescriptionMetadata.d = function (a) {\n    ChartSeriesEventArgsDescriptionMetadata.b(a);\n    a.u(\"ChartSeriesEventArgs\", function () {\n      return new ChartSeriesEventArgsDescription();\n    });\n    a.t(\"ChartSeriesEventArgs\", ChartSeriesEventArgsDescriptionMetadata.a);\n  };\n\n  ChartSeriesEventArgsDescriptionMetadata.$t = markType(ChartSeriesEventArgsDescriptionMetadata, 'ChartSeriesEventArgsDescriptionMetadata');\n  ChartSeriesEventArgsDescriptionMetadata.a = null;\n  return ChartSeriesEventArgsDescriptionMetadata;\n}(Base);\n\nexport { ChartSeriesEventArgsDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/ChartSeriesEventArgsDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","SeriesDescriptionMetadata","ChartSeriesEventArgsDescription","ChartSeriesEventArgsDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","u","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA,SAASC,+BAAT,QAAgD,mCAAhD;AACA;AACA;AACA;;AACA,IAAIC,uCAAuC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACzFR,EAAAA,SAAS,CAACO,uCAAD,EAA0CC,MAA1C,CAAT;;AACA,WAASD,uCAAT,GAAmD;AAC/C,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,uCAAuC,CAACI,CAAxC,GAA4C,UAAUC,CAAV,EAAa;AACrD,QAAIL,uCAAuC,CAACK,CAAxC,IAA6C,IAAjD,EAAuD;AACnDL,MAAAA,uCAAuC,CAACK,CAAxC,GAA4C,IAAIR,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAA5C;AACAK,MAAAA,uCAAuC,CAACM,CAAxC,CAA0CN,uCAAuC,CAACK,CAAlF;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,uCAAuC,CAACK,CAA5C,CAAJ,EAAoD;AAChD;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,uCAAuC,CAACK,CAA5C;AACAP,IAAAA,yBAAyB,CAACW,CAA1B,CAA4BJ,CAA5B;AACH,GAVD;;AAWAL,EAAAA,uCAAuC,CAACM,CAAxC,GAA4C,UAAUD,CAAV,EAAa;AACrDA,IAAAA,CAAC,CAACK,IAAF,CAAO,QAAP,EAAiB,qBAAjB;AACH,GAFD;;AAGAV,EAAAA,uCAAuC,CAACS,CAAxC,GAA4C,UAAUJ,CAAV,EAAa;AACrDL,IAAAA,uCAAuC,CAACI,CAAxC,CAA0CC,CAA1C;AACAA,IAAAA,CAAC,CAACM,CAAF,CAAI,sBAAJ,EAA4B,YAAY;AAAE,aAAO,IAAIZ,+BAAJ,EAAP;AAA+C,KAAzF;AACAM,IAAAA,CAAC,CAACO,CAAF,CAAI,sBAAJ,EAA4BZ,uCAAuC,CAACK,CAApE;AACH,GAJD;;AAKAL,EAAAA,uCAAuC,CAACa,EAAxC,GAA6CjB,QAAQ,CAACI,uCAAD,EAA0C,yCAA1C,CAArD;AACAA,EAAAA,uCAAuC,CAACK,CAAxC,GAA4C,IAA5C;AACA,SAAOL,uCAAP;AACH,CA3B0E,CA2BzEN,IA3ByE,CAA3E;;AA4BA,SAASM,uCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SeriesDescriptionMetadata } from \"./SeriesDescriptionMetadata\";\nimport { ChartSeriesEventArgsDescription } from \"./ChartSeriesEventArgsDescription\";\n/**\n * @hidden\n */\nvar ChartSeriesEventArgsDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ChartSeriesEventArgsDescriptionMetadata, _super);\n    function ChartSeriesEventArgsDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ChartSeriesEventArgsDescriptionMetadata.b = function (a) {\n        if (ChartSeriesEventArgsDescriptionMetadata.a == null) {\n            ChartSeriesEventArgsDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ChartSeriesEventArgsDescriptionMetadata.c(ChartSeriesEventArgsDescriptionMetadata.a);\n        }\n        if (a.g(ChartSeriesEventArgsDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ChartSeriesEventArgsDescriptionMetadata.a);\n        SeriesDescriptionMetadata.d(a);\n    };\n    ChartSeriesEventArgsDescriptionMetadata.c = function (a) {\n        a.item(\"Series\", \"ExportedType:Series\");\n    };\n    ChartSeriesEventArgsDescriptionMetadata.d = function (a) {\n        ChartSeriesEventArgsDescriptionMetadata.b(a);\n        a.u(\"ChartSeriesEventArgs\", function () { return new ChartSeriesEventArgsDescription(); });\n        a.t(\"ChartSeriesEventArgs\", ChartSeriesEventArgsDescriptionMetadata.a);\n    };\n    ChartSeriesEventArgsDescriptionMetadata.$t = markType(ChartSeriesEventArgsDescriptionMetadata, 'ChartSeriesEventArgsDescriptionMetadata');\n    ChartSeriesEventArgsDescriptionMetadata.a = null;\n    return ChartSeriesEventArgsDescriptionMetadata;\n}(Base));\nexport { ChartSeriesEventArgsDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}