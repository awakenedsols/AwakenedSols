{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, fromEnum, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar AverageTrueRangeIndicatorStrategy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(AverageTrueRangeIndicatorStrategy, _super);\n\n  function AverageTrueRangeIndicatorStrategy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AverageTrueRangeIndicatorStrategy.prototype.b = function (a, b) {\n    var c = new List$1(String_$type, 0);\n    c.o(a.trueRange.basedOn);\n    c.o(b.a.c);\n    return c;\n  };\n\n  AverageTrueRangeIndicatorStrategy.prototype.a = function (a, b) {\n    var e_1, _a;\n\n    var c = 0;\n\n    try {\n      for (var _b = __values(fromEnum(b.a.b(a.trueRange, a.period))), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var d = _c.value;\n        a.indicatorColumn.item(c, d);\n        ++c;\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return true;\n  };\n\n  AverageTrueRangeIndicatorStrategy.$t = markType(AverageTrueRangeIndicatorStrategy, 'AverageTrueRangeIndicatorStrategy', IndicatorCalculationStrategy.$);\n  return AverageTrueRangeIndicatorStrategy;\n}(IndicatorCalculationStrategy);\n\nexport { AverageTrueRangeIndicatorStrategy };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/AverageTrueRangeIndicatorStrategy.js"],"names":["__extends","__values","IndicatorCalculationStrategy","String_$type","fromEnum","markType","List$1","AverageTrueRangeIndicatorStrategy","_super","apply","arguments","prototype","b","a","c","o","trueRange","basedOn","e_1","_a","_b","period","_c","next","done","d","value","indicatorColumn","item","e_1_1","error","return","call","$t","$"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,4BAAT,QAA6C,gCAA7C;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,QAAjC,QAAiD,qBAAjD;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA;AACA;AACA;;AACA,IAAIC,iCAAiC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACnFR,EAAAA,SAAS,CAACO,iCAAD,EAAoCC,MAApC,CAAT;;AACA,WAASD,iCAAT,GAA6C;AACzC,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,iCAAiC,CAACI,SAAlC,CAA4CC,CAA5C,GAAgD,UAAUC,CAAV,EAAaD,CAAb,EAAgB;AAC5D,QAAIE,CAAC,GAAG,IAAIR,MAAJ,CAAWH,YAAX,EAAyB,CAAzB,CAAR;AACAW,IAAAA,CAAC,CAACC,CAAF,CAAIF,CAAC,CAACG,SAAF,CAAYC,OAAhB;AACAH,IAAAA,CAAC,CAACC,CAAF,CAAIH,CAAC,CAACC,CAAF,CAAIC,CAAR;AACA,WAAOA,CAAP;AACH,GALD;;AAMAP,EAAAA,iCAAiC,CAACI,SAAlC,CAA4CE,CAA5C,GAAgD,UAAUA,CAAV,EAAaD,CAAb,EAAgB;AAC5D,QAAIM,GAAJ,EAASC,EAAT;;AACA,QAAIL,CAAC,GAAG,CAAR;;AACA,QAAI;AACA,WAAK,IAAIM,EAAE,GAAGnB,QAAQ,CAACG,QAAQ,CAACQ,CAAC,CAACC,CAAF,CAAID,CAAJ,CAAMC,CAAC,CAACG,SAAR,EAAmBH,CAAC,CAACQ,MAArB,CAAD,CAAT,CAAjB,EAA2DC,EAAE,GAAGF,EAAE,CAACG,IAAH,EAArE,EAAgF,CAACD,EAAE,CAACE,IAApF,EAA0FF,EAAE,GAAGF,EAAE,CAACG,IAAH,EAA/F,EAA0G;AACtG,YAAIE,CAAC,GAAGH,EAAE,CAACI,KAAX;AACAb,QAAAA,CAAC,CAACc,eAAF,CAAkBC,IAAlB,CAAuBd,CAAvB,EAA0BW,CAA1B;AACA,UAAEX,CAAF;AACH;AACJ,KAND,CAOA,OAAOe,KAAP,EAAc;AACVX,MAAAA,GAAG,GAAG;AAAEY,QAAAA,KAAK,EAAED;AAAT,OAAN;AACH,KATD,SAUQ;AACJ,UAAI;AACA,YAAIP,EAAE,IAAI,CAACA,EAAE,CAACE,IAAV,KAAmBL,EAAE,GAAGC,EAAE,CAACW,MAA3B,CAAJ,EACIZ,EAAE,CAACa,IAAH,CAAQZ,EAAR;AACP,OAHD,SAIQ;AACJ,YAAIF,GAAJ,EACI,MAAMA,GAAG,CAACY,KAAV;AACP;AACJ;;AACD,WAAO,IAAP;AACH,GAxBD;;AAyBAvB,EAAAA,iCAAiC,CAAC0B,EAAlC,GAAuC5B,QAAQ,CAACE,iCAAD,EAAoC,mCAApC,EAAyEL,4BAA4B,CAACgC,CAAtG,CAA/C;AACA,SAAO3B,iCAAP;AACH,CAtCoE,CAsCnEL,4BAtCmE,CAArE;;AAuCA,SAASK,iCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, fromEnum, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar AverageTrueRangeIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(AverageTrueRangeIndicatorStrategy, _super);\n    function AverageTrueRangeIndicatorStrategy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AverageTrueRangeIndicatorStrategy.prototype.b = function (a, b) {\n        var c = new List$1(String_$type, 0);\n        c.o(a.trueRange.basedOn);\n        c.o(b.a.c);\n        return c;\n    };\n    AverageTrueRangeIndicatorStrategy.prototype.a = function (a, b) {\n        var e_1, _a;\n        var c = 0;\n        try {\n            for (var _b = __values(fromEnum(b.a.b(a.trueRange, a.period))), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var d = _c.value;\n                a.indicatorColumn.item(c, d);\n                ++c;\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        return true;\n    };\n    AverageTrueRangeIndicatorStrategy.$t = markType(AverageTrueRangeIndicatorStrategy, 'AverageTrueRangeIndicatorStrategy', IndicatorCalculationStrategy.$);\n    return AverageTrueRangeIndicatorStrategy;\n}(IndicatorCalculationStrategy));\nexport { AverageTrueRangeIndicatorStrategy };\n"]},"metadata":{},"sourceType":"module"}