{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { IgrLegendBase } from './igr-legend-base';\nimport { ItemLegend } from \"./ItemLegend\";\nimport { LegendOrientation_$type } from './LegendOrientation';\nimport { ReactRenderer } from \"igniteui-react-core\";\nimport { DataChartStylingDefaults } from './DataChartStylingDefaults';\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents a legend that displays an item for each point in the series.\n*\n* You can use the `IgrItemLegend` to display a legend item for each data member bound to the `IgrBubbleSeries`\n*\n* ```ts\n*   <IgrItemLegend ref={this.onLegendRef} />\n* ```\n*\n* ```ts\n* this.onLegendRef = this.onLegendRef.bind(this);\n* public onLegendRef(legend: IgrItemLegend) {\n*         this.legend = legend;\n*         if (this.chart) {\n*             this.chart.actualSeries[0].legend = this.legend;\n*         }\n*     }\n* ```\n*/\n\nvar IgrItemLegend =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrItemLegend, _super);\n\n  function IgrItemLegend(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._getMainRef = _this._getMainRef.bind(_this);\n    var container;\n\n    if (document) {\n      container = document.createElement(\"div\");\n      container.style.display = \"block\";\n      container.style.width = \"100%\";\n      container.style.height = \"100%\";\n    }\n\n    var root;\n    root = container;\n    var ren = new ReactRenderer(root, document, true, DataChartStylingDefaults);\n    _this.container = ren.getWrapper(container);\n    _this._wrapper = ren;\n\n    _this.i.provideContainer(ren);\n\n    return _this;\n  }\n\n  IgrItemLegend.prototype.render = function () {\n    var div = React.createElement(\"div\", {\n      className: \"ig-item-legend igr-item-legend\",\n      ref: this._getMainRef\n    });\n    return div;\n  };\n\n  IgrItemLegend.prototype._getMainRef = function (div) {\n    this._elRef = div;\n  };\n\n  IgrItemLegend.prototype.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this);\n\n    this.initializeContent();\n  };\n\n  IgrItemLegend.prototype.initializeContent = function () {\n    this._elRef.appendChild(this.container.getNativeElement());\n  };\n\n  IgrItemLegend.prototype.destroy = function () {\n    this._wrapper.destroy();\n\n    this.i.provideContainer(null);\n  };\n\n  IgrItemLegend.prototype.createImplementation = function () {\n    return new ItemLegend();\n  };\n\n  Object.defineProperty(IgrItemLegend.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrItemLegend.prototype.createItemwiseLegendItems = function (legendItems, series) {\n    this.i.createItemwiseLegendItems(legendItems, series);\n  };\n\n  IgrItemLegend.prototype.exportVisualData = function () {\n    return this.i.exportVisualData();\n  };\n\n  IgrItemLegend.prototype.exportSerializedVisualData = function () {\n    return this.i.exportSerializedVisualData();\n  };\n\n  Object.defineProperty(IgrItemLegend.prototype, \"isItemwise\", {\n    /**\n    * Gets whether or not this legend supports itemwise visuals\n    */\n    get: function () {\n      return this.i.isItemwise;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrItemLegend.prototype, \"orientation\", {\n    /**\n     * Gets or sets the current Legend object's orientation.\n    */\n    get: function () {\n      return this.i.bc;\n    },\n    set: function (v) {\n      this.i.bc = ensureEnum(LegendOrientation_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrItemLegend.prototype, \"textColor\", {\n    /**\n     * Gets or sets color of text\n    */\n    get: function () {\n      return this.i.bh;\n    },\n    set: function (v) {\n      this.i.bh = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrItemLegend.prototype, \"textStyle\", {\n    /**\n     * Gets or sets style of text.\n    */\n    get: function () {\n      return this.i.bi;\n    },\n    set: function (v) {\n      this.i.bi = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrItemLegend;\n}(IgrLegendBase);\n\nexport { IgrItemLegend };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-item-legend.js"],"names":["__extends","React","IgrLegendBase","ItemLegend","LegendOrientation_$type","ReactRenderer","DataChartStylingDefaults","ensureEnum","IgrItemLegend","_super","props","_this","call","_getMainRef","bind","container","document","createElement","style","display","width","height","root","ren","getWrapper","_wrapper","i","provideContainer","prototype","render","div","className","ref","_elRef","componentDidMount","initializeContent","appendChild","getNativeElement","destroy","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","createItemwiseLegendItems","legendItems","series","exportVisualData","exportSerializedVisualData","isItemwise","bc","set","v","bh","bi"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport { IgrLegendBase } from './igr-legend-base';\nimport { ItemLegend } from \"./ItemLegend\";\nimport { LegendOrientation_$type } from './LegendOrientation';\nimport { ReactRenderer } from \"igniteui-react-core\";\nimport { DataChartStylingDefaults } from './DataChartStylingDefaults';\nimport { ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents a legend that displays an item for each point in the series.\n*\n* You can use the `IgrItemLegend` to display a legend item for each data member bound to the `IgrBubbleSeries`\n*\n* ```ts\n*   <IgrItemLegend ref={this.onLegendRef} />\n* ```\n*\n* ```ts\n* this.onLegendRef = this.onLegendRef.bind(this);\n* public onLegendRef(legend: IgrItemLegend) {\n*         this.legend = legend;\n*         if (this.chart) {\n*             this.chart.actualSeries[0].legend = this.legend;\n*         }\n*     }\n* ```\n*/\nvar IgrItemLegend = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrItemLegend, _super);\n    function IgrItemLegend(props) {\n        var _this = _super.call(this, props) || this;\n        _this._getMainRef = _this._getMainRef.bind(_this);\n        var container;\n        if (document) {\n            container = document.createElement(\"div\");\n            container.style.display = \"block\";\n            container.style.width = \"100%\";\n            container.style.height = \"100%\";\n        }\n        var root;\n        root = container;\n        var ren = new ReactRenderer(root, document, true, DataChartStylingDefaults);\n        _this.container = ren.getWrapper(container);\n        _this._wrapper = ren;\n        _this.i.provideContainer(ren);\n        return _this;\n    }\n    IgrItemLegend.prototype.render = function () {\n        var div = React.createElement(\"div\", {\n            className: \"ig-item-legend igr-item-legend\",\n            ref: this._getMainRef\n        });\n        return div;\n    };\n    IgrItemLegend.prototype._getMainRef = function (div) {\n        this._elRef = div;\n    };\n    IgrItemLegend.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        this.initializeContent();\n    };\n    IgrItemLegend.prototype.initializeContent = function () {\n        this._elRef.appendChild(this.container.getNativeElement());\n    };\n    IgrItemLegend.prototype.destroy = function () {\n        this._wrapper.destroy();\n        this.i.provideContainer(null);\n    };\n    IgrItemLegend.prototype.createImplementation = function () {\n        return new ItemLegend();\n    };\n    Object.defineProperty(IgrItemLegend.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrItemLegend.prototype.createItemwiseLegendItems = function (legendItems, series) {\n        this.i.createItemwiseLegendItems(legendItems, series);\n    };\n    IgrItemLegend.prototype.exportVisualData = function () {\n        return this.i.exportVisualData();\n    };\n    IgrItemLegend.prototype.exportSerializedVisualData = function () {\n        return this.i.exportSerializedVisualData();\n    };\n    Object.defineProperty(IgrItemLegend.prototype, \"isItemwise\", {\n        /**\n     * Gets whether or not this legend supports itemwise visuals\n    */\n        get: function () {\n            return this.i.isItemwise;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrItemLegend.prototype, \"orientation\", {\n        /**\n         * Gets or sets the current Legend object's orientation.\n        */\n        get: function () {\n            return this.i.bc;\n        },\n        set: function (v) {\n            this.i.bc = ensureEnum(LegendOrientation_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrItemLegend.prototype, \"textColor\", {\n        /**\n         * Gets or sets color of text\n        */\n        get: function () {\n            return this.i.bh;\n        },\n        set: function (v) {\n            this.i.bh = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrItemLegend.prototype, \"textStyle\", {\n        /**\n         * Gets or sets style of text.\n        */\n        get: function () {\n            return this.i.bi;\n        },\n        set: function (v) {\n            this.i.bi = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrItemLegend;\n}(IgrLegendBase));\nexport { IgrItemLegend };\n"]},"metadata":{},"sourceType":"module"}