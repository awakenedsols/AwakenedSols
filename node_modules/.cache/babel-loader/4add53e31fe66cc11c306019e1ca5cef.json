{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SplineFragmentBaseDescriptionMetadata } from \"./SplineFragmentBaseDescriptionMetadata\";\nimport { SplineFragmentDescription } from \"./SplineFragmentDescription\";\n/**\n * @hidden\n */\n\nvar SplineFragmentDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(SplineFragmentDescriptionMetadata, _super);\n\n  function SplineFragmentDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  SplineFragmentDescriptionMetadata.b = function (a) {\n    if (SplineFragmentDescriptionMetadata.a == null) {\n      SplineFragmentDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      SplineFragmentDescriptionMetadata.c(SplineFragmentDescriptionMetadata.a);\n    }\n\n    if (a.g(SplineFragmentDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(SplineFragmentDescriptionMetadata.a);\n  };\n\n  SplineFragmentDescriptionMetadata.c = function (a) {\n    SplineFragmentBaseDescriptionMetadata.c(a);\n  };\n\n  SplineFragmentDescriptionMetadata.d = function (a) {\n    SplineFragmentDescriptionMetadata.b(a);\n    a.u(\"SplineFragment\", function () {\n      return new SplineFragmentDescription();\n    });\n    a.t(\"SplineFragment\", SplineFragmentDescriptionMetadata.a);\n  };\n\n  SplineFragmentDescriptionMetadata.$t = markType(SplineFragmentDescriptionMetadata, 'SplineFragmentDescriptionMetadata');\n  SplineFragmentDescriptionMetadata.a = null;\n  return SplineFragmentDescriptionMetadata;\n}(Base);\n\nexport { SplineFragmentDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/SplineFragmentDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","SplineFragmentBaseDescriptionMetadata","SplineFragmentDescription","SplineFragmentDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","u","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,qCAAT,QAAsD,yCAAtD;AACA,SAASC,yBAAT,QAA0C,6BAA1C;AACA;AACA;AACA;;AACA,IAAIC,iCAAiC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACnFR,EAAAA,SAAS,CAACO,iCAAD,EAAoCC,MAApC,CAAT;;AACA,WAASD,iCAAT,GAA6C;AACzC,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,iCAAiC,CAACI,CAAlC,GAAsC,UAAUC,CAAV,EAAa;AAC/C,QAAIL,iCAAiC,CAACK,CAAlC,IAAuC,IAA3C,EAAiD;AAC7CL,MAAAA,iCAAiC,CAACK,CAAlC,GAAsC,IAAIR,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAtC;AACAK,MAAAA,iCAAiC,CAACM,CAAlC,CAAoCN,iCAAiC,CAACK,CAAtE;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,iCAAiC,CAACK,CAAtC,CAAJ,EAA8C;AAC1C;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,iCAAiC,CAACK,CAAtC;AACH,GATD;;AAUAL,EAAAA,iCAAiC,CAACM,CAAlC,GAAsC,UAAUD,CAAV,EAAa;AAC/CP,IAAAA,qCAAqC,CAACQ,CAAtC,CAAwCD,CAAxC;AACH,GAFD;;AAGAL,EAAAA,iCAAiC,CAACS,CAAlC,GAAsC,UAAUJ,CAAV,EAAa;AAC/CL,IAAAA,iCAAiC,CAACI,CAAlC,CAAoCC,CAApC;AACAA,IAAAA,CAAC,CAACK,CAAF,CAAI,gBAAJ,EAAsB,YAAY;AAAE,aAAO,IAAIX,yBAAJ,EAAP;AAAyC,KAA7E;AACAM,IAAAA,CAAC,CAACM,CAAF,CAAI,gBAAJ,EAAsBX,iCAAiC,CAACK,CAAxD;AACH,GAJD;;AAKAL,EAAAA,iCAAiC,CAACY,EAAlC,GAAuChB,QAAQ,CAACI,iCAAD,EAAoC,mCAApC,CAA/C;AACAA,EAAAA,iCAAiC,CAACK,CAAlC,GAAsC,IAAtC;AACA,SAAOL,iCAAP;AACH,CA1BoE,CA0BnEN,IA1BmE,CAArE;;AA2BA,SAASM,iCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { SplineFragmentBaseDescriptionMetadata } from \"./SplineFragmentBaseDescriptionMetadata\";\nimport { SplineFragmentDescription } from \"./SplineFragmentDescription\";\n/**\n * @hidden\n */\nvar SplineFragmentDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(SplineFragmentDescriptionMetadata, _super);\n    function SplineFragmentDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    SplineFragmentDescriptionMetadata.b = function (a) {\n        if (SplineFragmentDescriptionMetadata.a == null) {\n            SplineFragmentDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            SplineFragmentDescriptionMetadata.c(SplineFragmentDescriptionMetadata.a);\n        }\n        if (a.g(SplineFragmentDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(SplineFragmentDescriptionMetadata.a);\n    };\n    SplineFragmentDescriptionMetadata.c = function (a) {\n        SplineFragmentBaseDescriptionMetadata.c(a);\n    };\n    SplineFragmentDescriptionMetadata.d = function (a) {\n        SplineFragmentDescriptionMetadata.b(a);\n        a.u(\"SplineFragment\", function () { return new SplineFragmentDescription(); });\n        a.t(\"SplineFragment\", SplineFragmentDescriptionMetadata.a);\n    };\n    SplineFragmentDescriptionMetadata.$t = markType(SplineFragmentDescriptionMetadata, 'SplineFragmentDescriptionMetadata');\n    SplineFragmentDescriptionMetadata.a = null;\n    return SplineFragmentDescriptionMetadata;\n}(Base));\nexport { SplineFragmentDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}