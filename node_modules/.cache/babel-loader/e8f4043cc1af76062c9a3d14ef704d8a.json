{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/Sniper.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport './home.css';\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n_c = ConnectButton;\nconst MintContainer = styled.div``; // add your owns styles here\n\nconst Sniper = props => {\n  _s();\n\n  const [alertState, setAlertState] = useState({\n    open: false,\n    message: '',\n    severity: undefined\n  });\n  const [isHolder, setIsHolder] = useState(false);\n  const [collections, setCollections] = useState();\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n  const anchorWallet = useMemo(() => {\n    if (!wallet || !wallet.publicKey || !wallet.signAllTransactions || !wallet.signTransaction) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction\n    };\n  }, [wallet]);\n\n  const getCollections = async () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n    await fetch(\"api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200\").then(response => {\n      response.text();\n    }).then(result => {\n      console.log(result);\n    }).catch(error => console.log(\"error\", error));\n  };\n\n  useEffect(() => {\n    (function loop() {\n      setTimeout(() => {\n        getCollections();\n        loop();\n      }, 20000);\n    })();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [!wallet.connected ? /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"xs\",\n          style: {\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              padding: 24,\n              paddingBottom: 10,\n              backgroundColor: '#151A1F',\n              borderRadius: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(ConnectButton, {\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 14\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"sniper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 14\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: alertState.open,\n          autoHideDuration: alertState.hideDuration === undefined ? 6000 : alertState.hideDuration,\n          onClose: () => setAlertState({ ...alertState,\n            open: false\n          }),\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: () => setAlertState({ ...alertState,\n              open: false\n            }),\n            severity: alertState.severity,\n            children: alertState.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"about\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"aboutContainer\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"h1\",\n          children: \"SNIPER\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 10\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 111,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Sniper, \"x95bQS5BCBDRRSdT0bA9OrFarec=\", false, function () {\n  return [useWallet];\n});\n\n_c2 = Sniper;\nexport default Sniper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConnectButton\");\n$RefreshReg$(_c2, \"Sniper\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/Sniper.tsx"],"names":["useEffect","useMemo","useState","styled","Container","Snackbar","Paper","Alert","useWallet","WalletDialogButton","ConnectButton","MintContainer","div","Sniper","props","alertState","setAlertState","open","message","severity","undefined","isHolder","setIsHolder","collections","setCollections","rpcUrl","rpcHost","wallet","anchorWallet","publicKey","signAllTransactions","signTransaction","getCollections","requestOptions","method","redirect","fetch","then","response","text","result","console","log","catch","error","loop","setTimeout","connected","position","padding","paddingBottom","backgroundColor","borderRadius","hideDuration"],"mappings":"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","sourcesContent":["import { useCallback, useEffect, useMemo, useState } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport './home.css';\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport {\n  Commitment,\n  Connection,\n  PublicKey,\n  Transaction,\n} from '@solana/web3.js';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport {\n  awaitTransactionSignatureConfirmation,\n  CANDY_MACHINE_PROGRAM,\n  CandyMachineAccount,\n  createAccountsForMint,\n  getCandyMachineState,\n  getCollectionPDA,\n  mintOneToken,\n  SetupState,\n} from './candy-machine';\nimport { AlertState, formatNumber, getAtaForMint, toDate } from './utils';\nimport { MintCountdown } from './MintCountdown';\nimport { MintButton } from './MintButton';\nimport { GatewayProvider } from '@civic/solana-gateway-react';\nimport { sendTransaction } from './connection';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst MintContainer = styled.div``; // add your owns styles here\n\nexport interface SniperProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  txTimeout: number;\n  rpcHost: string;\n  network: WalletAdapterNetwork;\n}\n\nconst Sniper = (props: SniperProps) => {\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n  const [isHolder, setIsHolder] = useState(false);\n  const [collections, setCollections] = useState();\n\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n  \n  const getCollections = async () => {\n    var requestOptions = {\n      method: \"GET\",\n      redirect: \"follow\"\n    };\n\n    await fetch(\"api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200\")\n      .then((response) => {\n        response.text();\n      })\n      .then((result) => {\n        console.log(result);\n      })\n      .catch((error) => console.log(\"error\", error));\n  };\n  \n  useEffect(() => {\n    (function loop() {\n      setTimeout(() => {\n        getCollections();\n        loop();\n      }, 20000);\n    })();\n  }, []);\n\n  return (\n      <main>\n    {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>} */}\n    <div>\n        <Container>\n      {!wallet.connected ? (\n             <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\n               <Paper\n             style={{\n               padding: 24,\n               paddingBottom: 10,\n               backgroundColor: '#151A1F',\n               borderRadius: 6,\n             }}\n           ><ConnectButton>Connect Wallet</ConnectButton></Paper>\n           </Container>\n          ) : (\n            <>\n             <h1>sniper</h1>\n            </>\n          )}\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={\n          alertState.hideDuration === undefined ? 6000 : alertState.hideDuration\n        }\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n\n        </div>\n        {<div id=\"about\"><div className=\"aboutContainer\">\n          <h1 className=\"h1\">SNIPER</h1>\n          \n          </div></div>}\n\n     </main>\n     );\n   };\nexport default Sniper;\n"]},"metadata":{},"sourceType":"module"}