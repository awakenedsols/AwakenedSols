{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar EasingFunctions =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(EasingFunctions, _super);\n\n  function EasingFunctions() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  EasingFunctions.c = function (a) {\n    return a * a * a;\n  };\n\n  EasingFunctions.g = function (a) {\n    return (Math.exp(2 * a) - 1) / (Math.exp(2) - 1);\n  };\n\n  EasingFunctions.a = function (a) {\n    return 1 - Math.sqrt(1 - a * a);\n  };\n\n  EasingFunctions.e = function (a, b) {\n    var c = a * 2;\n    return 0.5 * b(c);\n  };\n\n  EasingFunctions.f = function (a, b) {\n    var c = (1 - a) * 2;\n    var d = 1 - b(c);\n    return 0.5 * d + 0.5;\n  };\n\n  EasingFunctions.cubicEase = function (a) {\n    if (a < 0.5) {\n      var b = a * 2;\n      return 0.5 * EasingFunctions.c(b);\n    }\n\n    var c = (1 - a) * 2;\n    var d = 1 - EasingFunctions.c(c);\n    return 0.5 * d + 0.5;\n  };\n\n  EasingFunctions.exponentialEase = function (a) {\n    if (a < 0.5) {\n      return EasingFunctions.e(a, EasingFunctions.g);\n    }\n\n    return EasingFunctions.f(a, EasingFunctions.g);\n  };\n\n  EasingFunctions.circleEase = function (a) {\n    if (a < 0.5) {\n      return EasingFunctions.e(a, EasingFunctions.a);\n    }\n\n    return EasingFunctions.f(a, EasingFunctions.a);\n  };\n\n  EasingFunctions.$t = markType(EasingFunctions, 'EasingFunctions');\n  return EasingFunctions;\n}(Base);\n\nexport { EasingFunctions };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/EasingFunctions.js"],"names":["__extends","Base","markType","EasingFunctions","_super","apply","arguments","c","a","g","Math","exp","sqrt","e","b","f","d","cubicEase","exponentialEase","circleEase","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\nvar EasingFunctions = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(EasingFunctions, _super);\n    function EasingFunctions() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    EasingFunctions.c = function (a) {\n        return a * a * a;\n    };\n    EasingFunctions.g = function (a) {\n        return (Math.exp(2 * a) - 1) / (Math.exp(2) - 1);\n    };\n    EasingFunctions.a = function (a) {\n        return 1 - Math.sqrt(1 - a * a);\n    };\n    EasingFunctions.e = function (a, b) {\n        var c = a * 2;\n        return 0.5 * b(c);\n    };\n    EasingFunctions.f = function (a, b) {\n        var c = (1 - a) * 2;\n        var d = 1 - b(c);\n        return 0.5 * d + 0.5;\n    };\n    EasingFunctions.cubicEase = function (a) {\n        if (a < 0.5) {\n            var b = a * 2;\n            return 0.5 * EasingFunctions.c(b);\n        }\n        var c = (1 - a) * 2;\n        var d = 1 - EasingFunctions.c(c);\n        return 0.5 * d + 0.5;\n    };\n    EasingFunctions.exponentialEase = function (a) {\n        if (a < 0.5) {\n            return EasingFunctions.e(a, EasingFunctions.g);\n        }\n        return EasingFunctions.f(a, EasingFunctions.g);\n    };\n    EasingFunctions.circleEase = function (a) {\n        if (a < 0.5) {\n            return EasingFunctions.e(a, EasingFunctions.a);\n        }\n        return EasingFunctions.f(a, EasingFunctions.a);\n    };\n    EasingFunctions.$t = markType(EasingFunctions, 'EasingFunctions');\n    return EasingFunctions;\n}(Base));\nexport { EasingFunctions };\n"]},"metadata":{},"sourceType":"module"}