{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, typeCast, markType, getInstanceType } from \"igniteui-react-core\";\nimport { IIndicatorProxy_$type } from \"./IIndicatorProxy\";\nimport { IShortPeriodLongPeriod_$type } from \"./IShortPeriodLongPeriod\";\nimport { StrategyBasedIndicator } from \"./StrategyBasedIndicator\";\n/**\n * @hidden\n */\n\nvar IndicatorProxy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IndicatorProxy, _super);\n\n  function IndicatorProxy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  IndicatorProxy.prototype.matchesType = function (a) {\n    if (a.dq) {\n      return true;\n    }\n\n    return false;\n  };\n\n  IndicatorProxy.prototype.setCloseMemberPath = function (a, b) {\n    a.sg = b;\n  };\n\n  IndicatorProxy.prototype.setDisplayType = function (a, b) {\n    a.tp = b;\n  };\n\n  IndicatorProxy.prototype.setHighMemberPath = function (a, b) {\n    a.sj = b;\n  };\n\n  IndicatorProxy.prototype.setLongPeriod = function (a, b) {\n    if (typeCast(IShortPeriodLongPeriod_$type, a) !== null) {\n      a.longPeriod = b;\n    }\n  };\n\n  IndicatorProxy.prototype.setLowMemberPath = function (a, b) {\n    a.so = b;\n  };\n\n  IndicatorProxy.prototype.setNegativeBrush = function (a, b) {\n    a.ti = b;\n  };\n\n  IndicatorProxy.prototype.setOpenMemberPath = function (a, b) {\n    a.ss = b;\n  };\n\n  IndicatorProxy.prototype.setPeriodOverride = function (a, b) {\n    if (typeCast(StrategyBasedIndicator.$, a) !== null) {\n      a.uw(b);\n    }\n  };\n\n  IndicatorProxy.prototype.setShortPeriod = function (a, b) {\n    if (typeCast(IShortPeriodLongPeriod_$type, a) !== null) {\n      a.shortPeriod = b;\n    }\n  };\n\n  IndicatorProxy.prototype.setSignalPeriod = function (a, b) {\n    if (getInstanceType(a).typeName == \"MovingAverageConvergenceDivergenceIndicator\") {\n      var s_ = a;\n      var p_ = b;\n      s_['signalPeriod'] = p_;\n    }\n  };\n\n  IndicatorProxy.prototype.setSmoothingPeriod = function (a, b) {\n    if (getInstanceType(a).typeName == \"FullStochasticOscillatorIndicator\") {\n      var s_ = a;\n      var p_ = b;\n      s_['smoothingPeriod'] = p_;\n    }\n  };\n\n  IndicatorProxy.prototype.setVolumeMemberPath = function (a, b) {\n    a.sw = b;\n  };\n\n  IndicatorProxy.prototype.setXAxis = function (a, b) {\n    a.qc = b;\n  };\n\n  IndicatorProxy.prototype.setYAxis = function (a, b) {\n    a.qy = b;\n  };\n\n  IndicatorProxy.prototype.handleCustomIndicatorEvent = function (a, b) {\n    if (getInstanceType(a).typeName == \"CustomIndicator\") {\n      var s_ = a;\n      var p_ = b;\n      s_['indicator'] = p_;\n    }\n  };\n\n  IndicatorProxy.prototype.setMultiplier = function (a, b) {\n    if (getInstanceType(a).typeName == \"BollingerBandWidthIndicator\") {\n      var s_ = a;\n      var p_ = b;\n      s_['multiplier'] = p_;\n    }\n  };\n\n  IndicatorProxy.$t = markType(IndicatorProxy, 'IndicatorProxy', Base.$, [IIndicatorProxy_$type]);\n  return IndicatorProxy;\n}(Base);\n\nexport { IndicatorProxy };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/IndicatorProxy.js"],"names":["__extends","Base","typeCast","markType","getInstanceType","IIndicatorProxy_$type","IShortPeriodLongPeriod_$type","StrategyBasedIndicator","IndicatorProxy","_super","apply","arguments","prototype","matchesType","a","dq","setCloseMemberPath","b","sg","setDisplayType","tp","setHighMemberPath","sj","setLongPeriod","longPeriod","setLowMemberPath","so","setNegativeBrush","ti","setOpenMemberPath","ss","setPeriodOverride","$","uw","setShortPeriod","shortPeriod","setSignalPeriod","typeName","s_","p_","setSmoothingPeriod","setVolumeMemberPath","sw","setXAxis","qc","setYAxis","qy","handleCustomIndicatorEvent","setMultiplier","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, typeCast, markType, getInstanceType } from \"igniteui-react-core\";\nimport { IIndicatorProxy_$type } from \"./IIndicatorProxy\";\nimport { IShortPeriodLongPeriod_$type } from \"./IShortPeriodLongPeriod\";\nimport { StrategyBasedIndicator } from \"./StrategyBasedIndicator\";\n/**\n * @hidden\n */\nvar IndicatorProxy = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IndicatorProxy, _super);\n    function IndicatorProxy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    IndicatorProxy.prototype.matchesType = function (a) {\n        if (a.dq) {\n            return true;\n        }\n        return false;\n    };\n    IndicatorProxy.prototype.setCloseMemberPath = function (a, b) {\n        a.sg = b;\n    };\n    IndicatorProxy.prototype.setDisplayType = function (a, b) {\n        a.tp = b;\n    };\n    IndicatorProxy.prototype.setHighMemberPath = function (a, b) {\n        a.sj = b;\n    };\n    IndicatorProxy.prototype.setLongPeriod = function (a, b) {\n        if (typeCast(IShortPeriodLongPeriod_$type, a) !== null) {\n            a.longPeriod = b;\n        }\n    };\n    IndicatorProxy.prototype.setLowMemberPath = function (a, b) {\n        a.so = b;\n    };\n    IndicatorProxy.prototype.setNegativeBrush = function (a, b) {\n        a.ti = b;\n    };\n    IndicatorProxy.prototype.setOpenMemberPath = function (a, b) {\n        a.ss = b;\n    };\n    IndicatorProxy.prototype.setPeriodOverride = function (a, b) {\n        if (typeCast(StrategyBasedIndicator.$, a) !== null) {\n            a.uw(b);\n        }\n    };\n    IndicatorProxy.prototype.setShortPeriod = function (a, b) {\n        if (typeCast(IShortPeriodLongPeriod_$type, a) !== null) {\n            a.shortPeriod = b;\n        }\n    };\n    IndicatorProxy.prototype.setSignalPeriod = function (a, b) {\n        if (getInstanceType(a).typeName == \"MovingAverageConvergenceDivergenceIndicator\") {\n            var s_ = a;\n            var p_ = b;\n            s_['signalPeriod'] = p_;\n        }\n    };\n    IndicatorProxy.prototype.setSmoothingPeriod = function (a, b) {\n        if (getInstanceType(a).typeName == \"FullStochasticOscillatorIndicator\") {\n            var s_ = a;\n            var p_ = b;\n            s_['smoothingPeriod'] = p_;\n        }\n    };\n    IndicatorProxy.prototype.setVolumeMemberPath = function (a, b) {\n        a.sw = b;\n    };\n    IndicatorProxy.prototype.setXAxis = function (a, b) {\n        a.qc = b;\n    };\n    IndicatorProxy.prototype.setYAxis = function (a, b) {\n        a.qy = b;\n    };\n    IndicatorProxy.prototype.handleCustomIndicatorEvent = function (a, b) {\n        if (getInstanceType(a).typeName == \"CustomIndicator\") {\n            var s_ = a;\n            var p_ = b;\n            s_['indicator'] = p_;\n        }\n    };\n    IndicatorProxy.prototype.setMultiplier = function (a, b) {\n        if (getInstanceType(a).typeName == \"BollingerBandWidthIndicator\") {\n            var s_ = a;\n            var p_ = b;\n            s_['multiplier'] = p_;\n        }\n    };\n    IndicatorProxy.$t = markType(IndicatorProxy, 'IndicatorProxy', Base.$, [IIndicatorProxy_$type]);\n    return IndicatorProxy;\n}(Base));\nexport { IndicatorProxy };\n"]},"metadata":{},"sourceType":"module"}