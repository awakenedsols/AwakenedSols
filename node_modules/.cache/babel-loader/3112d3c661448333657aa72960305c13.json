{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/CollectionsTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport solanaIcon from './solanaIcon.png';\nimport styled from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { Link } from \"react-router-dom\";\nimport './Window.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CollectionsTable = _ref => {\n  _s();\n\n  let {\n    children,\n    ...props\n  } = _ref;\n  const [data, setData] = useState();\n  const wallet = props.wallet;\n\n  const getCollections = async () => {\n    var config = {\n      method: 'get',\n      url: 'https://api-mainnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=20'\n    };\n    axios(config).then(function (response) {\n      //console.log(JSON.stringify(response.data));\n      setData(response.data);\n      console.log(data);\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  const Styles = styled.div`\n  div{\n   \n  }\n  table {\n    background-color: #192026;\n    color:white;\n    border-spacing: 0;\n    position:relative;\n    width:100%;\n    overflow-y:scroll;\n    overflow-x:hidden;\n    \n    tr {\n      td {\n        border-bottom: 0;\n      }\n    }\n\n    th{\n      background-color: #192026;\n      top:0;\n      position:sticky;\n    }\n\n    tr:last-child.td:last-child{\n      border-radius: 15px;\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.2rem;\n    }\n  }\n`;\n  useEffect(() => {\n    if (!data) {\n      getCollections();\n\n      if (data) {\n        console.log('data');\n        console.log(data);\n      }\n    }\n\n    const intervalId = setInterval(() => {\n      //assign interval to a variable to clear it.\n      console.log('use effect - get collections');\n      getCollections();\n\n      if (data) {\n        console.log('print data');\n        console.log(data);\n      }\n    }, 6000);\n    return () => clearInterval(intervalId); //This is important\n  }, [data]);\n  useEffect(() => {\n    console.log('use effect - wallet');\n\n    if (wallet) {//console.log(wallet);\n    }\n  }, [useState, wallet]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data ? /*#__PURE__*/_jsxDEV(Styles, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"left\",\n                children: \"Name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"left\",\n                children: \"Launch Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"left\",\n                children: \"FP\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"left\",\n                children: \"Volume\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 11\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                align: \"left\",\n                children: \"Symbol\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 7\n          }, this), data.map(function (collection, i) {\n            var _collection$name, _collection$price, _collection$volume, _collection$symbol;\n\n            /*#__PURE__*/\n            _jsxDEV(\"tbody\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontFamily: \"Press Start 2P\"\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Link, {\n                    to: `/Collection/${collection.symbol}`,\n                    className: \"collectionLink\",\n                    children: (_collection$name = collection.name) === null || _collection$name === void 0 ? void 0 : _collection$name.toString()\n                  }, collection.symbol, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 141,\n                    columnNumber: 13\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"left\",\n                  children: new Date(collection.launchDatetime).toDateString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"left\",\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    className: \"symbolIcon\",\n                    src: solanaIcon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 144,\n                    columnNumber: 30\n                  }, this), (_collection$price = collection.price) === null || _collection$price === void 0 ? void 0 : _collection$price.toString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  align: \"left\",\n                  children: (_collection$volume = collection.volume) === null || _collection$volume === void 0 ? void 0 : _collection$volume.toString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    fontFamily: \"Press Start 2P\"\n                  },\n                  align: \"left\",\n                  children: (_collection$symbol = collection.symbol) === null || _collection$symbol === void 0 ? void 0 : _collection$symbol.toString()\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 11\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 11\n            }, this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 5\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CollectionsTable, \"5lknD3jXYujBT9pOqvzz+iT5qBw=\");\n\n_c = CollectionsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionsTable\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/CollectionsTable.tsx"],"names":["React","solanaIcon","styled","useEffect","useState","axios","Link","CollectionsTable","children","props","data","setData","wallet","getCollections","config","method","url","then","response","console","log","catch","error","Styles","div","intervalId","setInterval","clearInterval","map","collection","i","fontFamily","symbol","name","toString","Date","launchDatetime","toDateString","price","volume"],"mappings":"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","sourcesContent":["import React, { ReactNode } from \"react\";\nimport {Row, Col, Container} from \"react-bootstrap\";\nimport enlargeIcon from './enlargeIcon.png'\nimport solanaIcon from './solanaIcon.png'\nimport styled from 'styled-components'\nimport { Key, ReactChild, ReactFragment, ReactPortal, useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useQuery, gql } from \"@apollo/client\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Routes,\n  Link,\n} from \"react-router-dom\";\nimport './Window.css';\nimport { forEach } from \"lodash\";\n\ninterface Props {\n    children?: ReactNode\n    // any props that come into the component\n    wallet: any\n}\n\nexport const CollectionsTable = ({ children, ...props }: Props) => {\n\n  const [data, setData] = useState<any>();\n  const wallet = props.wallet;\n\n  const getCollections = async () => {\n\n    var config = {\n      method: 'get',\n      url: 'https://api-mainnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=20'\n    };\n\n    axios(config)\n    .then(function (response) {\n      //console.log(JSON.stringify(response.data));\n      setData(response.data);\n      console.log(data);\n      return response.data;\n      }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n\n  const Styles = styled.div`\n  div{\n   \n  }\n  table {\n    background-color: #192026;\n    color:white;\n    border-spacing: 0;\n    position:relative;\n    width:100%;\n    overflow-y:scroll;\n    overflow-x:hidden;\n    \n    tr {\n      td {\n        border-bottom: 0;\n      }\n    }\n\n    th{\n      background-color: #192026;\n      top:0;\n      position:sticky;\n    }\n\n    tr:last-child.td:last-child{\n      border-radius: 15px;\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.2rem;\n    }\n  }\n`\n\nuseEffect(() => {\n  if(!data){\n    getCollections();\n  \n    if(data){\n      console.log('data');\n      console.log(data);\n    }\n  }\n\n  const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\n    console.log('use effect - get collections');\n    getCollections();\n  \n    if(data){\n      console.log('print data');\n      console.log(data);\n    }\n  \n  }, 6000)\n\n  return () => clearInterval(intervalId); //This is important\n \n}, [data])\n\n\nuseEffect(() => {\n  console.log('use effect - wallet');\n  if(wallet){\n    //console.log(wallet);\n  }\n}, [useState, wallet]);\n\n\nreturn (\n  <>\n  {data ? (\n    <Styles>\n      <div>\n    <table>\n      <thead>\n        <tr>\n          <th align=\"left\">Name</th>\n          <th align=\"left\">Launch Date</th>\n          <th align=\"left\">FP</th>\n          <th align=\"left\">Volume</th>\n          <th align=\"left\">Symbol</th>\n        </tr>\n      </thead>\n      \n        { \n        data.map( function(collection:any, i:number){\n          <tbody>\n          <tr>\n            <td style={{fontFamily: \"Press Start 2P\"}}>\n            <Link to={`/Collection/${collection.symbol}`} key={collection.symbol} className=\"collectionLink\">{collection.name?.toString()}</Link>\n            </td>\n            <td align=\"left\">{new Date(collection.launchDatetime).toDateString()}</td>\n            <td align=\"left\"><img className=\"symbolIcon\" src={solanaIcon}></img>{collection.price?.toString()}</td>\n            <td align=\"left\">{collection.volume?.toString()}</td>\n            <td style={{fontFamily: \"Press Start 2P\"}} align=\"left\">{collection.symbol?.toString()}</td>\n          </tr>\n          </tbody>\n        })\n        }\n     \n    </table>\n    </div>\n  </Styles> \n    ) : (\n      <h1>Loading...</h1>\n  )}\n  </>\n);\n};"]},"metadata":{},"sourceType":"module"}