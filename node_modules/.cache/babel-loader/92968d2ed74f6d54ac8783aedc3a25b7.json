{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { Base, fromEnum, markType } from \"./type\";\nimport { PathFigureCollection } from \"./PathFigureCollection\";\nimport { PathFigure } from \"./PathFigure\";\nimport { PathSegmentCollection } from \"./PathSegmentCollection\";\nimport { ArcSegment } from \"./ArcSegment\";\nimport { LineSegment } from \"./LineSegment\";\nimport { PolyLineSegment } from \"./PolyLineSegment\";\n/**\n * @hidden\n */\n\nvar PathFigureUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(PathFigureUtil, _super);\n\n  function PathFigureUtil() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  PathFigureUtil.b = function (a) {\n    var e_1, _a;\n\n    var b = new PathFigureCollection();\n\n    try {\n      for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var c = _c.value;\n        b.add(PathFigureUtil.a(c));\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    return b;\n  };\n\n  PathFigureUtil.a = function (a) {\n    var e_2, _a, e_3, _b;\n\n    if (a == null) {\n      return null;\n    }\n\n    var b = new PathSegmentCollection();\n\n    try {\n      for (var _c = __values(fromEnum(a._segments)), _d = _c.next(); !_d.done; _d = _c.next()) {\n        var c = _d.value;\n\n        switch (c.a) {\n          case 4:\n            var d = c;\n            var e = new ArcSegment();\n            e.b = d.b;\n            e.e = d.e;\n            e.c = d.c;\n            e.f = d.f;\n            e.d = d.d;\n            b.add(e);\n            break;\n\n          case 0:\n            var f = c;\n            var g = new LineSegment(1);\n            g.c = f.c;\n            b.add(g);\n            break;\n\n          case 3:\n            var h = c;\n            var i = new PolyLineSegment();\n\n            try {\n              for (var _e = (e_3 = void 0, __values(fromEnum(h._points))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                var j = _f.value;\n\n                i._points.add(j);\n              }\n            } catch (e_3_1) {\n              e_3 = {\n                error: e_3_1\n              };\n            } finally {\n              try {\n                if (_f && !_f.done && (_b = _e.return)) _b.call(_e);\n              } finally {\n                if (e_3) throw e_3.error;\n              }\n            }\n\n            b.add(i);\n            break;\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_d && !_d.done && (_a = _c.return)) _a.call(_c);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return function () {\n      var $ret = new PathFigure();\n      $ret.isClosed = a._isClosed;\n      $ret.isFilled = a._isFilled;\n      $ret.startPoint = a._startPoint;\n      $ret.segments = b;\n      return $ret;\n    }();\n  };\n\n  PathFigureUtil.$t = markType(PathFigureUtil, 'PathFigureUtil');\n  return PathFigureUtil;\n}(Base);\n\nexport { PathFigureUtil };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/PathFigureUtil.js"],"names":["__extends","__values","Base","fromEnum","markType","PathFigureCollection","PathFigure","PathSegmentCollection","ArcSegment","LineSegment","PolyLineSegment","PathFigureUtil","_super","apply","arguments","b","a","e_1","_a","_b","_c","next","done","c","value","add","e_1_1","error","return","call","e_2","e_3","_segments","_d","d","e","f","g","h","i","_e","_points","_f","j","e_3_1","e_2_1","$ret","isClosed","_isClosed","isFilled","_isFilled","startPoint","_startPoint","segments","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { Base, fromEnum, markType } from \"./type\";\nimport { PathFigureCollection } from \"./PathFigureCollection\";\nimport { PathFigure } from \"./PathFigure\";\nimport { PathSegmentCollection } from \"./PathSegmentCollection\";\nimport { ArcSegment } from \"./ArcSegment\";\nimport { LineSegment } from \"./LineSegment\";\nimport { PolyLineSegment } from \"./PolyLineSegment\";\n/**\n * @hidden\n */\nvar PathFigureUtil = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(PathFigureUtil, _super);\n    function PathFigureUtil() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    PathFigureUtil.b = function (a) {\n        var e_1, _a;\n        var b = new PathFigureCollection();\n        try {\n            for (var _b = __values(fromEnum(a)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var c = _c.value;\n                b.add(PathFigureUtil.a(c));\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        return b;\n    };\n    PathFigureUtil.a = function (a) {\n        var e_2, _a, e_3, _b;\n        if (a == null) {\n            return null;\n        }\n        var b = new PathSegmentCollection();\n        try {\n            for (var _c = __values(fromEnum(a._segments)), _d = _c.next(); !_d.done; _d = _c.next()) {\n                var c = _d.value;\n                switch (c.a) {\n                    case 4:\n                        var d = c;\n                        var e = new ArcSegment();\n                        e.b = d.b;\n                        e.e = d.e;\n                        e.c = d.c;\n                        e.f = d.f;\n                        e.d = d.d;\n                        b.add(e);\n                        break;\n                    case 0:\n                        var f = c;\n                        var g = new LineSegment(1);\n                        g.c = f.c;\n                        b.add(g);\n                        break;\n                    case 3:\n                        var h = c;\n                        var i = new PolyLineSegment();\n                        try {\n                            for (var _e = (e_3 = void 0, __values(fromEnum(h._points))), _f = _e.next(); !_f.done; _f = _e.next()) {\n                                var j = _f.value;\n                                i._points.add(j);\n                            }\n                        }\n                        catch (e_3_1) {\n                            e_3 = { error: e_3_1 };\n                        }\n                        finally {\n                            try {\n                                if (_f && !_f.done && (_b = _e.return))\n                                    _b.call(_e);\n                            }\n                            finally {\n                                if (e_3)\n                                    throw e_3.error;\n                            }\n                        }\n                        b.add(i);\n                        break;\n                }\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_d && !_d.done && (_a = _c.return))\n                    _a.call(_c);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return ((function () {\n            var $ret = new PathFigure();\n            $ret.isClosed = a._isClosed;\n            $ret.isFilled = a._isFilled;\n            $ret.startPoint = a._startPoint;\n            $ret.segments = b;\n            return $ret;\n        })());\n    };\n    PathFigureUtil.$t = markType(PathFigureUtil, 'PathFigureUtil');\n    return PathFigureUtil;\n}(Base));\nexport { PathFigureUtil };\n"]},"metadata":{},"sourceType":"module"}