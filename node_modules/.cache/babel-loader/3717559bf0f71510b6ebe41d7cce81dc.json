{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AssigningRadialStyleEventArgsDescriptionMetadata } from \"./AssigningRadialStyleEventArgsDescriptionMetadata\";\nimport { AssigningRadialMarkerStyleEventArgsDescriptionMetadata } from \"./AssigningRadialMarkerStyleEventArgsDescriptionMetadata\";\nimport { MarkerSeriesDescriptionMetadata } from \"./MarkerSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar RadialBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(RadialBaseDescriptionMetadata, _super);\n\n  function RadialBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  RadialBaseDescriptionMetadata.b = function (a) {\n    if (RadialBaseDescriptionMetadata.a == null) {\n      RadialBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      RadialBaseDescriptionMetadata.c(RadialBaseDescriptionMetadata.a);\n    }\n\n    if (a.g(RadialBaseDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(RadialBaseDescriptionMetadata.a);\n    AssigningRadialStyleEventArgsDescriptionMetadata.d(a);\n    AssigningRadialMarkerStyleEventArgsDescriptionMetadata.d(a);\n  };\n\n  RadialBaseDescriptionMetadata.c = function (a) {\n    MarkerSeriesDescriptionMetadata.c(a);\n    a.item(\"IsCustomRadialStyleAllowed\", \"Boolean\");\n    a.item(\"IsCustomRadialMarkerStyleAllowed\", \"Boolean\");\n    a.item(\"AngleAxisRef\", \"(w:AngleAxis,wf:AngleAxis)DataRef::object\");\n    a.item(\"AngleAxisRef@nameBinding\", \"true\");\n    a.item(\"ValueAxisRef\", \"(w:ValueAxis,wf:ValueAxis)DataRef::object\");\n    a.item(\"ValueAxisRef@nameBinding\", \"true\");\n    a.item(\"ClipSeriesToBounds\", \"Boolean\");\n    a.item(\"AssigningRadialStyleRef\", \"EventRef::assigningRadialStyle\");\n    a.item(\"AssigningRadialMarkerStyleRef\", \"EventRef::assigningRadialMarkerStyle\");\n  };\n\n  RadialBaseDescriptionMetadata.d = function (a) {\n    RadialBaseDescriptionMetadata.b(a);\n    a.t(\"RadialBase\", RadialBaseDescriptionMetadata.a);\n  };\n\n  RadialBaseDescriptionMetadata.$t = markType(RadialBaseDescriptionMetadata, 'RadialBaseDescriptionMetadata');\n  RadialBaseDescriptionMetadata.a = null;\n  return RadialBaseDescriptionMetadata;\n}(Base);\n\nexport { RadialBaseDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/RadialBaseDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","AssigningRadialStyleEventArgsDescriptionMetadata","AssigningRadialMarkerStyleEventArgsDescriptionMetadata","MarkerSeriesDescriptionMetadata","RadialBaseDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,gDAAT,QAAiE,oDAAjE;AACA,SAASC,sDAAT,QAAuE,0DAAvE;AACA,SAASC,+BAAT,QAAgD,mCAAhD;AACA;AACA;AACA;;AACA,IAAIC,6BAA6B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC/ET,EAAAA,SAAS,CAACQ,6BAAD,EAAgCC,MAAhC,CAAT;;AACA,WAASD,6BAAT,GAAyC;AACrC,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,6BAA6B,CAACI,CAA9B,GAAkC,UAAUC,CAAV,EAAa;AAC3C,QAAIL,6BAA6B,CAACK,CAA9B,IAAmC,IAAvC,EAA6C;AACzCL,MAAAA,6BAA6B,CAACK,CAA9B,GAAkC,IAAIT,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAlC;AACAM,MAAAA,6BAA6B,CAACM,CAA9B,CAAgCN,6BAA6B,CAACK,CAA9D;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,6BAA6B,CAACK,CAAlC,CAAJ,EAA0C;AACtC;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,6BAA6B,CAACK,CAAlC;AACAR,IAAAA,gDAAgD,CAACY,CAAjD,CAAmDJ,CAAnD;AACAP,IAAAA,sDAAsD,CAACW,CAAvD,CAAyDJ,CAAzD;AACH,GAXD;;AAYAL,EAAAA,6BAA6B,CAACM,CAA9B,GAAkC,UAAUD,CAAV,EAAa;AAC3CN,IAAAA,+BAA+B,CAACO,CAAhC,CAAkCD,CAAlC;AACAA,IAAAA,CAAC,CAACK,IAAF,CAAO,4BAAP,EAAqC,SAArC;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,kCAAP,EAA2C,SAA3C;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,cAAP,EAAuB,2CAAvB;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,0BAAP,EAAmC,MAAnC;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,cAAP,EAAuB,2CAAvB;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,0BAAP,EAAmC,MAAnC;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,oBAAP,EAA6B,SAA7B;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,yBAAP,EAAkC,gCAAlC;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,+BAAP,EAAwC,sCAAxC;AACH,GAXD;;AAYAV,EAAAA,6BAA6B,CAACS,CAA9B,GAAkC,UAAUJ,CAAV,EAAa;AAC3CL,IAAAA,6BAA6B,CAACI,CAA9B,CAAgCC,CAAhC;AACAA,IAAAA,CAAC,CAACM,CAAF,CAAI,YAAJ,EAAkBX,6BAA6B,CAACK,CAAhD;AACH,GAHD;;AAIAL,EAAAA,6BAA6B,CAACY,EAA9B,GAAmCjB,QAAQ,CAACK,6BAAD,EAAgC,+BAAhC,CAA3C;AACAA,EAAAA,6BAA6B,CAACK,CAA9B,GAAkC,IAAlC;AACA,SAAOL,6BAAP;AACH,CApCgE,CAoC/DP,IApC+D,CAAjE;;AAqCA,SAASO,6BAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AssigningRadialStyleEventArgsDescriptionMetadata } from \"./AssigningRadialStyleEventArgsDescriptionMetadata\";\nimport { AssigningRadialMarkerStyleEventArgsDescriptionMetadata } from \"./AssigningRadialMarkerStyleEventArgsDescriptionMetadata\";\nimport { MarkerSeriesDescriptionMetadata } from \"./MarkerSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar RadialBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(RadialBaseDescriptionMetadata, _super);\n    function RadialBaseDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    RadialBaseDescriptionMetadata.b = function (a) {\n        if (RadialBaseDescriptionMetadata.a == null) {\n            RadialBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            RadialBaseDescriptionMetadata.c(RadialBaseDescriptionMetadata.a);\n        }\n        if (a.g(RadialBaseDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(RadialBaseDescriptionMetadata.a);\n        AssigningRadialStyleEventArgsDescriptionMetadata.d(a);\n        AssigningRadialMarkerStyleEventArgsDescriptionMetadata.d(a);\n    };\n    RadialBaseDescriptionMetadata.c = function (a) {\n        MarkerSeriesDescriptionMetadata.c(a);\n        a.item(\"IsCustomRadialStyleAllowed\", \"Boolean\");\n        a.item(\"IsCustomRadialMarkerStyleAllowed\", \"Boolean\");\n        a.item(\"AngleAxisRef\", \"(w:AngleAxis,wf:AngleAxis)DataRef::object\");\n        a.item(\"AngleAxisRef@nameBinding\", \"true\");\n        a.item(\"ValueAxisRef\", \"(w:ValueAxis,wf:ValueAxis)DataRef::object\");\n        a.item(\"ValueAxisRef@nameBinding\", \"true\");\n        a.item(\"ClipSeriesToBounds\", \"Boolean\");\n        a.item(\"AssigningRadialStyleRef\", \"EventRef::assigningRadialStyle\");\n        a.item(\"AssigningRadialMarkerStyleRef\", \"EventRef::assigningRadialMarkerStyle\");\n    };\n    RadialBaseDescriptionMetadata.d = function (a) {\n        RadialBaseDescriptionMetadata.b(a);\n        a.t(\"RadialBase\", RadialBaseDescriptionMetadata.a);\n    };\n    RadialBaseDescriptionMetadata.$t = markType(RadialBaseDescriptionMetadata, 'RadialBaseDescriptionMetadata');\n    RadialBaseDescriptionMetadata.a = null;\n    return RadialBaseDescriptionMetadata;\n}(Base));\nexport { RadialBaseDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}