{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { List$1 } from \"./List$1\";\nimport { LabelAppearanceData } from \"./LabelAppearanceData\";\nimport { IVisualData_$type } from \"./IVisualData\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar LabelAppearanceDataList =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(LabelAppearanceDataList, _super);\n\n  function LabelAppearanceDataList() {\n    return _super.call(this, LabelAppearanceData.$, 0) || this;\n  }\n\n  LabelAppearanceDataList.prototype.serialize = function () {\n    var a = new StringBuilder(0);\n    a.l(\"{ items: [\");\n\n    for (var b = 0; b < this.count; b++) {\n      if (b != 0) {\n        a.l(\", \");\n      }\n\n      a.l(this._inner[b].serialize());\n    }\n\n    return a.toString();\n  };\n\n  LabelAppearanceDataList.$t = markType(LabelAppearanceDataList, 'LabelAppearanceDataList', List$1.$.specialize(LabelAppearanceData.$), [IVisualData_$type]);\n  return LabelAppearanceDataList;\n}(List$1);\n\nexport { LabelAppearanceDataList };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/LabelAppearanceDataList.js"],"names":["__extends","List$1","LabelAppearanceData","IVisualData_$type","StringBuilder","markType","LabelAppearanceDataList","_super","call","$","prototype","serialize","a","l","b","count","_inner","toString","$t","specialize"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,SAASC,iBAAT,QAAkC,eAAlC;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACzEP,EAAAA,SAAS,CAACM,uBAAD,EAA0BC,MAA1B,CAAT;;AACA,WAASD,uBAAT,GAAmC;AAC/B,WAAOC,MAAM,CAACC,IAAP,CAAY,IAAZ,EAAkBN,mBAAmB,CAACO,CAAtC,EAAyC,CAAzC,KAA+C,IAAtD;AACH;;AACDH,EAAAA,uBAAuB,CAACI,SAAxB,CAAkCC,SAAlC,GAA8C,YAAY;AACtD,QAAIC,CAAC,GAAG,IAAIR,aAAJ,CAAkB,CAAlB,CAAR;AACAQ,IAAAA,CAAC,CAACC,CAAF,CAAI,YAAJ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKC,KAAzB,EAAgCD,CAAC,EAAjC,EAAqC;AACjC,UAAIA,CAAC,IAAI,CAAT,EAAY;AACRF,QAAAA,CAAC,CAACC,CAAF,CAAI,IAAJ;AACH;;AACDD,MAAAA,CAAC,CAACC,CAAF,CAAI,KAAKG,MAAL,CAAYF,CAAZ,EAAeH,SAAf,EAAJ;AACH;;AACD,WAAOC,CAAC,CAACK,QAAF,EAAP;AACH,GAVD;;AAWAX,EAAAA,uBAAuB,CAACY,EAAxB,GAA6Bb,QAAQ,CAACC,uBAAD,EAA0B,yBAA1B,EAAqDL,MAAM,CAACQ,CAAP,CAASU,UAAT,CAAoBjB,mBAAmB,CAACO,CAAxC,CAArD,EAAiG,CAACN,iBAAD,CAAjG,CAArC;AACA,SAAOG,uBAAP;AACH,CAlB0D,CAkBzDL,MAlByD,CAA3D;;AAmBA,SAASK,uBAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { List$1 } from \"./List$1\";\nimport { LabelAppearanceData } from \"./LabelAppearanceData\";\nimport { IVisualData_$type } from \"./IVisualData\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar LabelAppearanceDataList = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(LabelAppearanceDataList, _super);\n    function LabelAppearanceDataList() {\n        return _super.call(this, LabelAppearanceData.$, 0) || this;\n    }\n    LabelAppearanceDataList.prototype.serialize = function () {\n        var a = new StringBuilder(0);\n        a.l(\"{ items: [\");\n        for (var b = 0; b < this.count; b++) {\n            if (b != 0) {\n                a.l(\", \");\n            }\n            a.l(this._inner[b].serialize());\n        }\n        return a.toString();\n    };\n    LabelAppearanceDataList.$t = markType(LabelAppearanceDataList, 'LabelAppearanceDataList', List$1.$.specialize(LabelAppearanceData.$), [IVisualData_$type]);\n    return LabelAppearanceDataList;\n}(List$1));\nexport { LabelAppearanceDataList };\n"]},"metadata":{},"sourceType":"module"}