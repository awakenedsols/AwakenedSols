{"ast":null,"code":"import { AxisRangeChangedEventArgs as AxisRangeChangedEventArgs_internal } from \"./AxisRangeChangedEventArgs\";\n/**\n * Provides data for Axis RangeChanged events.\n*\n* The `IgrAxisRangeChangedEventArgs` event fire when the axis range changes.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n* \t\t<IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n* \t\t<IgrNumericYAxis  name=\"yAxis\" rangeChanaged={this.yAxisRangeChanged} />\n*     <IgrFinancialPriceSeries\n* \t\tname=\"series2\"\n* \t\txAxisName=\"xAxis\"\n* \t\tyAxisName=\"yAxis\"\n* \t\tdisplayType=\"Candlestick\"\n* \t\tlowMemberPath=\"Low\"\n* \t\thighMemberPath=\"High\"\n* \t\topenMemberPath=\"Open\"\n* \t\tcloseMemberPath=\"Close\"\n* \t\tvolumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n*   axis.rangeChanged.bind(this.yAxisRangeChanged);\n*   public yAxisRangeChanged(sender : any, e: AxisRangeChangedEventArgs) =>  {\n*\n*    }\n* ```\n*/\n\nvar IgrAxisRangeChangedEventArgs =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrAxisRangeChangedEventArgs() {\n    this._implementation = this.createImplementation();\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  }\n\n  IgrAxisRangeChangedEventArgs.prototype.createImplementation = function () {\n    return new AxisRangeChangedEventArgs_internal(0);\n  };\n\n  Object.defineProperty(IgrAxisRangeChangedEventArgs.prototype, \"i\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrAxisRangeChangedEventArgs.prototype.onImplementationCreated = function () {};\n\n  IgrAxisRangeChangedEventArgs.prototype._provideImplementation = function (i) {\n    this._implementation = i;\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  };\n\n  Object.defineProperty(IgrAxisRangeChangedEventArgs.prototype, \"oldMinimumValue\", {\n    /**\n     * Gets the minimum value before the range changed. The reported minimum is the effective,\n     * not the set value.\n    *\n    * The `oldMinimumValue` property is used to gets the minimum value before the range changed.\n    */\n    get: function () {\n      return this.i.oldMinimumValue;\n    },\n    set: function (v) {\n      this.i.oldMinimumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisRangeChangedEventArgs.prototype, \"minimumValue\", {\n    /**\n     * Gets the minimum value after the range changed. The reported minimum is the effective,\n     * not the set value.\n    *\n    * The `minimumValue` property is used to getsthe minimum value after the range changed.\n    *\n    * ```ts\n    *   public yAxisRangeChanged(sender : any, e: AxisRangeChangedEventArgs) :void {\n    * \tlet maxVal= e.maximumValue\n    * \tlet minVal= e.minimumValue\n    *\n    *     }\n    * ```\n    */\n    get: function () {\n      return this.i.minimumValue;\n    },\n    set: function (v) {\n      this.i.minimumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisRangeChangedEventArgs.prototype, \"oldMaximumValue\", {\n    /**\n     * Gets the maximum value before the range changed. The reported maximum is the effective,\n     * not the set value.\n    *\n    * The `oldMaximumValue` property is used to gets the maximum value before the range changed.\n    */\n    get: function () {\n      return this.i.oldMaximumValue;\n    },\n    set: function (v) {\n      this.i.oldMaximumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrAxisRangeChangedEventArgs.prototype, \"maximumValue\", {\n    /**\n     * Gets the maximum value after the range changed. The reported maximum is the effective,\n     * not the set value.\n    *\n    * The `maximumValue` property is used to gets the maximum value after the range changed.\n    *\n    * ```ts\n    *   public yAxisRangeChanged(sender : any, e: AxisRangeChangedEventArgs) :void {\n    * \tlet maxVal= e.maximumValue\n    * \tlet minVal= e.minimumValue\n    *\n    *     }\n    * ```\n    */\n    get: function () {\n      return this.i.maximumValue;\n    },\n    set: function (v) {\n      this.i.maximumValue = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrAxisRangeChangedEventArgs;\n}();\n\nexport { IgrAxisRangeChangedEventArgs };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-axis-range-changed-event-args.js"],"names":["AxisRangeChangedEventArgs","AxisRangeChangedEventArgs_internal","IgrAxisRangeChangedEventArgs","_implementation","createImplementation","externalObject","onImplementationCreated","prototype","Object","defineProperty","get","enumerable","configurable","_provideImplementation","i","oldMinimumValue","set","v","minimumValue","oldMaximumValue","maximumValue"],"mappings":"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","sourcesContent":["import { AxisRangeChangedEventArgs as AxisRangeChangedEventArgs_internal } from \"./AxisRangeChangedEventArgs\";\n/**\n * Provides data for Axis RangeChanged events.\n*\n* The `IgrAxisRangeChangedEventArgs` event fire when the axis range changes.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n* \t\t<IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n* \t\t<IgrNumericYAxis  name=\"yAxis\" rangeChanaged={this.yAxisRangeChanged} />\n*     <IgrFinancialPriceSeries\n* \t\tname=\"series2\"\n* \t\txAxisName=\"xAxis\"\n* \t\tyAxisName=\"yAxis\"\n* \t\tdisplayType=\"Candlestick\"\n* \t\tlowMemberPath=\"Low\"\n* \t\thighMemberPath=\"High\"\n* \t\topenMemberPath=\"Open\"\n* \t\tcloseMemberPath=\"Close\"\n* \t\tvolumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n*   axis.rangeChanged.bind(this.yAxisRangeChanged);\n*   public yAxisRangeChanged(sender : any, e: AxisRangeChangedEventArgs) =>  {\n*\n*    }\n* ```\n*/\nvar IgrAxisRangeChangedEventArgs = /** @class */ /*@__PURE__*/ (function () {\n    function IgrAxisRangeChangedEventArgs() {\n        this._implementation = this.createImplementation();\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    }\n    IgrAxisRangeChangedEventArgs.prototype.createImplementation = function () {\n        return new AxisRangeChangedEventArgs_internal(0);\n    };\n    Object.defineProperty(IgrAxisRangeChangedEventArgs.prototype, \"i\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrAxisRangeChangedEventArgs.prototype.onImplementationCreated = function () {\n    };\n    IgrAxisRangeChangedEventArgs.prototype._provideImplementation = function (i) {\n        this._implementation = i;\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    };\n    Object.defineProperty(IgrAxisRangeChangedEventArgs.prototype, \"oldMinimumValue\", {\n        /**\n         * Gets the minimum value before the range changed. The reported minimum is the effective,\n         * not the set value.\n        *\n        * The `oldMinimumValue` property is used to gets the minimum value before the range changed.\n        */\n        get: function () {\n            return this.i.oldMinimumValue;\n        },\n        set: function (v) {\n            this.i.oldMinimumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisRangeChangedEventArgs.prototype, \"minimumValue\", {\n        /**\n         * Gets the minimum value after the range changed. The reported minimum is the effective,\n         * not the set value.\n        *\n        * The `minimumValue` property is used to getsthe minimum value after the range changed.\n        *\n        * ```ts\n        *   public yAxisRangeChanged(sender : any, e: AxisRangeChangedEventArgs) :void {\n        * \tlet maxVal= e.maximumValue\n        * \tlet minVal= e.minimumValue\n        *\n        *     }\n        * ```\n        */\n        get: function () {\n            return this.i.minimumValue;\n        },\n        set: function (v) {\n            this.i.minimumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisRangeChangedEventArgs.prototype, \"oldMaximumValue\", {\n        /**\n         * Gets the maximum value before the range changed. The reported maximum is the effective,\n         * not the set value.\n        *\n        * The `oldMaximumValue` property is used to gets the maximum value before the range changed.\n        */\n        get: function () {\n            return this.i.oldMaximumValue;\n        },\n        set: function (v) {\n            this.i.oldMaximumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrAxisRangeChangedEventArgs.prototype, \"maximumValue\", {\n        /**\n         * Gets the maximum value after the range changed. The reported maximum is the effective,\n         * not the set value.\n        *\n        * The `maximumValue` property is used to gets the maximum value after the range changed.\n        *\n        * ```ts\n        *   public yAxisRangeChanged(sender : any, e: AxisRangeChangedEventArgs) :void {\n        * \tlet maxVal= e.maximumValue\n        * \tlet minVal= e.minimumValue\n        *\n        *     }\n        * ```\n        */\n        get: function () {\n            return this.i.maximumValue;\n        },\n        set: function (v) {\n            this.i.maximumValue = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrAxisRangeChangedEventArgs;\n}());\nexport { IgrAxisRangeChangedEventArgs };\n"]},"metadata":{},"sourceType":"module"}