{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\n/**\n * @hidden\n */\n\nvar ColumnFilterConditionDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ColumnFilterConditionDescriptionMetadata, _super);\n\n  function ColumnFilterConditionDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ColumnFilterConditionDescriptionMetadata.b = function (a) {\n    if (ColumnFilterConditionDescriptionMetadata.a == null) {\n      ColumnFilterConditionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ColumnFilterConditionDescriptionMetadata.c(ColumnFilterConditionDescriptionMetadata.a);\n    }\n\n    if (a.g(ColumnFilterConditionDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ColumnFilterConditionDescriptionMetadata.a);\n  };\n\n  ColumnFilterConditionDescriptionMetadata.c = function (a) {};\n\n  ColumnFilterConditionDescriptionMetadata.d = function (a) {\n    ColumnFilterConditionDescriptionMetadata.b(a);\n    a.t(\"ColumnFilterCondition\", ColumnFilterConditionDescriptionMetadata.a);\n  };\n\n  ColumnFilterConditionDescriptionMetadata.$t = markType(ColumnFilterConditionDescriptionMetadata, 'ColumnFilterConditionDescriptionMetadata');\n  ColumnFilterConditionDescriptionMetadata.a = null;\n  return ColumnFilterConditionDescriptionMetadata;\n}(Base);\n\nexport { ColumnFilterConditionDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/ColumnFilterConditionDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","ColumnFilterConditionDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA;AACA;AACA;;AACA,IAAIC,wCAAwC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC1FN,EAAAA,SAAS,CAACK,wCAAD,EAA2CC,MAA3C,CAAT;;AACA,WAASD,wCAAT,GAAoD;AAChD,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,wCAAwC,CAACI,CAAzC,GAA6C,UAAUC,CAAV,EAAa;AACtD,QAAIL,wCAAwC,CAACK,CAAzC,IAA8C,IAAlD,EAAwD;AACpDL,MAAAA,wCAAwC,CAACK,CAAzC,GAA6C,IAAIN,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAA7C;AACAG,MAAAA,wCAAwC,CAACM,CAAzC,CAA2CN,wCAAwC,CAACK,CAApF;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,wCAAwC,CAACK,CAA7C,CAAJ,EAAqD;AACjD;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,wCAAwC,CAACK,CAA7C;AACH,GATD;;AAUAL,EAAAA,wCAAwC,CAACM,CAAzC,GAA6C,UAAUD,CAAV,EAAa,CACzD,CADD;;AAEAL,EAAAA,wCAAwC,CAACS,CAAzC,GAA6C,UAAUJ,CAAV,EAAa;AACtDL,IAAAA,wCAAwC,CAACI,CAAzC,CAA2CC,CAA3C;AACAA,IAAAA,CAAC,CAACK,CAAF,CAAI,uBAAJ,EAA6BV,wCAAwC,CAACK,CAAtE;AACH,GAHD;;AAIAL,EAAAA,wCAAwC,CAACW,EAAzC,GAA8Cb,QAAQ,CAACE,wCAAD,EAA2C,0CAA3C,CAAtD;AACAA,EAAAA,wCAAwC,CAACK,CAAzC,GAA6C,IAA7C;AACA,SAAOL,wCAAP;AACH,CAxB2E,CAwB1EJ,IAxB0E,CAA5E;;AAyBA,SAASI,wCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\n/**\n * @hidden\n */\nvar ColumnFilterConditionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ColumnFilterConditionDescriptionMetadata, _super);\n    function ColumnFilterConditionDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColumnFilterConditionDescriptionMetadata.b = function (a) {\n        if (ColumnFilterConditionDescriptionMetadata.a == null) {\n            ColumnFilterConditionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ColumnFilterConditionDescriptionMetadata.c(ColumnFilterConditionDescriptionMetadata.a);\n        }\n        if (a.g(ColumnFilterConditionDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ColumnFilterConditionDescriptionMetadata.a);\n    };\n    ColumnFilterConditionDescriptionMetadata.c = function (a) {\n    };\n    ColumnFilterConditionDescriptionMetadata.d = function (a) {\n        ColumnFilterConditionDescriptionMetadata.b(a);\n        a.t(\"ColumnFilterCondition\", ColumnFilterConditionDescriptionMetadata.a);\n    };\n    ColumnFilterConditionDescriptionMetadata.$t = markType(ColumnFilterConditionDescriptionMetadata, 'ColumnFilterConditionDescriptionMetadata');\n    ColumnFilterConditionDescriptionMetadata.a = null;\n    return ColumnFilterConditionDescriptionMetadata;\n}(Base));\nexport { ColumnFilterConditionDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}