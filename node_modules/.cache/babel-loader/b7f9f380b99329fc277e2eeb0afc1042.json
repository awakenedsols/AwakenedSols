{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { NativeUIElementBridge } from \"./NativeUIElementBridge\";\nimport { runOn, enumGetBox, EnumUtil, markType } from \"./type\";\nimport { NativeUIInputChangingEventArgs } from \"./NativeUIInputChangingEventArgs\";\nimport { NativeUIDisplayDensity_$type } from \"./NativeUIDisplayDensity\";\n/**\n * @hidden\n */\n\nvar IgcInputBridge =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgcInputBridge, _super);\n\n  function IgcInputBridge() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.d = null;\n    _this.c = null;\n    _this.e = null;\n    return _this;\n  }\n\n  IgcInputBridge.prototype.addHandler = function (a, b, c, d) {\n    switch (c) {\n      case 0:\n        var e = a;\n        this.d = e.listen(\"igcInput\", runOn(this, this.f));\n        this.c = d;\n        this.e = b;\n        break;\n    }\n  };\n\n  IgcInputBridge.prototype.f = function (a) {\n    if (this.c != null) {\n      var b = new NativeUIInputChangingEventArgs();\n      this.c(this.e, b);\n    }\n  };\n\n  IgcInputBridge.prototype.getValue = function (a, b) {\n    switch (b) {\n      case 2:\n        return a.getProperty(\"value\");\n\n      case 1:\n        var c = a.getProperty(\"size\");\n        var d = 1;\n\n        switch (c) {\n          case \"small\":\n            d = 2;\n            break;\n\n          case \"medium\":\n            d = 3;\n            break;\n\n          case \"large\":\n            d = 1;\n            break;\n\n          default:\n            d = 1;\n            break;\n        }\n\n        return enumGetBox(NativeUIDisplayDensity_$type, d);\n    }\n\n    return null;\n  };\n\n  IgcInputBridge.prototype.removeHandler = function (a, b, c, d) {\n    switch (c) {\n      case 1:\n        if (this.d != null) {\n          this.d();\n        }\n\n        this.c = null;\n        this.e = null;\n        break;\n    }\n  };\n\n  IgcInputBridge.prototype.setValue = function (a, b, c) {\n    switch (b) {\n      case 3:\n        a.setProperty(\"value\", c);\n        break;\n\n      case 1:\n        var d = \"large\";\n\n        switch (EnumUtil.getEnumValue(NativeUIDisplayDensity_$type, c)) {\n          case 0:\n            d = \"large\";\n            break;\n\n          case 1:\n            d = \"large\";\n            break;\n\n          case 2:\n            d = \"small\";\n            break;\n\n          case 3:\n            d = \"medium\";\n            break;\n        }\n\n        a.setProperty(\"size\", d);\n        break;\n    }\n  };\n\n  IgcInputBridge.$t = markType(IgcInputBridge, 'IgcInputBridge', NativeUIElementBridge.$);\n  return IgcInputBridge;\n}(NativeUIElementBridge);\n\nexport { IgcInputBridge };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/IgcInputBridge.js"],"names":["__extends","NativeUIElementBridge","runOn","enumGetBox","EnumUtil","markType","NativeUIInputChangingEventArgs","NativeUIDisplayDensity_$type","IgcInputBridge","_super","_this","apply","arguments","d","c","e","prototype","addHandler","a","b","listen","f","getValue","getProperty","removeHandler","setValue","setProperty","getEnumValue","$t","$"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { NativeUIElementBridge } from \"./NativeUIElementBridge\";\nimport { runOn, enumGetBox, EnumUtil, markType } from \"./type\";\nimport { NativeUIInputChangingEventArgs } from \"./NativeUIInputChangingEventArgs\";\nimport { NativeUIDisplayDensity_$type } from \"./NativeUIDisplayDensity\";\n/**\n * @hidden\n */\nvar IgcInputBridge = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgcInputBridge, _super);\n    function IgcInputBridge() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.d = null;\n        _this.c = null;\n        _this.e = null;\n        return _this;\n    }\n    IgcInputBridge.prototype.addHandler = function (a, b, c, d) {\n        switch (c) {\n            case 0:\n                var e = a;\n                this.d = e.listen(\"igcInput\", runOn(this, this.f));\n                this.c = d;\n                this.e = b;\n                break;\n        }\n    };\n    IgcInputBridge.prototype.f = function (a) {\n        if (this.c != null) {\n            var b = new NativeUIInputChangingEventArgs();\n            this.c(this.e, b);\n        }\n    };\n    IgcInputBridge.prototype.getValue = function (a, b) {\n        switch (b) {\n            case 2: return a.getProperty(\"value\");\n            case 1:\n                var c = a.getProperty(\"size\");\n                var d = 1;\n                switch (c) {\n                    case \"small\":\n                        d = 2;\n                        break;\n                    case \"medium\":\n                        d = 3;\n                        break;\n                    case \"large\":\n                        d = 1;\n                        break;\n                    default:\n                        d = 1;\n                        break;\n                }\n                return enumGetBox(NativeUIDisplayDensity_$type, d);\n        }\n        return null;\n    };\n    IgcInputBridge.prototype.removeHandler = function (a, b, c, d) {\n        switch (c) {\n            case 1:\n                if (this.d != null) {\n                    this.d();\n                }\n                this.c = null;\n                this.e = null;\n                break;\n        }\n    };\n    IgcInputBridge.prototype.setValue = function (a, b, c) {\n        switch (b) {\n            case 3:\n                a.setProperty(\"value\", c);\n                break;\n            case 1:\n                var d = \"large\";\n                switch (EnumUtil.getEnumValue(NativeUIDisplayDensity_$type, c)) {\n                    case 0:\n                        d = \"large\";\n                        break;\n                    case 1:\n                        d = \"large\";\n                        break;\n                    case 2:\n                        d = \"small\";\n                        break;\n                    case 3:\n                        d = \"medium\";\n                        break;\n                }\n                a.setProperty(\"size\", d);\n                break;\n        }\n    };\n    IgcInputBridge.$t = markType(IgcInputBridge, 'IgcInputBridge', NativeUIElementBridge.$);\n    return IgcInputBridge;\n}(NativeUIElementBridge));\nexport { IgcInputBridge };\n"]},"metadata":{},"sourceType":"module"}