{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrRing } from \"./igr-ring\";\nimport { IgrRingSeriesBase } from \"./igr-ring-series-base\";\nimport { RingSeries } from \"./RingSeries\";\nimport { IgrIndexCollection } from \"./igr-index-collection\";\nimport { IndexCollection as IndexCollection_internal } from \"./IndexCollection\";\nimport { Number_$type } from \"igniteui-react-core\";\nimport { SyncableObservableCollection$1 } from \"igniteui-react-core\";\n/**\n * Represents one ring in\n * IgxDoughnutChartComponent series.\n*/\n\nvar IgrRingSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrRingSeries, _super);\n\n  function IgrRingSeries(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._explodedSlices = null;\n    _this._selectedSlices = null;\n    return _this;\n  }\n\n  IgrRingSeries.prototype.createImplementation = function () {\n    return new RingSeries();\n  };\n\n  Object.defineProperty(IgrRingSeries.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeries.prototype, \"explodedSlices\", {\n    /**\n     * Gets or sets the collection of exploded slice indices.\n    */\n    get: function () {\n      if (this._explodedSlices === null) {\n        var coll = new IgrIndexCollection();\n        var innerColl = void 0;\n\n        if (this.ring.i.ringControl.arcs.count == 0) {\n          innerColl = new IndexCollection_internal();\n        } else {\n          innerColl = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n        }\n\n        this._explodedSlices = coll._fromInner(innerColl);\n      }\n\n      return this._explodedSlices;\n    },\n    set: function (v) {\n      if (this._explodedSlices !== null) {\n        this._explodedSlices._setSyncTarget(null);\n\n        this._explodedSlices = null;\n      }\n\n      var coll = new IgrIndexCollection();\n      this._explodedSlices = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(Number_$type);\n      var innerColl;\n\n      if (this.ring.i.ringControl.arcs.count == 0) {\n        innerColl = new IndexCollection_internal();\n      } else {\n        innerColl = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._explodedSlices._setSyncTarget(syncColl);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrRingSeries.prototype, \"selectedSlices\", {\n    /**\n     * Gets or sets the collection of selected slice indices.\n    */\n    get: function () {\n      if (this._selectedSlices === null) {\n        var coll = new IgrIndexCollection();\n        var innerColl = void 0;\n\n        if (this.ring.i.ringControl.arcs.count == 0) {\n          innerColl = new IndexCollection_internal();\n        } else {\n          innerColl = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n        }\n\n        this._selectedSlices = coll._fromInner(innerColl);\n      }\n\n      return this._selectedSlices;\n    },\n    set: function (v) {\n      if (this._selectedSlices !== null) {\n        this._selectedSlices._setSyncTarget(null);\n\n        this._selectedSlices = null;\n      }\n\n      var coll = new IgrIndexCollection();\n      this._selectedSlices = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(Number_$type);\n      var innerColl;\n\n      if (this.ring.i.ringControl.arcs.count == 0) {\n        innerColl = new IndexCollection_internal();\n      } else {\n        innerColl = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._selectedSlices._setSyncTarget(syncColl);\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrRingSeries.prototype.sychronizeCollections = function () {\n    if (this._explodedSlices) {\n      var inner = this._explodedSlices._inner;\n\n      if (inner && inner !== this.ring.i.ringControl.arcs.item(0).explodedSlices) {\n        this._explodedSlices._inner = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n\n        for (var i = 0; i < inner.count; i++) {\n          this._explodedSlices.add(inner.item(i));\n        }\n      }\n    }\n\n    if (this._selectedSlices) {\n      var inner = this._selectedSlices._inner;\n\n      if (inner && inner !== this.ring.i.ringControl.arcs.item(0).selectedSlices) {\n        this._selectedSlices._inner = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n\n        for (var i = 0; i < inner.count; i++) {\n          this._selectedSlices.add(inner.item(i));\n        }\n      }\n    }\n  };\n\n  Object.defineProperty(IgrRingSeries.prototype, \"ring\", {\n    /**\n    * Gets reference to the ring data.\n    */\n    get: function () {\n      if (this.i.eo == null) {\n        return null;\n      }\n\n      if (!this.i.eo.externalObject) {\n        var e = new IgrRing();\n        e._implementation = this.i.eo;\n        this.i.eo.externalObject = e;\n      }\n\n      return this.i.eo.externalObject;\n    },\n    set: function (v) {\n      v == null ? this.i.eo = null : this.i.eo = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrRingSeries.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.ring && this.ring.name && this.ring.name == name) {\n      return this.ring;\n    }\n\n    return null;\n  };\n\n  return IgrRingSeries;\n}(IgrRingSeriesBase);\n\nexport { IgrRingSeries };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-ring-series.js"],"names":["__extends","IgrRing","IgrRingSeriesBase","RingSeries","IgrIndexCollection","IndexCollection","IndexCollection_internal","Number_$type","SyncableObservableCollection$1","IgrRingSeries","_super","props","_this","call","_explodedSlices","_selectedSlices","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","coll","innerColl","ring","i","ringControl","arcs","count","item","explodedSlices","_fromInner","set","v","_setSyncTarget","_fromOuter","syncColl","_inner","clear","selectedSlices","sychronizeCollections","inner","add","eo","externalObject","e","findByName","name","baseResult"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrRing } from \"./igr-ring\";\nimport { IgrRingSeriesBase } from \"./igr-ring-series-base\";\nimport { RingSeries } from \"./RingSeries\";\nimport { IgrIndexCollection } from \"./igr-index-collection\";\nimport { IndexCollection as IndexCollection_internal } from \"./IndexCollection\";\nimport { Number_$type } from \"igniteui-react-core\";\nimport { SyncableObservableCollection$1 } from \"igniteui-react-core\";\n/**\n * Represents one ring in\n * IgxDoughnutChartComponent series.\n*/\nvar IgrRingSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrRingSeries, _super);\n    function IgrRingSeries(props) {\n        var _this = _super.call(this, props) || this;\n        _this._explodedSlices = null;\n        _this._selectedSlices = null;\n        return _this;\n    }\n    IgrRingSeries.prototype.createImplementation = function () {\n        return new RingSeries();\n    };\n    Object.defineProperty(IgrRingSeries.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeries.prototype, \"explodedSlices\", {\n        /**\n         * Gets or sets the collection of exploded slice indices.\n        */\n        get: function () {\n            if (this._explodedSlices === null) {\n                var coll = new IgrIndexCollection();\n                var innerColl = void 0;\n                if (this.ring.i.ringControl.arcs.count == 0) {\n                    innerColl = new IndexCollection_internal();\n                }\n                else {\n                    innerColl = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n                }\n                this._explodedSlices = coll._fromInner(innerColl);\n            }\n            return this._explodedSlices;\n        },\n        set: function (v) {\n            if (this._explodedSlices !== null) {\n                this._explodedSlices._setSyncTarget(null);\n                this._explodedSlices = null;\n            }\n            var coll = new IgrIndexCollection();\n            this._explodedSlices = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(Number_$type);\n            var innerColl;\n            if (this.ring.i.ringControl.arcs.count == 0) {\n                innerColl = new IndexCollection_internal();\n            }\n            else {\n                innerColl = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._explodedSlices._setSyncTarget(syncColl);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrRingSeries.prototype, \"selectedSlices\", {\n        /**\n         * Gets or sets the collection of selected slice indices.\n        */\n        get: function () {\n            if (this._selectedSlices === null) {\n                var coll = new IgrIndexCollection();\n                var innerColl = void 0;\n                if (this.ring.i.ringControl.arcs.count == 0) {\n                    innerColl = new IndexCollection_internal();\n                }\n                else {\n                    innerColl = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n                }\n                this._selectedSlices = coll._fromInner(innerColl);\n            }\n            return this._selectedSlices;\n        },\n        set: function (v) {\n            if (this._selectedSlices !== null) {\n                this._selectedSlices._setSyncTarget(null);\n                this._selectedSlices = null;\n            }\n            var coll = new IgrIndexCollection();\n            this._selectedSlices = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(Number_$type);\n            var innerColl;\n            if (this.ring.i.ringControl.arcs.count == 0) {\n                innerColl = new IndexCollection_internal();\n            }\n            else {\n                innerColl = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._selectedSlices._setSyncTarget(syncColl);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrRingSeries.prototype.sychronizeCollections = function () {\n        if (this._explodedSlices) {\n            var inner = this._explodedSlices._inner;\n            if (inner && inner !== this.ring.i.ringControl.arcs.item(0).explodedSlices) {\n                this._explodedSlices._inner = this.ring.i.ringControl.arcs.item(0).explodedSlices;\n                for (var i = 0; i < inner.count; i++) {\n                    this._explodedSlices.add(inner.item(i));\n                }\n            }\n        }\n        if (this._selectedSlices) {\n            var inner = this._selectedSlices._inner;\n            if (inner && inner !== this.ring.i.ringControl.arcs.item(0).selectedSlices) {\n                this._selectedSlices._inner = this.ring.i.ringControl.arcs.item(0).selectedSlices;\n                for (var i = 0; i < inner.count; i++) {\n                    this._selectedSlices.add(inner.item(i));\n                }\n            }\n        }\n    };\n    Object.defineProperty(IgrRingSeries.prototype, \"ring\", {\n        /**\n     * Gets reference to the ring data.\n    */\n        get: function () {\n            if (this.i.eo == null) {\n                return null;\n            }\n            if (!this.i.eo.externalObject) {\n                var e = new IgrRing();\n                e._implementation = this.i.eo;\n                this.i.eo.externalObject = e;\n            }\n            return this.i.eo.externalObject;\n        },\n        set: function (v) {\n            v == null ? this.i.eo = null : this.i.eo = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrRingSeries.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.ring && this.ring.name && this.ring.name == name) {\n            return this.ring;\n        }\n        return null;\n    };\n    return IgrRingSeries;\n}(IgrRingSeriesBase));\nexport { IgrRingSeries };\n"]},"metadata":{},"sourceType":"module"}