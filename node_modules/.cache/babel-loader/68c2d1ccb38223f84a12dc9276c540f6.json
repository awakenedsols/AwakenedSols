{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, typeCast, Array_$type, markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\nimport { HashSet$1 } from \"./HashSet$1\";\nimport { DescriptionTreeNode } from \"./DescriptionTreeNode\";\nimport { Description } from \"./Description\";\n/**\n * @hidden\n */\n\nvar DescriptionTreeBuilder =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DescriptionTreeBuilder, _super);\n\n  function DescriptionTreeBuilder() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DescriptionTreeBuilder.b = function (item_) {\n    var propertyKey_ = null;\n    var ret_ = new List$1(String_$type, 0);\n    var seen_ = new HashSet$1(String_$type, 0);\n    var exclusions_ = {};\n    var seen = new Set();\n    var comp = item_;\n\n    while (comp = comp.prototype || Object.getPrototypeOf(comp)) {\n      if (comp == Base.prototype) {\n        break;\n      }\n\n      var props = Object.getOwnPropertyNames(comp.constructor.prototype);\n\n      for (var i = 0; i < props.length; i++) {\n        if (!seen.has(props[i])) {\n          seen.add(props[i]);\n          ret_.add(props[i]);\n        }\n      }\n    }\n\n    ;\n    return ret_;\n  };\n\n  DescriptionTreeBuilder.createTree = function (a, description_) {\n    var b = new DescriptionTreeNode();\n\n    if (description_ == null) {\n      return null;\n    }\n\n    var c = DescriptionTreeBuilder.b(description_);\n\n    for (var d = 0; d < c.count; d++) {\n      var key_ = c._inner[d];\n\n      if (key_.toLowerCase() != \"type\" && !description_.a(DescriptionTreeBuilder.c(key_))) {\n        continue;\n      }\n\n      var e = description_[key_];\n\n      if (typeCast(Description.$, e) !== null) {\n        var f = DescriptionTreeBuilder.createTree(a, e);\n        e = f;\n      }\n\n      if (typeCast(Array_$type, e) !== null) {\n        var g = e;\n        var h = new Array(g.length);\n\n        for (var i = 0; i < h.length; i++) {\n          var j = g[i];\n\n          if (typeCast(Description.$, j) !== null) {\n            var k = DescriptionTreeBuilder.createTree(a, j);\n            h[i] = k;\n          } else {\n            h[i] = j;\n          }\n        }\n\n        e = h;\n      }\n\n      if (key_.toLowerCase() == \"type\") {\n        b.i = e;\n      }\n\n      b.j(DescriptionTreeBuilder.c(key_), e);\n    }\n\n    if (b.c(\"type\")) {\n      var l = b.a(\"type\").b;\n      var m = b.f();\n\n      for (var n = 0; n < m.count; n++) {\n        var o = m._inner[n];\n        o.a = a.getMetadata(l, o.c);\n      }\n    }\n\n    return b;\n  };\n\n  DescriptionTreeBuilder.c = function (key_) {\n    if (key_ == null) {\n      return null;\n    }\n\n    return key_.substr(0, 1).toUpperCase() + key_.substr(1);\n  };\n\n  DescriptionTreeBuilder.$t = markType(DescriptionTreeBuilder, 'DescriptionTreeBuilder');\n  return DescriptionTreeBuilder;\n}(Base);\n\nexport { DescriptionTreeBuilder };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/DescriptionTreeBuilder.js"],"names":["__extends","Base","String_$type","typeCast","Array_$type","markType","List$1","HashSet$1","DescriptionTreeNode","Description","DescriptionTreeBuilder","_super","apply","arguments","b","item_","propertyKey_","ret_","seen_","exclusions_","seen","Set","comp","prototype","Object","getPrototypeOf","props","getOwnPropertyNames","constructor","i","length","has","add","createTree","a","description_","c","d","count","key_","_inner","toLowerCase","e","$","f","g","h","Array","j","k","l","m","n","o","getMetadata","substr","toUpperCase","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, typeCast, Array_$type, markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\nimport { HashSet$1 } from \"./HashSet$1\";\nimport { DescriptionTreeNode } from \"./DescriptionTreeNode\";\nimport { Description } from \"./Description\";\n/**\n * @hidden\n */\nvar DescriptionTreeBuilder = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DescriptionTreeBuilder, _super);\n    function DescriptionTreeBuilder() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DescriptionTreeBuilder.b = function (item_) {\n        var propertyKey_ = null;\n        var ret_ = new List$1(String_$type, 0);\n        var seen_ = new HashSet$1(String_$type, 0);\n        var exclusions_ = {};\n        var seen = new Set();\n        var comp = item_;\n        while (comp = (comp.prototype || Object.getPrototypeOf(comp))) {\n            if (comp == Base.prototype) {\n                break;\n            }\n            var props = Object.getOwnPropertyNames(comp.constructor.prototype);\n            for (var i = 0; i < props.length; i++) {\n                if (!seen.has(props[i])) {\n                    seen.add(props[i]);\n                    ret_.add(props[i]);\n                }\n            }\n        }\n        ;\n        return ret_;\n    };\n    DescriptionTreeBuilder.createTree = function (a, description_) {\n        var b = new DescriptionTreeNode();\n        if (description_ == null) {\n            return null;\n        }\n        var c = DescriptionTreeBuilder.b(description_);\n        for (var d = 0; d < c.count; d++) {\n            var key_ = c._inner[d];\n            if (key_.toLowerCase() != \"type\" && !description_.a(DescriptionTreeBuilder.c(key_))) {\n                continue;\n            }\n            var e = description_[key_];\n            if (typeCast(Description.$, e) !== null) {\n                var f = DescriptionTreeBuilder.createTree(a, e);\n                e = f;\n            }\n            if (typeCast(Array_$type, e) !== null) {\n                var g = e;\n                var h = new Array(g.length);\n                for (var i = 0; i < h.length; i++) {\n                    var j = g[i];\n                    if (typeCast(Description.$, j) !== null) {\n                        var k = DescriptionTreeBuilder.createTree(a, j);\n                        h[i] = k;\n                    }\n                    else {\n                        h[i] = j;\n                    }\n                }\n                e = h;\n            }\n            if (key_.toLowerCase() == \"type\") {\n                b.i = e;\n            }\n            b.j(DescriptionTreeBuilder.c(key_), e);\n        }\n        if (b.c(\"type\")) {\n            var l = b.a(\"type\").b;\n            var m = b.f();\n            for (var n = 0; n < m.count; n++) {\n                var o = m._inner[n];\n                o.a = a.getMetadata(l, o.c);\n            }\n        }\n        return b;\n    };\n    DescriptionTreeBuilder.c = function (key_) {\n        if (key_ == null) {\n            return null;\n        }\n        return key_.substr(0, 1).toUpperCase() + key_.substr(1);\n    };\n    DescriptionTreeBuilder.$t = markType(DescriptionTreeBuilder, 'DescriptionTreeBuilder');\n    return DescriptionTreeBuilder;\n}(Base));\nexport { DescriptionTreeBuilder };\n"]},"metadata":{},"sourceType":"module"}