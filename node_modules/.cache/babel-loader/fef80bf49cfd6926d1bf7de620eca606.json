{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, Delegate_$type, markType, getInstanceType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { stringReplace } from \"./string\";\n/**\n * @hidden\n */\n\nvar TypeDescriptionCleanups =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(TypeDescriptionCleanups, _super);\n\n  function TypeDescriptionCleanups() {\n    var _this = _super.call(this) || this;\n\n    _this.a = new Dictionary$2(String_$type, Delegate_$type, 0);\n\n    _this.a.item(\"Series\", function (a) {\n      var s_ = a;\n      if (s_.removeAxes) s_.removeAxes();\n    });\n\n    return _this;\n  }\n\n  TypeDescriptionCleanups.prototype.b = function (a, b) {\n    if (b == null) {\n      return;\n    }\n\n    var c = \"\";\n    var d;\n    var obj_ = b;\n    var impl_ = obj_.i;\n    var e = impl_;\n\n    if (e) {\n      d = getInstanceType(impl_);\n    } else {\n      impl_ = obj_._chart || obj_._map || obj_._gauge;\n      e = impl_;\n\n      if (e) {\n        d = getInstanceType(impl_);\n      } else {\n        return;\n      }\n    }\n\n    while (d != null) {\n      c = d.typeName;\n      c = stringReplace(stringReplace(c, \"Ultra\", \"\"), \"Xam\", \"\");\n\n      if (this.a.containsKey(c)) {\n        this.a.item(c)(b);\n      }\n\n      d = d.baseType;\n\n      if (d != null && (d.typeName == \"Object\" || d.typeName == \"Base\")) {\n        return;\n      }\n    }\n  };\n\n  TypeDescriptionCleanups.$t = markType(TypeDescriptionCleanups, 'TypeDescriptionCleanups');\n  return TypeDescriptionCleanups;\n}(Base);\n\nexport { TypeDescriptionCleanups };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/TypeDescriptionCleanups.js"],"names":["__extends","Base","String_$type","Delegate_$type","markType","getInstanceType","Dictionary$2","stringReplace","TypeDescriptionCleanups","_super","_this","call","a","item","s_","removeAxes","prototype","b","c","d","obj_","impl_","i","e","_chart","_map","_gauge","typeName","containsKey","baseType","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,cAA7B,EAA6CC,QAA7C,EAAuDC,eAAvD,QAA8E,QAA9E;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,aAAT,QAA8B,UAA9B;AACA;AACA;AACA;;AACA,IAAIC,uBAAuB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACzET,EAAAA,SAAS,CAACQ,uBAAD,EAA0BC,MAA1B,CAAT;;AACA,WAASD,uBAAT,GAAmC;AAC/B,QAAIE,KAAK,GAAGD,MAAM,CAACE,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACAD,IAAAA,KAAK,CAACE,CAAN,GAAU,IAAIN,YAAJ,CAAiBJ,YAAjB,EAA+BC,cAA/B,EAA+C,CAA/C,CAAV;;AACAO,IAAAA,KAAK,CAACE,CAAN,CAAQC,IAAR,CAAa,QAAb,EAAuB,UAAUD,CAAV,EAAa;AAChC,UAAIE,EAAE,GAAGF,CAAT;AACA,UAAIE,EAAE,CAACC,UAAP,EACID,EAAE,CAACC,UAAH;AACP,KAJD;;AAKA,WAAOL,KAAP;AACH;;AACDF,EAAAA,uBAAuB,CAACQ,SAAxB,CAAkCC,CAAlC,GAAsC,UAAUL,CAAV,EAAaK,CAAb,EAAgB;AAClD,QAAIA,CAAC,IAAI,IAAT,EAAe;AACX;AACH;;AACD,QAAIC,CAAC,GAAG,EAAR;AACA,QAAIC,CAAJ;AACA,QAAIC,IAAI,GAAGH,CAAX;AACA,QAAII,KAAK,GAAGD,IAAI,CAACE,CAAjB;AACA,QAAIC,CAAC,GAAIF,KAAT;;AACA,QAAIE,CAAJ,EAAO;AACHJ,MAAAA,CAAC,GAAGd,eAAe,CAACgB,KAAD,CAAnB;AACH,KAFD,MAGK;AACDA,MAAAA,KAAK,GAAGD,IAAI,CAACI,MAAL,IAAeJ,IAAI,CAACK,IAApB,IAA4BL,IAAI,CAACM,MAAzC;AACAH,MAAAA,CAAC,GAAIF,KAAL;;AACA,UAAIE,CAAJ,EAAO;AACHJ,QAAAA,CAAC,GAAGd,eAAe,CAACgB,KAAD,CAAnB;AACH,OAFD,MAGK;AACD;AACH;AACJ;;AACD,WAAOF,CAAC,IAAI,IAAZ,EAAkB;AACdD,MAAAA,CAAC,GAAGC,CAAC,CAACQ,QAAN;AACAT,MAAAA,CAAC,GAAGX,aAAa,CAACA,aAAa,CAACW,CAAD,EAAI,OAAJ,EAAa,EAAb,CAAd,EAAgC,KAAhC,EAAuC,EAAvC,CAAjB;;AACA,UAAI,KAAKN,CAAL,CAAOgB,WAAP,CAAmBV,CAAnB,CAAJ,EAA2B;AACvB,aAAKN,CAAL,CAAOC,IAAP,CAAYK,CAAZ,EAAeD,CAAf;AACH;;AACDE,MAAAA,CAAC,GAAGA,CAAC,CAACU,QAAN;;AACA,UAAIV,CAAC,IAAI,IAAL,KAAcA,CAAC,CAACQ,QAAF,IAAc,QAAd,IAA0BR,CAAC,CAACQ,QAAF,IAAc,MAAtD,CAAJ,EAAmE;AAC/D;AACH;AACJ;AACJ,GAjCD;;AAkCAnB,EAAAA,uBAAuB,CAACsB,EAAxB,GAA6B1B,QAAQ,CAACI,uBAAD,EAA0B,yBAA1B,CAArC;AACA,SAAOA,uBAAP;AACH,CAhD0D,CAgDzDP,IAhDyD,CAA3D;;AAiDA,SAASO,uBAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, Delegate_$type, markType, getInstanceType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { stringReplace } from \"./string\";\n/**\n * @hidden\n */\nvar TypeDescriptionCleanups = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(TypeDescriptionCleanups, _super);\n    function TypeDescriptionCleanups() {\n        var _this = _super.call(this) || this;\n        _this.a = new Dictionary$2(String_$type, Delegate_$type, 0);\n        _this.a.item(\"Series\", function (a) {\n            var s_ = a;\n            if (s_.removeAxes)\n                s_.removeAxes();\n        });\n        return _this;\n    }\n    TypeDescriptionCleanups.prototype.b = function (a, b) {\n        if (b == null) {\n            return;\n        }\n        var c = \"\";\n        var d;\n        var obj_ = b;\n        var impl_ = obj_.i;\n        var e = (impl_);\n        if (e) {\n            d = getInstanceType(impl_);\n        }\n        else {\n            impl_ = obj_._chart || obj_._map || obj_._gauge;\n            e = (impl_);\n            if (e) {\n                d = getInstanceType(impl_);\n            }\n            else {\n                return;\n            }\n        }\n        while (d != null) {\n            c = d.typeName;\n            c = stringReplace(stringReplace(c, \"Ultra\", \"\"), \"Xam\", \"\");\n            if (this.a.containsKey(c)) {\n                this.a.item(c)(b);\n            }\n            d = d.baseType;\n            if (d != null && (d.typeName == \"Object\" || d.typeName == \"Base\")) {\n                return;\n            }\n        }\n    };\n    TypeDescriptionCleanups.$t = markType(TypeDescriptionCleanups, 'TypeDescriptionCleanups');\n    return TypeDescriptionCleanups;\n}(Base));\nexport { TypeDescriptionCleanups };\n"]},"metadata":{},"sourceType":"module"}