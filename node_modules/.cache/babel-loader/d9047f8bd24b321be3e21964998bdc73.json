{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { isNaN_ } from \"./number\";\n/**\n * @hidden\n */\n\nvar DeviceUtils =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DeviceUtils, _super);\n\n  function DeviceUtils() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DeviceUtils.g = function (a) {\n    return a;\n  };\n\n  DeviceUtils.f = function (a) {\n    return a;\n  };\n\n  DeviceUtils.a = function (a) {\n    if (isNaN_(a)) {\n      return NaN;\n    }\n\n    if (a <= 0) {\n      return NaN;\n    }\n\n    return a;\n  };\n\n  DeviceUtils.c = function (a) {\n    return a * DeviceUtils.d();\n  };\n\n  DeviceUtils.b = function (a) {\n    return a * DeviceUtils.e();\n  };\n\n  DeviceUtils.d = function () {\n    var a = DeviceUtils.g(2);\n    return 2 / a;\n  };\n\n  DeviceUtils.e = function () {\n    var a = DeviceUtils.f(2);\n    return 2 / a;\n  };\n\n  DeviceUtils.$t = markType(DeviceUtils, 'DeviceUtils');\n  return DeviceUtils;\n}(Base);\n\nexport { DeviceUtils };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/DeviceUtils.js"],"names":["__extends","Base","markType","isNaN_","DeviceUtils","_super","apply","arguments","g","a","f","NaN","c","d","b","e","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA;AACA;AACA;;AACA,IAAIC,WAAW;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC7DL,EAAAA,SAAS,CAACI,WAAD,EAAcC,MAAd,CAAT;;AACA,WAASD,WAAT,GAAuB;AACnB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,WAAW,CAACI,CAAZ,GAAgB,UAAUC,CAAV,EAAa;AACzB,WAAOA,CAAP;AACH,GAFD;;AAGAL,EAAAA,WAAW,CAACM,CAAZ,GAAgB,UAAUD,CAAV,EAAa;AACzB,WAAOA,CAAP;AACH,GAFD;;AAGAL,EAAAA,WAAW,CAACK,CAAZ,GAAgB,UAAUA,CAAV,EAAa;AACzB,QAAIN,MAAM,CAACM,CAAD,CAAV,EAAe;AACX,aAAOE,GAAP;AACH;;AACD,QAAIF,CAAC,IAAI,CAAT,EAAY;AACR,aAAOE,GAAP;AACH;;AACD,WAAOF,CAAP;AACH,GARD;;AASAL,EAAAA,WAAW,CAACQ,CAAZ,GAAgB,UAAUH,CAAV,EAAa;AACzB,WAAOA,CAAC,GAAGL,WAAW,CAACS,CAAZ,EAAX;AACH,GAFD;;AAGAT,EAAAA,WAAW,CAACU,CAAZ,GAAgB,UAAUL,CAAV,EAAa;AACzB,WAAOA,CAAC,GAAGL,WAAW,CAACW,CAAZ,EAAX;AACH,GAFD;;AAGAX,EAAAA,WAAW,CAACS,CAAZ,GAAgB,YAAY;AACxB,QAAIJ,CAAC,GAAGL,WAAW,CAACI,CAAZ,CAAc,CAAd,CAAR;AACA,WAAO,IAAIC,CAAX;AACH,GAHD;;AAIAL,EAAAA,WAAW,CAACW,CAAZ,GAAgB,YAAY;AACxB,QAAIN,CAAC,GAAGL,WAAW,CAACM,CAAZ,CAAc,CAAd,CAAR;AACA,WAAO,IAAID,CAAX;AACH,GAHD;;AAIAL,EAAAA,WAAW,CAACY,EAAZ,GAAiBd,QAAQ,CAACE,WAAD,EAAc,aAAd,CAAzB;AACA,SAAOA,WAAP;AACH,CApC8C,CAoC7CH,IApC6C,CAA/C;;AAqCA,SAASG,WAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { isNaN_ } from \"./number\";\n/**\n * @hidden\n */\nvar DeviceUtils = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DeviceUtils, _super);\n    function DeviceUtils() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DeviceUtils.g = function (a) {\n        return a;\n    };\n    DeviceUtils.f = function (a) {\n        return a;\n    };\n    DeviceUtils.a = function (a) {\n        if (isNaN_(a)) {\n            return NaN;\n        }\n        if (a <= 0) {\n            return NaN;\n        }\n        return a;\n    };\n    DeviceUtils.c = function (a) {\n        return a * DeviceUtils.d();\n    };\n    DeviceUtils.b = function (a) {\n        return a * DeviceUtils.e();\n    };\n    DeviceUtils.d = function () {\n        var a = DeviceUtils.g(2);\n        return 2 / a;\n    };\n    DeviceUtils.e = function () {\n        var a = DeviceUtils.f(2);\n        return 2 / a;\n    };\n    DeviceUtils.$t = markType(DeviceUtils, 'DeviceUtils');\n    return DeviceUtils;\n}(Base));\nexport { DeviceUtils };\n"]},"metadata":{},"sourceType":"module"}