{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, Point_$type, markType } from \"./type\";\nimport { Rect } from \"./Rect\";\nimport { Size } from \"./Size\";\nimport { Color } from \"./Color\";\n/**\n * @hidden\n */\n\nvar APIFactory =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(APIFactory, _super);\n\n  function APIFactory() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  APIFactory.createPoint = function (a, b) {\n    return {\n      $type: Point_$type,\n      x: a,\n      y: b\n    };\n  };\n\n  APIFactory.createRect = function (a, b, c, d) {\n    return new Rect(0, a, b, c, d);\n  };\n\n  APIFactory.createSize = function (a, b) {\n    return new Size(1, a, b);\n  };\n\n  APIFactory.createColor = function (a) {\n    var b = new Color();\n    b.colorString = a;\n    return b;\n  };\n\n  APIFactory.$t = markType(APIFactory, 'APIFactory');\n  return APIFactory;\n}(Base);\n\nexport { APIFactory };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/APIFactory.js"],"names":["__extends","Base","Point_$type","markType","Rect","Size","Color","APIFactory","_super","apply","arguments","createPoint","a","b","$type","x","y","createRect","c","d","createSize","createColor","colorString","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,WAAf,EAA4BC,QAA5B,QAA4C,QAA5C;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,IAAT,QAAqB,QAArB;AACA,SAASC,KAAT,QAAsB,SAAtB;AACA;AACA;AACA;;AACA,IAAIC,UAAU;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC5DR,EAAAA,SAAS,CAACO,UAAD,EAAaC,MAAb,CAAT;;AACA,WAASD,UAAT,GAAsB;AAClB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,UAAU,CAACI,WAAX,GAAyB,UAAUC,CAAV,EAAaC,CAAb,EAAgB;AACrC,WAAO;AAAEC,MAAAA,KAAK,EAAEZ,WAAT;AAAsBa,MAAAA,CAAC,EAAEH,CAAzB;AAA4BI,MAAAA,CAAC,EAAEH;AAA/B,KAAP;AACH,GAFD;;AAGAN,EAAAA,UAAU,CAACU,UAAX,GAAwB,UAAUL,CAAV,EAAaC,CAAb,EAAgBK,CAAhB,EAAmBC,CAAnB,EAAsB;AAC1C,WAAO,IAAIf,IAAJ,CAAS,CAAT,EAAYQ,CAAZ,EAAeC,CAAf,EAAkBK,CAAlB,EAAqBC,CAArB,CAAP;AACH,GAFD;;AAGAZ,EAAAA,UAAU,CAACa,UAAX,GAAwB,UAAUR,CAAV,EAAaC,CAAb,EAAgB;AACpC,WAAO,IAAIR,IAAJ,CAAS,CAAT,EAAYO,CAAZ,EAAeC,CAAf,CAAP;AACH,GAFD;;AAGAN,EAAAA,UAAU,CAACc,WAAX,GAAyB,UAAUT,CAAV,EAAa;AAClC,QAAIC,CAAC,GAAG,IAAIP,KAAJ,EAAR;AACAO,IAAAA,CAAC,CAACS,WAAF,GAAgBV,CAAhB;AACA,WAAOC,CAAP;AACH,GAJD;;AAKAN,EAAAA,UAAU,CAACgB,EAAX,GAAgBpB,QAAQ,CAACI,UAAD,EAAa,YAAb,CAAxB;AACA,SAAOA,UAAP;AACH,CArB6C,CAqB5CN,IArB4C,CAA9C;;AAsBA,SAASM,UAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, Point_$type, markType } from \"./type\";\nimport { Rect } from \"./Rect\";\nimport { Size } from \"./Size\";\nimport { Color } from \"./Color\";\n/**\n * @hidden\n */\nvar APIFactory = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(APIFactory, _super);\n    function APIFactory() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    APIFactory.createPoint = function (a, b) {\n        return { $type: Point_$type, x: a, y: b };\n    };\n    APIFactory.createRect = function (a, b, c, d) {\n        return new Rect(0, a, b, c, d);\n    };\n    APIFactory.createSize = function (a, b) {\n        return new Size(1, a, b);\n    };\n    APIFactory.createColor = function (a) {\n        var b = new Color();\n        b.colorString = a;\n        return b;\n    };\n    APIFactory.$t = markType(APIFactory, 'APIFactory');\n    return APIFactory;\n}(Base));\nexport { APIFactory };\n"]},"metadata":{},"sourceType":"module"}