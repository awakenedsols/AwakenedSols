{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrItemwiseStrategyBasedIndicator } from \"./igr-itemwise-strategy-based-indicator\";\nimport { WeightedCloseIndicator } from \"./WeightedCloseIndicator\";\n/**\n * Represents a IgxDataChartComponent Weigted Close indicator series.\n * The weighted close indicator shows an average of the high low and close\n * for a day but with the closing price counted twice in the average.\n * Default required members: High, Low, Close\n*\n* The `IgrWeightedCloseIndicator` is similar to the `IgrTypicalPriceIndicator` in that it represents an average of the high price, low price, and closing price for a day.\n* However, with the `IgrWeightedCloseIndicator`, more emphasis is placed on the closing price and it is included twice when calculating the arithmetic average.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrWeightedCloseIndicator\n*         name=\"series1\"\n*         xAxisName=\"xAxis\"\n*         yAxisName=\"yAxis\"\n* \t\topenMemberPath=\"Open\"\n* \t\tcloseMemberPath=\"close\"\n*         highMemberPath=\"High\"\n*         lowMemberPath=\"Low\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrWeightedCloseIndicator({name:\"series\"});\n* series.xAxis = this.xAxis;\n* series.yAxis = this.yAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\n\nvar IgrWeightedCloseIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrWeightedCloseIndicator, _super);\n\n  function IgrWeightedCloseIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrWeightedCloseIndicator.prototype.createImplementation = function () {\n    return new WeightedCloseIndicator();\n  };\n\n  Object.defineProperty(IgrWeightedCloseIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrWeightedCloseIndicator;\n}(IgrItemwiseStrategyBasedIndicator);\n\nexport { IgrWeightedCloseIndicator };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-weighted-close-indicator.js"],"names":["__extends","IgrItemwiseStrategyBasedIndicator","WeightedCloseIndicator","IgrWeightedCloseIndicator","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,iCAAT,QAAkD,yCAAlD;AACA,SAASC,sBAAT,QAAuC,0BAAvC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,yBAAyB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC3EJ,EAAAA,SAAS,CAACG,yBAAD,EAA4BC,MAA5B,CAAT;;AACA,WAASD,yBAAT,CAAmCE,KAAnC,EAA0C;AACtC,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDF,EAAAA,yBAAyB,CAACI,SAA1B,CAAoCC,oBAApC,GAA2D,YAAY;AACnE,WAAO,IAAIN,sBAAJ,EAAP;AACH,GAFD;;AAGAO,EAAAA,MAAM,CAACC,cAAP,CAAsBP,yBAAyB,CAACI,SAAhD,EAA2D,GAA3D,EAAgE;AAC5D;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KAN2D;AAO5DC,IAAAA,UAAU,EAAE,KAPgD;AAQ5DC,IAAAA,YAAY,EAAE;AAR8C,GAAhE;AAUA,SAAOX,yBAAP;AACH,CAnB4D,CAmB3DF,iCAnB2D,CAA7D;;AAoBA,SAASE,yBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrItemwiseStrategyBasedIndicator } from \"./igr-itemwise-strategy-based-indicator\";\nimport { WeightedCloseIndicator } from \"./WeightedCloseIndicator\";\n/**\n * Represents a IgxDataChartComponent Weigted Close indicator series.\n * The weighted close indicator shows an average of the high low and close\n * for a day but with the closing price counted twice in the average.\n * Default required members: High, Low, Close\n*\n* The `IgrWeightedCloseIndicator` is similar to the `IgrTypicalPriceIndicator` in that it represents an average of the high price, low price, and closing price for a day.\n* However, with the `IgrWeightedCloseIndicator`, more emphasis is placed on the closing price and it is included twice when calculating the arithmetic average.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Year\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrWeightedCloseIndicator\n*         name=\"series1\"\n*         xAxisName=\"xAxis\"\n*         yAxisName=\"yAxis\"\n* \t\topenMemberPath=\"Open\"\n* \t\tcloseMemberPath=\"close\"\n*         highMemberPath=\"High\"\n*         lowMemberPath=\"Low\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrWeightedCloseIndicator({name:\"series\"});\n* series.xAxis = this.xAxis;\n* series.yAxis = this.yAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\nvar IgrWeightedCloseIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrWeightedCloseIndicator, _super);\n    function IgrWeightedCloseIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrWeightedCloseIndicator.prototype.createImplementation = function () {\n        return new WeightedCloseIndicator();\n    };\n    Object.defineProperty(IgrWeightedCloseIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrWeightedCloseIndicator;\n}(IgrItemwiseStrategyBasedIndicator));\nexport { IgrWeightedCloseIndicator };\n"]},"metadata":{},"sourceType":"module"}