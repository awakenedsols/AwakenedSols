{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/UserCollections.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport solanaIcon from './solanaIcon.png';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const UserCollections = _ref => {\n  _s();\n\n  let {\n    children,\n    ...props\n  } = _ref;\n  const [data, setData] = useState();\n  const wallet = props.wallet;\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 1\n  };\n\n  const getCollections = async () => {\n    console.log('getcolls');\n    var config = {\n      method: 'get',\n      url: 'https://api-devnet.magiceden.dev/v2/wallets/EWmtsfBA8EikR3vvhsXgxn7cBQCUZfXJ7jMwXUpYRzXY/tokens?offset=0&limit=100&listStatus=both'\n    };\n    axios(config).then(function (response) {\n      console.log('axios call');\n      console.log(response);\n      console.log(JSON.stringify(response.data));\n      setData(response.data);\n      return response.data;\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    console.log('use effect');\n\n    if (wallet) {\n      console.log('wallettt');\n      console.log(wallet);\n    }\n\n    if (data) {\n      console.log(data);\n    }\n  });\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      //assign interval to a variable to clear it.\n      console.log('use effect');\n      getCollections();\n\n      if (data) {\n        console.log(data);\n      }\n    }, 1000);\n    return () => clearInterval(intervalId); //This is important\n  }, [useState]);\n  return /*#__PURE__*/_jsxDEV(Slider, {\n    dots: true,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"symbolIcon\",\n          src: solanaIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 16\n        }, this), \"price\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 3\n  }, this) // <>\n  // {data ? (\n  //   <> \n  //   <Slider dots={true}>\n  //     {data.map((collection:any) => (\n  //         <div>\n  //           <h3>{collection.name}</h3>\n  //           <p><img className=\"symbolIcon\" src={solanaIcon}></img>{collection.floorPrice}</p>\n  //           <img src={collection.image}></img>\n  //         </div>\n  //     ))}\n  //   </Slider>\n  // </>\n  //   ) : (\n  //     <div>\n  //     <h1>Loading...</h1>\n  //    </div>\n  // )}\n  // </>\n  ;\n};\n\n_s(UserCollections, \"5lknD3jXYujBT9pOqvzz+iT5qBw=\");\n\n_c = UserCollections;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserCollections\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/UserCollections.tsx"],"names":["React","solanaIcon","useEffect","useState","axios","Slider","UserCollections","children","props","data","setData","wallet","settings","dots","infinite","speed","slidesToShow","slidesToScroll","getCollections","console","log","config","method","url","then","response","JSON","stringify","catch","error","intervalId","setInterval","clearInterval"],"mappings":"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","sourcesContent":["import React, { ReactNode } from \"react\";\nimport {Row, Col, Container} from \"react-bootstrap\";\nimport enlargeIcon from './enlargeIcon.png'\nimport solanaIcon from './solanaIcon.png'\nimport styled from 'styled-components'\nimport { Key, ReactChild, ReactFragment, ReactPortal, useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport Slider from \"react-slick\";\nimport \"slick-carousel/slick/slick.css\";\nimport \"slick-carousel/slick/slick-theme.css\";\n\n\ninterface Props {\n    children?: ReactNode\n    // any props that come into the component\n    wallet: any\n}\n\nexport const UserCollections = ({ children, ...props }: Props) => {\n\n  const [data, setData] = useState<any>();\n  const wallet = props.wallet;\n\n  const settings = {\n    dots: true,\n    infinite: false,\n    speed: 500,\n    slidesToShow: 2,\n    slidesToScroll: 1\n  };\n\n  const getCollections = async () => {\n    console.log('getcolls');\n    var config = {\n      method: 'get',\n      url: 'https://api-devnet.magiceden.dev/v2/wallets/EWmtsfBA8EikR3vvhsXgxn7cBQCUZfXJ7jMwXUpYRzXY/tokens?offset=0&limit=100&listStatus=both'\n    };\n\n\n    axios(config)\n    .then(function (response) {\n      console.log('axios call');\n      console.log(response);\n      console.log(JSON.stringify(response.data));\n      setData(response.data);    \n      return response.data;\n      }).catch(function (error) {\n      console.log(error);\n    });\n  }\n  \n\n\n  useEffect(() => {\n        console.log('use effect');\n        if(wallet){\n          console.log('wallettt');\n          console.log(wallet);\n        }\n        if(data){\n          console.log(data);\n        }\n  });\n\nuseEffect(() => {\n  const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\n    console.log('use effect');\n    getCollections();\n  \n    if(data){\n      console.log(data);\n    }\n  \n  }, 1000)\n\n  return () => clearInterval(intervalId); //This is important\n \n}, [useState])\n\n\nreturn (\n  <Slider dots={true}>\n        \n          <div>\n             <h3>name</h3>\n            <p><img className=\"symbolIcon\" src={solanaIcon}></img>price</p>\n          </div>\n    \n   </Slider>\n  // <>\n  // {data ? (\n  //   <> \n  //   <Slider dots={true}>\n  //     {data.map((collection:any) => (\n        \n  //         <div>\n  //           <h3>{collection.name}</h3>\n  //           <p><img className=\"symbolIcon\" src={solanaIcon}></img>{collection.floorPrice}</p>\n  //           <img src={collection.image}></img>\n  //         </div>\n    \n  //     ))}\n  //   </Slider>\n  // </>\n  //   ) : (\n  //     <div>\n  //     <h1>Loading...</h1>\n  //    </div>\n  // )}\n  // </>\n);\n};"]},"metadata":{},"sourceType":"module"}