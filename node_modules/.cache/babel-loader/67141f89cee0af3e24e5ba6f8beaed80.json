{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType, Point_$type } from \"./type\";\nimport { PathFigureCollection } from \"./PathFigureCollection\";\nimport { PathMarkupToken } from \"./PathMarkupToken\";\nimport { List$1 } from \"./List$1\";\nimport { PathFigure } from \"./PathFigure\";\nimport { ArcSegment } from \"./ArcSegment\";\nimport { LineSegment } from \"./LineSegment\";\nimport { BezierSegment } from \"./BezierSegment\";\nimport { Size } from \"./Size\";\nimport { InvalidOperationException } from \"./InvalidOperationException\";\nimport { stringEmpty } from \"./string\";\n/**\n * @hidden\n */\n\nvar Geometry =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(Geometry, _super);\n\n  function Geometry() {\n    return _super.call(this) || this;\n  }\n\n  Geometry.a = function (a) {\n    if (a != null) {\n      var b = new PathMarkupParser();\n      return b.k(a);\n    }\n\n    return null;\n  };\n\n  Geometry.$t = markType(Geometry, 'Geometry');\n  return Geometry;\n}(Base);\n\nexport { Geometry };\n/**\n * @hidden\n */\n\nvar PathGeometry =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(PathGeometry, _super);\n\n  function PathGeometry() {\n    var _this = _super.call(this) || this;\n\n    _this.c = null;\n    _this.c = new PathFigureCollection();\n    return _this;\n  }\n\n  PathGeometry.prototype.get_b = function () {\n    return 4;\n  };\n\n  Object.defineProperty(PathGeometry.prototype, \"b\", {\n    get: function () {\n      return this.get_b();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PathGeometry.$t = markType(PathGeometry, 'PathGeometry', Geometry.$);\n  return PathGeometry;\n}(Geometry);\n\nexport { PathGeometry };\n/**\n * @hidden\n */\n\nvar PathMarkupParser =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(PathMarkupParser, _super);\n\n  function PathMarkupParser() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.e = '\\0';\n    _this.h = 0;\n    _this.l = {\n      $type: Point_$type,\n      x: 0,\n      y: 0\n    };\n    _this.f = null;\n    _this.i = null;\n    return _this;\n  }\n\n  PathMarkupParser.prototype.k = function (a) {\n    this.f = new List$1(PathMarkupToken.$, 0);\n    this.h = 0;\n\n    var _loop_1 = function () {\n      switch (this_1.e) {\n        case 'M':\n        case 'm':\n          this_1.f.add(new PathMarkupToken(0, this_1.e.charCodeAt(0) < 'm'.charCodeAt(0)));\n          break;\n\n        case 'L':\n        case 'l':\n          this_1.f.add(new PathMarkupToken(1, this_1.e.charCodeAt(0) < 'l'.charCodeAt(0)));\n          break;\n\n        case 'H':\n        case 'h':\n          this_1.f.add(new PathMarkupToken(2, this_1.e.charCodeAt(0) < 'h'.charCodeAt(0)));\n          break;\n\n        case 'V':\n        case 'v':\n          this_1.f.add(new PathMarkupToken(3, this_1.e.charCodeAt(0) < 'v'.charCodeAt(0)));\n          break;\n\n        case 'C':\n        case 'c':\n          this_1.f.add(new PathMarkupToken(4, this_1.e.charCodeAt(0) < 'c'.charCodeAt(0)));\n          break;\n\n        case 'Q':\n        case 'q':\n          this_1.f.add(new PathMarkupToken(5, this_1.e.charCodeAt(0) < 'q'.charCodeAt(0)));\n          break;\n\n        case 'S':\n        case 's':\n          this_1.f.add(new PathMarkupToken(6, this_1.e.charCodeAt(0) < 's'.charCodeAt(0)));\n          break;\n\n        case 'T':\n        case 't':\n          this_1.f.add(new PathMarkupToken(7, this_1.e.charCodeAt(0) < 't'.charCodeAt(0)));\n          break;\n\n        case 'A':\n        case 'a':\n          this_1.f.add(new PathMarkupToken(8, this_1.e.charCodeAt(0) < 'a'.charCodeAt(0)));\n          break;\n\n        case 'Z':\n        case 'z':\n          this_1.f.add(new PathMarkupToken(9, this_1.e.charCodeAt(0) < 'z'.charCodeAt(0)));\n          break;\n      }\n\n      if (this_1.a(this_1.e)) {\n        var b = true;\n        var c = false;\n        var d = false;\n        var e_1 = stringEmpty();\n        var f = false;\n        this_1.h = this_1.h - 1;\n\n        while (this_1.h < a.length) {\n          var g = a.charAt(this_1.h);\n\n          if (d) {\n            if (!this_1.a(g)) {\n              f = true;\n              break;\n            } else {\n              e_1 += g;\n              this_1.h++;\n\n              if (this_1.h >= a.length) {\n                f = true;\n                break;\n              }\n            }\n          } else if (c) {\n            if (g == 'e' || g == 'E') {\n              d = true;\n              e_1 += g;\n              this_1.h++;\n              continue;\n            }\n\n            if (!this_1.a(g)) {\n              f = true;\n              break;\n            } else {\n              e_1 += g;\n              this_1.h++;\n\n              if (this_1.h >= a.length) {\n                f = true;\n                break;\n              }\n            }\n          } else if (b) {\n            if (g == '.') {\n              c = true;\n              e_1 += g;\n              this_1.h++;\n              continue;\n            }\n\n            if (g == 'e' || g == 'E') {\n              d = true;\n              e_1 += g;\n              this_1.h++;\n              continue;\n            }\n\n            if (!this_1.a(g)) {\n              f = true;\n              break;\n            } else {\n              e_1 += g;\n              this_1.h++;\n\n              if (this_1.h >= a.length) {\n                f = true;\n                break;\n              }\n            }\n          }\n        }\n\n        if (f) {\n          this_1.f.add(function () {\n            var $ret = new PathMarkupToken(10, false);\n            $ret.b = parseFloat(e_1);\n            return $ret;\n          }());\n        }\n      }\n    };\n\n    var this_1 = this;\n\n    while (this.d(a)) {\n      _loop_1();\n    }\n\n    return this.j();\n  };\n\n  PathMarkupParser.prototype.a = function (a) {\n    return a == '.' || a == '-' || a == '+' || a.charCodeAt(0) >= '0'.charCodeAt(0) && a.charCodeAt(0) <= '9'.charCodeAt(0);\n  };\n\n  PathMarkupParser.prototype.j = function () {\n    var _this = this;\n\n    this.h = 0;\n    var a = true;\n    var b = new PathGeometry();\n    var c = null;\n    var d = 11;\n    var e = null;\n    var f = null;\n    var g = null;\n\n    while (this.h < this.f.count) {\n      var h = this.f._inner[this.h++];\n\n      if (a && h.c != 0) {\n        return null;\n      }\n\n      switch (h.c) {\n        case 0:\n          c = new PathFigure();\n          b.c.add(c);\n          this.l = this.m(h.a);\n          c._startPoint = this.l;\n\n          while (this.b()) {\n            this.l = this.m(h.a);\n\n            c._segments.add(new LineSegment(0, this.l));\n          }\n\n          d = 0;\n          break;\n\n        case 1:\n        case 2:\n        case 3:\n          if (c == null) {\n            return null;\n          }\n\n          do {\n            switch (h.c) {\n              case 1:\n                this.l = this.m(h.a);\n                break;\n\n              case 2:\n                this.l.x = h.a ? this.g() : this.l.x + this.g();\n                break;\n\n              case 3:\n                this.l.y = h.a ? this.g() : this.l.y + this.g();\n                break;\n            }\n\n            c._segments.add(new LineSegment(0, this.l));\n          } while (this.b());\n\n          d = 1;\n          break;\n\n        case 4:\n        case 6:\n          if (c == null) {\n            return null;\n          }\n\n          do {\n            if (h.c == 6) {\n              if (d == 4) {\n                e = {\n                  $type: Point_$type,\n                  x: 2 * this.l.x - f.x,\n                  y: 2 * this.l.y - f.y\n                };\n              } else {\n                e = this.l;\n              }\n            } else {\n              e = this.m(h.a);\n            }\n\n            f = this.m(h.a);\n            g = this.m(h.a);\n\n            c._segments.add(new BezierSegment(1, e, f, g));\n\n            this.l = g;\n            d = 4;\n          } while (this.b());\n\n          break;\n\n        case 5:\n        case 7:\n          break;\n\n        case 8:\n          if (c == null) {\n            return null;\n          }\n\n          var _loop_2 = function () {\n            var i = this_2.g();\n            var j = this_2.g();\n            var k = this_2.g();\n            var l = this_2.g();\n            var m = this_2.g();\n            this_2.l = this_2.m(h.a);\n\n            c._segments.add(function () {\n              var $ret = new ArcSegment();\n              $ret.e = _this.l;\n              $ret.f = new Size(1, i, j);\n              $ret.c = k;\n              $ret.b = l == 1;\n              $ret.d = m == 1 ? 1 : 0;\n              return $ret;\n            }());\n          };\n\n          var this_2 = this;\n\n          do {\n            _loop_2();\n          } while (this.b());\n\n          d = 8;\n          break;\n\n        case 9:\n          if (c == null) {\n            return null;\n          }\n\n          c._isClosed = true;\n          break;\n      }\n\n      a = false;\n    }\n\n    return b;\n  };\n\n  PathMarkupParser.prototype.m = function (a) {\n    var b = this.g();\n    var c = this.g();\n\n    if (!a) {\n      b += this.l.x;\n      c += this.l.y;\n    }\n\n    return {\n      $type: Point_$type,\n      x: b,\n      y: c\n    };\n  };\n\n  PathMarkupParser.prototype.g = function () {\n    var a = this.f._inner[this.h++];\n\n    if (a.c != 10) {\n      throw new InvalidOperationException(0);\n    }\n\n    return a.b;\n  };\n\n  PathMarkupParser.prototype.b = function () {\n    if (this.h >= this.f.count) {\n      return false;\n    }\n\n    return this.f._inner[this.h].c == 10;\n  };\n\n  PathMarkupParser.prototype.d = function (a) {\n    while (this.h < a.length && this.c(a.charAt(this.h))) {\n      this.h++;\n    }\n\n    if (this.h < a.length) {\n      this.e = a.charAt(this.h);\n      this.h++;\n      return true;\n    }\n\n    return false;\n  };\n\n  PathMarkupParser.prototype.c = function (a) {\n    return a == '\\r' || a == '\\n' || a == ' ' || a == '\\t';\n  };\n\n  PathMarkupParser.$t = markType(PathMarkupParser, 'PathMarkupParser');\n  return PathMarkupParser;\n}(Base);\n\nexport { PathMarkupParser };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/Geometry_combined.js"],"names":["__extends","Base","markType","Point_$type","PathFigureCollection","PathMarkupToken","List$1","PathFigure","ArcSegment","LineSegment","BezierSegment","Size","InvalidOperationException","stringEmpty","Geometry","_super","call","a","b","PathMarkupParser","k","$t","PathGeometry","_this","c","prototype","get_b","Object","defineProperty","get","enumerable","configurable","$","apply","arguments","e","h","l","$type","x","y","f","i","_loop_1","this_1","add","charCodeAt","d","e_1","length","g","charAt","$ret","parseFloat","j","count","_inner","m","_startPoint","_segments","_loop_2","this_2","_isClosed"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType, Point_$type } from \"./type\";\nimport { PathFigureCollection } from \"./PathFigureCollection\";\nimport { PathMarkupToken } from \"./PathMarkupToken\";\nimport { List$1 } from \"./List$1\";\nimport { PathFigure } from \"./PathFigure\";\nimport { ArcSegment } from \"./ArcSegment\";\nimport { LineSegment } from \"./LineSegment\";\nimport { BezierSegment } from \"./BezierSegment\";\nimport { Size } from \"./Size\";\nimport { InvalidOperationException } from \"./InvalidOperationException\";\nimport { stringEmpty } from \"./string\";\n/**\n * @hidden\n */\nvar Geometry = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(Geometry, _super);\n    function Geometry() {\n        return _super.call(this) || this;\n    }\n    Geometry.a = function (a) {\n        if (a != null) {\n            var b = new PathMarkupParser();\n            return b.k(a);\n        }\n        return null;\n    };\n    Geometry.$t = markType(Geometry, 'Geometry');\n    return Geometry;\n}(Base));\nexport { Geometry };\n/**\n * @hidden\n */\nvar PathGeometry = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(PathGeometry, _super);\n    function PathGeometry() {\n        var _this = _super.call(this) || this;\n        _this.c = null;\n        _this.c = new PathFigureCollection();\n        return _this;\n    }\n    PathGeometry.prototype.get_b = function () {\n        return 4;\n    };\n    Object.defineProperty(PathGeometry.prototype, \"b\", {\n        get: function () {\n            return this.get_b();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PathGeometry.$t = markType(PathGeometry, 'PathGeometry', Geometry.$);\n    return PathGeometry;\n}(Geometry));\nexport { PathGeometry };\n/**\n * @hidden\n */\nvar PathMarkupParser = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(PathMarkupParser, _super);\n    function PathMarkupParser() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.e = '\\0';\n        _this.h = 0;\n        _this.l = { $type: Point_$type, x: 0, y: 0 };\n        _this.f = null;\n        _this.i = null;\n        return _this;\n    }\n    PathMarkupParser.prototype.k = function (a) {\n        this.f = new List$1(PathMarkupToken.$, 0);\n        this.h = 0;\n        var _loop_1 = function () {\n            switch (this_1.e) {\n                case 'M':\n                case 'm':\n                    this_1.f.add(new PathMarkupToken(0, this_1.e.charCodeAt(0) < 'm'.charCodeAt(0)));\n                    break;\n                case 'L':\n                case 'l':\n                    this_1.f.add(new PathMarkupToken(1, this_1.e.charCodeAt(0) < 'l'.charCodeAt(0)));\n                    break;\n                case 'H':\n                case 'h':\n                    this_1.f.add(new PathMarkupToken(2, this_1.e.charCodeAt(0) < 'h'.charCodeAt(0)));\n                    break;\n                case 'V':\n                case 'v':\n                    this_1.f.add(new PathMarkupToken(3, this_1.e.charCodeAt(0) < 'v'.charCodeAt(0)));\n                    break;\n                case 'C':\n                case 'c':\n                    this_1.f.add(new PathMarkupToken(4, this_1.e.charCodeAt(0) < 'c'.charCodeAt(0)));\n                    break;\n                case 'Q':\n                case 'q':\n                    this_1.f.add(new PathMarkupToken(5, this_1.e.charCodeAt(0) < 'q'.charCodeAt(0)));\n                    break;\n                case 'S':\n                case 's':\n                    this_1.f.add(new PathMarkupToken(6, this_1.e.charCodeAt(0) < 's'.charCodeAt(0)));\n                    break;\n                case 'T':\n                case 't':\n                    this_1.f.add(new PathMarkupToken(7, this_1.e.charCodeAt(0) < 't'.charCodeAt(0)));\n                    break;\n                case 'A':\n                case 'a':\n                    this_1.f.add(new PathMarkupToken(8, this_1.e.charCodeAt(0) < 'a'.charCodeAt(0)));\n                    break;\n                case 'Z':\n                case 'z':\n                    this_1.f.add(new PathMarkupToken(9, this_1.e.charCodeAt(0) < 'z'.charCodeAt(0)));\n                    break;\n            }\n            if (this_1.a(this_1.e)) {\n                var b = true;\n                var c = false;\n                var d = false;\n                var e_1 = stringEmpty();\n                var f = false;\n                this_1.h = this_1.h - 1;\n                while (this_1.h < a.length) {\n                    var g = a.charAt(this_1.h);\n                    if (d) {\n                        if (!this_1.a(g)) {\n                            f = true;\n                            break;\n                        }\n                        else {\n                            e_1 += g;\n                            this_1.h++;\n                            if (this_1.h >= a.length) {\n                                f = true;\n                                break;\n                            }\n                        }\n                    }\n                    else if (c) {\n                        if (g == 'e' || g == 'E') {\n                            d = true;\n                            e_1 += g;\n                            this_1.h++;\n                            continue;\n                        }\n                        if (!this_1.a(g)) {\n                            f = true;\n                            break;\n                        }\n                        else {\n                            e_1 += g;\n                            this_1.h++;\n                            if (this_1.h >= a.length) {\n                                f = true;\n                                break;\n                            }\n                        }\n                    }\n                    else if (b) {\n                        if (g == '.') {\n                            c = true;\n                            e_1 += g;\n                            this_1.h++;\n                            continue;\n                        }\n                        if (g == 'e' || g == 'E') {\n                            d = true;\n                            e_1 += g;\n                            this_1.h++;\n                            continue;\n                        }\n                        if (!this_1.a(g)) {\n                            f = true;\n                            break;\n                        }\n                        else {\n                            e_1 += g;\n                            this_1.h++;\n                            if (this_1.h >= a.length) {\n                                f = true;\n                                break;\n                            }\n                        }\n                    }\n                }\n                if (f) {\n                    this_1.f.add(((function () {\n                        var $ret = new PathMarkupToken(10, false);\n                        $ret.b = parseFloat(e_1);\n                        return $ret;\n                    })()));\n                }\n            }\n        };\n        var this_1 = this;\n        while (this.d(a)) {\n            _loop_1();\n        }\n        return this.j();\n    };\n    PathMarkupParser.prototype.a = function (a) {\n        return a == '.' || a == '-' || a == '+' || (a.charCodeAt(0) >= '0'.charCodeAt(0) && a.charCodeAt(0) <= '9'.charCodeAt(0));\n    };\n    PathMarkupParser.prototype.j = function () {\n        var _this = this;\n        this.h = 0;\n        var a = true;\n        var b = new PathGeometry();\n        var c = null;\n        var d = 11;\n        var e = null;\n        var f = null;\n        var g = null;\n        while (this.h < this.f.count) {\n            var h = this.f._inner[this.h++];\n            if (a && h.c != 0) {\n                return null;\n            }\n            switch (h.c) {\n                case 0:\n                    c = new PathFigure();\n                    b.c.add(c);\n                    this.l = this.m(h.a);\n                    c._startPoint = this.l;\n                    while (this.b()) {\n                        this.l = this.m(h.a);\n                        c._segments.add(new LineSegment(0, this.l));\n                    }\n                    d = 0;\n                    break;\n                case 1:\n                case 2:\n                case 3:\n                    if (c == null) {\n                        return null;\n                    }\n                    do {\n                        switch (h.c) {\n                            case 1:\n                                this.l = this.m(h.a);\n                                break;\n                            case 2:\n                                this.l.x = h.a ? this.g() : this.l.x + this.g();\n                                break;\n                            case 3:\n                                this.l.y = h.a ? this.g() : this.l.y + this.g();\n                                break;\n                        }\n                        c._segments.add(new LineSegment(0, this.l));\n                    } while (this.b());\n                    d = 1;\n                    break;\n                case 4:\n                case 6:\n                    if (c == null) {\n                        return null;\n                    }\n                    do {\n                        if (h.c == 6) {\n                            if (d == 4) {\n                                e = { $type: Point_$type, x: 2 * this.l.x - f.x, y: 2 * this.l.y - f.y };\n                            }\n                            else {\n                                e = this.l;\n                            }\n                        }\n                        else {\n                            e = this.m(h.a);\n                        }\n                        f = this.m(h.a);\n                        g = this.m(h.a);\n                        c._segments.add(new BezierSegment(1, e, f, g));\n                        this.l = g;\n                        d = 4;\n                    } while (this.b());\n                    break;\n                case 5:\n                case 7: break;\n                case 8:\n                    if (c == null) {\n                        return null;\n                    }\n                    var _loop_2 = function () {\n                        var i = this_2.g();\n                        var j = this_2.g();\n                        var k = this_2.g();\n                        var l = this_2.g();\n                        var m = this_2.g();\n                        this_2.l = this_2.m(h.a);\n                        c._segments.add(((function () {\n                            var $ret = new ArcSegment();\n                            $ret.e = _this.l;\n                            $ret.f = new Size(1, i, j);\n                            $ret.c = k;\n                            $ret.b = l == 1;\n                            $ret.d = m == 1 ? 1 : 0;\n                            return $ret;\n                        })()));\n                    };\n                    var this_2 = this;\n                    do {\n                        _loop_2();\n                    } while (this.b());\n                    d = 8;\n                    break;\n                case 9:\n                    if (c == null) {\n                        return null;\n                    }\n                    c._isClosed = true;\n                    break;\n            }\n            a = false;\n        }\n        return b;\n    };\n    PathMarkupParser.prototype.m = function (a) {\n        var b = this.g();\n        var c = this.g();\n        if (!a) {\n            b += this.l.x;\n            c += this.l.y;\n        }\n        return { $type: Point_$type, x: b, y: c };\n    };\n    PathMarkupParser.prototype.g = function () {\n        var a = this.f._inner[this.h++];\n        if (a.c != 10) {\n            throw new InvalidOperationException(0);\n        }\n        return a.b;\n    };\n    PathMarkupParser.prototype.b = function () {\n        if (this.h >= this.f.count) {\n            return false;\n        }\n        return this.f._inner[this.h].c == 10;\n    };\n    PathMarkupParser.prototype.d = function (a) {\n        while (this.h < a.length && this.c(a.charAt(this.h))) {\n            this.h++;\n        }\n        if (this.h < a.length) {\n            this.e = a.charAt(this.h);\n            this.h++;\n            return true;\n        }\n        return false;\n    };\n    PathMarkupParser.prototype.c = function (a) {\n        return a == '\\r' || a == '\\n' || a == ' ' || a == '\\t';\n    };\n    PathMarkupParser.$t = markType(PathMarkupParser, 'PathMarkupParser');\n    return PathMarkupParser;\n}(Base));\nexport { PathMarkupParser };\n"]},"metadata":{},"sourceType":"module"}