{"ast":null,"code":"import _objectSpread from\"/Users/genesisbarrios/Documents/coding/Thug Rugs/ThugRugzClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/genesisbarrios/Documents/coding/Thug Rugs/ThugRugzClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/genesisbarrios/Documents/coding/Thug Rugs/ThugRugzClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/genesisbarrios/Documents/coding/Thug Rugs/ThugRugzClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/genesisbarrios/Documents/coding/Thug Rugs/ThugRugzClient/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import{useEffect,useState}from\"react\";import styled from\"styled-components\";import{Button,Snackbar}from\"@material-ui/core\";import Alert from\"@material-ui/lab/Alert\";import'./HoverRugz.css';import{LAMPORTS_PER_SOL}from\"@solana/web3.js\";import{getParsedNftAccountsByOwner}from\"@nfteyez/sol-rayz\";import{useAnchorWallet}from\"@solana/wallet-adapter-react\";import{WalletDialogButton}from\"@solana/wallet-adapter-material-ui\";import{getCandyMachineState}from\"./candy-machine\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var ConnectButton=styled(WalletDialogButton)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\"])));var CounterText=styled.span(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\"])));// add your styles here\nvar MintContainer=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\"])));// add your styles here\nvar MintButton=styled(Button)(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\"])));// add your styles here\nvar HoverRugz=function HoverRugz(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),balance=_useState2[0],setBalance=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isActive=_useState4[0],setIsActive=_useState4[1];// true when countdown completes\nvar _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isSoldOut=_useState6[0],setIsSoldOut=_useState6[1];// true when items remaining is zero\nvar _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),isMinting=_useState8[0],setIsMinting=_useState8[1];// true when user got to press MINT\nvar _useState9=useState(0),_useState10=_slicedToArray(_useState9,2),itemsAvailable=_useState10[0],setItemsAvailable=_useState10[1];var _useState11=useState(0),_useState12=_slicedToArray(_useState11,2),itemsRedeemed=_useState12[0],setItemsRedeemed=_useState12[1];var _useState13=useState(0),_useState14=_slicedToArray(_useState13,2),itemsRemaining=_useState14[0],setItemsRemaining=_useState14[1];var _useState15=useState({open:false,message:\"\",severity:undefined}),_useState16=_slicedToArray(_useState15,2),alertState=_useState16[0],setAlertState=_useState16[1];var _useState17=useState(new Date(props.startDate)),_useState18=_slicedToArray(_useState17,2),startDate=_useState18[0],setStartDate=_useState18[1];var wallet=useAnchorWallet();var _useState19=useState(),_useState20=_slicedToArray(_useState19,2),candyMachine=_useState20[0],setCandyMachine=_useState20[1];var getAllNftData=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var ownerToken,nfts;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;if(!wallet){_context.next=7;break;}ownerToken=wallet.publicKey;_context.next=5;return getParsedNftAccountsByOwner({publicAddress:ownerToken,connection:props.connection});case 5:nfts=_context.sent;return _context.abrupt(\"return\",nfts);case 7:_context.next=12;break;case 9:_context.prev=9;_context.t0=_context[\"catch\"](0);console.log(_context.t0);case 12:case\"end\":return _context.stop();}}},_callee,null,[[0,9]]);}));return function getAllNftData(){return _ref.apply(this,arguments);};}();//Function to get all nft data\nvar getNftTokenData=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var nftData,nftArray,x;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.prev=0;_context2.next=3;return getAllNftData();case 3:nftData=_context2.sent;nftArray=[];if(nftData){for(x=0;x<nftData.length;x++){nftArray.push({name:nftData[x].data.name,uri:nftData[x].data.uri});//console.log(nftArray[x]);\n}}return _context2.abrupt(\"return\",nftArray);case 9:_context2.prev=9;_context2.t0=_context2[\"catch\"](0);console.log(_context2.t0);case 12:case\"end\":return _context2.stop();}}},_callee2,null,[[0,9]]);}));return function getNftTokenData(){return _ref2.apply(this,arguments);};}();var refreshCandyMachineState=function refreshCandyMachineState(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var _yield$getCandyMachin,candyMachine,goLiveDate,itemsAvailable,itemsRemaining,itemsRedeemed;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:if(wallet){_context3.next=2;break;}return _context3.abrupt(\"return\");case 2:_context3.next=4;return getCandyMachineState(wallet,props.candyMachineId,props.connection);case 4:_yield$getCandyMachin=_context3.sent;candyMachine=_yield$getCandyMachin.candyMachine;goLiveDate=_yield$getCandyMachin.goLiveDate;itemsAvailable=_yield$getCandyMachin.itemsAvailable;itemsRemaining=_yield$getCandyMachin.itemsRemaining;itemsRedeemed=_yield$getCandyMachin.itemsRedeemed;setItemsAvailable(itemsAvailable);setItemsRemaining(itemsRemaining);setItemsRedeemed(itemsRedeemed);setIsSoldOut(itemsRemaining===0);setStartDate(goLiveDate);setCandyMachine(candyMachine);case 16:case\"end\":return _context3.stop();}}},_callee3);}))();};useEffect(function(){_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var _balance,res;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:if(!wallet){_context4.next=8;break;}_context4.next=3;return props.connection.getBalance(wallet.publicKey);case 3:_balance=_context4.sent;_context4.next=6;return getNftTokenData();case 6:res=_context4.sent;//console.log(res)\nsetBalance(_balance/LAMPORTS_PER_SOL);case 8:case\"end\":return _context4.stop();}}},_callee4);}))();},[wallet,props.connection]);useEffect(refreshCandyMachineState,[wallet,props.candyMachineId,props.connection]);return/*#__PURE__*/_jsxs(\"main\",{children:[/*#__PURE__*/_jsx(MintContainer,{children:!wallet?/*#__PURE__*/_jsx(\"div\",{className:\"city\",children:/*#__PURE__*/_jsx(\"div\",{className:\"connectButton\",children:/*#__PURE__*/_jsx(ConnectButton,{id:\"button\",children:\"Connect Wallet\"})})}):/*#__PURE__*/_jsx(\"div\",{children:\"game\"})}),/*#__PURE__*/_jsx(Snackbar,{open:alertState.open,autoHideDuration:6000,onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},children:/*#__PURE__*/_jsx(Alert,{onClose:function onClose(){return setAlertState(_objectSpread(_objectSpread({},alertState),{},{open:false}));},severity:alertState.severity,children:alertState.message})})]});};export default HoverRugz;","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/Thug Rugs/ThugRugzClient/src/HoverRugz.tsx"],"names":["useEffect","useState","styled","Button","Snackbar","Alert","LAMPORTS_PER_SOL","getParsedNftAccountsByOwner","useAnchorWallet","WalletDialogButton","getCandyMachineState","ConnectButton","CounterText","span","MintContainer","div","MintButton","HoverRugz","props","balance","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","itemsAvailable","setItemsAvailable","itemsRedeemed","setItemsRedeemed","itemsRemaining","setItemsRemaining","open","message","severity","undefined","alertState","setAlertState","Date","startDate","setStartDate","wallet","candyMachine","setCandyMachine","getAllNftData","ownerToken","publicKey","publicAddress","connection","nfts","console","log","getNftTokenData","nftData","nftArray","x","length","push","name","data","uri","refreshCandyMachineState","candyMachineId","goLiveDate","getBalance","res"],"mappings":"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","sourcesContent":["import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport './HoverRugz.css';\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\nimport { TokenAccountsFilter } from \"@solana/web3.js\";\nimport * as web3js from \"@solana/web3.js\";\nimport axios from \"axios\";\nimport { getParsedNftAccountsByOwner,isValidSolanaAddress, createConnectionConfig,} from \"@nfteyez/sol-rayz\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport Typewriter from \"typewriter-effect\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\nimport { Filter } from \"@material-ui/icons\";\nimport { TOKEN_PROGRAM_ID } from \"@solana/spl-token\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HoverRugzProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst HoverRugz = (props: HoverRugzProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n  \n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const getAllNftData = async () => {\n    try {\n      if(wallet){\n        let ownerToken = wallet.publicKey;\n        const nfts = await getParsedNftAccountsByOwner({\n          publicAddress: ownerToken,\n          connection: props.connection\n        });\n        return nfts;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  \n//Function to get all nft data\nconst getNftTokenData = async () => {\n  try {\n      let nftData = await getAllNftData();\n      let nftArray = []\n      if(nftData){\n        for(var x=0; x<nftData.length; x++){\n          nftArray.push({name: nftData[x].data.name, uri: nftData[x].data.uri})\n          //console.log(nftArray[x]);\n        }\n      }\n      return nftArray;\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nconst refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n\n\n        //get nfts from wallet\n        // var nfts = await props.connection.getParsedTokenAccountsByOwner(wallet.publicKey, {programId: TOKEN_PROGRAM_ID}, 'confirmed').then(value => { return value.value });\n        // var nft= nfts;\n        // console.log(nft)\n\n        // var nftHashes = [];\n        // for(var x=0; x<nfts.length; x++){\n        //   if(nfts[x].account.data.parsed.info.owner == wallet.publicKey){\n        //     nftHashes[x] = nfts[x].account.data.parsed.info.mint;\n        //   }\n        // }\n        // console.log(nftHashes);\n        \n          let res = await getNftTokenData();\n          //console.log(res)\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n\n  return (\n    <main>\n      \n      {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>} */}\n      \n      \n      <MintContainer>\n        {!wallet ? (\n            <div className=\"city\">\n            <div className=\"connectButton\"><ConnectButton id=\"button\">Connect Wallet</ConnectButton></div>\n            </div>\n        ) : (\n            <div>game</div>\n        )}\n        </MintContainer>\n\n        <Snackbar\n            open={alertState.open}\n            autoHideDuration={6000}\n            onClose={() => setAlertState({ ...alertState, open: false })}\n        >\n            <Alert\n            onClose={() => setAlertState({ ...alertState, open: false })}\n            severity={alertState.severity}\n            >\n            {alertState.message}\n            </Alert>\n        </Snackbar>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nexport default HoverRugz;\n"]},"metadata":{},"sourceType":"module"}