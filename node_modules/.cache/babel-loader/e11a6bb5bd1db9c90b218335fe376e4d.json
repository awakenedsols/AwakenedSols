{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { GeometryData } from \"./GeometryData\";\nimport { markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\n/**\n * @hidden\n */\n\nvar EllipseGeometryData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(EllipseGeometryData, _super);\n\n  function EllipseGeometryData() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._centerX = 0;\n    _this._centerY = 0;\n    _this._radiusX = 0;\n    _this._radiusY = 0;\n    return _this;\n  }\n\n  EllipseGeometryData.prototype.get_type = function () {\n    return \"Ellipse\";\n  };\n\n  Object.defineProperty(EllipseGeometryData.prototype, \"type\", {\n    get: function () {\n      return this.get_type();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EllipseGeometryData.prototype, \"centerX\", {\n    get: function () {\n      return this._centerX;\n    },\n    set: function (a) {\n      this._centerX = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EllipseGeometryData.prototype, \"centerY\", {\n    get: function () {\n      return this._centerY;\n    },\n    set: function (a) {\n      this._centerY = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EllipseGeometryData.prototype, \"radiusX\", {\n    get: function () {\n      return this._radiusX;\n    },\n    set: function (a) {\n      this._radiusX = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(EllipseGeometryData.prototype, \"radiusY\", {\n    get: function () {\n      return this._radiusY;\n    },\n    set: function (a) {\n      this._radiusY = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  EllipseGeometryData.prototype.a = function () {\n    return \"centerX: \" + this.centerX + \", centerY: \" + this.centerY + \", radiusX: \" + this.radiusX + \", radiusY: \" + this.radiusY;\n  };\n\n  EllipseGeometryData.prototype.scaleByViewport = function (a) {\n    this.centerX = (this.centerX - a.left) / a.width;\n    this.centerY = (this.centerY - a.top) / a.height;\n    this.radiusX = this.radiusX / a.width;\n    this.radiusY = this.radiusY / a.height;\n  };\n\n  EllipseGeometryData.prototype.getPointsOverride = function (a, b) {\n    var c = new List$1(PointData.$, 0);\n    a.add(c);\n    c.add(new PointData(this.centerX, this.centerY));\n  };\n\n  EllipseGeometryData.$t = markType(EllipseGeometryData, 'EllipseGeometryData', GeometryData.$);\n  return EllipseGeometryData;\n}(GeometryData);\n\nexport { EllipseGeometryData };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/EllipseGeometryData.js"],"names":["__extends","GeometryData","markType","List$1","PointData","EllipseGeometryData","_super","_this","apply","arguments","_centerX","_centerY","_radiusX","_radiusY","prototype","get_type","Object","defineProperty","get","enumerable","configurable","set","a","centerX","centerY","radiusX","radiusY","scaleByViewport","left","width","top","height","getPointsOverride","b","c","$","add","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { GeometryData } from \"./GeometryData\";\nimport { markType } from \"./type\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\n/**\n * @hidden\n */\nvar EllipseGeometryData = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(EllipseGeometryData, _super);\n    function EllipseGeometryData() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._centerX = 0;\n        _this._centerY = 0;\n        _this._radiusX = 0;\n        _this._radiusY = 0;\n        return _this;\n    }\n    EllipseGeometryData.prototype.get_type = function () {\n        return \"Ellipse\";\n    };\n    Object.defineProperty(EllipseGeometryData.prototype, \"type\", {\n        get: function () {\n            return this.get_type();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EllipseGeometryData.prototype, \"centerX\", {\n        get: function () {\n            return this._centerX;\n        },\n        set: function (a) {\n            this._centerX = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EllipseGeometryData.prototype, \"centerY\", {\n        get: function () {\n            return this._centerY;\n        },\n        set: function (a) {\n            this._centerY = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EllipseGeometryData.prototype, \"radiusX\", {\n        get: function () {\n            return this._radiusX;\n        },\n        set: function (a) {\n            this._radiusX = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(EllipseGeometryData.prototype, \"radiusY\", {\n        get: function () {\n            return this._radiusY;\n        },\n        set: function (a) {\n            this._radiusY = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EllipseGeometryData.prototype.a = function () {\n        return \"centerX: \" + this.centerX + \", centerY: \" + this.centerY + \", radiusX: \" + this.radiusX + \", radiusY: \" + this.radiusY;\n    };\n    EllipseGeometryData.prototype.scaleByViewport = function (a) {\n        this.centerX = (this.centerX - a.left) / a.width;\n        this.centerY = (this.centerY - a.top) / a.height;\n        this.radiusX = this.radiusX / a.width;\n        this.radiusY = this.radiusY / a.height;\n    };\n    EllipseGeometryData.prototype.getPointsOverride = function (a, b) {\n        var c = new List$1(PointData.$, 0);\n        a.add(c);\n        c.add(new PointData(this.centerX, this.centerY));\n    };\n    EllipseGeometryData.$t = markType(EllipseGeometryData, 'EllipseGeometryData', GeometryData.$);\n    return EllipseGeometryData;\n}(GeometryData));\nexport { EllipseGeometryData };\n"]},"metadata":{},"sourceType":"module"}