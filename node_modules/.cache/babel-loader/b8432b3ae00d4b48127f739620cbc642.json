{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AxisDescriptionMetadata } from \"./AxisDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar CategoryAxisBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(CategoryAxisBaseDescriptionMetadata, _super);\n\n  function CategoryAxisBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CategoryAxisBaseDescriptionMetadata.b = function (a) {\n    if (CategoryAxisBaseDescriptionMetadata.a == null) {\n      CategoryAxisBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      CategoryAxisBaseDescriptionMetadata.c(CategoryAxisBaseDescriptionMetadata.a);\n    }\n\n    if (a.g(CategoryAxisBaseDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(CategoryAxisBaseDescriptionMetadata.a);\n  };\n\n  CategoryAxisBaseDescriptionMetadata.c = function (a) {\n    AxisDescriptionMetadata.c(a);\n    a.item(\"DataSourceRef\", \"(w:ItemsSource,xam:ItemsSource,wf:ItemsSource)DataRef::object\");\n    a.item(\"ItemsCount\", \"Number:int\");\n    a.item(\"Gap\", \"Number:double\");\n    a.item(\"MaximumGap\", \"Number:double\");\n    a.item(\"MinimumGapSize\", \"Number:double\");\n    a.item(\"Overlap\", \"Number:double\");\n    a.item(\"UseClusteringMode\", \"Boolean\");\n    a.item(\"ItemsCountChangeRef\", \"EventRef::itemsCountChange\");\n    CategoryAxisBaseDescriptionMetadata.e(a);\n  };\n\n  CategoryAxisBaseDescriptionMetadata.d = function (a) {\n    CategoryAxisBaseDescriptionMetadata.b(a);\n    a.t(\"CategoryAxisBase\", CategoryAxisBaseDescriptionMetadata.a);\n  };\n\n  CategoryAxisBaseDescriptionMetadata.e = function (a) {\n    a.item(\"DataSourceRef\", \"(w:ItemsSource,xam:ItemsSource)DataRef:String\");\n  };\n\n  CategoryAxisBaseDescriptionMetadata.$t = markType(CategoryAxisBaseDescriptionMetadata, 'CategoryAxisBaseDescriptionMetadata');\n  CategoryAxisBaseDescriptionMetadata.a = null;\n  return CategoryAxisBaseDescriptionMetadata;\n}(Base);\n\nexport { CategoryAxisBaseDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/CategoryAxisBaseDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","AxisDescriptionMetadata","CategoryAxisBaseDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","item","e","d","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,uBAAT,QAAwC,2BAAxC;AACA;AACA;AACA;;AACA,IAAIC,mCAAmC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACrFP,EAAAA,SAAS,CAACM,mCAAD,EAAsCC,MAAtC,CAAT;;AACA,WAASD,mCAAT,GAA+C;AAC3C,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,mCAAmC,CAACI,CAApC,GAAwC,UAAUC,CAAV,EAAa;AACjD,QAAIL,mCAAmC,CAACK,CAApC,IAAyC,IAA7C,EAAmD;AAC/CL,MAAAA,mCAAmC,CAACK,CAApC,GAAwC,IAAIP,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAxC;AACAI,MAAAA,mCAAmC,CAACM,CAApC,CAAsCN,mCAAmC,CAACK,CAA1E;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,mCAAmC,CAACK,CAAxC,CAAJ,EAAgD;AAC5C;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,mCAAmC,CAACK,CAAxC;AACH,GATD;;AAUAL,EAAAA,mCAAmC,CAACM,CAApC,GAAwC,UAAUD,CAAV,EAAa;AACjDN,IAAAA,uBAAuB,CAACO,CAAxB,CAA0BD,CAA1B;AACAA,IAAAA,CAAC,CAACI,IAAF,CAAO,eAAP,EAAwB,+DAAxB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,YAAP,EAAqB,YAArB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,KAAP,EAAc,eAAd;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,YAAP,EAAqB,eAArB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,gBAAP,EAAyB,eAAzB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,SAAP,EAAkB,eAAlB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,mBAAP,EAA4B,SAA5B;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,qBAAP,EAA8B,4BAA9B;AACAT,IAAAA,mCAAmC,CAACU,CAApC,CAAsCL,CAAtC;AACH,GAXD;;AAYAL,EAAAA,mCAAmC,CAACW,CAApC,GAAwC,UAAUN,CAAV,EAAa;AACjDL,IAAAA,mCAAmC,CAACI,CAApC,CAAsCC,CAAtC;AACAA,IAAAA,CAAC,CAACO,CAAF,CAAI,kBAAJ,EAAwBZ,mCAAmC,CAACK,CAA5D;AACH,GAHD;;AAIAL,EAAAA,mCAAmC,CAACU,CAApC,GAAwC,UAAUL,CAAV,EAAa;AACjDA,IAAAA,CAAC,CAACI,IAAF,CAAO,eAAP,EAAwB,+CAAxB;AACH,GAFD;;AAGAT,EAAAA,mCAAmC,CAACa,EAApC,GAAyChB,QAAQ,CAACG,mCAAD,EAAsC,qCAAtC,CAAjD;AACAA,EAAAA,mCAAmC,CAACK,CAApC,GAAwC,IAAxC;AACA,SAAOL,mCAAP;AACH,CArCsE,CAqCrEL,IArCqE,CAAvE;;AAsCA,SAASK,mCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AxisDescriptionMetadata } from \"./AxisDescriptionMetadata\";\n/**\n * @hidden\n */\nvar CategoryAxisBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(CategoryAxisBaseDescriptionMetadata, _super);\n    function CategoryAxisBaseDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CategoryAxisBaseDescriptionMetadata.b = function (a) {\n        if (CategoryAxisBaseDescriptionMetadata.a == null) {\n            CategoryAxisBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            CategoryAxisBaseDescriptionMetadata.c(CategoryAxisBaseDescriptionMetadata.a);\n        }\n        if (a.g(CategoryAxisBaseDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(CategoryAxisBaseDescriptionMetadata.a);\n    };\n    CategoryAxisBaseDescriptionMetadata.c = function (a) {\n        AxisDescriptionMetadata.c(a);\n        a.item(\"DataSourceRef\", \"(w:ItemsSource,xam:ItemsSource,wf:ItemsSource)DataRef::object\");\n        a.item(\"ItemsCount\", \"Number:int\");\n        a.item(\"Gap\", \"Number:double\");\n        a.item(\"MaximumGap\", \"Number:double\");\n        a.item(\"MinimumGapSize\", \"Number:double\");\n        a.item(\"Overlap\", \"Number:double\");\n        a.item(\"UseClusteringMode\", \"Boolean\");\n        a.item(\"ItemsCountChangeRef\", \"EventRef::itemsCountChange\");\n        CategoryAxisBaseDescriptionMetadata.e(a);\n    };\n    CategoryAxisBaseDescriptionMetadata.d = function (a) {\n        CategoryAxisBaseDescriptionMetadata.b(a);\n        a.t(\"CategoryAxisBase\", CategoryAxisBaseDescriptionMetadata.a);\n    };\n    CategoryAxisBaseDescriptionMetadata.e = function (a) {\n        a.item(\"DataSourceRef\", \"(w:ItemsSource,xam:ItemsSource)DataRef:String\");\n    };\n    CategoryAxisBaseDescriptionMetadata.$t = markType(CategoryAxisBaseDescriptionMetadata, 'CategoryAxisBaseDescriptionMetadata');\n    CategoryAxisBaseDescriptionMetadata.a = null;\n    return CategoryAxisBaseDescriptionMetadata;\n}(Base));\nexport { CategoryAxisBaseDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}