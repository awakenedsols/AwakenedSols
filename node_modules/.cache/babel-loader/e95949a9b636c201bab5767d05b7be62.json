{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { Base, String_$type, fromEnum, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { List$1 } from \"./List$1\";\nimport { HashSet$1 } from \"./HashSet$1\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { stringJoin1 } from \"./string\";\n/**\n * @hidden\n */\n\nvar CodeGeneratingImportManager =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(CodeGeneratingImportManager, _super);\n\n  function CodeGeneratingImportManager() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this._packageOverride = null;\n    _this._isImportsOnly = false;\n    _this.k = new List$1(String_$type, 0);\n    _this.i = new HashSet$1(String_$type, 0);\n    _this.j = new List$1(String_$type, 0);\n    _this.h = new HashSet$1(String_$type, 0);\n    _this.f = new Dictionary$2(String_$type, List$1.$.specialize(String_$type), 0);\n    _this.g = new Dictionary$2(String_$type, HashSet$1.$.specialize(String_$type), 0);\n    return _this;\n  }\n\n  Object.defineProperty(CodeGeneratingImportManager.prototype, \"packageOverride\", {\n    get: function () {\n      return this._packageOverride;\n    },\n    set: function (a) {\n      this._packageOverride = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(CodeGeneratingImportManager.prototype, \"isImportsOnly\", {\n    get: function () {\n      return this._isImportsOnly;\n    },\n    set: function (a) {\n      this._isImportsOnly = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CodeGeneratingImportManager.prototype.addUsing = function (a) {\n    if (!this.i.contains(a)) {\n      this.i.add_1(a);\n      this.k.add(a);\n    }\n  };\n\n  Object.defineProperty(CodeGeneratingImportManager.prototype, \"hasPackageImports\", {\n    get: function () {\n      return this.f.count > 0;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  CodeGeneratingImportManager.prototype.packageImportsToString = function () {\n    var a = new StringBuilder(0);\n\n    for (var b = 0; b < this.j.count; b++) {\n      var c = this.j._inner[b];\n      var d = this.f.item(c);\n      var e = stringJoin1(String_$type, \", \", d);\n\n      if (this.isImportsOnly && b > 0) {\n        a.u(\",\");\n      }\n\n      if (this.isImportsOnly) {\n        a.l(e);\n      } else {\n        if (this.h.contains(c)) {\n          a.u(\"import \" + e + \" from '\" + c + \"';\");\n        } else {\n          a.u(\"import { \" + e + \" } from '\" + c + \"';\");\n        }\n      }\n    }\n\n    return a.toString();\n  };\n\n  CodeGeneratingImportManager.prototype.usingsToString = function () {\n    var a = new StringBuilder(0);\n\n    for (var b = 0; b < this.k.count; b++) {\n      a.u(this.k._inner[b]);\n    }\n\n    return a.toString();\n  };\n\n  CodeGeneratingImportManager.prototype.any = function () {\n    return this.j.count > 0 || this.k.count > 0;\n  };\n\n  CodeGeneratingImportManager.prototype.addPackageImport = function (a, b) {\n    if (this.packageOverride != null) {\n      a = this.packageOverride;\n    }\n\n    if (!this.g.containsKey(a)) {\n      this.j.add(a);\n      this.g.addItem(a, new HashSet$1(String_$type, 0));\n      this.f.addItem(a, new List$1(String_$type, 0));\n    }\n\n    if (!this.g.item(a).contains(b)) {\n      this.g.item(a).add_1(b);\n      this.f.item(a).add(b);\n    }\n  };\n\n  CodeGeneratingImportManager.prototype.addDefaultImport = function (a, b) {\n    if (this.packageOverride != null) {\n      a = this.packageOverride;\n    }\n\n    if (!this.g.containsKey(a)) {\n      this.j.add(a);\n      this.g.addItem(a, new HashSet$1(String_$type, 0));\n      this.f.addItem(a, new List$1(String_$type, 0));\n      this.h.add_1(a);\n    }\n\n    if (!this.g.item(a).contains(b)) {\n      this.g.item(a).add_1(b);\n      this.f.item(a).add(b);\n    }\n  };\n\n  CodeGeneratingImportManager.merge = function (a, b) {\n    var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e, e_6, _f;\n\n    var c = new CodeGeneratingImportManager();\n\n    if (a.isImportsOnly || b.isImportsOnly) {\n      c.isImportsOnly = true;\n    }\n\n    if (b.f.count > 0 || a.f.count > 0) {\n      try {\n        for (var _g = __values(fromEnum(a.f.keys)), _h = _g.next(); !_h.done; _h = _g.next()) {\n          var d = _h.value;\n\n          try {\n            for (var _j = (e_2 = void 0, __values(fromEnum(a.f.item(d)))), _k = _j.next(); !_k.done; _k = _j.next()) {\n              var e = _k.value;\n\n              if (a.h.contains(d)) {\n                c.addDefaultImport(d, e);\n              } else {\n                c.addPackageImport(d, e);\n              }\n            }\n          } catch (e_2_1) {\n            e_2 = {\n              error: e_2_1\n            };\n          } finally {\n            try {\n              if (_k && !_k.done && (_b = _j.return)) _b.call(_j);\n            } finally {\n              if (e_2) throw e_2.error;\n            }\n          }\n        }\n      } catch (e_1_1) {\n        e_1 = {\n          error: e_1_1\n        };\n      } finally {\n        try {\n          if (_h && !_h.done && (_a = _g.return)) _a.call(_g);\n        } finally {\n          if (e_1) throw e_1.error;\n        }\n      }\n\n      try {\n        for (var _l = __values(fromEnum(b.f.keys)), _m = _l.next(); !_m.done; _m = _l.next()) {\n          var f = _m.value;\n\n          try {\n            for (var _o = (e_4 = void 0, __values(fromEnum(b.f.item(f)))), _p = _o.next(); !_p.done; _p = _o.next()) {\n              var g = _p.value;\n\n              if (b.h.contains(f)) {\n                c.addDefaultImport(f, g);\n              } else {\n                c.addPackageImport(f, g);\n              }\n            }\n          } catch (e_4_1) {\n            e_4 = {\n              error: e_4_1\n            };\n          } finally {\n            try {\n              if (_p && !_p.done && (_d = _o.return)) _d.call(_o);\n            } finally {\n              if (e_4) throw e_4.error;\n            }\n          }\n        }\n      } catch (e_3_1) {\n        e_3 = {\n          error: e_3_1\n        };\n      } finally {\n        try {\n          if (_m && !_m.done && (_c = _l.return)) _c.call(_l);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n      }\n    } else {\n      try {\n        for (var _q = __values(fromEnum(a.k)), _r = _q.next(); !_r.done; _r = _q.next()) {\n          var h = _r.value;\n          c.addUsing(h);\n        }\n      } catch (e_5_1) {\n        e_5 = {\n          error: e_5_1\n        };\n      } finally {\n        try {\n          if (_r && !_r.done && (_e = _q.return)) _e.call(_q);\n        } finally {\n          if (e_5) throw e_5.error;\n        }\n      }\n\n      try {\n        for (var _s = __values(fromEnum(b.k)), _t = _s.next(); !_t.done; _t = _s.next()) {\n          var i = _t.value;\n          c.addUsing(i);\n        }\n      } catch (e_6_1) {\n        e_6 = {\n          error: e_6_1\n        };\n      } finally {\n        try {\n          if (_t && !_t.done && (_f = _s.return)) _f.call(_s);\n        } finally {\n          if (e_6) throw e_6.error;\n        }\n      }\n    }\n\n    return c;\n  };\n\n  CodeGeneratingImportManager.prototype.removeDuplicates = function (a) {\n    var e_7, _a, e_8, _b, e_9, _c;\n\n    var b = CodeGeneratingImportManager.merge(this, new CodeGeneratingImportManager());\n\n    if (this.isImportsOnly) {\n      b.isImportsOnly = true;\n    }\n\n    if (a.f.count > 0) {\n      try {\n        for (var _d = __values(fromEnum(a.f.keys)), _e = _d.next(); !_e.done; _e = _d.next()) {\n          var c = _e.value;\n\n          if (this.f.containsKey(c)) {\n            try {\n              for (var _f = (e_8 = void 0, __values(fromEnum(a.f.item(c)))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                var d = _g.value;\n\n                if (b.g.containsKey(c) && b.g.item(c).contains(d)) {\n                  b.g.item(c).remove(d);\n                  b.f.item(c).remove(d);\n\n                  if (b.f.item(c).count == 0) {\n                    b.j.remove(c);\n                    b.h.remove(c);\n                    b.g.removeItem(c);\n                    b.f.removeItem(c);\n                  }\n                }\n              }\n            } catch (e_8_1) {\n              e_8 = {\n                error: e_8_1\n              };\n            } finally {\n              try {\n                if (_g && !_g.done && (_b = _f.return)) _b.call(_f);\n              } finally {\n                if (e_8) throw e_8.error;\n              }\n            }\n          }\n        }\n      } catch (e_7_1) {\n        e_7 = {\n          error: e_7_1\n        };\n      } finally {\n        try {\n          if (_e && !_e.done && (_a = _d.return)) _a.call(_d);\n        } finally {\n          if (e_7) throw e_7.error;\n        }\n      }\n    } else {\n      try {\n        for (var _h = __values(fromEnum(a.k)), _j = _h.next(); !_j.done; _j = _h.next()) {\n          var e = _j.value;\n\n          if (b.i.contains(e)) {\n            b.i.remove(e);\n            b.k.remove(e);\n          }\n        }\n      } catch (e_9_1) {\n        e_9 = {\n          error: e_9_1\n        };\n      } finally {\n        try {\n          if (_j && !_j.done && (_c = _h.return)) _c.call(_h);\n        } finally {\n          if (e_9) throw e_9.error;\n        }\n      }\n    }\n\n    return b;\n  };\n\n  CodeGeneratingImportManager.$t = markType(CodeGeneratingImportManager, 'CodeGeneratingImportManager');\n  return CodeGeneratingImportManager;\n}(Base);\n\nexport { CodeGeneratingImportManager };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/CodeGeneratingImportManager.js"],"names":["__extends","__values","Base","String_$type","fromEnum","markType","Dictionary$2","List$1","HashSet$1","StringBuilder","stringJoin1","CodeGeneratingImportManager","_super","_this","apply","arguments","_packageOverride","_isImportsOnly","k","i","j","h","f","$","specialize","g","Object","defineProperty","prototype","get","set","a","enumerable","configurable","addUsing","contains","add_1","add","count","packageImportsToString","b","c","_inner","d","item","e","isImportsOnly","u","l","toString","usingsToString","any","addPackageImport","packageOverride","containsKey","addItem","addDefaultImport","merge","e_1","_a","e_2","_b","e_3","_c","e_4","_d","e_5","_e","e_6","_f","_g","keys","_h","next","done","value","_j","_k","e_2_1","error","return","call","e_1_1","_l","_m","_o","_p","e_4_1","e_3_1","_q","_r","e_5_1","_s","_t","e_6_1","removeDuplicates","e_7","e_8","e_9","remove","removeItem","e_8_1","e_7_1","e_9_1","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __values } from \"tslib\";\nimport { Base, String_$type, fromEnum, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { List$1 } from \"./List$1\";\nimport { HashSet$1 } from \"./HashSet$1\";\nimport { StringBuilder } from \"./StringBuilder\";\nimport { stringJoin1 } from \"./string\";\n/**\n * @hidden\n */\nvar CodeGeneratingImportManager = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(CodeGeneratingImportManager, _super);\n    function CodeGeneratingImportManager() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this._packageOverride = null;\n        _this._isImportsOnly = false;\n        _this.k = new List$1(String_$type, 0);\n        _this.i = new HashSet$1(String_$type, 0);\n        _this.j = new List$1(String_$type, 0);\n        _this.h = new HashSet$1(String_$type, 0);\n        _this.f = new Dictionary$2(String_$type, List$1.$.specialize(String_$type), 0);\n        _this.g = new Dictionary$2(String_$type, HashSet$1.$.specialize(String_$type), 0);\n        return _this;\n    }\n    Object.defineProperty(CodeGeneratingImportManager.prototype, \"packageOverride\", {\n        get: function () {\n            return this._packageOverride;\n        },\n        set: function (a) {\n            this._packageOverride = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(CodeGeneratingImportManager.prototype, \"isImportsOnly\", {\n        get: function () {\n            return this._isImportsOnly;\n        },\n        set: function (a) {\n            this._isImportsOnly = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CodeGeneratingImportManager.prototype.addUsing = function (a) {\n        if (!this.i.contains(a)) {\n            this.i.add_1(a);\n            this.k.add(a);\n        }\n    };\n    Object.defineProperty(CodeGeneratingImportManager.prototype, \"hasPackageImports\", {\n        get: function () {\n            return this.f.count > 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CodeGeneratingImportManager.prototype.packageImportsToString = function () {\n        var a = new StringBuilder(0);\n        for (var b = 0; b < this.j.count; b++) {\n            var c = this.j._inner[b];\n            var d = this.f.item(c);\n            var e = stringJoin1(String_$type, \", \", d);\n            if (this.isImportsOnly && b > 0) {\n                a.u(\",\");\n            }\n            if (this.isImportsOnly) {\n                a.l(e);\n            }\n            else {\n                if (this.h.contains(c)) {\n                    a.u(\"import \" + e + \" from '\" + c + \"';\");\n                }\n                else {\n                    a.u(\"import { \" + e + \" } from '\" + c + \"';\");\n                }\n            }\n        }\n        return a.toString();\n    };\n    CodeGeneratingImportManager.prototype.usingsToString = function () {\n        var a = new StringBuilder(0);\n        for (var b = 0; b < this.k.count; b++) {\n            a.u(this.k._inner[b]);\n        }\n        return a.toString();\n    };\n    CodeGeneratingImportManager.prototype.any = function () {\n        return this.j.count > 0 || this.k.count > 0;\n    };\n    CodeGeneratingImportManager.prototype.addPackageImport = function (a, b) {\n        if (this.packageOverride != null) {\n            a = this.packageOverride;\n        }\n        if (!this.g.containsKey(a)) {\n            this.j.add(a);\n            this.g.addItem(a, new HashSet$1(String_$type, 0));\n            this.f.addItem(a, new List$1(String_$type, 0));\n        }\n        if (!this.g.item(a).contains(b)) {\n            this.g.item(a).add_1(b);\n            this.f.item(a).add(b);\n        }\n    };\n    CodeGeneratingImportManager.prototype.addDefaultImport = function (a, b) {\n        if (this.packageOverride != null) {\n            a = this.packageOverride;\n        }\n        if (!this.g.containsKey(a)) {\n            this.j.add(a);\n            this.g.addItem(a, new HashSet$1(String_$type, 0));\n            this.f.addItem(a, new List$1(String_$type, 0));\n            this.h.add_1(a);\n        }\n        if (!this.g.item(a).contains(b)) {\n            this.g.item(a).add_1(b);\n            this.f.item(a).add(b);\n        }\n    };\n    CodeGeneratingImportManager.merge = function (a, b) {\n        var e_1, _a, e_2, _b, e_3, _c, e_4, _d, e_5, _e, e_6, _f;\n        var c = new CodeGeneratingImportManager();\n        if (a.isImportsOnly || b.isImportsOnly) {\n            c.isImportsOnly = true;\n        }\n        if (b.f.count > 0 || a.f.count > 0) {\n            try {\n                for (var _g = __values(fromEnum(a.f.keys)), _h = _g.next(); !_h.done; _h = _g.next()) {\n                    var d = _h.value;\n                    try {\n                        for (var _j = (e_2 = void 0, __values(fromEnum(a.f.item(d)))), _k = _j.next(); !_k.done; _k = _j.next()) {\n                            var e = _k.value;\n                            if (a.h.contains(d)) {\n                                c.addDefaultImport(d, e);\n                            }\n                            else {\n                                c.addPackageImport(d, e);\n                            }\n                        }\n                    }\n                    catch (e_2_1) {\n                        e_2 = { error: e_2_1 };\n                    }\n                    finally {\n                        try {\n                            if (_k && !_k.done && (_b = _j.return))\n                                _b.call(_j);\n                        }\n                        finally {\n                            if (e_2)\n                                throw e_2.error;\n                        }\n                    }\n                }\n            }\n            catch (e_1_1) {\n                e_1 = { error: e_1_1 };\n            }\n            finally {\n                try {\n                    if (_h && !_h.done && (_a = _g.return))\n                        _a.call(_g);\n                }\n                finally {\n                    if (e_1)\n                        throw e_1.error;\n                }\n            }\n            try {\n                for (var _l = __values(fromEnum(b.f.keys)), _m = _l.next(); !_m.done; _m = _l.next()) {\n                    var f = _m.value;\n                    try {\n                        for (var _o = (e_4 = void 0, __values(fromEnum(b.f.item(f)))), _p = _o.next(); !_p.done; _p = _o.next()) {\n                            var g = _p.value;\n                            if (b.h.contains(f)) {\n                                c.addDefaultImport(f, g);\n                            }\n                            else {\n                                c.addPackageImport(f, g);\n                            }\n                        }\n                    }\n                    catch (e_4_1) {\n                        e_4 = { error: e_4_1 };\n                    }\n                    finally {\n                        try {\n                            if (_p && !_p.done && (_d = _o.return))\n                                _d.call(_o);\n                        }\n                        finally {\n                            if (e_4)\n                                throw e_4.error;\n                        }\n                    }\n                }\n            }\n            catch (e_3_1) {\n                e_3 = { error: e_3_1 };\n            }\n            finally {\n                try {\n                    if (_m && !_m.done && (_c = _l.return))\n                        _c.call(_l);\n                }\n                finally {\n                    if (e_3)\n                        throw e_3.error;\n                }\n            }\n        }\n        else {\n            try {\n                for (var _q = __values(fromEnum(a.k)), _r = _q.next(); !_r.done; _r = _q.next()) {\n                    var h = _r.value;\n                    c.addUsing(h);\n                }\n            }\n            catch (e_5_1) {\n                e_5 = { error: e_5_1 };\n            }\n            finally {\n                try {\n                    if (_r && !_r.done && (_e = _q.return))\n                        _e.call(_q);\n                }\n                finally {\n                    if (e_5)\n                        throw e_5.error;\n                }\n            }\n            try {\n                for (var _s = __values(fromEnum(b.k)), _t = _s.next(); !_t.done; _t = _s.next()) {\n                    var i = _t.value;\n                    c.addUsing(i);\n                }\n            }\n            catch (e_6_1) {\n                e_6 = { error: e_6_1 };\n            }\n            finally {\n                try {\n                    if (_t && !_t.done && (_f = _s.return))\n                        _f.call(_s);\n                }\n                finally {\n                    if (e_6)\n                        throw e_6.error;\n                }\n            }\n        }\n        return c;\n    };\n    CodeGeneratingImportManager.prototype.removeDuplicates = function (a) {\n        var e_7, _a, e_8, _b, e_9, _c;\n        var b = CodeGeneratingImportManager.merge(this, new CodeGeneratingImportManager());\n        if (this.isImportsOnly) {\n            b.isImportsOnly = true;\n        }\n        if (a.f.count > 0) {\n            try {\n                for (var _d = __values(fromEnum(a.f.keys)), _e = _d.next(); !_e.done; _e = _d.next()) {\n                    var c = _e.value;\n                    if (this.f.containsKey(c)) {\n                        try {\n                            for (var _f = (e_8 = void 0, __values(fromEnum(a.f.item(c)))), _g = _f.next(); !_g.done; _g = _f.next()) {\n                                var d = _g.value;\n                                if (b.g.containsKey(c) && b.g.item(c).contains(d)) {\n                                    b.g.item(c).remove(d);\n                                    b.f.item(c).remove(d);\n                                    if (b.f.item(c).count == 0) {\n                                        b.j.remove(c);\n                                        b.h.remove(c);\n                                        b.g.removeItem(c);\n                                        b.f.removeItem(c);\n                                    }\n                                }\n                            }\n                        }\n                        catch (e_8_1) {\n                            e_8 = { error: e_8_1 };\n                        }\n                        finally {\n                            try {\n                                if (_g && !_g.done && (_b = _f.return))\n                                    _b.call(_f);\n                            }\n                            finally {\n                                if (e_8)\n                                    throw e_8.error;\n                            }\n                        }\n                    }\n                }\n            }\n            catch (e_7_1) {\n                e_7 = { error: e_7_1 };\n            }\n            finally {\n                try {\n                    if (_e && !_e.done && (_a = _d.return))\n                        _a.call(_d);\n                }\n                finally {\n                    if (e_7)\n                        throw e_7.error;\n                }\n            }\n        }\n        else {\n            try {\n                for (var _h = __values(fromEnum(a.k)), _j = _h.next(); !_j.done; _j = _h.next()) {\n                    var e = _j.value;\n                    if (b.i.contains(e)) {\n                        b.i.remove(e);\n                        b.k.remove(e);\n                    }\n                }\n            }\n            catch (e_9_1) {\n                e_9 = { error: e_9_1 };\n            }\n            finally {\n                try {\n                    if (_j && !_j.done && (_c = _h.return))\n                        _c.call(_h);\n                }\n                finally {\n                    if (e_9)\n                        throw e_9.error;\n                }\n            }\n        }\n        return b;\n    };\n    CodeGeneratingImportManager.$t = markType(CodeGeneratingImportManager, 'CodeGeneratingImportManager');\n    return CodeGeneratingImportManager;\n}(Base));\nexport { CodeGeneratingImportManager };\n"]},"metadata":{},"sourceType":"module"}