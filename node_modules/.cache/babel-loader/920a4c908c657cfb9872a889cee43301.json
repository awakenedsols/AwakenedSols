{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport \"./App.css\";\nimport { useMemo } from \"react\";\nimport Home from \"./Home\";\nimport Sniper from \"./Sniper\";\nimport { Route, Routes } from 'react-router-dom';\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { getPhantomWallet, getSlopeWallet, getSolflareWallet, getSolletWallet, getSolletExtensionWallet } from \"@solana/wallet-adapter-wallets\";\nimport { ConnectionProvider, WalletProvider } from \"@solana/wallet-adapter-react\";\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { DEFAULT_TIMEOUT } from './connection';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ApolloClient({\n  uri: \"https://graphql.icy.tools/graphql/\",\n  cache: new InMemoryCache()\n});\nconst candyMachineId = new anchor.web3.PublicKey(process.env.REACT_APP_CANDY_MACHINE_ID);\nconst network = process.env.REACT_APP_SOLANA_NETWORK;\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST;\nconst connection = new anchor.web3.Connection(rpcHost);\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n  palette: {\n    type: 'dark'\n  },\n  overrides: {\n    MuiButtonBase: {\n      root: {\n        justifyContent: 'flex-start'\n      }\n    },\n    MuiButton: {\n      root: {\n        textTransform: undefined,\n        padding: '12px 16px'\n      },\n      startIcon: {\n        marginRight: 8\n      },\n      endIcon: {\n        marginLeft: 8\n      }\n    }\n  }\n});\n\nconst App = () => {\n  _s();\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n  const wallets = useMemo(() => [getPhantomWallet(), getSlopeWallet(), getSolflareWallet(), getSolletWallet({\n    network\n  }), getSolletExtensionWallet({\n    network\n  })], []);\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: theme,\n    children: /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n      endpoint: endpoint,\n      children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n        wallets: wallets,\n        autoConnect: true,\n        children: /*#__PURE__*/_jsxDEV(WalletDialogProvider, {\n          children: /*#__PURE__*/_jsxDEV(ApolloProvider, {\n            client: client,\n            children: /*#__PURE__*/_jsxDEV(Routes, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"/\",\n                element: HomeComponent()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"/Sniper\",\n                element: SniperComponent()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 7\n  }, this);\n};\n\n_s(App, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n\n_c = App;\nexport default App;\n\nconst HomeComponent = () => {\n  return /*#__PURE__*/_jsxDEV(Home, {\n    candyMachineId: candyMachineId,\n    connection: connection,\n    txTimeout: DEFAULT_TIMEOUT,\n    rpcHost: rpcHost,\n    network: network\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 4\n  }, this);\n};\n\n_c2 = HomeComponent;\n\nconst SniperComponent = () => {\n  return /*#__PURE__*/_jsxDEV(Sniper, {\n    candyMachineId: candyMachineId,\n    connection: connection,\n    txTimeout: DEFAULT_TIMEOUT,\n    rpcHost: rpcHost,\n    network: network\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 120,\n    columnNumber: 4\n  }, this);\n};\n\n_c3 = SniperComponent;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"HomeComponent\");\n$RefreshReg$(_c3, \"SniperComponent\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/App.tsx"],"names":["useMemo","Home","Sniper","Route","Routes","anchor","clusterApiUrl","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ConnectionProvider","WalletProvider","WalletDialogProvider","createTheme","ThemeProvider","DEFAULT_TIMEOUT","ApolloProvider","ApolloClient","InMemoryCache","client","uri","cache","candyMachineId","web3","PublicKey","process","env","REACT_APP_CANDY_MACHINE_ID","network","REACT_APP_SOLANA_NETWORK","rpcHost","REACT_APP_SOLANA_RPC_HOST","connection","Connection","txTimeout","theme","palette","type","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","undefined","padding","startIcon","marginRight","endIcon","marginLeft","App","endpoint","wallets","HomeComponent","SniperComponent"],"mappings":"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","sourcesContent":["import \"./App.css\";\nimport { useMemo } from \"react\";\n\nimport Home from \"./Home\";\nimport Sniper from \"./Sniper\";\nimport {Route, Routes} from 'react-router-dom'\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl } from \"@solana/web3.js\";\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n} from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\nimport { DEFAULT_TIMEOUT } from './connection';\nimport { ApolloProvider, ApolloClient, InMemoryCache } from \"@apollo/client\";\nimport { useQuery, gql } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://graphql.icy.tools/graphql/\",\n  cache: new InMemoryCache()\n});\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n\n  const wallets = useMemo(\n    () => [\n        getPhantomWallet(),\n        getSlopeWallet(),\n        getSolflareWallet(),\n        getSolletWallet({ network }),\n        getSolletExtensionWallet({ network })\n    ],\n    []\n  );\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect>\n            <WalletDialogProvider>\n            <ApolloProvider client={client}>\n              <Routes>\n                <Route path=\"/\" element={HomeComponent()}/>\n                <Route path=\"/Sniper\" element={SniperComponent()}/>\n                </Routes>\n                </ApolloProvider>\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n\nconst HomeComponent = () => {\n  return (\n   <Home\n   candyMachineId={candyMachineId}\n   connection={connection}\n   txTimeout={DEFAULT_TIMEOUT}\n   rpcHost={rpcHost}\n   network={network}\n                />\n  );\n}\n\nconst SniperComponent = () => {\n  return (\n   <Sniper\n   candyMachineId={candyMachineId}\n   connection={connection}\n   txTimeout={DEFAULT_TIMEOUT}\n   rpcHost={rpcHost}\n   network={network}\n                />\n  );\n}"]},"metadata":{},"sourceType":"module"}