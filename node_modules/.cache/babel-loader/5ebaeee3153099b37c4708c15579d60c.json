{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FormatGroupTextEventArgsDescriptionMetadata } from \"./FormatGroupTextEventArgsDescriptionMetadata\";\nimport { ColumnSortDescriptionDescriptionMetadata } from \"./ColumnSortDescriptionDescriptionMetadata\";\nimport { ColumnGroupDescriptionDescription } from \"./ColumnGroupDescriptionDescription\";\n/**\n * @hidden\n */\n\nvar ColumnGroupDescriptionDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ColumnGroupDescriptionDescriptionMetadata, _super);\n\n  function ColumnGroupDescriptionDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ColumnGroupDescriptionDescriptionMetadata.b = function (a) {\n    if (ColumnGroupDescriptionDescriptionMetadata.a == null) {\n      ColumnGroupDescriptionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ColumnGroupDescriptionDescriptionMetadata.c(ColumnGroupDescriptionDescriptionMetadata.a);\n    }\n\n    if (a.g(ColumnGroupDescriptionDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ColumnGroupDescriptionDescriptionMetadata.a);\n    FormatGroupTextEventArgsDescriptionMetadata.d(a);\n  };\n\n  ColumnGroupDescriptionDescriptionMetadata.c = function (a) {\n    ColumnSortDescriptionDescriptionMetadata.c(a);\n    a.item(\"ValueFormat\", \"String\");\n    a.item(\"ValueFormatSpecifiers\", \"Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier\");\n    a.item(\"DisplayFormat\", \"String\");\n    a.item(\"DisplayFormatSpecifiers\", \"Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier\");\n    a.item(\"DisplayName\", \"String\");\n    a.item(\"FormatTextRef\", \"EventRef::formatText\");\n  };\n\n  ColumnGroupDescriptionDescriptionMetadata.d = function (a) {\n    ColumnGroupDescriptionDescriptionMetadata.b(a);\n    a.u(\"ColumnGroupDescription\", function () {\n      return new ColumnGroupDescriptionDescription();\n    });\n    a.t(\"ColumnGroupDescription\", ColumnGroupDescriptionDescriptionMetadata.a);\n  };\n\n  ColumnGroupDescriptionDescriptionMetadata.$t = markType(ColumnGroupDescriptionDescriptionMetadata, 'ColumnGroupDescriptionDescriptionMetadata');\n  ColumnGroupDescriptionDescriptionMetadata.a = null;\n  return ColumnGroupDescriptionDescriptionMetadata;\n}(Base);\n\nexport { ColumnGroupDescriptionDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/ColumnGroupDescriptionDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","FormatGroupTextEventArgsDescriptionMetadata","ColumnSortDescriptionDescriptionMetadata","ColumnGroupDescriptionDescription","ColumnGroupDescriptionDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","u","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,2CAAT,QAA4D,+CAA5D;AACA,SAASC,wCAAT,QAAyD,4CAAzD;AACA,SAASC,iCAAT,QAAkD,qCAAlD;AACA;AACA;AACA;;AACA,IAAIC,yCAAyC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC3FT,EAAAA,SAAS,CAACQ,yCAAD,EAA4CC,MAA5C,CAAT;;AACA,WAASD,yCAAT,GAAqD;AACjD,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,yCAAyC,CAACI,CAA1C,GAA8C,UAAUC,CAAV,EAAa;AACvD,QAAIL,yCAAyC,CAACK,CAA1C,IAA+C,IAAnD,EAAyD;AACrDL,MAAAA,yCAAyC,CAACK,CAA1C,GAA8C,IAAIT,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAA9C;AACAM,MAAAA,yCAAyC,CAACM,CAA1C,CAA4CN,yCAAyC,CAACK,CAAtF;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,yCAAyC,CAACK,CAA9C,CAAJ,EAAsD;AAClD;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,yCAAyC,CAACK,CAA9C;AACAR,IAAAA,2CAA2C,CAACY,CAA5C,CAA8CJ,CAA9C;AACH,GAVD;;AAWAL,EAAAA,yCAAyC,CAACM,CAA1C,GAA8C,UAAUD,CAAV,EAAa;AACvDP,IAAAA,wCAAwC,CAACQ,CAAzC,CAA2CD,CAA3C;AACAA,IAAAA,CAAC,CAACK,IAAF,CAAO,aAAP,EAAsB,QAAtB;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,uBAAP,EAAgC,sEAAhC;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,eAAP,EAAwB,QAAxB;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,yBAAP,EAAkC,sEAAlC;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,aAAP,EAAsB,QAAtB;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,eAAP,EAAwB,sBAAxB;AACH,GARD;;AASAV,EAAAA,yCAAyC,CAACS,CAA1C,GAA8C,UAAUJ,CAAV,EAAa;AACvDL,IAAAA,yCAAyC,CAACI,CAA1C,CAA4CC,CAA5C;AACAA,IAAAA,CAAC,CAACM,CAAF,CAAI,wBAAJ,EAA8B,YAAY;AAAE,aAAO,IAAIZ,iCAAJ,EAAP;AAAiD,KAA7F;AACAM,IAAAA,CAAC,CAACO,CAAF,CAAI,wBAAJ,EAA8BZ,yCAAyC,CAACK,CAAxE;AACH,GAJD;;AAKAL,EAAAA,yCAAyC,CAACa,EAA1C,GAA+ClB,QAAQ,CAACK,yCAAD,EAA4C,2CAA5C,CAAvD;AACAA,EAAAA,yCAAyC,CAACK,CAA1C,GAA8C,IAA9C;AACA,SAAOL,yCAAP;AACH,CAjC4E,CAiC3EP,IAjC2E,CAA7E;;AAkCA,SAASO,yCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FormatGroupTextEventArgsDescriptionMetadata } from \"./FormatGroupTextEventArgsDescriptionMetadata\";\nimport { ColumnSortDescriptionDescriptionMetadata } from \"./ColumnSortDescriptionDescriptionMetadata\";\nimport { ColumnGroupDescriptionDescription } from \"./ColumnGroupDescriptionDescription\";\n/**\n * @hidden\n */\nvar ColumnGroupDescriptionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ColumnGroupDescriptionDescriptionMetadata, _super);\n    function ColumnGroupDescriptionDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ColumnGroupDescriptionDescriptionMetadata.b = function (a) {\n        if (ColumnGroupDescriptionDescriptionMetadata.a == null) {\n            ColumnGroupDescriptionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ColumnGroupDescriptionDescriptionMetadata.c(ColumnGroupDescriptionDescriptionMetadata.a);\n        }\n        if (a.g(ColumnGroupDescriptionDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ColumnGroupDescriptionDescriptionMetadata.a);\n        FormatGroupTextEventArgsDescriptionMetadata.d(a);\n    };\n    ColumnGroupDescriptionDescriptionMetadata.c = function (a) {\n        ColumnSortDescriptionDescriptionMetadata.c(a);\n        a.item(\"ValueFormat\", \"String\");\n        a.item(\"ValueFormatSpecifiers\", \"Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier\");\n        a.item(\"DisplayFormat\", \"String\");\n        a.item(\"DisplayFormatSpecifiers\", \"Collection:FormatSpecifier:FormatSpecifierCollection:FormatSpecifier\");\n        a.item(\"DisplayName\", \"String\");\n        a.item(\"FormatTextRef\", \"EventRef::formatText\");\n    };\n    ColumnGroupDescriptionDescriptionMetadata.d = function (a) {\n        ColumnGroupDescriptionDescriptionMetadata.b(a);\n        a.u(\"ColumnGroupDescription\", function () { return new ColumnGroupDescriptionDescription(); });\n        a.t(\"ColumnGroupDescription\", ColumnGroupDescriptionDescriptionMetadata.a);\n    };\n    ColumnGroupDescriptionDescriptionMetadata.$t = markType(ColumnGroupDescriptionDescriptionMetadata, 'ColumnGroupDescriptionDescriptionMetadata');\n    ColumnGroupDescriptionDescriptionMetadata.a = null;\n    return ColumnGroupDescriptionDescriptionMetadata;\n}(Base));\nexport { ColumnGroupDescriptionDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}