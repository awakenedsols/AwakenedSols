{"ast":null,"code":"import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ReactRenderer, ReactWrapper } from \"igniteui-react-core\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { FinancialChart } from './FinancialChart';\nimport { FinancialChartType_$type } from './FinancialChartType';\nimport { fromBrushCollection, toBrushCollection, brushToString, stringToBrush, ensureEnum, ensureBool } from \"igniteui-react-core\";\nimport { IgrXYChart } from './igr-xy-chart';\nimport { DataChartStylingDefaults } from './DataChartStylingDefaults';\nimport { DataSeriesType } from \"igniteui-react-core\";\nimport { IgrDataContext } from \"igniteui-react-core\";\nimport { FinancialChartVolumeType_$type } from './FinancialChartVolumeType';\nimport { FinancialChartXAxisMode, FinancialChartXAxisMode_$type } from './FinancialChartXAxisMode';\nimport { FinancialChartYAxisMode, FinancialChartYAxisMode_$type } from './FinancialChartYAxisMode';\nimport { HorizontalAlignment_$type } from \"igniteui-react-core\";\nimport { FinancialChartZoomSliderType_$type } from './FinancialChartZoomSliderType';\nimport { IgrFinancialChartDefaultTemplates } from './igr-financial-chart-default-templates';\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { IgrFinancialIndicatorTypeCollection } from './igr-financial-indicator-type-collection';\nimport { FinancialIndicatorTypeCollection as FinancialIndicatorTypeCollection_internal } from './FinancialIndicatorTypeCollection';\nimport { SyncableObservableCollection$1 } from \"igniteui-react-core\";\nimport { FinancialIndicatorType_$type } from './FinancialIndicatorType';\nimport { IgrFinancialOverlayTypeCollection } from './igr-financial-overlay-type-collection';\nimport { FinancialOverlayTypeCollection as FinancialOverlayTypeCollection_internal } from './FinancialOverlayTypeCollection';\nimport { FinancialOverlayType_$type } from './FinancialOverlayType';\nimport { IgrIndicatorDisplayTypeCollection } from './igr-indicator-display-type-collection';\nimport { IndicatorDisplayTypeCollection as IndicatorDisplayTypeCollection_internal } from './IndicatorDisplayTypeCollection';\nimport { IndicatorDisplayType_$type } from './IndicatorDisplayType';\nimport { IgrFinancialChartRangeSelectorOptionCollection } from './igr-financial-chart-range-selector-option-collection';\nimport { FinancialChartRangeSelectorOptionCollection as FinancialChartRangeSelectorOptionCollection_internal } from './FinancialChartRangeSelectorOptionCollection';\nimport { FinancialChartRangeSelectorOption_$type } from './FinancialChartRangeSelectorOption';\nimport { IgrFinancialChartCustomIndicatorArgs } from './igr-financial-chart-custom-indicator-args';\nimport { CustomIndicatorNameCollection as CustomIndicatorNameCollection_internal } from './CustomIndicatorNameCollection';\nimport { IgrCustomIndicatorNameCollection } from './igr-custom-indicator-name-collection';\nimport { String_$type } from \"igniteui-react-core\";\nimport { IgrTemplateContainer } from \"igniteui-react-core\";\nvar fg = window && window.CSS && window.CSS.supports && /*@__PURE__*/window.CSS.supports(\"display\", \"grid\");\nvar financialChartToolbarStyle = {\n  gridRow: 1,\n  msGridRow: 1\n};\nvar financialChartPriceStyle = {\n  gridRow: 3,\n  msGridRow: 3\n};\nvar financialChartIndicatorsStyle = {\n  gridRow: 4,\n  msGridRow: 4\n};\nvar financialChartVolumeStyle = {\n  gridRow: 5,\n  msGridRow: 5\n};\nvar financialChartZoomSliderStyle = {\n  gridRow: 6,\n  msGridRow: 6\n};\nvar financialChartMainGridStyle = {\n  height: '100%',\n  width: '100%',\n  textAlign: 'left',\n  display: fg ? 'grid' : '-ms-grid',\n  msGridColumns: '100%'\n};\nvar financialChartLegendStyle = {\n  gridRow: 2,\n  msGridRow: 2\n};\n\nvar IgrFinancialChart =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrFinancialChart, _super);\n\n  function IgrFinancialChart(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._wrapper = null;\n    _this._initialized = false;\n    _this._toolbarElement = null;\n    _this._dataSource = null;\n    _this._defaultTooltips = null;\n    _this._dynamicContent = {};\n    _this._uniqueTooltipId = 0;\n    _this._xAxisBreaks = null;\n    _this._indicatorTypes = null;\n    _this._overlayTypes = null;\n    _this._indicatorDisplayTypes = null;\n    _this._rangeSelectorOptions = null;\n    _this._customIndicatorNames = null;\n    _this._applyCustomIndicators = null;\n    _this._applyCustomIndicators_wrapped = null;\n    _this._toolTemplateRef = _this._toolTemplateRef.bind(_this);\n    _this._tooltipRef = _this._tooltipRef.bind(_this);\n    _this._mainGridRef = _this._mainGridRef.bind(_this);\n    _this._mainRef = _this._mainRef.bind(_this);\n    _this._toolbarRef = _this._toolbarRef.bind(_this);\n    _this._activeTooltipElements = new Map();\n    _this._activeTooltips = new Map();\n    _this._currentTooltips = [];\n    _this.onDocumentClick = _this.onDocumentClick.bind(_this);\n\n    if (document) {\n      _this._container = document.createElement(\"div\");\n      _this._container.style.display = \"block\";\n      _this._container.style.width = \"100%\";\n      _this._container.style.height = \"100%\";\n      document.addEventListener(\"click\", _this.onDocumentClick);\n    }\n\n    var root;\n    root = _this._container;\n\n    if (_this._container != null) {\n      root = _this._container;\n    }\n\n    var ren = new ReactRenderer(root, document, true, DataChartStylingDefaults);\n    _this._wrapper = ren;\n    var chart = _this.i;\n    _this._chart = chart;\n\n    if (chart.xAxis) {\n      _this.rewrapAxis(chart.xAxis);\n    }\n\n    if (chart.yAxis) {\n      _this.rewrapAxis(chart.yAxis);\n    }\n\n    if (chart.volumeAxis) {\n      _this.rewrapAxis(chart.volumeAxis);\n    }\n\n    if (chart.volumeXAxis) {\n      _this.rewrapAxis(chart.volumeXAxis);\n    }\n\n    if (chart.indicatorAxis) {\n      _this.rewrapAxis(chart.indicatorAxis);\n    }\n\n    if (chart.indicatorXAxis) {\n      _this.rewrapAxis(chart.indicatorXAxis);\n    }\n\n    if (chart.zoomSliderAxis) {\n      _this.rewrapAxis(chart.zoomSliderAxis);\n    }\n\n    if (chart.zoomSliderXAxis) {\n      _this.rewrapAxis(chart.zoomSliderXAxis);\n    }\n\n    chart.provideContainer(ren);\n\n    _this.bindData();\n\n    chart.notifyResized();\n    ren.addSizeWatcher(function () {\n      _this._checkToolbarSize();\n\n      _this._chart.notifyResized();\n    });\n    _this._initialized = true;\n    return _this;\n  }\n\n  IgrFinancialChart.prototype.render = function () {\n    var outerChildren = [];\n    var children = [React.createElement('div', {\n      key: 'financialChartToolbarArea',\n      className: 'financialChartToolbarArea',\n      style: financialChartToolbarStyle,\n      ref: this._toolbarRef\n    }, React.createElement(IgrTemplateContainer, {\n      ref: this._toolTemplateRef\n    })), React.createElement('div', {\n      key: 'financialChartLegend',\n      className: 'financialChartLegend',\n      style: financialChartLegendStyle\n    }), React.createElement('div', {\n      key: 'financialChartPrice',\n      className: 'financialChartPrice',\n      style: financialChartPriceStyle\n    }), React.createElement('div', {\n      key: 'financialChartIndicators',\n      className: 'financialChartIndicators',\n      style: financialChartIndicatorsStyle\n    }), React.createElement('div', {\n      key: 'financialChartVolume',\n      className: 'financialChartVolume',\n      style: financialChartVolumeStyle\n    }), React.createElement('div', {\n      key: 'financialChartZoomSlider',\n      className: 'financialChartZoomSlider',\n      style: financialChartZoomSliderStyle\n    })];\n\n    if (this._sliderPortal) {\n      children.push(this._sliderPortal);\n    }\n\n    if (this._currentTooltips && this._currentTooltips.length > 0) {\n      for (var i = 0; i < this._currentTooltips.length; i++) {\n        var t = this._currentTooltips[i];\n\n        if (this._activeTooltipElements.has(t)) {\n          var active = this._activeTooltipElements.get(t);\n\n          outerChildren.push(active);\n        } else {\n          if (!TypeRegistrar.isRegistered(\"IgrTooltipContainer\")) {\n            continue;\n          }\n\n          var Tooltip = TypeRegistrar.get(\"IgrTooltipContainer\");\n          var tEle = React.createElement(Tooltip, {\n            ref: this._tooltipRef,\n            key: this._currentTooltips[i].key,\n            owner: this._currentTooltips[i]\n          });\n          var portal = ReactDOM.createPortal(tEle, t, this._currentTooltips[i].key);\n\n          this._activeTooltipElements.set(t, portal);\n\n          outerChildren.push(portal);\n        }\n      }\n    }\n\n    var mainGrid = React.createElement('div', {\n      key: 'financialChartMainGrid',\n      className: 'financialChartMainGrid',\n      style: financialChartMainGridStyle,\n      children: children,\n      ref: this._mainGridRef\n    });\n    outerChildren.splice(0, 0, mainGrid);\n    var mainDiv = React.createElement('div', {\n      className: \"ig-financial-chart igr-financial-chart\",\n      key: \"financialChartMainDiv\",\n      children: outerChildren,\n      ref: this._mainRef\n    });\n    return mainDiv;\n  };\n\n  IgrFinancialChart.prototype._tooltipRef = function (t) {\n    //console.log(t);\n    if (t === null) {\n      return;\n    }\n\n    if (t.currentOwner && t.currentOwner.tooltipTemplate) {\n      t.template = t.currentOwner.tooltipTemplate;\n    }\n\n    this._activeTooltips.set(t.currentOwner, t);\n  };\n\n  IgrFinancialChart.prototype._toolbarRef = function (t) {\n    this._toolbarElement = t;\n  };\n\n  IgrFinancialChart.prototype._toolTemplateRef = function (t) {\n    this._toolbarTemplateComponent = t;\n  };\n\n  IgrFinancialChart.prototype._mainGridRef = function (t) {\n    this._mainGridElement = t;\n  };\n\n  IgrFinancialChart.prototype._mainRef = function (t) {\n    this._mainElement = t;\n    this._container = t;\n\n    if (!t) {\n      return;\n    }\n\n    this._wrapper.updateRoot(this._wrapper.getWrapper(this._container));\n  };\n\n  Object.defineProperty(IgrFinancialChart.prototype, \"height\", {\n    get: function () {\n      return this._height;\n    },\n    set: function (value) {\n      this._height = value;\n\n      if (this._mainElement) {\n        this._mainElement.style.height = value;\n\n        this._chart.notifyResized();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"width\", {\n    get: function () {\n      return this._width;\n    },\n    set: function (value) {\n      this._width = value;\n\n      if (this._mainElement) {\n        this._mainElement.style.height = value;\n\n        this._chart.notifyResized();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"rangeSelectorTemplate\", {\n    get: function () {\n      return this._rangeSelectorTemplate;\n    },\n    set: function (value) {\n      this._rangeSelectorTemplate = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"chartTypePickerTemplate\", {\n    get: function () {\n      return this._chartTypePickerTemplate;\n    },\n    set: function (value) {\n      this._chartTypePickerTemplate = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorMenuTemplate\", {\n    get: function () {\n      return this._indicatorMenuTemplate;\n    },\n    set: function (value) {\n      this._indicatorMenuTemplate = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"toolbarTemplate\", {\n    get: function () {\n      return this._toolbarTemplate;\n    },\n    set: function (value) {\n      this._toolbarTemplate = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"chartTemplate\", {\n    get: function () {\n      return this._chartTemplate;\n    },\n    set: function (value) {\n      this._chartTemplate = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrFinancialChart.prototype._checkToolbarSize = function () {\n    if (this._toolbarElement) {\n      var start = this._toolbarElement;\n\n      if (start.children.length == 1) {\n        start = start.children[0];\n      }\n\n      if (start.children.length == 1) {\n        start = start.children[0];\n      }\n\n      var toolbarRoot = start.querySelector(\".financialChartToolbar\");\n      var rootRect = toolbarRoot.getBoundingClientRect();\n      var hideRemaining = false;\n\n      for (var i = 0; i < toolbarRoot.children.length; i++) {\n        var child = toolbarRoot.children[i];\n\n        if (child.nodeType == Node.ELEMENT_NODE) {\n          if (!hideRemaining) {\n            child.style.display = \"\";\n          }\n\n          var childRect = child.getBoundingClientRect();\n\n          if (hideRemaining || childRect.left + childRect.width > rootRect.left + rootRect.width) {\n            child.style.display = \"none\";\n            hideRemaining = true;\n          } else {\n            child.style.display = \"\";\n          }\n        }\n      }\n    }\n  };\n\n  IgrFinancialChart.prototype.componentWillUnmount = function () {\n    this._chart.destroy();\n\n    this._wrapper.destroy();\n\n    if (document) {\n      document.removeEventListener(\"click\", this.onDocumentClick);\n    }\n  };\n\n  IgrFinancialChart.prototype.onDocumentClick = function (ev) {\n    this._chart.onDocumentClick(ev);\n  };\n\n  IgrFinancialChart.prototype.rewrapAxis = function (axis) {\n    var axisName = axis.$type.name;\n    var componentName = \"Igr\" + axisName;\n\n    if (TypeRegistrar.isRegistered(componentName)) {\n      var x = TypeRegistrar.create(componentName);\n      x._implementation = axis;\n      axis.externalObject = x;\n    } else {\n      throw new Error(\"Axis type not loaded: \" + componentName);\n    }\n  };\n\n  IgrFinancialChart.prototype.createImplementation = function () {\n    return new FinancialChart();\n  };\n\n  Object.defineProperty(IgrFinancialChart.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrFinancialChart.prototype.createSeriesComponent = function (type) {\n    if (TypeRegistrar.isRegistered(type)) {\n      var s = TypeRegistrar.create(type);\n      s.owner = this;\n      return s;\n    } else {\n      //we shouldn't get here, hopefully.\n      throw Error(\"series type not loaded: \" + type);\n    }\n  };\n\n  IgrFinancialChart.prototype.createIndicator = function (typeName) {\n    return this.createSeriesComponent(\"Igr\" + typeName);\n  };\n\n  IgrFinancialChart.prototype.createOverlay = function (typeName) {\n    return this.createSeriesComponent(\"Igr\" + typeName);\n  };\n\n  IgrFinancialChart.prototype.createSeries = function (type) {\n    switch (type) {\n      case DataSeriesType.Area:\n        return this.createSeriesComponent('IgrAreaSeries');\n\n      case DataSeriesType.Column:\n        return this.createSeriesComponent('IgrColumnSeries');\n\n      case DataSeriesType.Line:\n        return this.createSeriesComponent('IgrLineSeries');\n\n      case DataSeriesType.FinancialPrice:\n        return this.createSeriesComponent('IgrFinancialPriceSeries');\n\n      case DataSeriesType.ItemToolTipLayer:\n        return this.createSeriesComponent('IgrItemToolTipLayer');\n\n      case DataSeriesType.CategoryToolTipLayer:\n        return this.createSeriesComponent('IgrCategoryToolTipLayer');\n\n      case DataSeriesType.CrosshairLayer:\n        return this.createSeriesComponent('IgrCrosshairLayer');\n\n      case DataSeriesType.FinalValueLayer:\n        return this.createSeriesComponent('IgrFinalValueLayer');\n\n      case DataSeriesType.CalloutLayer:\n        return this.createSeriesComponent('IgrCalloutLayer');\n\n      case DataSeriesType.DataToolTipLayer:\n        return this.createSeriesComponent('IgrDataToolTipLayer');\n\n      default:\n        return this.createSeriesComponent('IgrColumnSeries');\n    }\n  };\n\n  IgrFinancialChart.prototype.createXAxis = function (type) {\n    switch (type) {\n      case FinancialChartXAxisMode.Ordinal:\n        if (TypeRegistrar.isRegistered(\"IgrOrdinalTimeXAxis\")) {\n          return TypeRegistrar.create(\"IgrOrdinalTimeXAxis\");\n        } else if (TypeRegistrar.isRegistered(\"IgrTimeXAxis\")) {\n          return TypeRegistrar.create(\"IgrTimeXAxis\");\n        } else {\n          throw new Error(\"not valid axes components loaded\");\n        }\n\n      case FinancialChartXAxisMode.Time:\n        if (TypeRegistrar.isRegistered(\"IgrTimeXAxis\")) {\n          return TypeRegistrar.create(\"IgrTimeXAxis\");\n        } else if (TypeRegistrar.isRegistered(\"IgrOrdinalTimeXAxis\")) {\n          return TypeRegistrar.create(\"IgrOrdinalTimeXAxis\");\n        } else {\n          throw new Error(\"not valid axes components loaded\");\n        }\n\n    }\n  };\n\n  IgrFinancialChart.prototype.createYAxis = function (type) {\n    switch (type) {\n      case FinancialChartYAxisMode.Numeric:\n        if (TypeRegistrar.isRegistered(\"IgrNumericYAxis\")) {\n          return TypeRegistrar.create(\"IgrNumericYAxis\");\n        } else if (TypeRegistrar.isRegistered(\"IgrPercentChangeYAxis\")) {\n          return TypeRegistrar.create(\"IgrPercentChangeYAxis\");\n        } else {\n          throw new Error(\"not valid axes components loaded\");\n        }\n\n      case FinancialChartYAxisMode.PercentChange:\n        if (TypeRegistrar.isRegistered(\"IgrPercentChangeYAxis\")) {\n          return TypeRegistrar.create(\"IgrPercentChangeYAxis\");\n        } else if (TypeRegistrar.isRegistered(\"IgrNumericYAxis\")) {\n          return TypeRegistrar.create(\"IgrNumericYAxis\");\n        } else {\n          throw new Error(\"not valid axes components loaded\");\n        }\n\n    }\n  };\n\n  Object.defineProperty(IgrFinancialChart.prototype, \"dataSource\", {\n    get: function () {\n      return this._dataSource;\n    },\n    set: function (value) {\n      this._dataSource = value;\n      this.bindData();\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrFinancialChart.prototype.bindData = function () {\n    if (this._chart != null && this._chart !== undefined) {\n      this._chart.itemsSource = this._dataSource;\n    }\n  };\n\n  IgrFinancialChart.prototype.componentDidMount = function () {\n    _super.prototype.componentDidMount.call(this);\n\n    if (this._mainElement) {\n      if (this._width) {\n        this._mainElement.style.width = this._width;\n      }\n\n      if (this._height) {\n        this._mainElement.style.height = this._height;\n      }\n    }\n\n    this.initializeContent();\n\n    this._chart.notifyResized();\n  };\n\n  IgrFinancialChart.prototype.initializeContent = function () {\n    var _this = this;\n\n    if (TypeRegistrar.isRegistered(\"IgrDataChartDefaultTooltips\")) {\n      var d = TypeRegistrar.create(\"IgrDataChartDefaultTooltips\");\n      this._defaultTooltips = d;\n\n      this._onDefaultTooltipsReady(d); //this._container.appendChild(cr.location.nativeElement);\n\n    }\n\n    var context = this._chart.getContext();\n\n    if (!this._defaultTemplates) {\n      this._defaultTemplates = new IgrFinancialChartDefaultTemplates();\n    }\n\n    var toolbarArea = this._toolbarTemplateComponent;\n    var toolbarContext = context.vm.toolbar;\n    toolbarContext.vm.financialChartIndicatorMenu.template = this.indicatorMenuTemplate ? this.indicatorMenuTemplate : this._defaultTemplates.financialChartIndicatorMenuTemplate;\n\n    toolbarContext.vm.financialChartIndicatorMenu.vm.notifyChanged = function () {\n      toolbarArea.dataContext = toolbarContext;\n    };\n\n    toolbarContext.vm.financialChartTypePicker.template = this.chartTypePickerTemplate ? this.chartTypePickerTemplate : this._defaultTemplates.financialChartTypePickerTemplate;\n\n    toolbarContext.vm.financialChartTypePicker.vm.notifyChanged = function () {\n      toolbarArea.dataContext = toolbarContext;\n    };\n\n    toolbarContext.vm.financialChartRangeSelector.template = this.rangeSelectorTemplate ? this.rangeSelectorTemplate : this._defaultTemplates.financialChartRangeSelectorTemplate;\n\n    toolbarContext.vm.financialChartRangeSelector.vm.notifyChanged = function () {\n      toolbarArea.dataContext = toolbarContext;\n    };\n\n    toolbarContext.template = this.toolbarTemplate ? this.toolbarTemplate : this._defaultTemplates.financialChartToolbarTemplate;\n    var toolContainer = this._toolbarElement; //let toolbarArea = this._templates.toArray()[0];\n    //let mainArea = this._templates.toArray()[1];\n\n    toolbarArea.contentReady = function () {\n      toolbarArea.contentReady = null;\n\n      _this._chart.provideGrid(gridWrapper);\n\n      _this._checkToolbarSize();\n    };\n\n    toolbarArea.dataContext = toolbarContext;\n    toolbarArea.template = toolbarContext.template;\n    var ele = this._toolbarElement; //ele.style.width = \"100%\";\n    //ele.style.height = \"100%\";\n    //if (ele.parentElement != null) {\n    //    ele.parentElement.removeChild(ele);\n    //}\n    //toolContainer.appendChild(ele);\n    //this._wrapper.setStyleProperty(ele, \"display\", \"\")\n\n    ele.style.display = \"\";\n    var legendContainer = context.legendContainer.rootWrapper.getNativeElement();\n    var mainContainer = context.container.rootWrapper.getNativeElement();\n    var indicatorContainer = context.indicatorsContainer.rootWrapper.getNativeElement();\n    var volumeContainer = context.volumeContainer.rootWrapper.getNativeElement();\n    var zoomSliderContainer = context.zoomContainer.rootWrapper.getNativeElement();\n    var main = this._mainGridElement;\n    var templateMain = main.querySelector(\".financialChartPrice\");\n    var templateToolbar = main.querySelector(\".financialChartToolbar\");\n    var templateLegend = main.querySelector(\".financialChartLegend\");\n    var templateIndicator = main.querySelector(\".financialChartIndicators\");\n    var templateVolume = main.querySelector(\".financialChartVolume\");\n    var templateZoomSlider = main.querySelector(\".financialChartZoomSlider\");\n    var grid = main; // main.querySelector(\".financialChartMainGrid\");\n\n    var gridWrapper = new ReactWrapper(grid, this._wrapper);\n    templateMain.appendChild(mainContainer); //templateToolbar.appendChild(toolContainer);\n\n    templateLegend.appendChild(legendContainer);\n    templateIndicator.appendChild(indicatorContainer);\n    templateVolume.appendChild(volumeContainer);\n    templateZoomSlider.appendChild(zoomSliderContainer);\n\n    this._styling(this._container, this); //this._mainElement.nativeElement.parentElement.removeChild(this._mainElement.nativeElement);\n    //this.container.appendChild(this._mainElement.nativeElement);\n\n  };\n\n  IgrFinancialChart.prototype._createZoomSlider = function (hostEle, onReady) {\n    if (!TypeRegistrar.isRegistered(\"IgrZoomSlider\")) {\n      //shouldn't happen.\n      throw new Error(\"zoom slider component isn't loaded\");\n    }\n\n    var Slider = TypeRegistrar.get(\"IgrZoomSlider\");\n    var ele = React.createElement(Slider, {\n      width: '100%',\n      height: '100%',\n      ref: function (r) {\n        onReady(r);\n      }\n    });\n    var portal = ReactDOM.createPortal(ele, hostEle);\n    hostEle.className = \"test\";\n    hostEle.style.width = \"100%\";\n    hostEle.style.height = \"100%\";\n    this._sliderPortal = portal;\n  };\n\n  IgrFinancialChart.prototype.createTooltip = function () {\n    // if (!TypeRegistrar.isRegistered(\"IgrTooltipContainer\")) {\n    // \treturn null;\n    // }\n    // let Tooltip = TypeRegistrar.get(\"IgrTooltipContainer\");\n    var wrapper = this._wrapper.createElement(\"div\");\n\n    var ele = wrapper.getNativeElement();\n    ele.key = \"__tooltip_\" + this._uniqueTooltipId;\n    this._uniqueTooltipId++;\n    this._currentTooltips = this._currentTooltips.slice(0);\n\n    this._currentTooltips.push(ele); //let element = React.createElement(Tooltip,  );\n    //let portal = ReactDOM.createPortal(element, ele);\n\n\n    var self = this;\n\n    ele.updateToolTip = function (c, isSubContent) {\n      if (c.externalObject) {\n        c = c.externalObject;\n      } else {\n        var ext = new IgrDataContext();\n        ext._implementation = c;\n        c = ext;\n      }\n\n      if (!isSubContent) {\n        if (ele.parentElement != self._container) {\n          if (ele.parentElement != null) {\n            ele.parentElement.removeChild(ele);\n          }\n\n          self._container.appendChild(ele);\n        }\n      } else {\n        c.isSubContent = true;\n      }\n\n      if (self._activeTooltips.has(ele)) {\n        var t = self._activeTooltips.get(ele);\n\n        t.dataContext = c;\n      }\n\n      ele.style.display = \"block\";\n      return true;\n    };\n\n    ele.hideToolTip = function () {\n      ele.style.display = \"none\";\n    };\n\n    ele.style.display = \"none\";\n\n    this._updateTooltipState();\n\n    return ele;\n  };\n\n  IgrFinancialChart.prototype._ensureTooltipCreated = function (series) {\n    var _this = this;\n\n    series._ensureTooltipCreated(function () {\n      return _this.createTooltip();\n    }, function (ele) {\n      var wrapper = new ReactWrapper(ele, _this._wrapper);\n      wrapper.updateToolTip = ele.updateToolTip;\n      wrapper.hideToolTip = ele.hideToolTip;\n\n      if (_this._activeTooltips.has(ele)) {\n        var tCont = _this._activeTooltips.get(ele);\n\n        tCont.template = ele.tooltipTemplate;\n      }\n\n      return wrapper;\n    });\n  }; // private _createXAxis(): any {\n  //     let x = new IgxCategoryXAxisComponent();\n  //     return x.i;\n  // }\n  // private _createYAxis(): any {\n  //     let y = new IgxNumericYAxisComponent();\n  //     return y.i;\n  // }\n\n\n  IgrFinancialChart.prototype._ensureDefaultTooltip = function (series) {\n    if (this._defaultTooltips == null) {\n      return;\n    }\n\n    this._defaultTooltips[\"ensureDefaultTooltip\"](series);\n  };\n\n  IgrFinancialChart.prototype._onDefaultTooltipsReady = function (cr) {\n    if (this.i.dataChart) {\n      var currSeries = this.i.dataChart.series;\n\n      for (var i = 0; i < currSeries.count; i++) {\n        if (currSeries.item(i).externalObject.showDefaultTooltip) {\n          this._ensureDefaultTooltip(currSeries.item(i).externalObject);\n        }\n      }\n    }\n  };\n\n  IgrFinancialChart.prototype._updateTooltipState = function () {\n    if (this._initialized) {\n      this.setState({\n        tooltips: this._currentTooltips\n      });\n    }\n  };\n\n  Object.defineProperty(IgrFinancialChart.prototype, \"xAxisBreaks\", {\n    /**\n     * TimeAxisBreaks to apply to this chart when in time axis mode, representing spans of time to omit, such as weekends.\n    */\n    get: function () {\n      if (this._xAxisBreaks === null) {\n        if (!TypeRegistrar.isRegistered(\"IgrTimeAxisBreakCollection\")) {\n          return null;\n        }\n\n        var coll = TypeRegistrar.create(\"IgrTimeAxisBreakCollection\");\n        var innerColl = this.i.xAxisBreaks;\n\n        if (!innerColl) {\n          innerColl = TypeRegistrar.create(\"TimeAxisBreakCollection\");\n        }\n\n        this._xAxisBreaks = coll._fromInner(innerColl);\n        this.i._xAxisBreaks = innerColl;\n      }\n\n      return this._xAxisBreaks;\n    },\n    set: function (v) {\n      if (this._xAxisBreaks !== null) {\n        this._xAxisBreaks._setSyncTarget(null);\n\n        this._xAxisBreaks = null;\n      }\n\n      if (!TypeRegistrar.isRegistered(\"IgxTimeAxisBreakCollection\")) {\n        return;\n      }\n\n      var coll = TypeRegistrar.create(\"IgxTimeAxisBreakCollection\");\n      var t = TypeRegistrar.get(\"TimeAxisBreak\");\n      this._xAxisBreaks = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(t.$type);\n      var innerColl = this.i.xAxisBreaks;\n\n      if (!innerColl) {\n        innerColl = TypeRegistrar.create(\"TimeAxisBreakCollection\");\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._xAxisBreaks._setSyncTarget(syncColl);\n\n      this.i._xAxisBreaks = innerColl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"leftMargin\", {\n    get: function () {\n      return this.i.hf;\n    },\n    set: function (v) {\n      this.i.hf = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"isHorizontalZoomEnabled\", {\n    get: function () {\n      return this.i.e0;\n    },\n    set: function (v) {\n      this.i.e0 = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"toolbarHeight\", {\n    get: function () {\n      return this.i.aev;\n    },\n    set: function (v) {\n      this.i.aev = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"domainType\", {\n    /**\n     * Gets domain type of this chart\n    */\n    get: function () {\n      return this.i.bi;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisIsLogarithmic\", {\n    /**\n     * Gets or sets whether the Y-axis should use a logarithmic scale instead of a linear one.\n     * Since log(-1) is imaginary and log(0) is undefined, it is recommended to enable this property only when the Y-axis minimum is greater than zero.\n    */\n    get: function () {\n      return this.i.adz;\n    },\n    set: function (v) {\n      this.i.adz = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisLogarithmBase\", {\n    /**\n     * Gets or sets the base value to use in the log function when mapping the position of data items along the Y-axis.\n     * This property is effective only when YAxisIsLogarithmic is true.\n    */\n    get: function () {\n      return this.i.afn;\n    },\n    set: function (v) {\n      this.i.afn = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisInterval\", {\n    /**\n     * Gets or sets the distance between each label and grid line along the Y-axis.\n    *\n    * The `yAxisInterval` determines how often to show a label, tickmark, and/or gridline along the y-axis.  Set this property to a number less than the numeric range of the y-axis.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tyAxisInterval={20}\n    *  />\n    * ```\n    */\n    get: function () {\n      return this.i.aez;\n    },\n    set: function (v) {\n      this.i.aez = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisMinimumValue\", {\n    /**\n     * Gets or sets the data value corresponding to the minimum value of the Y-axis.\n    *\n    * The `yAxisMinimumValue` determines starting value of labels, tickmarks, and gridlines on the y-axis.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     yAxisMinimumValue={-200}\n    *     yAxisMaximumValue={1000}\n    *     dataSource={this.data} />\n    * ```\n    */\n    get: function () {\n      return this.i.ae1;\n    },\n    set: function (v) {\n      this.i.ae1 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisMaximumValue\", {\n    /**\n     * Gets or sets the data value corresponding to the maximum value of the Y-axis.\n    *\n    * The `yAxisMaximumValue` determines ending value of labels, tickmarks, and gridlines on the y-axis.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *  yAxisMinimumValue={-200}\n    *     yAxisMaximumValue={100}\n    *     dataSource={this.data} />\n    * ```\n    */\n    get: function () {\n      return this.i.ae0;\n    },\n    set: function (v) {\n      this.i.ae0 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisMinorInterval\", {\n    /**\n     * Gets or sets the frequency of displayed minor lines along the Y-axis.\n    *\n    * The `yAxisMinorInterval` determines how often to show minor gridline along the y-axis.  Set this property to a number less than the `yAxisInterval` and the numeric range of the y-axis.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *      yAxisMinorInterval={50}\n    *     dataSource={this.data} />\n    * ```\n    */\n    get: function () {\n      return this.i.ae2;\n    },\n    set: function (v) {\n      this.i.ae2 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisActualMinimum\", {\n    /**\n     * Gets the current minimum value for the Y-axis.\n    */\n    get: function () {\n      return this.i.aey;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisActualMaximum\", {\n    /**\n     * Gets the current maximum value for the Y-axis.\n    */\n    get: function () {\n      return this.i.aex;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"volumeType\", {\n    /**\n     * The type of series to display in the volume pane.\n    *\n    * Use the `volumeType` property to set a type of all series that will be rendered in the volume pane, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tvolumeType=\"Column\" />\n    * ```\n    */\n    get: function () {\n      return this.i.abz;\n    },\n    set: function (v) {\n      this.i.abz = ensureEnum(FinancialChartVolumeType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"xAxisMode\", {\n    /**\n     * The scaling mode of the X-axis.\n    *\n    * Use the `xAxisMode` property to plot data items without any breaks in data range (Ordinal mode) or with breaks in data range (Time mode) such as weekends/holidays. Note that the Ordinal axis mode is less expensive to use in the financial chart than the Time axis mode.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *      xAxisMode=\"time\"\n    *     dataSource={this.data} />\n    * ```\n    */\n    get: function () {\n      return this.i.ab1;\n    },\n    set: function (v) {\n      this.i.ab1 = ensureEnum(FinancialChartXAxisMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisMode\", {\n    /**\n     * The scaling mode of the Y-axis.\n    *\n    * Use the `yAxisMode` property to plot data items using their actual values (Numeric) or using percent changes from the first data point (PercentChange), e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *      yAxisMode={this.state.yAxisMode}\n    *     dataSource={this.data} />\n    * ```\n    */\n    get: function () {\n      return this.i.ab3;\n    },\n    set: function (v) {\n      this.i.ab3 = ensureEnum(FinancialChartYAxisMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"isToolbarVisible\", {\n    /**\n     * A boolean property controlling the visibility of the toolbar.\n    */\n    get: function () {\n      return this.i.ads;\n    },\n    set: function (v) {\n      this.i.ads = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"chartType\", {\n    /**\n     * The type of price series to display in the main chart.\n    *\n    * Use the `chartType` property to set a type of series that will be used to render prices in the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *   width=\"100%\"\n    *   height=\"400px\"\n    * \tchartType=\"Candle\"\n    *   dataSource={this.data} />\n    * ```\n    */\n    get: function () {\n      return this.i.abu;\n    },\n    set: function (v) {\n      this.i.abu = ensureEnum(FinancialChartType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisLabelHorizontalAlignment\", {\n    /**\n     * Gets or sets Horizontal alignment of Y-axis labels.\n    */\n    get: function () {\n      return this.i.zm;\n    },\n    set: function (v) {\n      this.i.zm = ensureEnum(HorizontalAlignment_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"isWindowSyncedToVisibleRange\", {\n    /**\n     * A boolean indicating whether the chart should automatically zoom in vertically on the currently visible range of data.\n     * When this property is set to true, panning and zooming along the X-axis will result in a corresponding zoom on the Y-axis, so that the visible range of data fills the zoom window as fully as possible.\n    */\n    get: function () {\n      return this.i.adt;\n    },\n    set: function (v) {\n      this.i.adt = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorTypes\", {\n    /**\n     * A collection indicating what financial indicator types to display on the Financial Chart.\n    *\n    * Use the `indicatorTypes` property to set types of indicators that will be rendered below the price pane in the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorTypes=\"ForceIndex\" />\n    * ```\n    */\n    get: function () {\n      if (this._indicatorTypes === null) {\n        var coll = new IgrFinancialIndicatorTypeCollection();\n        var innerColl = this.i.ab8;\n\n        if (!innerColl) {\n          innerColl = new FinancialIndicatorTypeCollection_internal(0);\n        }\n\n        this._indicatorTypes = coll._fromInner(innerColl);\n        this.i.ab8 = innerColl;\n      }\n\n      return this._indicatorTypes;\n    },\n    set: function (v) {\n      if (this._indicatorTypes !== null) {\n        this._indicatorTypes._setSyncTarget(null);\n\n        this._indicatorTypes = null;\n      }\n\n      var coll = new IgrFinancialIndicatorTypeCollection();\n      this._indicatorTypes = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(FinancialIndicatorType_$type);\n      var innerColl = this.i.ab8;\n\n      if (!innerColl) {\n        innerColl = new FinancialIndicatorTypeCollection_internal(0);\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._indicatorTypes._setSyncTarget(syncColl);\n\n      this.i.ab8 = innerColl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"overlayTypes\", {\n    /**\n     * A collection indicating what financial overlay types to display on the Financial Chart.\n    *\n    * Use the `overlayTypes` property to set types of overlays that will be rendered behind price series in the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \toverlayType =\"PriceChannel\" />\n    * ```\n    */\n    get: function () {\n      if (this._overlayTypes === null) {\n        var coll = new IgrFinancialOverlayTypeCollection();\n        var innerColl = this.i.aca;\n\n        if (!innerColl) {\n          innerColl = new FinancialOverlayTypeCollection_internal(0);\n        }\n\n        this._overlayTypes = coll._fromInner(innerColl);\n        this.i.aca = innerColl;\n      }\n\n      return this._overlayTypes;\n    },\n    set: function (v) {\n      if (this._overlayTypes !== null) {\n        this._overlayTypes._setSyncTarget(null);\n\n        this._overlayTypes = null;\n      }\n\n      var coll = new IgrFinancialOverlayTypeCollection();\n      this._overlayTypes = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(FinancialOverlayType_$type);\n      var innerColl = this.i.aca;\n\n      if (!innerColl) {\n        innerColl = new FinancialOverlayTypeCollection_internal(0);\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._overlayTypes._setSyncTarget(syncColl);\n\n      this.i.aca = innerColl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisAbbreviateLargeNumbers\", {\n    /**\n     * Gets or sets whether the large numbers on the Y-axis labels are abbreviated.\n    */\n    get: function () {\n      return this.i.adx;\n    },\n    set: function (v) {\n      this.i.adx = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"resolution\", {\n    /**\n     * Gets or sets the rendering resolution for all series in this chart.\n     * Where n = Resolution, for every n horizontal pixels, combine all items into a single datapoint.  When Resolution = 0, all datapoints will be rendered as graphical objects.  Charts with a higher resolution will have faster performance.\n    */\n    get: function () {\n      return this.i.hn;\n    },\n    set: function (v) {\n      this.i.hn = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"xAxisEnhancedIntervalPreferMoreCategoryLabels\", {\n    /**\n     * Gets or sets whether the x axis enhanced interval management should prefer to show all the labels if possible without collisions for supported types of category axes. This is for use with EnhancedIntervalMinimumCharacters = -1 and axes that have an integral interval.\n    */\n    get: function () {\n      return this.i.adw;\n    },\n    set: function (v) {\n      this.i.adw = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"yAxisEnhancedIntervalPreferMoreCategoryLabels\", {\n    /**\n     * Gets or sets whether the y axis enhanced interval management should prefer to show all the labels if possible without collisions for supported types of category axes. This is for use with EnhancedIntervalMinimumCharacters = -1 and axes that have an integral interval.\n    */\n    get: function () {\n      return this.i.ady;\n    },\n    set: function (v) {\n      this.i.ady = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"zoomSliderType\", {\n    /**\n     * Gets or sets type of series to display in the zoom slider pane.\n    *\n    * Use the `zoomSliderType` property to set a type of all series that will be rendered in the zoom pane, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     zoomSliderType=\"Candle\"\n    *     dataSource={this.data} />\n    * ```\n    */\n    get: function () {\n      return this.i.ab6;\n    },\n    set: function (v) {\n      this.i.ab6 = ensureEnum(FinancialChartZoomSliderType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"negativeBrushes\", {\n    /**\n     * Gets or sets the palette used for coloring negative items of Waterfall chart type.\n    *\n    * Use the `negativeBrushes` property to set a collection of brushes that will be used to render fill area of negative elements in the price pane, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tnegativeBrushes=\"Red\" />\n    * ```\n    */\n    get: function () {\n      return fromBrushCollection(this.i.aa3);\n    },\n    set: function (v) {\n      this.i.aa3 = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"negativeOutlines\", {\n    /**\n     * Brushes to use for drawing negative elements, when using a chart type with contextual coloring, such as Waterfall.\n    *\n    * Use the `negativeOutlines` property to set a collection of brushes that will be used to render outline of negative elements in the price pane, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tnegativeOutlines= \"Green\"/>\n    * ```\n    */\n    get: function () {\n      return fromBrushCollection(this.i.aa4);\n    },\n    set: function (v) {\n      this.i.aa4 = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"overlayBrushes\", {\n    /**\n     * Brushes to use for filling financial overlays.\n    *\n    * Use the `overlayBrushes` property to set a collection of brushes that will be used to render fill area of overlays in the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \toverlayBrushes=\"Green\" />\n    * ```\n    */\n    get: function () {\n      return fromBrushCollection(this.i.aa5);\n    },\n    set: function (v) {\n      this.i.aa5 = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"overlayOutlines\", {\n    /**\n     * Brushes to use for outlining financial overlays.\n    *\n    * Use the `overlayOutlines` property to set a collection of brushes that will be used to render outlines of overlays in the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \toverlayOutlines=\"Red\" />\n    * ```\n    */\n    get: function () {\n      return fromBrushCollection(this.i.aa6);\n    },\n    set: function (v) {\n      this.i.aa6 = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"volumeOutlines\", {\n    /**\n     * Brushes to use for outlining volume series in the volume pane.\n    *\n    * Use the `volumeOutlines` property to set a collection of brushes that will be used to render outline of multiple series in the volume pane of the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tvolumeOutlines=\"Green\" />\n    * ```\n    */\n    get: function () {\n      return fromBrushCollection(this.i.aa8);\n    },\n    set: function (v) {\n      this.i.aa8 = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"volumeBrushes\", {\n    /**\n     * Brushes to use for filling volume series in the volume pane.\n    *\n    * Use the `volumeBrushes` property to set a collection of brushes that will be used to render fill area of multiple series in the volume pane of the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tvolumeBrushes=\"Green\" />\n    * ```\n    */\n    get: function () {\n      return fromBrushCollection(this.i.aa7);\n    },\n    set: function (v) {\n      this.i.aa7 = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorNegativeBrushes\", {\n    /**\n     * Brushes to use for negative elements in financial indicators.\n    *\n    * Use the `indicatorNegativeBrushes` property to set a collection of brushes that will be used to render negative elements of indicators in the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorNegativeBrushes=\"Red\"/>\n    * ```\n    */\n    get: function () {\n      return fromBrushCollection(this.i.aa2);\n    },\n    set: function (v) {\n      this.i.aa2 = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorBrushes\", {\n    /**\n     * Brushes to use for financial indicators.\n    *\n    * Use the `indicatorBrushes` property to set a collection of brushes that will be used to render positive elements of indicators in the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorBrushes=\"Green\" />\n    * ```\n    */\n    get: function () {\n      return fromBrushCollection(this.i.aa1);\n    },\n    set: function (v) {\n      this.i.aa1 = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"volumeThickness\", {\n    /**\n     * The outline thickness of volume series in the volume pane.\n    *\n    * Use the `volumeThickness` property to set a number that will be used to render outline thickness of all series in the volume pane, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tvolumeThickness= {2.5}/>\n    * ```\n    */\n    get: function () {\n      return this.i.aew;\n    },\n    set: function (v) {\n      this.i.aew = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"overlayThickness\", {\n    /**\n     * The outline thickness of financial overlays.\n    *\n    * Use the `overlayThickness` property to set a number that will be used to render outline thickness of all overlays in the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \toverlayThickness ={2.5}  />\n    * ```\n    */\n    get: function () {\n      return this.i.aeu;\n    },\n    set: function (v) {\n      this.i.aeu = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"overlayMultiplier\", {\n    /**\n     * The multiplier of financial overlay, e.g. BollingerBands overlay.\n    */\n    get: function () {\n      return this.i.aet;\n    },\n    set: function (v) {\n      this.i.aet = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorThickness\", {\n    /**\n     * The outline or stroke thickness of financial indicators.\n    *\n    * Use the `indicatorThickness` property to set a number that will be used to render outline thickness of all indicators in the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorThickness={2.5}  />\n    * ```\n    */\n    get: function () {\n      return this.i.aes;\n    },\n    set: function (v) {\n      this.i.aes = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorDisplayTypes\", {\n    /**\n     * The display types of financial indicators.\n    *\n    * Use the `indicatorDisplayTypes` property to set display types that will determine whether render all indicators as area, lines, or columns in the Financial Chart control, e.g.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorDisplayTypes=\"line\" />\n    * ```\n    */\n    get: function () {\n      if (this._indicatorDisplayTypes === null) {\n        var coll = new IgrIndicatorDisplayTypeCollection();\n        var innerColl = this.i.ack;\n\n        if (!innerColl) {\n          innerColl = new IndicatorDisplayTypeCollection_internal();\n        }\n\n        this._indicatorDisplayTypes = coll._fromInner(innerColl);\n        this.i.ack = innerColl;\n      }\n\n      return this._indicatorDisplayTypes;\n    },\n    set: function (v) {\n      if (this._indicatorDisplayTypes !== null) {\n        this._indicatorDisplayTypes._setSyncTarget(null);\n\n        this._indicatorDisplayTypes = null;\n      }\n\n      var coll = new IgrIndicatorDisplayTypeCollection();\n      this._indicatorDisplayTypes = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(IndicatorDisplayType_$type);\n      var innerColl = this.i.ack;\n\n      if (!innerColl) {\n        innerColl = new IndicatorDisplayTypeCollection_internal();\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._indicatorDisplayTypes._setSyncTarget(syncColl);\n\n      this.i.ack = innerColl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorPeriod\", {\n    /**\n     * The period of financial indicators, where applicable.\n    *\n    * The `indicatorPeriod` property applies to only the `BollingerBands` overlay as well as to these indicators types: `AverageDirectionalIndex`, `AverageTrueRange`, `BollingerBandWidth`, `ChaikinVolatility`, `CommodityChannelIndex`, `DetrendedPriceOscillator`, `FastStochasticOscillator`, `ForceIndex`, `FullStochasticOscillator`, `MoneyFlowIndex`, `IgrPriceChannelOverlay`, `RateOfChangeAndMomentum`, `RelativeStrengthIndex`, `SlowStochasticOscillator`, `StandardDeviation`, `StochRSI`, `TRIX`, `WilliamsPercentR`\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorPeriod={8} />\n    * ```\n    */\n    get: function () {\n      return this.i.afi;\n    },\n    set: function (v) {\n      this.i.afi = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorMultiplier\", {\n    /**\n     * The multiplier of financial indicators, e.g. BollingerBandWidth indicator.\n    *\n    * The `indicatorMultiplier` property applies to only to BollingerBandWidth indicator type.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorMultiplier= {8} />\n    * ```\n    */\n    get: function () {\n      return this.i.aer;\n    },\n    set: function (v) {\n      this.i.aer = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorSmoothingPeriod\", {\n    /**\n     * The smoothing period of financial indicators, where applicable.\n    *\n    * The `indicatorSmoothingPeriod` property applies to only to `FullStochasticOscillator` indicator type.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorSmoothingPeriod={8}     />\n    * ```\n    */\n    get: function () {\n      return this.i.afl;\n    },\n    set: function (v) {\n      this.i.afl = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorShortPeriod\", {\n    /**\n     * The short period of financial indicators, where applicable.\n    *\n    * The `indicatorShortPeriod` property applies only to these indicator types:\n    *\n    * -   AbsoluteVolumeOscillator,\n    * -   ChaikinOscillator,\n    * -   MovingAverageConvergenceDivergence,\n    * -   PercentagePriceOscillator,\n    * -   PercentageVolumeOscillator,\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorShortPeriod={8} />\n    * ```\n    */\n    get: function () {\n      return this.i.afj;\n    },\n    set: function (v) {\n      this.i.afj = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorLongPeriod\", {\n    /**\n     * The long period of financial indicators, where applicable.\n    *\n    * The `indicatorLongPeriod` property applies only to these indicator types:\n    *\n    * -   AbsoluteVolumeOscillator,\n    * -   ChaikinOscillator,\n    * -   MovingAverageConvergenceDivergence,\n    * -   PercentagePriceOscillator,\n    * -   PercentageVolumeOscillator,\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorLongPeriod={8} />\n    * ```\n    */\n    get: function () {\n      return this.i.afh;\n    },\n    set: function (v) {\n      this.i.afh = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"indicatorSignalPeriod\", {\n    /**\n     * The signal period of financial indicators, where applicable.\n    *\n    * The `indicatorSignalPeriod` property applies to only to MovingAverageConvergenceDivergence indicator type.\n    *\n    * ```ts\n    * <IgrFinancialChart\n    *     width=\"100%\"\n    *     height=\"400px\"\n    *     dataSource={this.data}\n    * \tindicatorSignalPeriod ={8} />\n    * ```\n    */\n    get: function () {\n      return this.i.afk;\n    },\n    set: function (v) {\n      this.i.afk = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"rangeSelectorOptions\", {\n    /**\n     * A FinancialChartRangeSelectorOptionCollection containing the available range selector options on the toolbar.\n    */\n    get: function () {\n      if (this._rangeSelectorOptions === null) {\n        var coll = new IgrFinancialChartRangeSelectorOptionCollection();\n        var innerColl = this.i.abq;\n\n        if (!innerColl) {\n          innerColl = new FinancialChartRangeSelectorOptionCollection_internal(0);\n        }\n\n        this._rangeSelectorOptions = coll._fromInner(innerColl);\n        this.i.abq = innerColl;\n      }\n\n      return this._rangeSelectorOptions;\n    },\n    set: function (v) {\n      if (this._rangeSelectorOptions !== null) {\n        this._rangeSelectorOptions._setSyncTarget(null);\n\n        this._rangeSelectorOptions = null;\n      }\n\n      var coll = new IgrFinancialChartRangeSelectorOptionCollection();\n      this._rangeSelectorOptions = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(FinancialChartRangeSelectorOption_$type);\n      var innerColl = this.i.abq;\n\n      if (!innerColl) {\n        innerColl = new FinancialChartRangeSelectorOptionCollection_internal(0);\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._rangeSelectorOptions._setSyncTarget(syncColl);\n\n      this.i.abq = innerColl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"customIndicatorNames\", {\n    /**\n     * The names of custom indicators to add to the chart.\n     * When CustomIndicatorNames is set, the ApplyCustomIndicators event will be raised for each custom indicator name.\n    */\n    get: function () {\n      if (this._customIndicatorNames === null) {\n        var coll = new IgrCustomIndicatorNameCollection();\n        var innerColl = this.i.customIndicatorNames;\n\n        if (!innerColl) {\n          innerColl = new CustomIndicatorNameCollection_internal(0);\n        }\n\n        this._customIndicatorNames = coll._fromInner(innerColl);\n        this.i.customIndicatorNames = innerColl;\n      }\n\n      return this._customIndicatorNames;\n    },\n    set: function (v) {\n      if (this._customIndicatorNames !== null) {\n        this._customIndicatorNames._setSyncTarget(null);\n\n        this._customIndicatorNames = null;\n      }\n\n      var coll = new IgrCustomIndicatorNameCollection();\n      this._customIndicatorNames = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(String_$type);\n      var innerColl = this.i.customIndicatorNames;\n\n      if (!innerColl) {\n        innerColl = new CustomIndicatorNameCollection_internal(0);\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._customIndicatorNames._setSyncTarget(syncColl);\n\n      this.i.customIndicatorNames = innerColl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"isVerticalZoomEnabled\", {\n    get: function () {\n      return this.i.e6;\n    },\n    set: function (v) {\n      this.i.e6 = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"zoomSliderXAxisMajorStroke\", {\n    /**\n     * Gets or sets stroke brush of major gridlines on x-axis of the zoom slider pane\n    */\n    get: function () {\n      return brushToString(this.i.ajr);\n    },\n    set: function (v) {\n      this.i.ajr = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"zoomSliderXAxisMajorStrokeThickness\", {\n    /**\n     * Gets or sets thickness of major gridlines on x-axis of the zoom slider pane\n    */\n    get: function () {\n      return this.i.ae3;\n    },\n    set: function (v) {\n      this.i.ae3 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"isLegendVisible\", {\n    /**\n     * Gets or sets weather or not a legend is visible between toolbar and chart's plot area\n    */\n    get: function () {\n      return this.i.ado;\n    },\n    set: function (v) {\n      this.i.ado = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"xAxisMinimumValue\", {\n    /**\n     * Gets or sets minimum value on x-axis\n    */\n    get: function () {\n      return this.i.aee;\n    },\n    set: function (v) {\n      this.i.aee = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrFinancialChart.prototype, \"xAxisMaximumValue\", {\n    /**\n     * Gets or sets maximum value on x-axis\n    */\n    get: function () {\n      return this.i.aed;\n    },\n    set: function (v) {\n      this.i.aed = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrFinancialChart.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.indicatorTypes != null && this.indicatorTypes.findByName && this.indicatorTypes.findByName(name)) {\n      return this.indicatorTypes.findByName(name);\n    }\n\n    if (this.overlayTypes != null && this.overlayTypes.findByName && this.overlayTypes.findByName(name)) {\n      return this.overlayTypes.findByName(name);\n    }\n\n    if (this.indicatorDisplayTypes != null && this.indicatorDisplayTypes.findByName && this.indicatorDisplayTypes.findByName(name)) {\n      return this.indicatorDisplayTypes.findByName(name);\n    }\n\n    if (this.rangeSelectorOptions != null && this.rangeSelectorOptions.findByName && this.rangeSelectorOptions.findByName(name)) {\n      return this.rangeSelectorOptions.findByName(name);\n    }\n\n    if (this.xAxisBreaks != null && this.xAxisBreaks.findByName && this.xAxisBreaks.findByName(name)) {\n      return this.xAxisBreaks.findByName(name);\n    }\n\n    return null;\n  };\n  /**\n  * Called by the UI framework to provide a UI container for rendering this control.\n  * @param container  * The UI container element.\n  */\n\n\n  IgrFinancialChart.prototype.provideContainer = function (container) {\n    this.i.provideContainer(container);\n  };\n\n  IgrFinancialChart.prototype.notifyInsertItem = function (source_, index, newItem) {\n    this.i.qf(source_, index, newItem);\n  };\n\n  IgrFinancialChart.prototype.notifyRemoveItem = function (source_, index, oldItem) {\n    this.i.qg(source_, index, oldItem);\n  };\n\n  IgrFinancialChart.prototype.notifyClearItems = function (source_) {\n    this.i.qe(source_);\n  };\n\n  IgrFinancialChart.prototype.notifySetItem = function (source_, index, oldItem, newItem) {\n    this.i.qi(source_, index, oldItem, newItem);\n  };\n  /**\n   * Returns visuals as a serialized string.\n  \r\n  */\n\n\n  IgrFinancialChart.prototype.exportSerializedVisualData = function () {\n    var iv = this.i.af7();\n    return iv;\n  };\n\n  Object.defineProperty(IgrFinancialChart.prototype, \"applyCustomIndicators\", {\n    /**\n     * Event raised by the chart when custom indicator data is needed from the application.\n     * During series rendering, event will be raised once for each value in the CustomIndicatorNames collection.\n    */\n    get: function () {\n      return this._applyCustomIndicators;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._applyCustomIndicators_wrapped !== null) {\n        this.i.applyCustomIndicators = delegateRemove(this.i.applyCustomIndicators, this._applyCustomIndicators_wrapped);\n        this._applyCustomIndicators_wrapped = null;\n        this._applyCustomIndicators = null;\n      }\n\n      this._applyCustomIndicators = ev;\n\n      this._applyCustomIndicators_wrapped = function (o, e) {\n        var outerArgs = new IgrFinancialChartCustomIndicatorArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeApplyCustomIndicators) {\n          _this.beforeApplyCustomIndicators(_this, outerArgs);\n        }\n\n        if (_this._applyCustomIndicators) {\n          _this._applyCustomIndicators(_this, outerArgs);\n        }\n      };\n\n      this.i.applyCustomIndicators = delegateCombine(this.i.applyCustomIndicators, this._applyCustomIndicators_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrFinancialChart;\n}(IgrXYChart);\n\nexport { IgrFinancialChart };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-financial-chart.js"],"names":["__extends","React","ReactDOM","ReactRenderer","ReactWrapper","TypeRegistrar","FinancialChart","FinancialChartType_$type","fromBrushCollection","toBrushCollection","brushToString","stringToBrush","ensureEnum","ensureBool","IgrXYChart","DataChartStylingDefaults","DataSeriesType","IgrDataContext","FinancialChartVolumeType_$type","FinancialChartXAxisMode","FinancialChartXAxisMode_$type","FinancialChartYAxisMode","FinancialChartYAxisMode_$type","HorizontalAlignment_$type","FinancialChartZoomSliderType_$type","IgrFinancialChartDefaultTemplates","delegateCombine","delegateRemove","IgrFinancialIndicatorTypeCollection","FinancialIndicatorTypeCollection","FinancialIndicatorTypeCollection_internal","SyncableObservableCollection$1","FinancialIndicatorType_$type","IgrFinancialOverlayTypeCollection","FinancialOverlayTypeCollection","FinancialOverlayTypeCollection_internal","FinancialOverlayType_$type","IgrIndicatorDisplayTypeCollection","IndicatorDisplayTypeCollection","IndicatorDisplayTypeCollection_internal","IndicatorDisplayType_$type","IgrFinancialChartRangeSelectorOptionCollection","FinancialChartRangeSelectorOptionCollection","FinancialChartRangeSelectorOptionCollection_internal","FinancialChartRangeSelectorOption_$type","IgrFinancialChartCustomIndicatorArgs","CustomIndicatorNameCollection","CustomIndicatorNameCollection_internal","IgrCustomIndicatorNameCollection","String_$type","IgrTemplateContainer","fg","window","CSS","supports","financialChartToolbarStyle","gridRow","msGridRow","financialChartPriceStyle","financialChartIndicatorsStyle","financialChartVolumeStyle","financialChartZoomSliderStyle","financialChartMainGridStyle","height","width","textAlign","display","msGridColumns","financialChartLegendStyle","IgrFinancialChart","_super","props","_this","call","_wrapper","_initialized","_toolbarElement","_dataSource","_defaultTooltips","_dynamicContent","_uniqueTooltipId","_xAxisBreaks","_indicatorTypes","_overlayTypes","_indicatorDisplayTypes","_rangeSelectorOptions","_customIndicatorNames","_applyCustomIndicators","_applyCustomIndicators_wrapped","_toolTemplateRef","bind","_tooltipRef","_mainGridRef","_mainRef","_toolbarRef","_activeTooltipElements","Map","_activeTooltips","_currentTooltips","onDocumentClick","document","_container","createElement","style","addEventListener","root","ren","chart","i","_chart","xAxis","rewrapAxis","yAxis","volumeAxis","volumeXAxis","indicatorAxis","indicatorXAxis","zoomSliderAxis","zoomSliderXAxis","provideContainer","bindData","notifyResized","addSizeWatcher","_checkToolbarSize","prototype","render","outerChildren","children","key","className","ref","_sliderPortal","push","length","t","has","active","get","isRegistered","Tooltip","tEle","owner","portal","createPortal","set","mainGrid","splice","mainDiv","currentOwner","tooltipTemplate","template","_toolbarTemplateComponent","_mainGridElement","_mainElement","updateRoot","getWrapper","Object","defineProperty","_height","value","enumerable","configurable","_width","_rangeSelectorTemplate","_chartTypePickerTemplate","_indicatorMenuTemplate","_toolbarTemplate","_chartTemplate","start","toolbarRoot","querySelector","rootRect","getBoundingClientRect","hideRemaining","child","nodeType","Node","ELEMENT_NODE","childRect","left","componentWillUnmount","destroy","removeEventListener","ev","axis","axisName","$type","name","componentName","x","create","_implementation","externalObject","Error","createImplementation","createSeriesComponent","type","s","createIndicator","typeName","createOverlay","createSeries","Area","Column","Line","FinancialPrice","ItemToolTipLayer","CategoryToolTipLayer","CrosshairLayer","FinalValueLayer","CalloutLayer","DataToolTipLayer","createXAxis","Ordinal","Time","createYAxis","Numeric","PercentChange","undefined","itemsSource","componentDidMount","initializeContent","d","_onDefaultTooltipsReady","context","getContext","_defaultTemplates","toolbarArea","toolbarContext","vm","toolbar","financialChartIndicatorMenu","indicatorMenuTemplate","financialChartIndicatorMenuTemplate","notifyChanged","dataContext","financialChartTypePicker","chartTypePickerTemplate","financialChartTypePickerTemplate","financialChartRangeSelector","rangeSelectorTemplate","financialChartRangeSelectorTemplate","toolbarTemplate","financialChartToolbarTemplate","toolContainer","contentReady","provideGrid","gridWrapper","ele","legendContainer","rootWrapper","getNativeElement","mainContainer","container","indicatorContainer","indicatorsContainer","volumeContainer","zoomSliderContainer","zoomContainer","main","templateMain","templateToolbar","templateLegend","templateIndicator","templateVolume","templateZoomSlider","grid","appendChild","_styling","_createZoomSlider","hostEle","onReady","Slider","r","createTooltip","wrapper","slice","self","updateToolTip","c","isSubContent","ext","parentElement","removeChild","hideToolTip","_updateTooltipState","_ensureTooltipCreated","series","tCont","_ensureDefaultTooltip","cr","dataChart","currSeries","count","item","showDefaultTooltip","setState","tooltips","coll","innerColl","xAxisBreaks","_fromInner","v","_setSyncTarget","_fromOuter","syncColl","_inner","clear","hf","e0","aev","bi","adz","afn","aez","ae1","ae0","ae2","aey","aex","abz","ab1","ab3","ads","abu","zm","adt","ab8","aca","adx","hn","adw","ady","ab6","aa3","aa4","aa5","aa6","aa8","aa7","aa2","aa1","aew","aeu","aet","aes","ack","afi","aer","afl","afj","afh","afk","abq","customIndicatorNames","e6","ajr","ae3","ado","aee","aed","findByName","baseResult","indicatorTypes","overlayTypes","indicatorDisplayTypes","rangeSelectorOptions","notifyInsertItem","source_","index","newItem","qf","notifyRemoveItem","oldItem","qg","notifyClearItems","qe","notifySetItem","qi","exportSerializedVisualData","iv","af7","applyCustomIndicators","o","e","outerArgs","_provideImplementation","beforeApplyCustomIndicators"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,qBAA5C;AACA,SAASC,aAAT,QAA8B,qBAA9B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA,SAASC,mBAAT,EAA8BC,iBAA9B,EAAiDC,aAAjD,EAAgEC,aAAhE,EAA+EC,UAA/E,EAA2FC,UAA3F,QAA6G,qBAA7G;AACA,SAASC,UAAT,QAA2B,gBAA3B;AACA,SAASC,wBAAT,QAAyC,4BAAzC;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,cAAT,QAA+B,qBAA/B;AACA,SAASC,8BAAT,QAA+C,4BAA/C;AACA,SAASC,uBAAT,EAAkCC,6BAAlC,QAAuE,2BAAvE;AACA,SAASC,uBAAT,EAAkCC,6BAAlC,QAAuE,2BAAvE;AACA,SAASC,yBAAT,QAA0C,qBAA1C;AACA,SAASC,kCAAT,QAAmD,gCAAnD;AACA,SAASC,iCAAT,QAAkD,yCAAlD;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,qBAAhD;AACA,SAASC,mCAAT,QAAoD,2CAApD;AACA,SAASC,gCAAgC,IAAIC,yCAA7C,QAA8F,oCAA9F;AACA,SAASC,8BAAT,QAA+C,qBAA/C;AACA,SAASC,4BAAT,QAA6C,0BAA7C;AACA,SAASC,iCAAT,QAAkD,yCAAlD;AACA,SAASC,8BAA8B,IAAIC,uCAA3C,QAA0F,kCAA1F;AACA,SAASC,0BAAT,QAA2C,wBAA3C;AACA,SAASC,iCAAT,QAAkD,yCAAlD;AACA,SAASC,8BAA8B,IAAIC,uCAA3C,QAA0F,kCAA1F;AACA,SAASC,0BAAT,QAA2C,wBAA3C;AACA,SAASC,8CAAT,QAA+D,wDAA/D;AACA,SAASC,2CAA2C,IAAIC,oDAAxD,QAAoH,+CAApH;AACA,SAASC,uCAAT,QAAwD,qCAAxD;AACA,SAASC,oCAAT,QAAqD,6CAArD;AACA,SAASC,6BAA6B,IAAIC,sCAA1C,QAAwF,iCAAxF;AACA,SAASC,gCAAT,QAAiD,wCAAjD;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,oBAAT,QAAqC,qBAArC;AACA,IAAIC,EAAE,GAAGC,MAAM,IAAIA,MAAM,CAACC,GAAjB,IAAwBD,MAAM,CAACC,GAAP,CAAWC,QAAnC,IACL,aAAcF,MAAM,CAACC,GAAP,CAAWC,QAAX,CAAoB,SAApB,EAA+B,MAA/B,CADlB;AAEA,IAAIC,0BAA0B,GAAG;AAC7BC,EAAAA,OAAO,EAAE,CADoB;AAE7BC,EAAAA,SAAS,EAAE;AAFkB,CAAjC;AAIA,IAAIC,wBAAwB,GAAG;AAC3BF,EAAAA,OAAO,EAAE,CADkB;AAE3BC,EAAAA,SAAS,EAAE;AAFgB,CAA/B;AAIA,IAAIE,6BAA6B,GAAG;AAChCH,EAAAA,OAAO,EAAE,CADuB;AAEhCC,EAAAA,SAAS,EAAE;AAFqB,CAApC;AAIA,IAAIG,yBAAyB,GAAG;AAC5BJ,EAAAA,OAAO,EAAE,CADmB;AAE5BC,EAAAA,SAAS,EAAE;AAFiB,CAAhC;AAIA,IAAII,6BAA6B,GAAG;AAChCL,EAAAA,OAAO,EAAE,CADuB;AAEhCC,EAAAA,SAAS,EAAE;AAFqB,CAApC;AAIA,IAAIK,2BAA2B,GAAG;AAC9BC,EAAAA,MAAM,EAAE,MADsB;AAE9BC,EAAAA,KAAK,EAAE,MAFuB;AAG9BC,EAAAA,SAAS,EAAE,MAHmB;AAI9BC,EAAAA,OAAO,EAAEf,EAAE,GAAG,MAAH,GAAY,UAJO;AAK9BgB,EAAAA,aAAa,EAAE;AALe,CAAlC;AAOA,IAAIC,yBAAyB,GAAG;AAC5BZ,EAAAA,OAAO,EAAE,CADmB;AAE5BC,EAAAA,SAAS,EAAE;AAFiB,CAAhC;;AAIA,IAAIY,iBAAiB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACnEtE,EAAAA,SAAS,CAACqE,iBAAD,EAAoBC,MAApB,CAAT;;AACA,WAASD,iBAAT,CAA2BE,KAA3B,EAAkC;AAC9B,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBF,KAAlB,KAA4B,IAAxC;;AACAC,IAAAA,KAAK,CAACE,QAAN,GAAiB,IAAjB;AACAF,IAAAA,KAAK,CAACG,YAAN,GAAqB,KAArB;AACAH,IAAAA,KAAK,CAACI,eAAN,GAAwB,IAAxB;AACAJ,IAAAA,KAAK,CAACK,WAAN,GAAoB,IAApB;AACAL,IAAAA,KAAK,CAACM,gBAAN,GAAyB,IAAzB;AACAN,IAAAA,KAAK,CAACO,eAAN,GAAwB,EAAxB;AACAP,IAAAA,KAAK,CAACQ,gBAAN,GAAyB,CAAzB;AACAR,IAAAA,KAAK,CAACS,YAAN,GAAqB,IAArB;AACAT,IAAAA,KAAK,CAACU,eAAN,GAAwB,IAAxB;AACAV,IAAAA,KAAK,CAACW,aAAN,GAAsB,IAAtB;AACAX,IAAAA,KAAK,CAACY,sBAAN,GAA+B,IAA/B;AACAZ,IAAAA,KAAK,CAACa,qBAAN,GAA8B,IAA9B;AACAb,IAAAA,KAAK,CAACc,qBAAN,GAA8B,IAA9B;AACAd,IAAAA,KAAK,CAACe,sBAAN,GAA+B,IAA/B;AACAf,IAAAA,KAAK,CAACgB,8BAAN,GAAuC,IAAvC;AACAhB,IAAAA,KAAK,CAACiB,gBAAN,GAAyBjB,KAAK,CAACiB,gBAAN,CAAuBC,IAAvB,CAA4BlB,KAA5B,CAAzB;AACAA,IAAAA,KAAK,CAACmB,WAAN,GAAoBnB,KAAK,CAACmB,WAAN,CAAkBD,IAAlB,CAAuBlB,KAAvB,CAApB;AACAA,IAAAA,KAAK,CAACoB,YAAN,GAAqBpB,KAAK,CAACoB,YAAN,CAAmBF,IAAnB,CAAwBlB,KAAxB,CAArB;AACAA,IAAAA,KAAK,CAACqB,QAAN,GAAiBrB,KAAK,CAACqB,QAAN,CAAeH,IAAf,CAAoBlB,KAApB,CAAjB;AACAA,IAAAA,KAAK,CAACsB,WAAN,GAAoBtB,KAAK,CAACsB,WAAN,CAAkBJ,IAAlB,CAAuBlB,KAAvB,CAApB;AACAA,IAAAA,KAAK,CAACuB,sBAAN,GAA+B,IAAIC,GAAJ,EAA/B;AACAxB,IAAAA,KAAK,CAACyB,eAAN,GAAwB,IAAID,GAAJ,EAAxB;AACAxB,IAAAA,KAAK,CAAC0B,gBAAN,GAAyB,EAAzB;AACA1B,IAAAA,KAAK,CAAC2B,eAAN,GAAwB3B,KAAK,CAAC2B,eAAN,CAAsBT,IAAtB,CAA2BlB,KAA3B,CAAxB;;AACA,QAAI4B,QAAJ,EAAc;AACV5B,MAAAA,KAAK,CAAC6B,UAAN,GAAmBD,QAAQ,CAACE,aAAT,CAAuB,KAAvB,CAAnB;AACA9B,MAAAA,KAAK,CAAC6B,UAAN,CAAiBE,KAAjB,CAAuBrC,OAAvB,GAAiC,OAAjC;AACAM,MAAAA,KAAK,CAAC6B,UAAN,CAAiBE,KAAjB,CAAuBvC,KAAvB,GAA+B,MAA/B;AACAQ,MAAAA,KAAK,CAAC6B,UAAN,CAAiBE,KAAjB,CAAuBxC,MAAvB,GAAgC,MAAhC;AACAqC,MAAAA,QAAQ,CAACI,gBAAT,CAA0B,OAA1B,EAAmChC,KAAK,CAAC2B,eAAzC;AACH;;AACD,QAAIM,IAAJ;AACAA,IAAAA,IAAI,GAAGjC,KAAK,CAAC6B,UAAb;;AACA,QAAI7B,KAAK,CAAC6B,UAAN,IAAoB,IAAxB,EAA8B;AAC1BI,MAAAA,IAAI,GAAGjC,KAAK,CAAC6B,UAAb;AACH;;AACD,QAAIK,GAAG,GAAG,IAAIvG,aAAJ,CAAkBsG,IAAlB,EAAwBL,QAAxB,EAAkC,IAAlC,EAAwCrF,wBAAxC,CAAV;AACAyD,IAAAA,KAAK,CAACE,QAAN,GAAiBgC,GAAjB;AACA,QAAIC,KAAK,GAAGnC,KAAK,CAACoC,CAAlB;AACApC,IAAAA,KAAK,CAACqC,MAAN,GAAeF,KAAf;;AACA,QAAIA,KAAK,CAACG,KAAV,EAAiB;AACbtC,MAAAA,KAAK,CAACuC,UAAN,CAAiBJ,KAAK,CAACG,KAAvB;AACH;;AACD,QAAIH,KAAK,CAACK,KAAV,EAAiB;AACbxC,MAAAA,KAAK,CAACuC,UAAN,CAAiBJ,KAAK,CAACK,KAAvB;AACH;;AACD,QAAIL,KAAK,CAACM,UAAV,EAAsB;AAClBzC,MAAAA,KAAK,CAACuC,UAAN,CAAiBJ,KAAK,CAACM,UAAvB;AACH;;AACD,QAAIN,KAAK,CAACO,WAAV,EAAuB;AACnB1C,MAAAA,KAAK,CAACuC,UAAN,CAAiBJ,KAAK,CAACO,WAAvB;AACH;;AACD,QAAIP,KAAK,CAACQ,aAAV,EAAyB;AACrB3C,MAAAA,KAAK,CAACuC,UAAN,CAAiBJ,KAAK,CAACQ,aAAvB;AACH;;AACD,QAAIR,KAAK,CAACS,cAAV,EAA0B;AACtB5C,MAAAA,KAAK,CAACuC,UAAN,CAAiBJ,KAAK,CAACS,cAAvB;AACH;;AACD,QAAIT,KAAK,CAACU,cAAV,EAA0B;AACtB7C,MAAAA,KAAK,CAACuC,UAAN,CAAiBJ,KAAK,CAACU,cAAvB;AACH;;AACD,QAAIV,KAAK,CAACW,eAAV,EAA2B;AACvB9C,MAAAA,KAAK,CAACuC,UAAN,CAAiBJ,KAAK,CAACW,eAAvB;AACH;;AACDX,IAAAA,KAAK,CAACY,gBAAN,CAAuBb,GAAvB;;AACAlC,IAAAA,KAAK,CAACgD,QAAN;;AACAb,IAAAA,KAAK,CAACc,aAAN;AACAf,IAAAA,GAAG,CAACgB,cAAJ,CAAmB,YAAY;AAC3BlD,MAAAA,KAAK,CAACmD,iBAAN;;AACAnD,MAAAA,KAAK,CAACqC,MAAN,CAAaY,aAAb;AACH,KAHD;AAIAjD,IAAAA,KAAK,CAACG,YAAN,GAAqB,IAArB;AACA,WAAOH,KAAP;AACH;;AACDH,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BC,MAA5B,GAAqC,YAAY;AAC7C,QAAIC,aAAa,GAAG,EAApB;AACA,QAAIC,QAAQ,GAAG,CACX9H,KAAK,CAACqG,aAAN,CAAoB,KAApB,EAA2B;AACvB0B,MAAAA,GAAG,EAAE,2BADkB;AAEvBC,MAAAA,SAAS,EAAE,2BAFY;AAGvB1B,MAAAA,KAAK,EAAEhD,0BAHgB;AAIvB2E,MAAAA,GAAG,EAAE,KAAKpC;AAJa,KAA3B,EAKG7F,KAAK,CAACqG,aAAN,CAAoBpD,oBAApB,EAA0C;AACzCgF,MAAAA,GAAG,EAAE,KAAKzC;AAD+B,KAA1C,CALH,CADW,EASXxF,KAAK,CAACqG,aAAN,CAAoB,KAApB,EAA2B;AAAE0B,MAAAA,GAAG,EAAE,sBAAP;AAA+BC,MAAAA,SAAS,EAAE,sBAA1C;AAAkE1B,MAAAA,KAAK,EAAEnC;AAAzE,KAA3B,CATW,EAUXnE,KAAK,CAACqG,aAAN,CAAoB,KAApB,EAA2B;AAAE0B,MAAAA,GAAG,EAAE,qBAAP;AAA8BC,MAAAA,SAAS,EAAE,qBAAzC;AAAgE1B,MAAAA,KAAK,EAAE7C;AAAvE,KAA3B,CAVW,EAWXzD,KAAK,CAACqG,aAAN,CAAoB,KAApB,EAA2B;AAAE0B,MAAAA,GAAG,EAAE,0BAAP;AAAmCC,MAAAA,SAAS,EAAE,0BAA9C;AAA0E1B,MAAAA,KAAK,EAAE5C;AAAjF,KAA3B,CAXW,EAYX1D,KAAK,CAACqG,aAAN,CAAoB,KAApB,EAA2B;AAAE0B,MAAAA,GAAG,EAAE,sBAAP;AAA+BC,MAAAA,SAAS,EAAE,sBAA1C;AAAkE1B,MAAAA,KAAK,EAAE3C;AAAzE,KAA3B,CAZW,EAaX3D,KAAK,CAACqG,aAAN,CAAoB,KAApB,EAA2B;AAAE0B,MAAAA,GAAG,EAAE,0BAAP;AAAmCC,MAAAA,SAAS,EAAE,0BAA9C;AAA0E1B,MAAAA,KAAK,EAAE1C;AAAjF,KAA3B,CAbW,CAAf;;AAeA,QAAI,KAAKsE,aAAT,EAAwB;AACpBJ,MAAAA,QAAQ,CAACK,IAAT,CAAc,KAAKD,aAAnB;AACH;;AACD,QAAI,KAAKjC,gBAAL,IAAyB,KAAKA,gBAAL,CAAsBmC,MAAtB,GAA+B,CAA5D,EAA+D;AAC3D,WAAK,IAAIzB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,KAAKV,gBAAL,CAAsBmC,MAA1C,EAAkDzB,CAAC,EAAnD,EAAuD;AACnD,YAAI0B,CAAC,GAAG,KAAKpC,gBAAL,CAAsBU,CAAtB,CAAR;;AACA,YAAI,KAAKb,sBAAL,CAA4BwC,GAA5B,CAAgCD,CAAhC,CAAJ,EAAwC;AACpC,cAAIE,MAAM,GAAG,KAAKzC,sBAAL,CAA4B0C,GAA5B,CAAgCH,CAAhC,CAAb;;AACAR,UAAAA,aAAa,CAACM,IAAd,CAAmBI,MAAnB;AACH,SAHD,MAIK;AACD,cAAI,CAACnI,aAAa,CAACqI,YAAd,CAA2B,qBAA3B,CAAL,EAAwD;AACpD;AACH;;AACD,cAAIC,OAAO,GAAGtI,aAAa,CAACoI,GAAd,CAAkB,qBAAlB,CAAd;AACA,cAAIG,IAAI,GAAG3I,KAAK,CAACqG,aAAN,CAAoBqC,OAApB,EAA6B;AACpCT,YAAAA,GAAG,EAAE,KAAKvC,WAD0B;AAEpCqC,YAAAA,GAAG,EAAE,KAAK9B,gBAAL,CAAsBU,CAAtB,EAAyBoB,GAFM;AAGpCa,YAAAA,KAAK,EAAE,KAAK3C,gBAAL,CAAsBU,CAAtB;AAH6B,WAA7B,CAAX;AAKA,cAAIkC,MAAM,GAAG5I,QAAQ,CAAC6I,YAAT,CAAsBH,IAAtB,EAA4BN,CAA5B,EAA+B,KAAKpC,gBAAL,CAAsBU,CAAtB,EAAyBoB,GAAxD,CAAb;;AACA,eAAKjC,sBAAL,CAA4BiD,GAA5B,CAAgCV,CAAhC,EAAmCQ,MAAnC;;AACAhB,UAAAA,aAAa,CAACM,IAAd,CAAmBU,MAAnB;AACH;AACJ;AACJ;;AACD,QAAIG,QAAQ,GAAGhJ,KAAK,CAACqG,aAAN,CAAoB,KAApB,EAA2B;AACtC0B,MAAAA,GAAG,EAAE,wBADiC;AAEtCC,MAAAA,SAAS,EAAE,wBAF2B;AAGtC1B,MAAAA,KAAK,EAAEzC,2BAH+B;AAItCiE,MAAAA,QAAQ,EAAEA,QAJ4B;AAKtCG,MAAAA,GAAG,EAAE,KAAKtC;AAL4B,KAA3B,CAAf;AAOAkC,IAAAA,aAAa,CAACoB,MAAd,CAAqB,CAArB,EAAwB,CAAxB,EAA2BD,QAA3B;AACA,QAAIE,OAAO,GAAGlJ,KAAK,CAACqG,aAAN,CAAoB,KAApB,EAA2B;AACrC2B,MAAAA,SAAS,EAAE,wCAD0B;AAErCD,MAAAA,GAAG,EAAE,uBAFgC;AAGrCD,MAAAA,QAAQ,EAAED,aAH2B;AAIrCI,MAAAA,GAAG,EAAE,KAAKrC;AAJ2B,KAA3B,CAAd;AAMA,WAAOsD,OAAP;AACH,GA1DD;;AA2DA9E,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BjC,WAA5B,GAA0C,UAAU2C,CAAV,EAAa;AACnD;AACA,QAAIA,CAAC,KAAK,IAAV,EAAgB;AACZ;AACH;;AACD,QAAIA,CAAC,CAACc,YAAF,IACAd,CAAC,CAACc,YAAF,CAAeC,eADnB,EACoC;AAChCf,MAAAA,CAAC,CAACgB,QAAF,GAAahB,CAAC,CAACc,YAAF,CAAeC,eAA5B;AACH;;AACD,SAAKpD,eAAL,CAAqB+C,GAArB,CAAyBV,CAAC,CAACc,YAA3B,EAAyCd,CAAzC;AACH,GAVD;;AAWAjE,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4B9B,WAA5B,GAA0C,UAAUwC,CAAV,EAAa;AACnD,SAAK1D,eAAL,GAAuB0D,CAAvB;AACH,GAFD;;AAGAjE,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BnC,gBAA5B,GAA+C,UAAU6C,CAAV,EAAa;AACxD,SAAKiB,yBAAL,GAAiCjB,CAAjC;AACH,GAFD;;AAGAjE,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BhC,YAA5B,GAA2C,UAAU0C,CAAV,EAAa;AACpD,SAAKkB,gBAAL,GAAwBlB,CAAxB;AACH,GAFD;;AAGAjE,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4B/B,QAA5B,GAAuC,UAAUyC,CAAV,EAAa;AAChD,SAAKmB,YAAL,GAAoBnB,CAApB;AACA,SAAKjC,UAAL,GAAkBiC,CAAlB;;AACA,QAAI,CAACA,CAAL,EAAQ;AACJ;AACH;;AACD,SAAK5D,QAAL,CAAcgF,UAAd,CAAyB,KAAKhF,QAAL,CAAciF,UAAd,CAAyB,KAAKtD,UAA9B,CAAzB;AACH,GAPD;;AAQAuD,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,QAAnD,EAA6D;AACzDa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKqB,OAAZ;AACH,KAHwD;AAIzDd,IAAAA,GAAG,EAAE,UAAUe,KAAV,EAAiB;AAClB,WAAKD,OAAL,GAAeC,KAAf;;AACA,UAAI,KAAKN,YAAT,EAAuB;AACnB,aAAKA,YAAL,CAAkBlD,KAAlB,CAAwBxC,MAAxB,GAAiCgG,KAAjC;;AACA,aAAKlD,MAAL,CAAYY,aAAZ;AACH;AACJ,KAVwD;AAWzDuC,IAAAA,UAAU,EAAE,KAX6C;AAYzDC,IAAAA,YAAY,EAAE;AAZ2C,GAA7D;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,OAAnD,EAA4D;AACxDa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKyB,MAAZ;AACH,KAHuD;AAIxDlB,IAAAA,GAAG,EAAE,UAAUe,KAAV,EAAiB;AAClB,WAAKG,MAAL,GAAcH,KAAd;;AACA,UAAI,KAAKN,YAAT,EAAuB;AACnB,aAAKA,YAAL,CAAkBlD,KAAlB,CAAwBxC,MAAxB,GAAiCgG,KAAjC;;AACA,aAAKlD,MAAL,CAAYY,aAAZ;AACH;AACJ,KAVuD;AAWxDuC,IAAAA,UAAU,EAAE,KAX4C;AAYxDC,IAAAA,YAAY,EAAE;AAZ0C,GAA5D;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,uBAAnD,EAA4E;AACxEa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK0B,sBAAZ;AACH,KAHuE;AAIxEnB,IAAAA,GAAG,EAAE,UAAUe,KAAV,EAAiB;AAClB,WAAKI,sBAAL,GAA8BJ,KAA9B;AACH,KANuE;AAOxEC,IAAAA,UAAU,EAAE,KAP4D;AAQxEC,IAAAA,YAAY,EAAE;AAR0D,GAA5E;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,yBAAnD,EAA8E;AAC1Ea,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK2B,wBAAZ;AACH,KAHyE;AAI1EpB,IAAAA,GAAG,EAAE,UAAUe,KAAV,EAAiB;AAClB,WAAKK,wBAAL,GAAgCL,KAAhC;AACH,KANyE;AAO1EC,IAAAA,UAAU,EAAE,KAP8D;AAQ1EC,IAAAA,YAAY,EAAE;AAR4D,GAA9E;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,uBAAnD,EAA4E;AACxEa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK4B,sBAAZ;AACH,KAHuE;AAIxErB,IAAAA,GAAG,EAAE,UAAUe,KAAV,EAAiB;AAClB,WAAKM,sBAAL,GAA8BN,KAA9B;AACH,KANuE;AAOxEC,IAAAA,UAAU,EAAE,KAP4D;AAQxEC,IAAAA,YAAY,EAAE;AAR0D,GAA5E;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,iBAAnD,EAAsE;AAClEa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK6B,gBAAZ;AACH,KAHiE;AAIlEtB,IAAAA,GAAG,EAAE,UAAUe,KAAV,EAAiB;AAClB,WAAKO,gBAAL,GAAwBP,KAAxB;AACH,KANiE;AAOlEC,IAAAA,UAAU,EAAE,KAPsD;AAQlEC,IAAAA,YAAY,EAAE;AARoD,GAAtE;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,eAAnD,EAAoE;AAChEa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK8B,cAAZ;AACH,KAH+D;AAIhEvB,IAAAA,GAAG,EAAE,UAAUe,KAAV,EAAiB;AAClB,WAAKQ,cAAL,GAAsBR,KAAtB;AACH,KAN+D;AAOhEC,IAAAA,UAAU,EAAE,KAPoD;AAQhEC,IAAAA,YAAY,EAAE;AARkD,GAApE;;AAUA5F,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BD,iBAA5B,GAAgD,YAAY;AACxD,QAAI,KAAK/C,eAAT,EAA0B;AACtB,UAAI4F,KAAK,GAAG,KAAK5F,eAAjB;;AACA,UAAI4F,KAAK,CAACzC,QAAN,CAAeM,MAAf,IAAyB,CAA7B,EAAgC;AAC5BmC,QAAAA,KAAK,GAAGA,KAAK,CAACzC,QAAN,CAAe,CAAf,CAAR;AACH;;AACD,UAAIyC,KAAK,CAACzC,QAAN,CAAeM,MAAf,IAAyB,CAA7B,EAAgC;AAC5BmC,QAAAA,KAAK,GAAGA,KAAK,CAACzC,QAAN,CAAe,CAAf,CAAR;AACH;;AACD,UAAI0C,WAAW,GAAGD,KAAK,CAACE,aAAN,CAAoB,wBAApB,CAAlB;AACA,UAAIC,QAAQ,GAAGF,WAAW,CAACG,qBAAZ,EAAf;AACA,UAAIC,aAAa,GAAG,KAApB;;AACA,WAAK,IAAIjE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG6D,WAAW,CAAC1C,QAAZ,CAAqBM,MAAzC,EAAiDzB,CAAC,EAAlD,EAAsD;AAClD,YAAIkE,KAAK,GAAGL,WAAW,CAAC1C,QAAZ,CAAqBnB,CAArB,CAAZ;;AACA,YAAIkE,KAAK,CAACC,QAAN,IAAkBC,IAAI,CAACC,YAA3B,EAAyC;AACrC,cAAI,CAACJ,aAAL,EAAoB;AAChBC,YAAAA,KAAK,CAACvE,KAAN,CAAYrC,OAAZ,GAAsB,EAAtB;AACH;;AACD,cAAIgH,SAAS,GAAGJ,KAAK,CAACF,qBAAN,EAAhB;;AACA,cAAIC,aAAa,IACbK,SAAS,CAACC,IAAV,GAAiBD,SAAS,CAAClH,KAA3B,GACI2G,QAAQ,CAACQ,IAAT,GAAgBR,QAAQ,CAAC3G,KAFjC,EAEwC;AACpC8G,YAAAA,KAAK,CAACvE,KAAN,CAAYrC,OAAZ,GAAsB,MAAtB;AACA2G,YAAAA,aAAa,GAAG,IAAhB;AACH,WALD,MAMK;AACDC,YAAAA,KAAK,CAACvE,KAAN,CAAYrC,OAAZ,GAAsB,EAAtB;AACH;AACJ;AACJ;AACJ;AACJ,GA/BD;;AAgCAG,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BwD,oBAA5B,GAAmD,YAAY;AAC3D,SAAKvE,MAAL,CAAYwE,OAAZ;;AACA,SAAK3G,QAAL,CAAc2G,OAAd;;AACA,QAAIjF,QAAJ,EAAc;AACVA,MAAAA,QAAQ,CAACkF,mBAAT,CAA6B,OAA7B,EAAsC,KAAKnF,eAA3C;AACH;AACJ,GAND;;AAOA9B,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BzB,eAA5B,GAA8C,UAAUoF,EAAV,EAAc;AACxD,SAAK1E,MAAL,CAAYV,eAAZ,CAA4BoF,EAA5B;AACH,GAFD;;AAGAlH,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4Bb,UAA5B,GAAyC,UAAUyE,IAAV,EAAgB;AACrD,QAAIC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAWC,IAA1B;AACA,QAAIC,aAAa,GAAG,QAAQH,QAA5B;;AACA,QAAIpL,aAAa,CAACqI,YAAd,CAA2BkD,aAA3B,CAAJ,EAA+C;AAC3C,UAAIC,CAAC,GAAGxL,aAAa,CAACyL,MAAd,CAAqBF,aAArB,CAAR;AACAC,MAAAA,CAAC,CAACE,eAAF,GAAoBP,IAApB;AACAA,MAAAA,IAAI,CAACQ,cAAL,GAAsBH,CAAtB;AACH,KAJD,MAKK;AACD,YAAM,IAAII,KAAJ,CAAU,2BAA2BL,aAArC,CAAN;AACH;AACJ,GAXD;;AAYAvH,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BsE,oBAA5B,GAAmD,YAAY;AAC3D,WAAO,IAAI5L,cAAJ,EAAP;AACH,GAFD;;AAGAsJ,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,GAAnD,EAAwD;AACpDa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKsD,eAAZ;AACH,KAHmD;AAIpD/B,IAAAA,UAAU,EAAE,KAJwC;AAKpDC,IAAAA,YAAY,EAAE;AALsC,GAAxD;;AAOA5F,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BuE,qBAA5B,GAAoD,UAAUC,IAAV,EAAgB;AAChE,QAAI/L,aAAa,CAACqI,YAAd,CAA2B0D,IAA3B,CAAJ,EAAsC;AAClC,UAAIC,CAAC,GAAGhM,aAAa,CAACyL,MAAd,CAAqBM,IAArB,CAAR;AACAC,MAAAA,CAAC,CAACxD,KAAF,GAAU,IAAV;AACA,aAAOwD,CAAP;AACH,KAJD,MAKK;AACD;AACA,YAAMJ,KAAK,CAAC,6BAA6BG,IAA9B,CAAX;AACH;AACJ,GAVD;;AAWA/H,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4B0E,eAA5B,GAA8C,UAAUC,QAAV,EAAoB;AAC9D,WAAO,KAAKJ,qBAAL,CAA2B,QAAQI,QAAnC,CAAP;AACH,GAFD;;AAGAlI,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4B4E,aAA5B,GAA4C,UAAUD,QAAV,EAAoB;AAC5D,WAAO,KAAKJ,qBAAL,CAA2B,QAAQI,QAAnC,CAAP;AACH,GAFD;;AAGAlI,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4B6E,YAA5B,GAA2C,UAAUL,IAAV,EAAgB;AACvD,YAAQA,IAAR;AACI,WAAKpL,cAAc,CAAC0L,IAApB;AACI,eAAO,KAAKP,qBAAL,CAA2B,eAA3B,CAAP;;AACJ,WAAKnL,cAAc,CAAC2L,MAApB;AACI,eAAO,KAAKR,qBAAL,CAA2B,iBAA3B,CAAP;;AACJ,WAAKnL,cAAc,CAAC4L,IAApB;AACI,eAAO,KAAKT,qBAAL,CAA2B,eAA3B,CAAP;;AACJ,WAAKnL,cAAc,CAAC6L,cAApB;AACI,eAAO,KAAKV,qBAAL,CAA2B,yBAA3B,CAAP;;AACJ,WAAKnL,cAAc,CAAC8L,gBAApB;AACI,eAAO,KAAKX,qBAAL,CAA2B,qBAA3B,CAAP;;AACJ,WAAKnL,cAAc,CAAC+L,oBAApB;AACI,eAAO,KAAKZ,qBAAL,CAA2B,yBAA3B,CAAP;;AACJ,WAAKnL,cAAc,CAACgM,cAApB;AACI,eAAO,KAAKb,qBAAL,CAA2B,mBAA3B,CAAP;;AACJ,WAAKnL,cAAc,CAACiM,eAApB;AACI,eAAO,KAAKd,qBAAL,CAA2B,oBAA3B,CAAP;;AACJ,WAAKnL,cAAc,CAACkM,YAApB;AACI,eAAO,KAAKf,qBAAL,CAA2B,iBAA3B,CAAP;;AACJ,WAAKnL,cAAc,CAACmM,gBAApB;AACI,eAAO,KAAKhB,qBAAL,CAA2B,qBAA3B,CAAP;;AACJ;AACI,eAAO,KAAKA,qBAAL,CAA2B,iBAA3B,CAAP;AAtBR;AAwBH,GAzBD;;AA0BA9H,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BwF,WAA5B,GAA0C,UAAUhB,IAAV,EAAgB;AACtD,YAAQA,IAAR;AACI,WAAKjL,uBAAuB,CAACkM,OAA7B;AACI,YAAIhN,aAAa,CAACqI,YAAd,CAA2B,qBAA3B,CAAJ,EAAuD;AACnD,iBAAOrI,aAAa,CAACyL,MAAd,CAAqB,qBAArB,CAAP;AACH,SAFD,MAGK,IAAIzL,aAAa,CAACqI,YAAd,CAA2B,cAA3B,CAAJ,EAAgD;AACjD,iBAAOrI,aAAa,CAACyL,MAAd,CAAqB,cAArB,CAAP;AACH,SAFI,MAGA;AACD,gBAAM,IAAIG,KAAJ,CAAU,kCAAV,CAAN;AACH;;AACL,WAAK9K,uBAAuB,CAACmM,IAA7B;AACI,YAAIjN,aAAa,CAACqI,YAAd,CAA2B,cAA3B,CAAJ,EAAgD;AAC5C,iBAAOrI,aAAa,CAACyL,MAAd,CAAqB,cAArB,CAAP;AACH,SAFD,MAGK,IAAIzL,aAAa,CAACqI,YAAd,CAA2B,qBAA3B,CAAJ,EAAuD;AACxD,iBAAOrI,aAAa,CAACyL,MAAd,CAAqB,qBAArB,CAAP;AACH,SAFI,MAGA;AACD,gBAAM,IAAIG,KAAJ,CAAU,kCAAV,CAAN;AACH;;AApBT;AAsBH,GAvBD;;AAwBA5H,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4B2F,WAA5B,GAA0C,UAAUnB,IAAV,EAAgB;AACtD,YAAQA,IAAR;AACI,WAAK/K,uBAAuB,CAACmM,OAA7B;AACI,YAAInN,aAAa,CAACqI,YAAd,CAA2B,iBAA3B,CAAJ,EAAmD;AAC/C,iBAAOrI,aAAa,CAACyL,MAAd,CAAqB,iBAArB,CAAP;AACH,SAFD,MAGK,IAAIzL,aAAa,CAACqI,YAAd,CAA2B,uBAA3B,CAAJ,EAAyD;AAC1D,iBAAOrI,aAAa,CAACyL,MAAd,CAAqB,uBAArB,CAAP;AACH,SAFI,MAGA;AACD,gBAAM,IAAIG,KAAJ,CAAU,kCAAV,CAAN;AACH;;AACL,WAAK5K,uBAAuB,CAACoM,aAA7B;AACI,YAAIpN,aAAa,CAACqI,YAAd,CAA2B,uBAA3B,CAAJ,EAAyD;AACrD,iBAAOrI,aAAa,CAACyL,MAAd,CAAqB,uBAArB,CAAP;AACH,SAFD,MAGK,IAAIzL,aAAa,CAACqI,YAAd,CAA2B,iBAA3B,CAAJ,EAAmD;AACpD,iBAAOrI,aAAa,CAACyL,MAAd,CAAqB,iBAArB,CAAP;AACH,SAFI,MAGA;AACD,gBAAM,IAAIG,KAAJ,CAAU,kCAAV,CAAN;AACH;;AApBT;AAsBH,GAvBD;;AAwBArC,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,YAAnD,EAAiE;AAC7Da,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK5D,WAAZ;AACH,KAH4D;AAI7DmE,IAAAA,GAAG,EAAE,UAAUe,KAAV,EAAiB;AAClB,WAAKlF,WAAL,GAAmBkF,KAAnB;AACA,WAAKvC,QAAL;AACH,KAP4D;AAQ7DwC,IAAAA,UAAU,EAAE,KARiD;AAS7DC,IAAAA,YAAY,EAAE;AAT+C,GAAjE;;AAWA5F,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BJ,QAA5B,GAAuC,YAAY;AAC/C,QAAI,KAAKX,MAAL,IAAe,IAAf,IAAuB,KAAKA,MAAL,KAAgB6G,SAA3C,EAAsD;AAClD,WAAK7G,MAAL,CAAY8G,WAAZ,GAA0B,KAAK9I,WAA/B;AACH;AACJ,GAJD;;AAKAR,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BgG,iBAA5B,GAAgD,YAAY;AACxDtJ,IAAAA,MAAM,CAACsD,SAAP,CAAiBgG,iBAAjB,CAAmCnJ,IAAnC,CAAwC,IAAxC;;AACA,QAAI,KAAKgF,YAAT,EAAuB;AACnB,UAAI,KAAKS,MAAT,EAAiB;AACb,aAAKT,YAAL,CAAkBlD,KAAlB,CAAwBvC,KAAxB,GAAgC,KAAKkG,MAArC;AACH;;AACD,UAAI,KAAKJ,OAAT,EAAkB;AACd,aAAKL,YAAL,CAAkBlD,KAAlB,CAAwBxC,MAAxB,GAAiC,KAAK+F,OAAtC;AACH;AACJ;;AACD,SAAK+D,iBAAL;;AACA,SAAKhH,MAAL,CAAYY,aAAZ;AACH,GAZD;;AAaApD,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BiG,iBAA5B,GAAgD,YAAY;AACxD,QAAIrJ,KAAK,GAAG,IAAZ;;AACA,QAAInE,aAAa,CAACqI,YAAd,CAA2B,6BAA3B,CAAJ,EAA+D;AAC3D,UAAIoF,CAAC,GAAGzN,aAAa,CAACyL,MAAd,CAAqB,6BAArB,CAAR;AACA,WAAKhH,gBAAL,GAAwBgJ,CAAxB;;AACA,WAAKC,uBAAL,CAA6BD,CAA7B,EAH2D,CAI3D;;AACH;;AACD,QAAIE,OAAO,GAAG,KAAKnH,MAAL,CAAYoH,UAAZ,EAAd;;AACA,QAAI,CAAC,KAAKC,iBAAV,EAA6B;AACzB,WAAKA,iBAAL,GAAyB,IAAIzM,iCAAJ,EAAzB;AACH;;AACD,QAAI0M,WAAW,GAAG,KAAK5E,yBAAvB;AACA,QAAI6E,cAAc,GAAGJ,OAAO,CAACK,EAAR,CAAWC,OAAhC;AACAF,IAAAA,cAAc,CAACC,EAAf,CAAkBE,2BAAlB,CAA8CjF,QAA9C,GAAyD,KAAKkF,qBAAL,GAA6B,KAAKA,qBAAlC,GAA0D,KAAKN,iBAAL,CAAuBO,mCAA1I;;AACAL,IAAAA,cAAc,CAACC,EAAf,CAAkBE,2BAAlB,CAA8CF,EAA9C,CAAiDK,aAAjD,GAAiE,YAAY;AAAEP,MAAAA,WAAW,CAACQ,WAAZ,GAA0BP,cAA1B;AAA2C,KAA1H;;AACAA,IAAAA,cAAc,CAACC,EAAf,CAAkBO,wBAAlB,CAA2CtF,QAA3C,GAAsD,KAAKuF,uBAAL,GAA+B,KAAKA,uBAApC,GAA8D,KAAKX,iBAAL,CAAuBY,gCAA3I;;AACAV,IAAAA,cAAc,CAACC,EAAf,CAAkBO,wBAAlB,CAA2CP,EAA3C,CAA8CK,aAA9C,GAA8D,YAAY;AAAEP,MAAAA,WAAW,CAACQ,WAAZ,GAA0BP,cAA1B;AAA2C,KAAvH;;AACAA,IAAAA,cAAc,CAACC,EAAf,CAAkBU,2BAAlB,CAA8CzF,QAA9C,GAAyD,KAAK0F,qBAAL,GAA6B,KAAKA,qBAAlC,GAA0D,KAAKd,iBAAL,CAAuBe,mCAA1I;;AACAb,IAAAA,cAAc,CAACC,EAAf,CAAkBU,2BAAlB,CAA8CV,EAA9C,CAAiDK,aAAjD,GAAiE,YAAY;AACzEP,MAAAA,WAAW,CAACQ,WAAZ,GAA0BP,cAA1B;AACH,KAFD;;AAGAA,IAAAA,cAAc,CAAC9E,QAAf,GAA0B,KAAK4F,eAAL,GAAuB,KAAKA,eAA5B,GAA8C,KAAKhB,iBAAL,CAAuBiB,6BAA/F;AACA,QAAIC,aAAa,GAAG,KAAKxK,eAAzB,CAvBwD,CAwBxD;AACA;;AACAuJ,IAAAA,WAAW,CAACkB,YAAZ,GAA2B,YAAY;AACnClB,MAAAA,WAAW,CAACkB,YAAZ,GAA2B,IAA3B;;AACA7K,MAAAA,KAAK,CAACqC,MAAN,CAAayI,WAAb,CAAyBC,WAAzB;;AACA/K,MAAAA,KAAK,CAACmD,iBAAN;AACH,KAJD;;AAKAwG,IAAAA,WAAW,CAACQ,WAAZ,GAA0BP,cAA1B;AACAD,IAAAA,WAAW,CAAC7E,QAAZ,GAAuB8E,cAAc,CAAC9E,QAAtC;AACA,QAAIkG,GAAG,GAAG,KAAK5K,eAAf,CAjCwD,CAkCxD;AACA;AACA;AACA;AACA;AACA;AACA;;AACA4K,IAAAA,GAAG,CAACjJ,KAAJ,CAAUrC,OAAV,GAAoB,EAApB;AACA,QAAIuL,eAAe,GAAGzB,OAAO,CAACyB,eAAR,CAAwBC,WAAxB,CAAoCC,gBAApC,EAAtB;AACA,QAAIC,aAAa,GAAG5B,OAAO,CAAC6B,SAAR,CAAkBH,WAAlB,CAA8BC,gBAA9B,EAApB;AACA,QAAIG,kBAAkB,GAAG9B,OAAO,CAAC+B,mBAAR,CAA4BL,WAA5B,CAAwCC,gBAAxC,EAAzB;AACA,QAAIK,eAAe,GAAGhC,OAAO,CAACgC,eAAR,CAAwBN,WAAxB,CAAoCC,gBAApC,EAAtB;AACA,QAAIM,mBAAmB,GAAGjC,OAAO,CAACkC,aAAR,CAAsBR,WAAtB,CAAkCC,gBAAlC,EAA1B;AACA,QAAIQ,IAAI,GAAG,KAAK3G,gBAAhB;AACA,QAAI4G,YAAY,GAAGD,IAAI,CAACzF,aAAL,CAAmB,sBAAnB,CAAnB;AACA,QAAI2F,eAAe,GAAGF,IAAI,CAACzF,aAAL,CAAmB,wBAAnB,CAAtB;AACA,QAAI4F,cAAc,GAAGH,IAAI,CAACzF,aAAL,CAAmB,uBAAnB,CAArB;AACA,QAAI6F,iBAAiB,GAAGJ,IAAI,CAACzF,aAAL,CAAmB,2BAAnB,CAAxB;AACA,QAAI8F,cAAc,GAAGL,IAAI,CAACzF,aAAL,CAAmB,uBAAnB,CAArB;AACA,QAAI+F,kBAAkB,GAAGN,IAAI,CAACzF,aAAL,CAAmB,2BAAnB,CAAzB;AACA,QAAIgG,IAAI,GAAGP,IAAX,CAtDwD,CAsDvC;;AACjB,QAAIZ,WAAW,GAAG,IAAInP,YAAJ,CAAiBsQ,IAAjB,EAAuB,KAAKhM,QAA5B,CAAlB;AACA0L,IAAAA,YAAY,CAACO,WAAb,CAAyBf,aAAzB,EAxDwD,CAyDxD;;AACAU,IAAAA,cAAc,CAACK,WAAf,CAA2BlB,eAA3B;AACAc,IAAAA,iBAAiB,CAACI,WAAlB,CAA8Bb,kBAA9B;AACAU,IAAAA,cAAc,CAACG,WAAf,CAA2BX,eAA3B;AACAS,IAAAA,kBAAkB,CAACE,WAAnB,CAA+BV,mBAA/B;;AACA,SAAKW,QAAL,CAAc,KAAKvK,UAAnB,EAA+B,IAA/B,EA9DwD,CA+DxD;AACA;;AACH,GAjED;;AAkEAhC,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BiJ,iBAA5B,GAAgD,UAAUC,OAAV,EAAmBC,OAAnB,EAA4B;AACxE,QAAI,CAAC1Q,aAAa,CAACqI,YAAd,CAA2B,eAA3B,CAAL,EAAkD;AAC9C;AACA,YAAM,IAAIuD,KAAJ,CAAU,oCAAV,CAAN;AACH;;AACD,QAAI+E,MAAM,GAAG3Q,aAAa,CAACoI,GAAd,CAAkB,eAAlB,CAAb;AACA,QAAI+G,GAAG,GAAGvP,KAAK,CAACqG,aAAN,CAAoB0K,MAApB,EAA4B;AAClChN,MAAAA,KAAK,EAAE,MAD2B;AACnBD,MAAAA,MAAM,EAAE,MADW;AACHmE,MAAAA,GAAG,EAAE,UAAU+I,CAAV,EAAa;AAC7CF,QAAAA,OAAO,CAACE,CAAD,CAAP;AACH;AAHiC,KAA5B,CAAV;AAKA,QAAInI,MAAM,GAAG5I,QAAQ,CAAC6I,YAAT,CAAsByG,GAAtB,EAA2BsB,OAA3B,CAAb;AACAA,IAAAA,OAAO,CAAC7I,SAAR,GAAoB,MAApB;AACA6I,IAAAA,OAAO,CAACvK,KAAR,CAAcvC,KAAd,GAAsB,MAAtB;AACA8M,IAAAA,OAAO,CAACvK,KAAR,CAAcxC,MAAd,GAAuB,MAAvB;AACA,SAAKoE,aAAL,GAAqBW,MAArB;AACH,GAhBD;;AAiBAzE,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BsJ,aAA5B,GAA4C,YAAY;AACpD;AACA;AACA;AACA;AACA,QAAIC,OAAO,GAAG,KAAKzM,QAAL,CAAc4B,aAAd,CAA4B,KAA5B,CAAd;;AACA,QAAIkJ,GAAG,GAAG2B,OAAO,CAACxB,gBAAR,EAAV;AACAH,IAAAA,GAAG,CAACxH,GAAJ,GAAU,eAAe,KAAKhD,gBAA9B;AACA,SAAKA,gBAAL;AACA,SAAKkB,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBkL,KAAtB,CAA4B,CAA5B,CAAxB;;AACA,SAAKlL,gBAAL,CAAsBkC,IAAtB,CAA2BoH,GAA3B,EAVoD,CAWpD;AACA;;;AACA,QAAI6B,IAAI,GAAG,IAAX;;AACA7B,IAAAA,GAAG,CAAC8B,aAAJ,GAAoB,UAAUC,CAAV,EAAaC,YAAb,EAA2B;AAC3C,UAAID,CAAC,CAACvF,cAAN,EAAsB;AAClBuF,QAAAA,CAAC,GAAGA,CAAC,CAACvF,cAAN;AACH,OAFD,MAGK;AACD,YAAIyF,GAAG,GAAG,IAAIxQ,cAAJ,EAAV;AACAwQ,QAAAA,GAAG,CAAC1F,eAAJ,GAAsBwF,CAAtB;AACAA,QAAAA,CAAC,GAAGE,GAAJ;AACH;;AACD,UAAI,CAACD,YAAL,EAAmB;AACf,YAAIhC,GAAG,CAACkC,aAAJ,IAAqBL,IAAI,CAAChL,UAA9B,EAA0C;AACtC,cAAImJ,GAAG,CAACkC,aAAJ,IAAqB,IAAzB,EAA+B;AAC3BlC,YAAAA,GAAG,CAACkC,aAAJ,CAAkBC,WAAlB,CAA8BnC,GAA9B;AACH;;AACD6B,UAAAA,IAAI,CAAChL,UAAL,CAAgBsK,WAAhB,CAA4BnB,GAA5B;AACH;AACJ,OAPD,MAQK;AACD+B,QAAAA,CAAC,CAACC,YAAF,GAAiB,IAAjB;AACH;;AACD,UAAIH,IAAI,CAACpL,eAAL,CAAqBsC,GAArB,CAAyBiH,GAAzB,CAAJ,EAAmC;AAC/B,YAAIlH,CAAC,GAAG+I,IAAI,CAACpL,eAAL,CAAqBwC,GAArB,CAAyB+G,GAAzB,CAAR;;AACAlH,QAAAA,CAAC,CAACqG,WAAF,GAAgB4C,CAAhB;AACH;;AACD/B,MAAAA,GAAG,CAACjJ,KAAJ,CAAUrC,OAAV,GAAoB,OAApB;AACA,aAAO,IAAP;AACH,KA1BD;;AA2BAsL,IAAAA,GAAG,CAACoC,WAAJ,GAAkB,YAAY;AAC1BpC,MAAAA,GAAG,CAACjJ,KAAJ,CAAUrC,OAAV,GAAoB,MAApB;AACH,KAFD;;AAGAsL,IAAAA,GAAG,CAACjJ,KAAJ,CAAUrC,OAAV,GAAoB,MAApB;;AACA,SAAK2N,mBAAL;;AACA,WAAOrC,GAAP;AACH,GA/CD;;AAgDAnL,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BkK,qBAA5B,GAAoD,UAAUC,MAAV,EAAkB;AAClE,QAAIvN,KAAK,GAAG,IAAZ;;AACAuN,IAAAA,MAAM,CAACD,qBAAP,CAA6B,YAAY;AAAE,aAAOtN,KAAK,CAAC0M,aAAN,EAAP;AAA+B,KAA1E,EAA4E,UAAU1B,GAAV,EAAe;AACvF,UAAI2B,OAAO,GAAG,IAAI/Q,YAAJ,CAAiBoP,GAAjB,EAAsBhL,KAAK,CAACE,QAA5B,CAAd;AACAyM,MAAAA,OAAO,CAACG,aAAR,GAAwB9B,GAAG,CAAC8B,aAA5B;AACAH,MAAAA,OAAO,CAACS,WAAR,GAAsBpC,GAAG,CAACoC,WAA1B;;AACA,UAAIpN,KAAK,CAACyB,eAAN,CAAsBsC,GAAtB,CAA0BiH,GAA1B,CAAJ,EAAoC;AAChC,YAAIwC,KAAK,GAAGxN,KAAK,CAACyB,eAAN,CAAsBwC,GAAtB,CAA0B+G,GAA1B,CAAZ;;AACAwC,QAAAA,KAAK,CAAC1I,QAAN,GAAiBkG,GAAG,CAACnG,eAArB;AACH;;AACD,aAAO8H,OAAP;AACH,KATD;AAUH,GAZD,CA9iBmE,CA2jBnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA9M,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BqK,qBAA5B,GAAoD,UAAUF,MAAV,EAAkB;AAClE,QAAI,KAAKjN,gBAAL,IAAyB,IAA7B,EAAmC;AAC/B;AACH;;AACD,SAAKA,gBAAL,CAAsB,sBAAtB,EAA8CiN,MAA9C;AACH,GALD;;AAMA1N,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BmG,uBAA5B,GAAsD,UAAUmE,EAAV,EAAc;AAChE,QAAI,KAAKtL,CAAL,CAAOuL,SAAX,EAAsB;AAClB,UAAIC,UAAU,GAAG,KAAKxL,CAAL,CAAOuL,SAAP,CAAiBJ,MAAlC;;AACA,WAAK,IAAInL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGwL,UAAU,CAACC,KAA/B,EAAsCzL,CAAC,EAAvC,EAA2C;AACvC,YAAIwL,UAAU,CAACE,IAAX,CAAgB1L,CAAhB,EAAmBoF,cAAnB,CAAkCuG,kBAAtC,EAA0D;AACtD,eAAKN,qBAAL,CAA2BG,UAAU,CAACE,IAAX,CAAgB1L,CAAhB,EAAmBoF,cAA9C;AACH;AACJ;AACJ;AACJ,GATD;;AAUA3H,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BiK,mBAA5B,GAAkD,YAAY;AAC1D,QAAI,KAAKlN,YAAT,EAAuB;AACnB,WAAK6N,QAAL,CAAc;AAAEC,QAAAA,QAAQ,EAAE,KAAKvM;AAAjB,OAAd;AACH;AACJ,GAJD;;AAKA0D,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,aAAnD,EAAkE;AAC9D;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKxD,YAAL,KAAsB,IAA1B,EAAgC;AAC5B,YAAI,CAAC5E,aAAa,CAACqI,YAAd,CAA2B,4BAA3B,CAAL,EAA+D;AAC3D,iBAAO,IAAP;AACH;;AACD,YAAIgK,IAAI,GAAGrS,aAAa,CAACyL,MAAd,CAAqB,4BAArB,CAAX;AACA,YAAI6G,SAAS,GAAG,KAAK/L,CAAL,CAAOgM,WAAvB;;AACA,YAAI,CAACD,SAAL,EAAgB;AACZA,UAAAA,SAAS,GAAGtS,aAAa,CAACyL,MAAd,CAAqB,yBAArB,CAAZ;AACH;;AACD,aAAK7G,YAAL,GAAoByN,IAAI,CAACG,UAAL,CAAgBF,SAAhB,CAApB;AACA,aAAK/L,CAAL,CAAO3B,YAAP,GAAsB0N,SAAtB;AACH;;AACD,aAAO,KAAK1N,YAAZ;AACH,KAlB6D;AAmB9D+D,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,UAAI,KAAK7N,YAAL,KAAsB,IAA1B,EAAgC;AAC5B,aAAKA,YAAL,CAAkB8N,cAAlB,CAAiC,IAAjC;;AACA,aAAK9N,YAAL,GAAoB,IAApB;AACH;;AACD,UAAI,CAAC5E,aAAa,CAACqI,YAAd,CAA2B,4BAA3B,CAAL,EAA+D;AAC3D;AACH;;AACD,UAAIgK,IAAI,GAAGrS,aAAa,CAACyL,MAAd,CAAqB,4BAArB,CAAX;AACA,UAAIxD,CAAC,GAAGjI,aAAa,CAACoI,GAAd,CAAkB,eAAlB,CAAR;AACA,WAAKxD,YAAL,GAAoByN,IAAI,CAACM,UAAL,CAAgBF,CAAhB,CAApB;AACA,UAAIG,QAAQ,GAAG,IAAIlR,8BAAJ,CAAmCuG,CAAC,CAACoD,KAArC,CAAf;AACA,UAAIiH,SAAS,GAAG,KAAK/L,CAAL,CAAOgM,WAAvB;;AACA,UAAI,CAACD,SAAL,EAAgB;AACZA,QAAAA,SAAS,GAAGtS,aAAa,CAACyL,MAAd,CAAqB,yBAArB,CAAZ;AACH;;AACDmH,MAAAA,QAAQ,CAACC,MAAT,GAAkBP,SAAlB;AACAM,MAAAA,QAAQ,CAACE,KAAT;;AACA,WAAKlO,YAAL,CAAkB8N,cAAlB,CAAiCE,QAAjC;;AACA,WAAKrM,CAAL,CAAO3B,YAAP,GAAsB0N,SAAtB;AACH,KAvC6D;AAwC9D3I,IAAAA,UAAU,EAAE,KAxCkD;AAyC9DC,IAAAA,YAAY,EAAE;AAzCgD,GAAlE;AA2CAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,YAAnD,EAAiE;AAC7Da,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOwM,EAAd;AACH,KAH4D;AAI7DpK,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOwM,EAAP,GAAY,CAACN,CAAb;AACH,KAN4D;AAO7D9I,IAAAA,UAAU,EAAE,KAPiD;AAQ7DC,IAAAA,YAAY,EAAE;AAR+C,GAAjE;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,yBAAnD,EAA8E;AAC1Ea,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOyM,EAAd;AACH,KAHyE;AAI1ErK,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOyM,EAAP,GAAYxS,UAAU,CAACiS,CAAD,CAAtB;AACH,KANyE;AAO1E9I,IAAAA,UAAU,EAAE,KAP8D;AAQ1EC,IAAAA,YAAY,EAAE;AAR4D,GAA9E;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,eAAnD,EAAoE;AAChEa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO0M,GAAd;AACH,KAH+D;AAIhEtK,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO0M,GAAP,GAAa,CAACR,CAAd;AACH,KAN+D;AAOhE9I,IAAAA,UAAU,EAAE,KAPoD;AAQhEC,IAAAA,YAAY,EAAE;AARkD,GAApE;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,YAAnD,EAAiE;AAC7D;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO2M,EAAd;AACH,KAN4D;AAO7DvJ,IAAAA,UAAU,EAAE,KAPiD;AAQ7DC,IAAAA,YAAY,EAAE;AAR+C,GAAjE;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,oBAAnD,EAAyE;AACrE;AACR;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO4M,GAAd;AACH,KAPoE;AAQrExK,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO4M,GAAP,GAAa3S,UAAU,CAACiS,CAAD,CAAvB;AACH,KAVoE;AAWrE9I,IAAAA,UAAU,EAAE,KAXyD;AAYrEC,IAAAA,YAAY,EAAE;AAZuD,GAAzE;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,oBAAnD,EAAyE;AACrE;AACR;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO6M,GAAd;AACH,KAPoE;AAQrEzK,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO6M,GAAP,GAAa,CAACX,CAAd;AACH,KAVoE;AAWrE9I,IAAAA,UAAU,EAAE,KAXyD;AAYrEC,IAAAA,YAAY,EAAE;AAZuD,GAAzE;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,eAAnD,EAAoE;AAChE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO8M,GAAd;AACH,KAjB+D;AAkBhE1K,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO8M,GAAP,GAAa,CAACZ,CAAd;AACH,KApB+D;AAqBhE9I,IAAAA,UAAU,EAAE,KArBoD;AAsBhEC,IAAAA,YAAY,EAAE;AAtBkD,GAApE;AAwBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,mBAAnD,EAAwE;AACpE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO+M,GAAd;AACH,KAfmE;AAgBpE3K,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO+M,GAAP,GAAa,CAACb,CAAd;AACH,KAlBmE;AAmBpE9I,IAAAA,UAAU,EAAE,KAnBwD;AAoBpEC,IAAAA,YAAY,EAAE;AApBsD,GAAxE;AAsBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,mBAAnD,EAAwE;AACpE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOgN,GAAd;AACH,KAfmE;AAgBpE5K,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOgN,GAAP,GAAa,CAACd,CAAd;AACH,KAlBmE;AAmBpE9I,IAAAA,UAAU,EAAE,KAnBwD;AAoBpEC,IAAAA,YAAY,EAAE;AApBsD,GAAxE;AAsBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,oBAAnD,EAAyE;AACrE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOiN,GAAd;AACH,KAdoE;AAerE7K,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOiN,GAAP,GAAa,CAACf,CAAd;AACH,KAjBoE;AAkBrE9I,IAAAA,UAAU,EAAE,KAlByD;AAmBrEC,IAAAA,YAAY,EAAE;AAnBuD,GAAzE;AAqBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,oBAAnD,EAAyE;AACrE;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOkN,GAAd;AACH,KANoE;AAOrE9J,IAAAA,UAAU,EAAE,KAPyD;AAQrEC,IAAAA,YAAY,EAAE;AARuD,GAAzE;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,oBAAnD,EAAyE;AACrE;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOmN,GAAd;AACH,KANoE;AAOrE/J,IAAAA,UAAU,EAAE,KAPyD;AAQrEC,IAAAA,YAAY,EAAE;AARuD,GAAzE;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,YAAnD,EAAiE;AAC7D;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOoN,GAAd;AACH,KAhB4D;AAiB7DhL,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOoN,GAAP,GAAapT,UAAU,CAACM,8BAAD,EAAiC4R,CAAjC,CAAvB;AACH,KAnB4D;AAoB7D9I,IAAAA,UAAU,EAAE,KApBiD;AAqB7DC,IAAAA,YAAY,EAAE;AArB+C,GAAjE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,WAAnD,EAAgE;AAC5D;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOqN,GAAd;AACH,KAd2D;AAe5DjL,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOqN,GAAP,GAAarT,UAAU,CAACQ,6BAAD,EAAgC0R,CAAhC,CAAvB;AACH,KAjB2D;AAkB5D9I,IAAAA,UAAU,EAAE,KAlBgD;AAmB5DC,IAAAA,YAAY,EAAE;AAnB8C,GAAhE;AAqBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,WAAnD,EAAgE;AAC5D;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOsN,GAAd;AACH,KAd2D;AAe5DlL,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOsN,GAAP,GAAatT,UAAU,CAACU,6BAAD,EAAgCwR,CAAhC,CAAvB;AACH,KAjB2D;AAkB5D9I,IAAAA,UAAU,EAAE,KAlBgD;AAmB5DC,IAAAA,YAAY,EAAE;AAnB8C,GAAhE;AAqBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,kBAAnD,EAAuE;AACnE;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOuN,GAAd;AACH,KANkE;AAOnEnL,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOuN,GAAP,GAAatT,UAAU,CAACiS,CAAD,CAAvB;AACH,KATkE;AAUnE9I,IAAAA,UAAU,EAAE,KAVuD;AAWnEC,IAAAA,YAAY,EAAE;AAXqD,GAAvE;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,WAAnD,EAAgE;AAC5D;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOwN,GAAd;AACH,KAhB2D;AAiB5DpL,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOwN,GAAP,GAAaxT,UAAU,CAACL,wBAAD,EAA2BuS,CAA3B,CAAvB;AACH,KAnB2D;AAoB5D9I,IAAAA,UAAU,EAAE,KApBgD;AAqB5DC,IAAAA,YAAY,EAAE;AArB8C,GAAhE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,+BAAnD,EAAoF;AAChF;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOyN,EAAd;AACH,KAN+E;AAOhFrL,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOyN,EAAP,GAAYzT,UAAU,CAACW,yBAAD,EAA4BuR,CAA5B,CAAtB;AACH,KAT+E;AAUhF9I,IAAAA,UAAU,EAAE,KAVoE;AAWhFC,IAAAA,YAAY,EAAE;AAXkE,GAApF;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,8BAAnD,EAAmF;AAC/E;AACR;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO0N,GAAd;AACH,KAP8E;AAQ/EtL,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO0N,GAAP,GAAazT,UAAU,CAACiS,CAAD,CAAvB;AACH,KAV8E;AAW/E9I,IAAAA,UAAU,EAAE,KAXmE;AAY/EC,IAAAA,YAAY,EAAE;AAZiE,GAAnF;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,gBAAnD,EAAqE;AACjE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKvD,eAAL,KAAyB,IAA7B,EAAmC;AAC/B,YAAIwN,IAAI,GAAG,IAAI9Q,mCAAJ,EAAX;AACA,YAAI+Q,SAAS,GAAG,KAAK/L,CAAL,CAAO2N,GAAvB;;AACA,YAAI,CAAC5B,SAAL,EAAgB;AACZA,UAAAA,SAAS,GAAG,IAAI7Q,yCAAJ,CAA8C,CAA9C,CAAZ;AACH;;AACD,aAAKoD,eAAL,GAAuBwN,IAAI,CAACG,UAAL,CAAgBF,SAAhB,CAAvB;AACA,aAAK/L,CAAL,CAAO2N,GAAP,GAAa5B,SAAb;AACH;;AACD,aAAO,KAAKzN,eAAZ;AACH,KAzBgE;AA0BjE8D,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,UAAI,KAAK5N,eAAL,KAAyB,IAA7B,EAAmC;AAC/B,aAAKA,eAAL,CAAqB6N,cAArB,CAAoC,IAApC;;AACA,aAAK7N,eAAL,GAAuB,IAAvB;AACH;;AACD,UAAIwN,IAAI,GAAG,IAAI9Q,mCAAJ,EAAX;AACA,WAAKsD,eAAL,GAAuBwN,IAAI,CAACM,UAAL,CAAgBF,CAAhB,CAAvB;AACA,UAAIG,QAAQ,GAAG,IAAIlR,8BAAJ,CAAmCC,4BAAnC,CAAf;AACA,UAAI2Q,SAAS,GAAG,KAAK/L,CAAL,CAAO2N,GAAvB;;AACA,UAAI,CAAC5B,SAAL,EAAgB;AACZA,QAAAA,SAAS,GAAG,IAAI7Q,yCAAJ,CAA8C,CAA9C,CAAZ;AACH;;AACDmR,MAAAA,QAAQ,CAACC,MAAT,GAAkBP,SAAlB;AACAM,MAAAA,QAAQ,CAACE,KAAT;;AACA,WAAKjO,eAAL,CAAqB6N,cAArB,CAAoCE,QAApC;;AACA,WAAKrM,CAAL,CAAO2N,GAAP,GAAa5B,SAAb;AACH,KA1CgE;AA2CjE3I,IAAAA,UAAU,EAAE,KA3CqD;AA4CjEC,IAAAA,YAAY,EAAE;AA5CmD,GAArE;AA8CAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,cAAnD,EAAmE;AAC/D;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKtD,aAAL,KAAuB,IAA3B,EAAiC;AAC7B,YAAIuN,IAAI,GAAG,IAAIzQ,iCAAJ,EAAX;AACA,YAAI0Q,SAAS,GAAG,KAAK/L,CAAL,CAAO4N,GAAvB;;AACA,YAAI,CAAC7B,SAAL,EAAgB;AACZA,UAAAA,SAAS,GAAG,IAAIxQ,uCAAJ,CAA4C,CAA5C,CAAZ;AACH;;AACD,aAAKgD,aAAL,GAAqBuN,IAAI,CAACG,UAAL,CAAgBF,SAAhB,CAArB;AACA,aAAK/L,CAAL,CAAO4N,GAAP,GAAa7B,SAAb;AACH;;AACD,aAAO,KAAKxN,aAAZ;AACH,KAzB8D;AA0B/D6D,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,UAAI,KAAK3N,aAAL,KAAuB,IAA3B,EAAiC;AAC7B,aAAKA,aAAL,CAAmB4N,cAAnB,CAAkC,IAAlC;;AACA,aAAK5N,aAAL,GAAqB,IAArB;AACH;;AACD,UAAIuN,IAAI,GAAG,IAAIzQ,iCAAJ,EAAX;AACA,WAAKkD,aAAL,GAAqBuN,IAAI,CAACM,UAAL,CAAgBF,CAAhB,CAArB;AACA,UAAIG,QAAQ,GAAG,IAAIlR,8BAAJ,CAAmCK,0BAAnC,CAAf;AACA,UAAIuQ,SAAS,GAAG,KAAK/L,CAAL,CAAO4N,GAAvB;;AACA,UAAI,CAAC7B,SAAL,EAAgB;AACZA,QAAAA,SAAS,GAAG,IAAIxQ,uCAAJ,CAA4C,CAA5C,CAAZ;AACH;;AACD8Q,MAAAA,QAAQ,CAACC,MAAT,GAAkBP,SAAlB;AACAM,MAAAA,QAAQ,CAACE,KAAT;;AACA,WAAKhO,aAAL,CAAmB4N,cAAnB,CAAkCE,QAAlC;;AACA,WAAKrM,CAAL,CAAO4N,GAAP,GAAa7B,SAAb;AACH,KA1C8D;AA2C/D3I,IAAAA,UAAU,EAAE,KA3CmD;AA4C/DC,IAAAA,YAAY,EAAE;AA5CiD,GAAnE;AA8CAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,6BAAnD,EAAkF;AAC9E;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO6N,GAAd;AACH,KAN6E;AAO9EzL,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO6N,GAAP,GAAa5T,UAAU,CAACiS,CAAD,CAAvB;AACH,KAT6E;AAU9E9I,IAAAA,UAAU,EAAE,KAVkE;AAW9EC,IAAAA,YAAY,EAAE;AAXgE,GAAlF;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,YAAnD,EAAiE;AAC7D;AACR;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO8N,EAAd;AACH,KAP4D;AAQ7D1L,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO8N,EAAP,GAAY,CAAC5B,CAAb;AACH,KAV4D;AAW7D9I,IAAAA,UAAU,EAAE,KAXiD;AAY7DC,IAAAA,YAAY,EAAE;AAZ+C,GAAjE;AAcAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,+CAAnD,EAAoG;AAChG;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO+N,GAAd;AACH,KAN+F;AAOhG3L,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO+N,GAAP,GAAa9T,UAAU,CAACiS,CAAD,CAAvB;AACH,KAT+F;AAUhG9I,IAAAA,UAAU,EAAE,KAVoF;AAWhGC,IAAAA,YAAY,EAAE;AAXkF,GAApG;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,+CAAnD,EAAoG;AAChG;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOgO,GAAd;AACH,KAN+F;AAOhG5L,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOgO,GAAP,GAAa/T,UAAU,CAACiS,CAAD,CAAvB;AACH,KAT+F;AAUhG9I,IAAAA,UAAU,EAAE,KAVoF;AAWhGC,IAAAA,YAAY,EAAE;AAXkF,GAApG;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,gBAAnD,EAAqE;AACjE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOiO,GAAd;AACH,KAdgE;AAejE7L,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOiO,GAAP,GAAajU,UAAU,CAACY,kCAAD,EAAqCsR,CAArC,CAAvB;AACH,KAjBgE;AAkBjE9I,IAAAA,UAAU,EAAE,KAlBqD;AAmBjEC,IAAAA,YAAY,EAAE;AAnBmD,GAArE;AAqBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,iBAAnD,EAAsE;AAClE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOjI,mBAAmB,CAAC,KAAKoG,CAAL,CAAOkO,GAAR,CAA1B;AACH,KAhBiE;AAiBlE9L,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOkO,GAAP,GAAarU,iBAAiB,CAACqS,CAAD,CAA9B;AACH,KAnBiE;AAoBlE9I,IAAAA,UAAU,EAAE,KApBsD;AAqBlEC,IAAAA,YAAY,EAAE;AArBoD,GAAtE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,kBAAnD,EAAuE;AACnE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOjI,mBAAmB,CAAC,KAAKoG,CAAL,CAAOmO,GAAR,CAA1B;AACH,KAhBkE;AAiBnE/L,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOmO,GAAP,GAAatU,iBAAiB,CAACqS,CAAD,CAA9B;AACH,KAnBkE;AAoBnE9I,IAAAA,UAAU,EAAE,KApBuD;AAqBnEC,IAAAA,YAAY,EAAE;AArBqD,GAAvE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,gBAAnD,EAAqE;AACjE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOjI,mBAAmB,CAAC,KAAKoG,CAAL,CAAOoO,GAAR,CAA1B;AACH,KAhBgE;AAiBjEhM,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOoO,GAAP,GAAavU,iBAAiB,CAACqS,CAAD,CAA9B;AACH,KAnBgE;AAoBjE9I,IAAAA,UAAU,EAAE,KApBqD;AAqBjEC,IAAAA,YAAY,EAAE;AArBmD,GAArE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,iBAAnD,EAAsE;AAClE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOjI,mBAAmB,CAAC,KAAKoG,CAAL,CAAOqO,GAAR,CAA1B;AACH,KAhBiE;AAiBlEjM,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOqO,GAAP,GAAaxU,iBAAiB,CAACqS,CAAD,CAA9B;AACH,KAnBiE;AAoBlE9I,IAAAA,UAAU,EAAE,KApBsD;AAqBlEC,IAAAA,YAAY,EAAE;AArBoD,GAAtE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,gBAAnD,EAAqE;AACjE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOjI,mBAAmB,CAAC,KAAKoG,CAAL,CAAOsO,GAAR,CAA1B;AACH,KAhBgE;AAiBjElM,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOsO,GAAP,GAAazU,iBAAiB,CAACqS,CAAD,CAA9B;AACH,KAnBgE;AAoBjE9I,IAAAA,UAAU,EAAE,KApBqD;AAqBjEC,IAAAA,YAAY,EAAE;AArBmD,GAArE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,eAAnD,EAAoE;AAChE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOjI,mBAAmB,CAAC,KAAKoG,CAAL,CAAOuO,GAAR,CAA1B;AACH,KAhB+D;AAiBhEnM,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOuO,GAAP,GAAa1U,iBAAiB,CAACqS,CAAD,CAA9B;AACH,KAnB+D;AAoBhE9I,IAAAA,UAAU,EAAE,KApBoD;AAqBhEC,IAAAA,YAAY,EAAE;AArBkD,GAApE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,0BAAnD,EAA+E;AAC3E;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOjI,mBAAmB,CAAC,KAAKoG,CAAL,CAAOwO,GAAR,CAA1B;AACH,KAhB0E;AAiB3EpM,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOwO,GAAP,GAAa3U,iBAAiB,CAACqS,CAAD,CAA9B;AACH,KAnB0E;AAoB3E9I,IAAAA,UAAU,EAAE,KApB+D;AAqB3EC,IAAAA,YAAY,EAAE;AArB6D,GAA/E;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,kBAAnD,EAAuE;AACnE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAOjI,mBAAmB,CAAC,KAAKoG,CAAL,CAAOyO,GAAR,CAA1B;AACH,KAhBkE;AAiBnErM,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOyO,GAAP,GAAa5U,iBAAiB,CAACqS,CAAD,CAA9B;AACH,KAnBkE;AAoBnE9I,IAAAA,UAAU,EAAE,KApBuD;AAqBnEC,IAAAA,YAAY,EAAE;AArBqD,GAAvE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,iBAAnD,EAAsE;AAClE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO0O,GAAd;AACH,KAhBiE;AAiBlEtM,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO0O,GAAP,GAAa,CAACxC,CAAd;AACH,KAnBiE;AAoBlE9I,IAAAA,UAAU,EAAE,KApBsD;AAqBlEC,IAAAA,YAAY,EAAE;AArBoD,GAAtE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,kBAAnD,EAAuE;AACnE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO2O,GAAd;AACH,KAhBkE;AAiBnEvM,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO2O,GAAP,GAAa,CAACzC,CAAd;AACH,KAnBkE;AAoBnE9I,IAAAA,UAAU,EAAE,KApBuD;AAqBnEC,IAAAA,YAAY,EAAE;AArBqD,GAAvE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,mBAAnD,EAAwE;AACpE;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO4O,GAAd;AACH,KANmE;AAOpExM,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO4O,GAAP,GAAa,CAAC1C,CAAd;AACH,KATmE;AAUpE9I,IAAAA,UAAU,EAAE,KAVwD;AAWpEC,IAAAA,YAAY,EAAE;AAXsD,GAAxE;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,oBAAnD,EAAyE;AACrE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO6O,GAAd;AACH,KAhBoE;AAiBrEzM,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO6O,GAAP,GAAa,CAAC3C,CAAd;AACH,KAnBoE;AAoBrE9I,IAAAA,UAAU,EAAE,KApByD;AAqBrEC,IAAAA,YAAY,EAAE;AArBuD,GAAzE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,uBAAnD,EAA4E;AACxE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKrD,sBAAL,KAAgC,IAApC,EAA0C;AACtC,YAAIsN,IAAI,GAAG,IAAIrQ,iCAAJ,EAAX;AACA,YAAIsQ,SAAS,GAAG,KAAK/L,CAAL,CAAO8O,GAAvB;;AACA,YAAI,CAAC/C,SAAL,EAAgB;AACZA,UAAAA,SAAS,GAAG,IAAIpQ,uCAAJ,EAAZ;AACH;;AACD,aAAK6C,sBAAL,GAA8BsN,IAAI,CAACG,UAAL,CAAgBF,SAAhB,CAA9B;AACA,aAAK/L,CAAL,CAAO8O,GAAP,GAAa/C,SAAb;AACH;;AACD,aAAO,KAAKvN,sBAAZ;AACH,KAzBuE;AA0BxE4D,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,UAAI,KAAK1N,sBAAL,KAAgC,IAApC,EAA0C;AACtC,aAAKA,sBAAL,CAA4B2N,cAA5B,CAA2C,IAA3C;;AACA,aAAK3N,sBAAL,GAA8B,IAA9B;AACH;;AACD,UAAIsN,IAAI,GAAG,IAAIrQ,iCAAJ,EAAX;AACA,WAAK+C,sBAAL,GAA8BsN,IAAI,CAACM,UAAL,CAAgBF,CAAhB,CAA9B;AACA,UAAIG,QAAQ,GAAG,IAAIlR,8BAAJ,CAAmCS,0BAAnC,CAAf;AACA,UAAImQ,SAAS,GAAG,KAAK/L,CAAL,CAAO8O,GAAvB;;AACA,UAAI,CAAC/C,SAAL,EAAgB;AACZA,QAAAA,SAAS,GAAG,IAAIpQ,uCAAJ,EAAZ;AACH;;AACD0Q,MAAAA,QAAQ,CAACC,MAAT,GAAkBP,SAAlB;AACAM,MAAAA,QAAQ,CAACE,KAAT;;AACA,WAAK/N,sBAAL,CAA4B2N,cAA5B,CAA2CE,QAA3C;;AACA,WAAKrM,CAAL,CAAO8O,GAAP,GAAa/C,SAAb;AACH,KA1CuE;AA2CxE3I,IAAAA,UAAU,EAAE,KA3C4D;AA4CxEC,IAAAA,YAAY,EAAE;AA5C0D,GAA5E;AA8CAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,iBAAnD,EAAsE;AAClE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO+O,GAAd;AACH,KAhBiE;AAiBlE3M,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO+O,GAAP,GAAa,CAAC7C,CAAd;AACH,KAnBiE;AAoBlE9I,IAAAA,UAAU,EAAE,KApBsD;AAqBlEC,IAAAA,YAAY,EAAE;AArBoD,GAAtE;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,qBAAnD,EAA0E;AACtE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOgP,GAAd;AACH,KAhBqE;AAiBtE5M,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOgP,GAAP,GAAa,CAAC9C,CAAd;AACH,KAnBqE;AAoBtE9I,IAAAA,UAAU,EAAE,KApB0D;AAqBtEC,IAAAA,YAAY,EAAE;AArBwD,GAA1E;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,0BAAnD,EAA+E;AAC3E;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOiP,GAAd;AACH,KAhB0E;AAiB3E7M,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOiP,GAAP,GAAa,CAAC/C,CAAd;AACH,KAnB0E;AAoB3E9I,IAAAA,UAAU,EAAE,KApB+D;AAqB3EC,IAAAA,YAAY,EAAE;AArB6D,GAA/E;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,sBAAnD,EAA2E;AACvE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOkP,GAAd;AACH,KAtBsE;AAuBvE9M,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOkP,GAAP,GAAa,CAAChD,CAAd;AACH,KAzBsE;AA0BvE9I,IAAAA,UAAU,EAAE,KA1B2D;AA2BvEC,IAAAA,YAAY,EAAE;AA3ByD,GAA3E;AA6BAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,qBAAnD,EAA0E;AACtE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOmP,GAAd;AACH,KAtBqE;AAuBtE/M,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOmP,GAAP,GAAa,CAACjD,CAAd;AACH,KAzBqE;AA0BtE9I,IAAAA,UAAU,EAAE,KA1B0D;AA2BtEC,IAAAA,YAAY,EAAE;AA3BwD,GAA1E;AA6BAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,uBAAnD,EAA4E;AACxE;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOoP,GAAd;AACH,KAhBuE;AAiBxEhN,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOoP,GAAP,GAAa,CAAClD,CAAd;AACH,KAnBuE;AAoBxE9I,IAAAA,UAAU,EAAE,KApB4D;AAqBxEC,IAAAA,YAAY,EAAE;AArB0D,GAA5E;AAuBAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,sBAAnD,EAA2E;AACvE;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKpD,qBAAL,KAA+B,IAAnC,EAAyC;AACrC,YAAIqN,IAAI,GAAG,IAAIjQ,8CAAJ,EAAX;AACA,YAAIkQ,SAAS,GAAG,KAAK/L,CAAL,CAAOqP,GAAvB;;AACA,YAAI,CAACtD,SAAL,EAAgB;AACZA,UAAAA,SAAS,GAAG,IAAIhQ,oDAAJ,CAAyD,CAAzD,CAAZ;AACH;;AACD,aAAK0C,qBAAL,GAA6BqN,IAAI,CAACG,UAAL,CAAgBF,SAAhB,CAA7B;AACA,aAAK/L,CAAL,CAAOqP,GAAP,GAAatD,SAAb;AACH;;AACD,aAAO,KAAKtN,qBAAZ;AACH,KAfsE;AAgBvE2D,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,UAAI,KAAKzN,qBAAL,KAA+B,IAAnC,EAAyC;AACrC,aAAKA,qBAAL,CAA2B0N,cAA3B,CAA0C,IAA1C;;AACA,aAAK1N,qBAAL,GAA6B,IAA7B;AACH;;AACD,UAAIqN,IAAI,GAAG,IAAIjQ,8CAAJ,EAAX;AACA,WAAK4C,qBAAL,GAA6BqN,IAAI,CAACM,UAAL,CAAgBF,CAAhB,CAA7B;AACA,UAAIG,QAAQ,GAAG,IAAIlR,8BAAJ,CAAmCa,uCAAnC,CAAf;AACA,UAAI+P,SAAS,GAAG,KAAK/L,CAAL,CAAOqP,GAAvB;;AACA,UAAI,CAACtD,SAAL,EAAgB;AACZA,QAAAA,SAAS,GAAG,IAAIhQ,oDAAJ,CAAyD,CAAzD,CAAZ;AACH;;AACDsQ,MAAAA,QAAQ,CAACC,MAAT,GAAkBP,SAAlB;AACAM,MAAAA,QAAQ,CAACE,KAAT;;AACA,WAAK9N,qBAAL,CAA2B0N,cAA3B,CAA0CE,QAA1C;;AACA,WAAKrM,CAAL,CAAOqP,GAAP,GAAatD,SAAb;AACH,KAhCsE;AAiCvE3I,IAAAA,UAAU,EAAE,KAjC2D;AAkCvEC,IAAAA,YAAY,EAAE;AAlCyD,GAA3E;AAoCAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,sBAAnD,EAA2E;AACvE;AACR;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKnD,qBAAL,KAA+B,IAAnC,EAAyC;AACrC,YAAIoN,IAAI,GAAG,IAAI1P,gCAAJ,EAAX;AACA,YAAI2P,SAAS,GAAG,KAAK/L,CAAL,CAAOsP,oBAAvB;;AACA,YAAI,CAACvD,SAAL,EAAgB;AACZA,UAAAA,SAAS,GAAG,IAAI5P,sCAAJ,CAA2C,CAA3C,CAAZ;AACH;;AACD,aAAKuC,qBAAL,GAA6BoN,IAAI,CAACG,UAAL,CAAgBF,SAAhB,CAA7B;AACA,aAAK/L,CAAL,CAAOsP,oBAAP,GAA8BvD,SAA9B;AACH;;AACD,aAAO,KAAKrN,qBAAZ;AACH,KAhBsE;AAiBvE0D,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,UAAI,KAAKxN,qBAAL,KAA+B,IAAnC,EAAyC;AACrC,aAAKA,qBAAL,CAA2ByN,cAA3B,CAA0C,IAA1C;;AACA,aAAKzN,qBAAL,GAA6B,IAA7B;AACH;;AACD,UAAIoN,IAAI,GAAG,IAAI1P,gCAAJ,EAAX;AACA,WAAKsC,qBAAL,GAA6BoN,IAAI,CAACM,UAAL,CAAgBF,CAAhB,CAA7B;AACA,UAAIG,QAAQ,GAAG,IAAIlR,8BAAJ,CAAmCkB,YAAnC,CAAf;AACA,UAAI0P,SAAS,GAAG,KAAK/L,CAAL,CAAOsP,oBAAvB;;AACA,UAAI,CAACvD,SAAL,EAAgB;AACZA,QAAAA,SAAS,GAAG,IAAI5P,sCAAJ,CAA2C,CAA3C,CAAZ;AACH;;AACDkQ,MAAAA,QAAQ,CAACC,MAAT,GAAkBP,SAAlB;AACAM,MAAAA,QAAQ,CAACE,KAAT;;AACA,WAAK7N,qBAAL,CAA2ByN,cAA3B,CAA0CE,QAA1C;;AACA,WAAKrM,CAAL,CAAOsP,oBAAP,GAA8BvD,SAA9B;AACH,KAjCsE;AAkCvE3I,IAAAA,UAAU,EAAE,KAlC2D;AAmCvEC,IAAAA,YAAY,EAAE;AAnCyD,GAA3E;AAqCAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,uBAAnD,EAA4E;AACxEa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOuP,EAAd;AACH,KAHuE;AAIxEnN,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOuP,EAAP,GAAYtV,UAAU,CAACiS,CAAD,CAAtB;AACH,KANuE;AAOxE9I,IAAAA,UAAU,EAAE,KAP4D;AAQxEC,IAAAA,YAAY,EAAE;AAR0D,GAA5E;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,4BAAnD,EAAiF;AAC7E;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO/H,aAAa,CAAC,KAAKkG,CAAL,CAAOwP,GAAR,CAApB;AACH,KAN4E;AAO7EpN,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOwP,GAAP,GAAazV,aAAa,CAACmS,CAAD,CAA1B;AACH,KAT4E;AAU7E9I,IAAAA,UAAU,EAAE,KAViE;AAW7EC,IAAAA,YAAY,EAAE;AAX+D,GAAjF;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,qCAAnD,EAA0F;AACtF;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAOyP,GAAd;AACH,KANqF;AAOtFrN,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAOyP,GAAP,GAAa,CAACvD,CAAd;AACH,KATqF;AAUtF9I,IAAAA,UAAU,EAAE,KAV0E;AAWtFC,IAAAA,YAAY,EAAE;AAXwE,GAA1F;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,iBAAnD,EAAsE;AAClE;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO0P,GAAd;AACH,KANiE;AAOlEtN,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO0P,GAAP,GAAazV,UAAU,CAACiS,CAAD,CAAvB;AACH,KATiE;AAUlE9I,IAAAA,UAAU,EAAE,KAVsD;AAWlEC,IAAAA,YAAY,EAAE;AAXoD,GAAtE;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,mBAAnD,EAAwE;AACpE;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO2P,GAAd;AACH,KANmE;AAOpEvN,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO2P,GAAP,GAAazD,CAAb;AACH,KATmE;AAUpE9I,IAAAA,UAAU,EAAE,KAVwD;AAWpEC,IAAAA,YAAY,EAAE;AAXsD,GAAxE;AAaAL,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,mBAAnD,EAAwE;AACpE;AACR;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAK7B,CAAL,CAAO4P,GAAd;AACH,KANmE;AAOpExN,IAAAA,GAAG,EAAE,UAAU8J,CAAV,EAAa;AACd,WAAKlM,CAAL,CAAO4P,GAAP,GAAa1D,CAAb;AACH,KATmE;AAUpE9I,IAAAA,UAAU,EAAE,KAVwD;AAWpEC,IAAAA,YAAY,EAAE;AAXsD,GAAxE;;AAaA5F,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4B6O,UAA5B,GAAyC,UAAU9K,IAAV,EAAgB;AACrD,QAAI+K,UAAU,GAAGpS,MAAM,CAACsD,SAAP,CAAiB6O,UAAjB,CAA4BhS,IAA5B,CAAiC,IAAjC,EAAuCkH,IAAvC,CAAjB;;AACA,QAAI+K,UAAJ,EAAgB;AACZ,aAAOA,UAAP;AACH;;AACD,QAAI,KAAKC,cAAL,IAAuB,IAAvB,IAA+B,KAAKA,cAAL,CAAoBF,UAAnD,IAAiE,KAAKE,cAAL,CAAoBF,UAApB,CAA+B9K,IAA/B,CAArE,EAA2G;AACvG,aAAO,KAAKgL,cAAL,CAAoBF,UAApB,CAA+B9K,IAA/B,CAAP;AACH;;AACD,QAAI,KAAKiL,YAAL,IAAqB,IAArB,IAA6B,KAAKA,YAAL,CAAkBH,UAA/C,IAA6D,KAAKG,YAAL,CAAkBH,UAAlB,CAA6B9K,IAA7B,CAAjE,EAAqG;AACjG,aAAO,KAAKiL,YAAL,CAAkBH,UAAlB,CAA6B9K,IAA7B,CAAP;AACH;;AACD,QAAI,KAAKkL,qBAAL,IAA8B,IAA9B,IAAsC,KAAKA,qBAAL,CAA2BJ,UAAjE,IAA+E,KAAKI,qBAAL,CAA2BJ,UAA3B,CAAsC9K,IAAtC,CAAnF,EAAgI;AAC5H,aAAO,KAAKkL,qBAAL,CAA2BJ,UAA3B,CAAsC9K,IAAtC,CAAP;AACH;;AACD,QAAI,KAAKmL,oBAAL,IAA6B,IAA7B,IAAqC,KAAKA,oBAAL,CAA0BL,UAA/D,IAA6E,KAAKK,oBAAL,CAA0BL,UAA1B,CAAqC9K,IAArC,CAAjF,EAA6H;AACzH,aAAO,KAAKmL,oBAAL,CAA0BL,UAA1B,CAAqC9K,IAArC,CAAP;AACH;;AACD,QAAI,KAAKiH,WAAL,IAAoB,IAApB,IAA4B,KAAKA,WAAL,CAAiB6D,UAA7C,IAA2D,KAAK7D,WAAL,CAAiB6D,UAAjB,CAA4B9K,IAA5B,CAA/D,EAAkG;AAC9F,aAAO,KAAKiH,WAAL,CAAiB6D,UAAjB,CAA4B9K,IAA5B,CAAP;AACH;;AACD,WAAO,IAAP;AACH,GArBD;AAsBA;AACJ;AACA;AACA;;;AAEItH,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BL,gBAA5B,GAA+C,UAAUsI,SAAV,EAAqB;AAChE,SAAKjJ,CAAL,CAAOW,gBAAP,CAAwBsI,SAAxB;AACH,GAFD;;AAGAxL,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BmP,gBAA5B,GAA+C,UAAUC,OAAV,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmC;AAC9E,SAAKtQ,CAAL,CAAOuQ,EAAP,CAAUH,OAAV,EAAmBC,KAAnB,EAA0BC,OAA1B;AACH,GAFD;;AAGA7S,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4BwP,gBAA5B,GAA+C,UAAUJ,OAAV,EAAmBC,KAAnB,EAA0BI,OAA1B,EAAmC;AAC9E,SAAKzQ,CAAL,CAAO0Q,EAAP,CAAUN,OAAV,EAAmBC,KAAnB,EAA0BI,OAA1B;AACH,GAFD;;AAGAhT,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4B2P,gBAA5B,GAA+C,UAAUP,OAAV,EAAmB;AAC9D,SAAKpQ,CAAL,CAAO4Q,EAAP,CAAUR,OAAV;AACH,GAFD;;AAGA3S,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4B6P,aAA5B,GAA4C,UAAUT,OAAV,EAAmBC,KAAnB,EAA0BI,OAA1B,EAAmCH,OAAnC,EAA4C;AACpF,SAAKtQ,CAAL,CAAO8Q,EAAP,CAAUV,OAAV,EAAmBC,KAAnB,EAA0BI,OAA1B,EAAmCH,OAAnC;AACH,GAFD;AAGA;AACJ;AACA;AACA;;;AACI7S,EAAAA,iBAAiB,CAACuD,SAAlB,CAA4B+P,0BAA5B,GAAyD,YAAY;AACjE,QAAIC,EAAE,GAAG,KAAKhR,CAAL,CAAOiR,GAAP,EAAT;AACA,WAAQD,EAAR;AACH,GAHD;;AAIAhO,EAAAA,MAAM,CAACC,cAAP,CAAsBxF,iBAAiB,CAACuD,SAAxC,EAAmD,uBAAnD,EAA4E;AACxE;AACR;AACA;AACA;AACQa,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKlD,sBAAZ;AACH,KAPuE;AAQxEyD,IAAAA,GAAG,EAAE,UAAUuC,EAAV,EAAc;AACf,UAAI/G,KAAK,GAAG,IAAZ;;AACA,UAAI,KAAKgB,8BAAL,KAAwC,IAA5C,EAAkD;AAC9C,aAAKoB,CAAL,CAAOkR,qBAAP,GAA+BnW,cAAc,CAAC,KAAKiF,CAAL,CAAOkR,qBAAR,EAA+B,KAAKtS,8BAApC,CAA7C;AACA,aAAKA,8BAAL,GAAsC,IAAtC;AACA,aAAKD,sBAAL,GAA8B,IAA9B;AACH;;AACD,WAAKA,sBAAL,GAA8BgG,EAA9B;;AACA,WAAK/F,8BAAL,GAAsC,UAAUuS,CAAV,EAAaC,CAAb,EAAgB;AAClD,YAAIC,SAAS,GAAG,IAAIpV,oCAAJ,EAAhB;;AACAoV,QAAAA,SAAS,CAACC,sBAAV,CAAiCF,CAAjC;;AACA,YAAIxT,KAAK,CAAC2T,2BAAV,EAAuC;AACnC3T,UAAAA,KAAK,CAAC2T,2BAAN,CAAkC3T,KAAlC,EAAyCyT,SAAzC;AACH;;AACD,YAAIzT,KAAK,CAACe,sBAAV,EAAkC;AAC9Bf,UAAAA,KAAK,CAACe,sBAAN,CAA6Bf,KAA7B,EAAoCyT,SAApC;AACH;AACJ,OATD;;AAUA,WAAKrR,CAAL,CAAOkR,qBAAP,GAA+BpW,eAAe,CAAC,KAAKkF,CAAL,CAAOkR,qBAAR,EAA+B,KAAKtS,8BAApC,CAA9C;AACA;AACH,KA5BuE;AA6BxEwE,IAAAA,UAAU,EAAE,KA7B4D;AA8BxEC,IAAAA,YAAY,EAAE;AA9B0D,GAA5E;AAgCA,SAAO5F,iBAAP;AACH,CA/wDoD,CA+wDnDvD,UA/wDmD,CAArD;;AAgxDA,SAASuD,iBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ReactRenderer, ReactWrapper } from \"igniteui-react-core\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { FinancialChart } from './FinancialChart';\nimport { FinancialChartType_$type } from './FinancialChartType';\nimport { fromBrushCollection, toBrushCollection, brushToString, stringToBrush, ensureEnum, ensureBool } from \"igniteui-react-core\";\nimport { IgrXYChart } from './igr-xy-chart';\nimport { DataChartStylingDefaults } from './DataChartStylingDefaults';\nimport { DataSeriesType } from \"igniteui-react-core\";\nimport { IgrDataContext } from \"igniteui-react-core\";\nimport { FinancialChartVolumeType_$type } from './FinancialChartVolumeType';\nimport { FinancialChartXAxisMode, FinancialChartXAxisMode_$type } from './FinancialChartXAxisMode';\nimport { FinancialChartYAxisMode, FinancialChartYAxisMode_$type } from './FinancialChartYAxisMode';\nimport { HorizontalAlignment_$type } from \"igniteui-react-core\";\nimport { FinancialChartZoomSliderType_$type } from './FinancialChartZoomSliderType';\nimport { IgrFinancialChartDefaultTemplates } from './igr-financial-chart-default-templates';\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { IgrFinancialIndicatorTypeCollection } from './igr-financial-indicator-type-collection';\nimport { FinancialIndicatorTypeCollection as FinancialIndicatorTypeCollection_internal } from './FinancialIndicatorTypeCollection';\nimport { SyncableObservableCollection$1 } from \"igniteui-react-core\";\nimport { FinancialIndicatorType_$type } from './FinancialIndicatorType';\nimport { IgrFinancialOverlayTypeCollection } from './igr-financial-overlay-type-collection';\nimport { FinancialOverlayTypeCollection as FinancialOverlayTypeCollection_internal } from './FinancialOverlayTypeCollection';\nimport { FinancialOverlayType_$type } from './FinancialOverlayType';\nimport { IgrIndicatorDisplayTypeCollection } from './igr-indicator-display-type-collection';\nimport { IndicatorDisplayTypeCollection as IndicatorDisplayTypeCollection_internal } from './IndicatorDisplayTypeCollection';\nimport { IndicatorDisplayType_$type } from './IndicatorDisplayType';\nimport { IgrFinancialChartRangeSelectorOptionCollection } from './igr-financial-chart-range-selector-option-collection';\nimport { FinancialChartRangeSelectorOptionCollection as FinancialChartRangeSelectorOptionCollection_internal } from './FinancialChartRangeSelectorOptionCollection';\nimport { FinancialChartRangeSelectorOption_$type } from './FinancialChartRangeSelectorOption';\nimport { IgrFinancialChartCustomIndicatorArgs } from './igr-financial-chart-custom-indicator-args';\nimport { CustomIndicatorNameCollection as CustomIndicatorNameCollection_internal } from './CustomIndicatorNameCollection';\nimport { IgrCustomIndicatorNameCollection } from './igr-custom-indicator-name-collection';\nimport { String_$type } from \"igniteui-react-core\";\nimport { IgrTemplateContainer } from \"igniteui-react-core\";\nvar fg = window && window.CSS && window.CSS.supports &&\n    /*@__PURE__*/ window.CSS.supports(\"display\", \"grid\");\nvar financialChartToolbarStyle = {\n    gridRow: 1,\n    msGridRow: 1\n};\nvar financialChartPriceStyle = {\n    gridRow: 3,\n    msGridRow: 3\n};\nvar financialChartIndicatorsStyle = {\n    gridRow: 4,\n    msGridRow: 4\n};\nvar financialChartVolumeStyle = {\n    gridRow: 5,\n    msGridRow: 5\n};\nvar financialChartZoomSliderStyle = {\n    gridRow: 6,\n    msGridRow: 6\n};\nvar financialChartMainGridStyle = {\n    height: '100%',\n    width: '100%',\n    textAlign: 'left',\n    display: fg ? 'grid' : '-ms-grid',\n    msGridColumns: '100%'\n};\nvar financialChartLegendStyle = {\n    gridRow: 2,\n    msGridRow: 2\n};\nvar IgrFinancialChart = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrFinancialChart, _super);\n    function IgrFinancialChart(props) {\n        var _this = _super.call(this, props) || this;\n        _this._wrapper = null;\n        _this._initialized = false;\n        _this._toolbarElement = null;\n        _this._dataSource = null;\n        _this._defaultTooltips = null;\n        _this._dynamicContent = {};\n        _this._uniqueTooltipId = 0;\n        _this._xAxisBreaks = null;\n        _this._indicatorTypes = null;\n        _this._overlayTypes = null;\n        _this._indicatorDisplayTypes = null;\n        _this._rangeSelectorOptions = null;\n        _this._customIndicatorNames = null;\n        _this._applyCustomIndicators = null;\n        _this._applyCustomIndicators_wrapped = null;\n        _this._toolTemplateRef = _this._toolTemplateRef.bind(_this);\n        _this._tooltipRef = _this._tooltipRef.bind(_this);\n        _this._mainGridRef = _this._mainGridRef.bind(_this);\n        _this._mainRef = _this._mainRef.bind(_this);\n        _this._toolbarRef = _this._toolbarRef.bind(_this);\n        _this._activeTooltipElements = new Map();\n        _this._activeTooltips = new Map();\n        _this._currentTooltips = [];\n        _this.onDocumentClick = _this.onDocumentClick.bind(_this);\n        if (document) {\n            _this._container = document.createElement(\"div\");\n            _this._container.style.display = \"block\";\n            _this._container.style.width = \"100%\";\n            _this._container.style.height = \"100%\";\n            document.addEventListener(\"click\", _this.onDocumentClick);\n        }\n        var root;\n        root = _this._container;\n        if (_this._container != null) {\n            root = _this._container;\n        }\n        var ren = new ReactRenderer(root, document, true, DataChartStylingDefaults);\n        _this._wrapper = ren;\n        var chart = _this.i;\n        _this._chart = chart;\n        if (chart.xAxis) {\n            _this.rewrapAxis(chart.xAxis);\n        }\n        if (chart.yAxis) {\n            _this.rewrapAxis(chart.yAxis);\n        }\n        if (chart.volumeAxis) {\n            _this.rewrapAxis(chart.volumeAxis);\n        }\n        if (chart.volumeXAxis) {\n            _this.rewrapAxis(chart.volumeXAxis);\n        }\n        if (chart.indicatorAxis) {\n            _this.rewrapAxis(chart.indicatorAxis);\n        }\n        if (chart.indicatorXAxis) {\n            _this.rewrapAxis(chart.indicatorXAxis);\n        }\n        if (chart.zoomSliderAxis) {\n            _this.rewrapAxis(chart.zoomSliderAxis);\n        }\n        if (chart.zoomSliderXAxis) {\n            _this.rewrapAxis(chart.zoomSliderXAxis);\n        }\n        chart.provideContainer(ren);\n        _this.bindData();\n        chart.notifyResized();\n        ren.addSizeWatcher(function () {\n            _this._checkToolbarSize();\n            _this._chart.notifyResized();\n        });\n        _this._initialized = true;\n        return _this;\n    }\n    IgrFinancialChart.prototype.render = function () {\n        var outerChildren = [];\n        var children = [\n            React.createElement('div', {\n                key: 'financialChartToolbarArea',\n                className: 'financialChartToolbarArea',\n                style: financialChartToolbarStyle,\n                ref: this._toolbarRef\n            }, React.createElement(IgrTemplateContainer, {\n                ref: this._toolTemplateRef,\n            })),\n            React.createElement('div', { key: 'financialChartLegend', className: 'financialChartLegend', style: financialChartLegendStyle }),\n            React.createElement('div', { key: 'financialChartPrice', className: 'financialChartPrice', style: financialChartPriceStyle }),\n            React.createElement('div', { key: 'financialChartIndicators', className: 'financialChartIndicators', style: financialChartIndicatorsStyle }),\n            React.createElement('div', { key: 'financialChartVolume', className: 'financialChartVolume', style: financialChartVolumeStyle }),\n            React.createElement('div', { key: 'financialChartZoomSlider', className: 'financialChartZoomSlider', style: financialChartZoomSliderStyle })\n        ];\n        if (this._sliderPortal) {\n            children.push(this._sliderPortal);\n        }\n        if (this._currentTooltips && this._currentTooltips.length > 0) {\n            for (var i = 0; i < this._currentTooltips.length; i++) {\n                var t = this._currentTooltips[i];\n                if (this._activeTooltipElements.has(t)) {\n                    var active = this._activeTooltipElements.get(t);\n                    outerChildren.push(active);\n                }\n                else {\n                    if (!TypeRegistrar.isRegistered(\"IgrTooltipContainer\")) {\n                        continue;\n                    }\n                    var Tooltip = TypeRegistrar.get(\"IgrTooltipContainer\");\n                    var tEle = React.createElement(Tooltip, {\n                        ref: this._tooltipRef,\n                        key: this._currentTooltips[i].key,\n                        owner: this._currentTooltips[i]\n                    });\n                    var portal = ReactDOM.createPortal(tEle, t, this._currentTooltips[i].key);\n                    this._activeTooltipElements.set(t, portal);\n                    outerChildren.push(portal);\n                }\n            }\n        }\n        var mainGrid = React.createElement('div', {\n            key: 'financialChartMainGrid',\n            className: 'financialChartMainGrid',\n            style: financialChartMainGridStyle,\n            children: children,\n            ref: this._mainGridRef,\n        });\n        outerChildren.splice(0, 0, mainGrid);\n        var mainDiv = React.createElement('div', {\n            className: \"ig-financial-chart igr-financial-chart\",\n            key: \"financialChartMainDiv\",\n            children: outerChildren,\n            ref: this._mainRef\n        });\n        return mainDiv;\n    };\n    IgrFinancialChart.prototype._tooltipRef = function (t) {\n        //console.log(t);\n        if (t === null) {\n            return;\n        }\n        if (t.currentOwner &&\n            t.currentOwner.tooltipTemplate) {\n            t.template = t.currentOwner.tooltipTemplate;\n        }\n        this._activeTooltips.set(t.currentOwner, t);\n    };\n    IgrFinancialChart.prototype._toolbarRef = function (t) {\n        this._toolbarElement = t;\n    };\n    IgrFinancialChart.prototype._toolTemplateRef = function (t) {\n        this._toolbarTemplateComponent = t;\n    };\n    IgrFinancialChart.prototype._mainGridRef = function (t) {\n        this._mainGridElement = t;\n    };\n    IgrFinancialChart.prototype._mainRef = function (t) {\n        this._mainElement = t;\n        this._container = t;\n        if (!t) {\n            return;\n        }\n        this._wrapper.updateRoot(this._wrapper.getWrapper(this._container));\n    };\n    Object.defineProperty(IgrFinancialChart.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            if (this._mainElement) {\n                this._mainElement.style.height = value;\n                this._chart.notifyResized();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = value;\n            if (this._mainElement) {\n                this._mainElement.style.height = value;\n                this._chart.notifyResized();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"rangeSelectorTemplate\", {\n        get: function () {\n            return this._rangeSelectorTemplate;\n        },\n        set: function (value) {\n            this._rangeSelectorTemplate = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"chartTypePickerTemplate\", {\n        get: function () {\n            return this._chartTypePickerTemplate;\n        },\n        set: function (value) {\n            this._chartTypePickerTemplate = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorMenuTemplate\", {\n        get: function () {\n            return this._indicatorMenuTemplate;\n        },\n        set: function (value) {\n            this._indicatorMenuTemplate = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"toolbarTemplate\", {\n        get: function () {\n            return this._toolbarTemplate;\n        },\n        set: function (value) {\n            this._toolbarTemplate = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"chartTemplate\", {\n        get: function () {\n            return this._chartTemplate;\n        },\n        set: function (value) {\n            this._chartTemplate = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrFinancialChart.prototype._checkToolbarSize = function () {\n        if (this._toolbarElement) {\n            var start = this._toolbarElement;\n            if (start.children.length == 1) {\n                start = start.children[0];\n            }\n            if (start.children.length == 1) {\n                start = start.children[0];\n            }\n            var toolbarRoot = start.querySelector(\".financialChartToolbar\");\n            var rootRect = toolbarRoot.getBoundingClientRect();\n            var hideRemaining = false;\n            for (var i = 0; i < toolbarRoot.children.length; i++) {\n                var child = toolbarRoot.children[i];\n                if (child.nodeType == Node.ELEMENT_NODE) {\n                    if (!hideRemaining) {\n                        child.style.display = \"\";\n                    }\n                    var childRect = child.getBoundingClientRect();\n                    if (hideRemaining ||\n                        childRect.left + childRect.width >\n                            rootRect.left + rootRect.width) {\n                        child.style.display = \"none\";\n                        hideRemaining = true;\n                    }\n                    else {\n                        child.style.display = \"\";\n                    }\n                }\n            }\n        }\n    };\n    IgrFinancialChart.prototype.componentWillUnmount = function () {\n        this._chart.destroy();\n        this._wrapper.destroy();\n        if (document) {\n            document.removeEventListener(\"click\", this.onDocumentClick);\n        }\n    };\n    IgrFinancialChart.prototype.onDocumentClick = function (ev) {\n        this._chart.onDocumentClick(ev);\n    };\n    IgrFinancialChart.prototype.rewrapAxis = function (axis) {\n        var axisName = axis.$type.name;\n        var componentName = \"Igr\" + axisName;\n        if (TypeRegistrar.isRegistered(componentName)) {\n            var x = TypeRegistrar.create(componentName);\n            x._implementation = axis;\n            axis.externalObject = x;\n        }\n        else {\n            throw new Error(\"Axis type not loaded: \" + componentName);\n        }\n    };\n    IgrFinancialChart.prototype.createImplementation = function () {\n        return new FinancialChart();\n    };\n    Object.defineProperty(IgrFinancialChart.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrFinancialChart.prototype.createSeriesComponent = function (type) {\n        if (TypeRegistrar.isRegistered(type)) {\n            var s = TypeRegistrar.create(type);\n            s.owner = this;\n            return s;\n        }\n        else {\n            //we shouldn't get here, hopefully.\n            throw Error(\"series type not loaded: \" + type);\n        }\n    };\n    IgrFinancialChart.prototype.createIndicator = function (typeName) {\n        return this.createSeriesComponent(\"Igr\" + typeName);\n    };\n    IgrFinancialChart.prototype.createOverlay = function (typeName) {\n        return this.createSeriesComponent(\"Igr\" + typeName);\n    };\n    IgrFinancialChart.prototype.createSeries = function (type) {\n        switch (type) {\n            case DataSeriesType.Area:\n                return this.createSeriesComponent('IgrAreaSeries');\n            case DataSeriesType.Column:\n                return this.createSeriesComponent('IgrColumnSeries');\n            case DataSeriesType.Line:\n                return this.createSeriesComponent('IgrLineSeries');\n            case DataSeriesType.FinancialPrice:\n                return this.createSeriesComponent('IgrFinancialPriceSeries');\n            case DataSeriesType.ItemToolTipLayer:\n                return this.createSeriesComponent('IgrItemToolTipLayer');\n            case DataSeriesType.CategoryToolTipLayer:\n                return this.createSeriesComponent('IgrCategoryToolTipLayer');\n            case DataSeriesType.CrosshairLayer:\n                return this.createSeriesComponent('IgrCrosshairLayer');\n            case DataSeriesType.FinalValueLayer:\n                return this.createSeriesComponent('IgrFinalValueLayer');\n            case DataSeriesType.CalloutLayer:\n                return this.createSeriesComponent('IgrCalloutLayer');\n            case DataSeriesType.DataToolTipLayer:\n                return this.createSeriesComponent('IgrDataToolTipLayer');\n            default:\n                return this.createSeriesComponent('IgrColumnSeries');\n        }\n    };\n    IgrFinancialChart.prototype.createXAxis = function (type) {\n        switch (type) {\n            case FinancialChartXAxisMode.Ordinal:\n                if (TypeRegistrar.isRegistered(\"IgrOrdinalTimeXAxis\")) {\n                    return TypeRegistrar.create(\"IgrOrdinalTimeXAxis\");\n                }\n                else if (TypeRegistrar.isRegistered(\"IgrTimeXAxis\")) {\n                    return TypeRegistrar.create(\"IgrTimeXAxis\");\n                }\n                else {\n                    throw new Error(\"not valid axes components loaded\");\n                }\n            case FinancialChartXAxisMode.Time:\n                if (TypeRegistrar.isRegistered(\"IgrTimeXAxis\")) {\n                    return TypeRegistrar.create(\"IgrTimeXAxis\");\n                }\n                else if (TypeRegistrar.isRegistered(\"IgrOrdinalTimeXAxis\")) {\n                    return TypeRegistrar.create(\"IgrOrdinalTimeXAxis\");\n                }\n                else {\n                    throw new Error(\"not valid axes components loaded\");\n                }\n        }\n    };\n    IgrFinancialChart.prototype.createYAxis = function (type) {\n        switch (type) {\n            case FinancialChartYAxisMode.Numeric:\n                if (TypeRegistrar.isRegistered(\"IgrNumericYAxis\")) {\n                    return TypeRegistrar.create(\"IgrNumericYAxis\");\n                }\n                else if (TypeRegistrar.isRegistered(\"IgrPercentChangeYAxis\")) {\n                    return TypeRegistrar.create(\"IgrPercentChangeYAxis\");\n                }\n                else {\n                    throw new Error(\"not valid axes components loaded\");\n                }\n            case FinancialChartYAxisMode.PercentChange:\n                if (TypeRegistrar.isRegistered(\"IgrPercentChangeYAxis\")) {\n                    return TypeRegistrar.create(\"IgrPercentChangeYAxis\");\n                }\n                else if (TypeRegistrar.isRegistered(\"IgrNumericYAxis\")) {\n                    return TypeRegistrar.create(\"IgrNumericYAxis\");\n                }\n                else {\n                    throw new Error(\"not valid axes components loaded\");\n                }\n        }\n    };\n    Object.defineProperty(IgrFinancialChart.prototype, \"dataSource\", {\n        get: function () {\n            return this._dataSource;\n        },\n        set: function (value) {\n            this._dataSource = value;\n            this.bindData();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrFinancialChart.prototype.bindData = function () {\n        if (this._chart != null && this._chart !== undefined) {\n            this._chart.itemsSource = this._dataSource;\n        }\n    };\n    IgrFinancialChart.prototype.componentDidMount = function () {\n        _super.prototype.componentDidMount.call(this);\n        if (this._mainElement) {\n            if (this._width) {\n                this._mainElement.style.width = this._width;\n            }\n            if (this._height) {\n                this._mainElement.style.height = this._height;\n            }\n        }\n        this.initializeContent();\n        this._chart.notifyResized();\n    };\n    IgrFinancialChart.prototype.initializeContent = function () {\n        var _this = this;\n        if (TypeRegistrar.isRegistered(\"IgrDataChartDefaultTooltips\")) {\n            var d = TypeRegistrar.create(\"IgrDataChartDefaultTooltips\");\n            this._defaultTooltips = d;\n            this._onDefaultTooltipsReady(d);\n            //this._container.appendChild(cr.location.nativeElement);\n        }\n        var context = this._chart.getContext();\n        if (!this._defaultTemplates) {\n            this._defaultTemplates = new IgrFinancialChartDefaultTemplates();\n        }\n        var toolbarArea = this._toolbarTemplateComponent;\n        var toolbarContext = context.vm.toolbar;\n        toolbarContext.vm.financialChartIndicatorMenu.template = this.indicatorMenuTemplate ? this.indicatorMenuTemplate : this._defaultTemplates.financialChartIndicatorMenuTemplate;\n        toolbarContext.vm.financialChartIndicatorMenu.vm.notifyChanged = function () { toolbarArea.dataContext = toolbarContext; };\n        toolbarContext.vm.financialChartTypePicker.template = this.chartTypePickerTemplate ? this.chartTypePickerTemplate : this._defaultTemplates.financialChartTypePickerTemplate;\n        toolbarContext.vm.financialChartTypePicker.vm.notifyChanged = function () { toolbarArea.dataContext = toolbarContext; };\n        toolbarContext.vm.financialChartRangeSelector.template = this.rangeSelectorTemplate ? this.rangeSelectorTemplate : this._defaultTemplates.financialChartRangeSelectorTemplate;\n        toolbarContext.vm.financialChartRangeSelector.vm.notifyChanged = function () {\n            toolbarArea.dataContext = toolbarContext;\n        };\n        toolbarContext.template = this.toolbarTemplate ? this.toolbarTemplate : this._defaultTemplates.financialChartToolbarTemplate;\n        var toolContainer = this._toolbarElement;\n        //let toolbarArea = this._templates.toArray()[0];\n        //let mainArea = this._templates.toArray()[1];\n        toolbarArea.contentReady = function () {\n            toolbarArea.contentReady = null;\n            _this._chart.provideGrid(gridWrapper);\n            _this._checkToolbarSize();\n        };\n        toolbarArea.dataContext = toolbarContext;\n        toolbarArea.template = toolbarContext.template;\n        var ele = this._toolbarElement;\n        //ele.style.width = \"100%\";\n        //ele.style.height = \"100%\";\n        //if (ele.parentElement != null) {\n        //    ele.parentElement.removeChild(ele);\n        //}\n        //toolContainer.appendChild(ele);\n        //this._wrapper.setStyleProperty(ele, \"display\", \"\")\n        ele.style.display = \"\";\n        var legendContainer = context.legendContainer.rootWrapper.getNativeElement();\n        var mainContainer = context.container.rootWrapper.getNativeElement();\n        var indicatorContainer = context.indicatorsContainer.rootWrapper.getNativeElement();\n        var volumeContainer = context.volumeContainer.rootWrapper.getNativeElement();\n        var zoomSliderContainer = context.zoomContainer.rootWrapper.getNativeElement();\n        var main = this._mainGridElement;\n        var templateMain = main.querySelector(\".financialChartPrice\");\n        var templateToolbar = main.querySelector(\".financialChartToolbar\");\n        var templateLegend = main.querySelector(\".financialChartLegend\");\n        var templateIndicator = main.querySelector(\".financialChartIndicators\");\n        var templateVolume = main.querySelector(\".financialChartVolume\");\n        var templateZoomSlider = main.querySelector(\".financialChartZoomSlider\");\n        var grid = main; // main.querySelector(\".financialChartMainGrid\");\n        var gridWrapper = new ReactWrapper(grid, this._wrapper);\n        templateMain.appendChild(mainContainer);\n        //templateToolbar.appendChild(toolContainer);\n        templateLegend.appendChild(legendContainer);\n        templateIndicator.appendChild(indicatorContainer);\n        templateVolume.appendChild(volumeContainer);\n        templateZoomSlider.appendChild(zoomSliderContainer);\n        this._styling(this._container, this);\n        //this._mainElement.nativeElement.parentElement.removeChild(this._mainElement.nativeElement);\n        //this.container.appendChild(this._mainElement.nativeElement);\n    };\n    IgrFinancialChart.prototype._createZoomSlider = function (hostEle, onReady) {\n        if (!TypeRegistrar.isRegistered(\"IgrZoomSlider\")) {\n            //shouldn't happen.\n            throw new Error(\"zoom slider component isn't loaded\");\n        }\n        var Slider = TypeRegistrar.get(\"IgrZoomSlider\");\n        var ele = React.createElement(Slider, {\n            width: '100%', height: '100%', ref: function (r) {\n                onReady(r);\n            }\n        });\n        var portal = ReactDOM.createPortal(ele, hostEle);\n        hostEle.className = \"test\";\n        hostEle.style.width = \"100%\";\n        hostEle.style.height = \"100%\";\n        this._sliderPortal = portal;\n    };\n    IgrFinancialChart.prototype.createTooltip = function () {\n        // if (!TypeRegistrar.isRegistered(\"IgrTooltipContainer\")) {\n        // \treturn null;\n        // }\n        // let Tooltip = TypeRegistrar.get(\"IgrTooltipContainer\");\n        var wrapper = this._wrapper.createElement(\"div\");\n        var ele = wrapper.getNativeElement();\n        ele.key = \"__tooltip_\" + this._uniqueTooltipId;\n        this._uniqueTooltipId++;\n        this._currentTooltips = this._currentTooltips.slice(0);\n        this._currentTooltips.push(ele);\n        //let element = React.createElement(Tooltip,  );\n        //let portal = ReactDOM.createPortal(element, ele);\n        var self = this;\n        ele.updateToolTip = function (c, isSubContent) {\n            if (c.externalObject) {\n                c = c.externalObject;\n            }\n            else {\n                var ext = new IgrDataContext();\n                ext._implementation = c;\n                c = ext;\n            }\n            if (!isSubContent) {\n                if (ele.parentElement != self._container) {\n                    if (ele.parentElement != null) {\n                        ele.parentElement.removeChild(ele);\n                    }\n                    self._container.appendChild(ele);\n                }\n            }\n            else {\n                c.isSubContent = true;\n            }\n            if (self._activeTooltips.has(ele)) {\n                var t = self._activeTooltips.get(ele);\n                t.dataContext = c;\n            }\n            ele.style.display = \"block\";\n            return true;\n        };\n        ele.hideToolTip = function () {\n            ele.style.display = \"none\";\n        };\n        ele.style.display = \"none\";\n        this._updateTooltipState();\n        return ele;\n    };\n    IgrFinancialChart.prototype._ensureTooltipCreated = function (series) {\n        var _this = this;\n        series._ensureTooltipCreated(function () { return _this.createTooltip(); }, function (ele) {\n            var wrapper = new ReactWrapper(ele, _this._wrapper);\n            wrapper.updateToolTip = ele.updateToolTip;\n            wrapper.hideToolTip = ele.hideToolTip;\n            if (_this._activeTooltips.has(ele)) {\n                var tCont = _this._activeTooltips.get(ele);\n                tCont.template = ele.tooltipTemplate;\n            }\n            return wrapper;\n        });\n    };\n    // private _createXAxis(): any {\n    //     let x = new IgxCategoryXAxisComponent();\n    //     return x.i;\n    // }\n    // private _createYAxis(): any {\n    //     let y = new IgxNumericYAxisComponent();\n    //     return y.i;\n    // }\n    IgrFinancialChart.prototype._ensureDefaultTooltip = function (series) {\n        if (this._defaultTooltips == null) {\n            return;\n        }\n        this._defaultTooltips[\"ensureDefaultTooltip\"](series);\n    };\n    IgrFinancialChart.prototype._onDefaultTooltipsReady = function (cr) {\n        if (this.i.dataChart) {\n            var currSeries = this.i.dataChart.series;\n            for (var i = 0; i < currSeries.count; i++) {\n                if (currSeries.item(i).externalObject.showDefaultTooltip) {\n                    this._ensureDefaultTooltip(currSeries.item(i).externalObject);\n                }\n            }\n        }\n    };\n    IgrFinancialChart.prototype._updateTooltipState = function () {\n        if (this._initialized) {\n            this.setState({ tooltips: this._currentTooltips });\n        }\n    };\n    Object.defineProperty(IgrFinancialChart.prototype, \"xAxisBreaks\", {\n        /**\n         * TimeAxisBreaks to apply to this chart when in time axis mode, representing spans of time to omit, such as weekends.\n        */\n        get: function () {\n            if (this._xAxisBreaks === null) {\n                if (!TypeRegistrar.isRegistered(\"IgrTimeAxisBreakCollection\")) {\n                    return null;\n                }\n                var coll = TypeRegistrar.create(\"IgrTimeAxisBreakCollection\");\n                var innerColl = this.i.xAxisBreaks;\n                if (!innerColl) {\n                    innerColl = TypeRegistrar.create(\"TimeAxisBreakCollection\");\n                }\n                this._xAxisBreaks = coll._fromInner(innerColl);\n                this.i._xAxisBreaks = innerColl;\n            }\n            return this._xAxisBreaks;\n        },\n        set: function (v) {\n            if (this._xAxisBreaks !== null) {\n                this._xAxisBreaks._setSyncTarget(null);\n                this._xAxisBreaks = null;\n            }\n            if (!TypeRegistrar.isRegistered(\"IgxTimeAxisBreakCollection\")) {\n                return;\n            }\n            var coll = TypeRegistrar.create(\"IgxTimeAxisBreakCollection\");\n            var t = TypeRegistrar.get(\"TimeAxisBreak\");\n            this._xAxisBreaks = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(t.$type);\n            var innerColl = this.i.xAxisBreaks;\n            if (!innerColl) {\n                innerColl = TypeRegistrar.create(\"TimeAxisBreakCollection\");\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._xAxisBreaks._setSyncTarget(syncColl);\n            this.i._xAxisBreaks = innerColl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"leftMargin\", {\n        get: function () {\n            return this.i.hf;\n        },\n        set: function (v) {\n            this.i.hf = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"isHorizontalZoomEnabled\", {\n        get: function () {\n            return this.i.e0;\n        },\n        set: function (v) {\n            this.i.e0 = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"toolbarHeight\", {\n        get: function () {\n            return this.i.aev;\n        },\n        set: function (v) {\n            this.i.aev = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"domainType\", {\n        /**\n         * Gets domain type of this chart\n        */\n        get: function () {\n            return this.i.bi;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisIsLogarithmic\", {\n        /**\n         * Gets or sets whether the Y-axis should use a logarithmic scale instead of a linear one.\n         * Since log(-1) is imaginary and log(0) is undefined, it is recommended to enable this property only when the Y-axis minimum is greater than zero.\n        */\n        get: function () {\n            return this.i.adz;\n        },\n        set: function (v) {\n            this.i.adz = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisLogarithmBase\", {\n        /**\n         * Gets or sets the base value to use in the log function when mapping the position of data items along the Y-axis.\n         * This property is effective only when YAxisIsLogarithmic is true.\n        */\n        get: function () {\n            return this.i.afn;\n        },\n        set: function (v) {\n            this.i.afn = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisInterval\", {\n        /**\n         * Gets or sets the distance between each label and grid line along the Y-axis.\n        *\n        * The `yAxisInterval` determines how often to show a label, tickmark, and/or gridline along the y-axis.  Set this property to a number less than the numeric range of the y-axis.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tyAxisInterval={20}\n        *  />\n        * ```\n        */\n        get: function () {\n            return this.i.aez;\n        },\n        set: function (v) {\n            this.i.aez = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisMinimumValue\", {\n        /**\n         * Gets or sets the data value corresponding to the minimum value of the Y-axis.\n        *\n        * The `yAxisMinimumValue` determines starting value of labels, tickmarks, and gridlines on the y-axis.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     yAxisMinimumValue={-200}\n        *     yAxisMaximumValue={1000}\n        *     dataSource={this.data} />\n        * ```\n        */\n        get: function () {\n            return this.i.ae1;\n        },\n        set: function (v) {\n            this.i.ae1 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisMaximumValue\", {\n        /**\n         * Gets or sets the data value corresponding to the maximum value of the Y-axis.\n        *\n        * The `yAxisMaximumValue` determines ending value of labels, tickmarks, and gridlines on the y-axis.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *  yAxisMinimumValue={-200}\n        *     yAxisMaximumValue={100}\n        *     dataSource={this.data} />\n        * ```\n        */\n        get: function () {\n            return this.i.ae0;\n        },\n        set: function (v) {\n            this.i.ae0 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisMinorInterval\", {\n        /**\n         * Gets or sets the frequency of displayed minor lines along the Y-axis.\n        *\n        * The `yAxisMinorInterval` determines how often to show minor gridline along the y-axis.  Set this property to a number less than the `yAxisInterval` and the numeric range of the y-axis.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *      yAxisMinorInterval={50}\n        *     dataSource={this.data} />\n        * ```\n        */\n        get: function () {\n            return this.i.ae2;\n        },\n        set: function (v) {\n            this.i.ae2 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisActualMinimum\", {\n        /**\n         * Gets the current minimum value for the Y-axis.\n        */\n        get: function () {\n            return this.i.aey;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisActualMaximum\", {\n        /**\n         * Gets the current maximum value for the Y-axis.\n        */\n        get: function () {\n            return this.i.aex;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"volumeType\", {\n        /**\n         * The type of series to display in the volume pane.\n        *\n        * Use the `volumeType` property to set a type of all series that will be rendered in the volume pane, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tvolumeType=\"Column\" />\n        * ```\n        */\n        get: function () {\n            return this.i.abz;\n        },\n        set: function (v) {\n            this.i.abz = ensureEnum(FinancialChartVolumeType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"xAxisMode\", {\n        /**\n         * The scaling mode of the X-axis.\n        *\n        * Use the `xAxisMode` property to plot data items without any breaks in data range (Ordinal mode) or with breaks in data range (Time mode) such as weekends/holidays. Note that the Ordinal axis mode is less expensive to use in the financial chart than the Time axis mode.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *      xAxisMode=\"time\"\n        *     dataSource={this.data} />\n        * ```\n        */\n        get: function () {\n            return this.i.ab1;\n        },\n        set: function (v) {\n            this.i.ab1 = ensureEnum(FinancialChartXAxisMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisMode\", {\n        /**\n         * The scaling mode of the Y-axis.\n        *\n        * Use the `yAxisMode` property to plot data items using their actual values (Numeric) or using percent changes from the first data point (PercentChange), e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *      yAxisMode={this.state.yAxisMode}\n        *     dataSource={this.data} />\n        * ```\n        */\n        get: function () {\n            return this.i.ab3;\n        },\n        set: function (v) {\n            this.i.ab3 = ensureEnum(FinancialChartYAxisMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"isToolbarVisible\", {\n        /**\n         * A boolean property controlling the visibility of the toolbar.\n        */\n        get: function () {\n            return this.i.ads;\n        },\n        set: function (v) {\n            this.i.ads = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"chartType\", {\n        /**\n         * The type of price series to display in the main chart.\n        *\n        * Use the `chartType` property to set a type of series that will be used to render prices in the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *   width=\"100%\"\n        *   height=\"400px\"\n        * \tchartType=\"Candle\"\n        *   dataSource={this.data} />\n        * ```\n        */\n        get: function () {\n            return this.i.abu;\n        },\n        set: function (v) {\n            this.i.abu = ensureEnum(FinancialChartType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisLabelHorizontalAlignment\", {\n        /**\n         * Gets or sets Horizontal alignment of Y-axis labels.\n        */\n        get: function () {\n            return this.i.zm;\n        },\n        set: function (v) {\n            this.i.zm = ensureEnum(HorizontalAlignment_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"isWindowSyncedToVisibleRange\", {\n        /**\n         * A boolean indicating whether the chart should automatically zoom in vertically on the currently visible range of data.\n         * When this property is set to true, panning and zooming along the X-axis will result in a corresponding zoom on the Y-axis, so that the visible range of data fills the zoom window as fully as possible.\n        */\n        get: function () {\n            return this.i.adt;\n        },\n        set: function (v) {\n            this.i.adt = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorTypes\", {\n        /**\n         * A collection indicating what financial indicator types to display on the Financial Chart.\n        *\n        * Use the `indicatorTypes` property to set types of indicators that will be rendered below the price pane in the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorTypes=\"ForceIndex\" />\n        * ```\n        */\n        get: function () {\n            if (this._indicatorTypes === null) {\n                var coll = new IgrFinancialIndicatorTypeCollection();\n                var innerColl = this.i.ab8;\n                if (!innerColl) {\n                    innerColl = new FinancialIndicatorTypeCollection_internal(0);\n                }\n                this._indicatorTypes = coll._fromInner(innerColl);\n                this.i.ab8 = innerColl;\n            }\n            return this._indicatorTypes;\n        },\n        set: function (v) {\n            if (this._indicatorTypes !== null) {\n                this._indicatorTypes._setSyncTarget(null);\n                this._indicatorTypes = null;\n            }\n            var coll = new IgrFinancialIndicatorTypeCollection();\n            this._indicatorTypes = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(FinancialIndicatorType_$type);\n            var innerColl = this.i.ab8;\n            if (!innerColl) {\n                innerColl = new FinancialIndicatorTypeCollection_internal(0);\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._indicatorTypes._setSyncTarget(syncColl);\n            this.i.ab8 = innerColl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"overlayTypes\", {\n        /**\n         * A collection indicating what financial overlay types to display on the Financial Chart.\n        *\n        * Use the `overlayTypes` property to set types of overlays that will be rendered behind price series in the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \toverlayType =\"PriceChannel\" />\n        * ```\n        */\n        get: function () {\n            if (this._overlayTypes === null) {\n                var coll = new IgrFinancialOverlayTypeCollection();\n                var innerColl = this.i.aca;\n                if (!innerColl) {\n                    innerColl = new FinancialOverlayTypeCollection_internal(0);\n                }\n                this._overlayTypes = coll._fromInner(innerColl);\n                this.i.aca = innerColl;\n            }\n            return this._overlayTypes;\n        },\n        set: function (v) {\n            if (this._overlayTypes !== null) {\n                this._overlayTypes._setSyncTarget(null);\n                this._overlayTypes = null;\n            }\n            var coll = new IgrFinancialOverlayTypeCollection();\n            this._overlayTypes = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(FinancialOverlayType_$type);\n            var innerColl = this.i.aca;\n            if (!innerColl) {\n                innerColl = new FinancialOverlayTypeCollection_internal(0);\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._overlayTypes._setSyncTarget(syncColl);\n            this.i.aca = innerColl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisAbbreviateLargeNumbers\", {\n        /**\n         * Gets or sets whether the large numbers on the Y-axis labels are abbreviated.\n        */\n        get: function () {\n            return this.i.adx;\n        },\n        set: function (v) {\n            this.i.adx = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"resolution\", {\n        /**\n         * Gets or sets the rendering resolution for all series in this chart.\n         * Where n = Resolution, for every n horizontal pixels, combine all items into a single datapoint.  When Resolution = 0, all datapoints will be rendered as graphical objects.  Charts with a higher resolution will have faster performance.\n        */\n        get: function () {\n            return this.i.hn;\n        },\n        set: function (v) {\n            this.i.hn = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"xAxisEnhancedIntervalPreferMoreCategoryLabels\", {\n        /**\n         * Gets or sets whether the x axis enhanced interval management should prefer to show all the labels if possible without collisions for supported types of category axes. This is for use with EnhancedIntervalMinimumCharacters = -1 and axes that have an integral interval.\n        */\n        get: function () {\n            return this.i.adw;\n        },\n        set: function (v) {\n            this.i.adw = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"yAxisEnhancedIntervalPreferMoreCategoryLabels\", {\n        /**\n         * Gets or sets whether the y axis enhanced interval management should prefer to show all the labels if possible without collisions for supported types of category axes. This is for use with EnhancedIntervalMinimumCharacters = -1 and axes that have an integral interval.\n        */\n        get: function () {\n            return this.i.ady;\n        },\n        set: function (v) {\n            this.i.ady = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"zoomSliderType\", {\n        /**\n         * Gets or sets type of series to display in the zoom slider pane.\n        *\n        * Use the `zoomSliderType` property to set a type of all series that will be rendered in the zoom pane, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     zoomSliderType=\"Candle\"\n        *     dataSource={this.data} />\n        * ```\n        */\n        get: function () {\n            return this.i.ab6;\n        },\n        set: function (v) {\n            this.i.ab6 = ensureEnum(FinancialChartZoomSliderType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"negativeBrushes\", {\n        /**\n         * Gets or sets the palette used for coloring negative items of Waterfall chart type.\n        *\n        * Use the `negativeBrushes` property to set a collection of brushes that will be used to render fill area of negative elements in the price pane, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tnegativeBrushes=\"Red\" />\n        * ```\n        */\n        get: function () {\n            return fromBrushCollection(this.i.aa3);\n        },\n        set: function (v) {\n            this.i.aa3 = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"negativeOutlines\", {\n        /**\n         * Brushes to use for drawing negative elements, when using a chart type with contextual coloring, such as Waterfall.\n        *\n        * Use the `negativeOutlines` property to set a collection of brushes that will be used to render outline of negative elements in the price pane, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tnegativeOutlines= \"Green\"/>\n        * ```\n        */\n        get: function () {\n            return fromBrushCollection(this.i.aa4);\n        },\n        set: function (v) {\n            this.i.aa4 = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"overlayBrushes\", {\n        /**\n         * Brushes to use for filling financial overlays.\n        *\n        * Use the `overlayBrushes` property to set a collection of brushes that will be used to render fill area of overlays in the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \toverlayBrushes=\"Green\" />\n        * ```\n        */\n        get: function () {\n            return fromBrushCollection(this.i.aa5);\n        },\n        set: function (v) {\n            this.i.aa5 = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"overlayOutlines\", {\n        /**\n         * Brushes to use for outlining financial overlays.\n        *\n        * Use the `overlayOutlines` property to set a collection of brushes that will be used to render outlines of overlays in the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \toverlayOutlines=\"Red\" />\n        * ```\n        */\n        get: function () {\n            return fromBrushCollection(this.i.aa6);\n        },\n        set: function (v) {\n            this.i.aa6 = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"volumeOutlines\", {\n        /**\n         * Brushes to use for outlining volume series in the volume pane.\n        *\n        * Use the `volumeOutlines` property to set a collection of brushes that will be used to render outline of multiple series in the volume pane of the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tvolumeOutlines=\"Green\" />\n        * ```\n        */\n        get: function () {\n            return fromBrushCollection(this.i.aa8);\n        },\n        set: function (v) {\n            this.i.aa8 = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"volumeBrushes\", {\n        /**\n         * Brushes to use for filling volume series in the volume pane.\n        *\n        * Use the `volumeBrushes` property to set a collection of brushes that will be used to render fill area of multiple series in the volume pane of the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tvolumeBrushes=\"Green\" />\n        * ```\n        */\n        get: function () {\n            return fromBrushCollection(this.i.aa7);\n        },\n        set: function (v) {\n            this.i.aa7 = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorNegativeBrushes\", {\n        /**\n         * Brushes to use for negative elements in financial indicators.\n        *\n        * Use the `indicatorNegativeBrushes` property to set a collection of brushes that will be used to render negative elements of indicators in the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorNegativeBrushes=\"Red\"/>\n        * ```\n        */\n        get: function () {\n            return fromBrushCollection(this.i.aa2);\n        },\n        set: function (v) {\n            this.i.aa2 = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorBrushes\", {\n        /**\n         * Brushes to use for financial indicators.\n        *\n        * Use the `indicatorBrushes` property to set a collection of brushes that will be used to render positive elements of indicators in the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorBrushes=\"Green\" />\n        * ```\n        */\n        get: function () {\n            return fromBrushCollection(this.i.aa1);\n        },\n        set: function (v) {\n            this.i.aa1 = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"volumeThickness\", {\n        /**\n         * The outline thickness of volume series in the volume pane.\n        *\n        * Use the `volumeThickness` property to set a number that will be used to render outline thickness of all series in the volume pane, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tvolumeThickness= {2.5}/>\n        * ```\n        */\n        get: function () {\n            return this.i.aew;\n        },\n        set: function (v) {\n            this.i.aew = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"overlayThickness\", {\n        /**\n         * The outline thickness of financial overlays.\n        *\n        * Use the `overlayThickness` property to set a number that will be used to render outline thickness of all overlays in the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \toverlayThickness ={2.5}  />\n        * ```\n        */\n        get: function () {\n            return this.i.aeu;\n        },\n        set: function (v) {\n            this.i.aeu = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"overlayMultiplier\", {\n        /**\n         * The multiplier of financial overlay, e.g. BollingerBands overlay.\n        */\n        get: function () {\n            return this.i.aet;\n        },\n        set: function (v) {\n            this.i.aet = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorThickness\", {\n        /**\n         * The outline or stroke thickness of financial indicators.\n        *\n        * Use the `indicatorThickness` property to set a number that will be used to render outline thickness of all indicators in the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorThickness={2.5}  />\n        * ```\n        */\n        get: function () {\n            return this.i.aes;\n        },\n        set: function (v) {\n            this.i.aes = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorDisplayTypes\", {\n        /**\n         * The display types of financial indicators.\n        *\n        * Use the `indicatorDisplayTypes` property to set display types that will determine whether render all indicators as area, lines, or columns in the Financial Chart control, e.g.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorDisplayTypes=\"line\" />\n        * ```\n        */\n        get: function () {\n            if (this._indicatorDisplayTypes === null) {\n                var coll = new IgrIndicatorDisplayTypeCollection();\n                var innerColl = this.i.ack;\n                if (!innerColl) {\n                    innerColl = new IndicatorDisplayTypeCollection_internal();\n                }\n                this._indicatorDisplayTypes = coll._fromInner(innerColl);\n                this.i.ack = innerColl;\n            }\n            return this._indicatorDisplayTypes;\n        },\n        set: function (v) {\n            if (this._indicatorDisplayTypes !== null) {\n                this._indicatorDisplayTypes._setSyncTarget(null);\n                this._indicatorDisplayTypes = null;\n            }\n            var coll = new IgrIndicatorDisplayTypeCollection();\n            this._indicatorDisplayTypes = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(IndicatorDisplayType_$type);\n            var innerColl = this.i.ack;\n            if (!innerColl) {\n                innerColl = new IndicatorDisplayTypeCollection_internal();\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._indicatorDisplayTypes._setSyncTarget(syncColl);\n            this.i.ack = innerColl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorPeriod\", {\n        /**\n         * The period of financial indicators, where applicable.\n        *\n        * The `indicatorPeriod` property applies to only the `BollingerBands` overlay as well as to these indicators types: `AverageDirectionalIndex`, `AverageTrueRange`, `BollingerBandWidth`, `ChaikinVolatility`, `CommodityChannelIndex`, `DetrendedPriceOscillator`, `FastStochasticOscillator`, `ForceIndex`, `FullStochasticOscillator`, `MoneyFlowIndex`, `IgrPriceChannelOverlay`, `RateOfChangeAndMomentum`, `RelativeStrengthIndex`, `SlowStochasticOscillator`, `StandardDeviation`, `StochRSI`, `TRIX`, `WilliamsPercentR`\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorPeriod={8} />\n        * ```\n        */\n        get: function () {\n            return this.i.afi;\n        },\n        set: function (v) {\n            this.i.afi = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorMultiplier\", {\n        /**\n         * The multiplier of financial indicators, e.g. BollingerBandWidth indicator.\n        *\n        * The `indicatorMultiplier` property applies to only to BollingerBandWidth indicator type.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorMultiplier= {8} />\n        * ```\n        */\n        get: function () {\n            return this.i.aer;\n        },\n        set: function (v) {\n            this.i.aer = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorSmoothingPeriod\", {\n        /**\n         * The smoothing period of financial indicators, where applicable.\n        *\n        * The `indicatorSmoothingPeriod` property applies to only to `FullStochasticOscillator` indicator type.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorSmoothingPeriod={8}     />\n        * ```\n        */\n        get: function () {\n            return this.i.afl;\n        },\n        set: function (v) {\n            this.i.afl = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorShortPeriod\", {\n        /**\n         * The short period of financial indicators, where applicable.\n        *\n        * The `indicatorShortPeriod` property applies only to these indicator types:\n        *\n        * -   AbsoluteVolumeOscillator,\n        * -   ChaikinOscillator,\n        * -   MovingAverageConvergenceDivergence,\n        * -   PercentagePriceOscillator,\n        * -   PercentageVolumeOscillator,\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorShortPeriod={8} />\n        * ```\n        */\n        get: function () {\n            return this.i.afj;\n        },\n        set: function (v) {\n            this.i.afj = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorLongPeriod\", {\n        /**\n         * The long period of financial indicators, where applicable.\n        *\n        * The `indicatorLongPeriod` property applies only to these indicator types:\n        *\n        * -   AbsoluteVolumeOscillator,\n        * -   ChaikinOscillator,\n        * -   MovingAverageConvergenceDivergence,\n        * -   PercentagePriceOscillator,\n        * -   PercentageVolumeOscillator,\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorLongPeriod={8} />\n        * ```\n        */\n        get: function () {\n            return this.i.afh;\n        },\n        set: function (v) {\n            this.i.afh = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"indicatorSignalPeriod\", {\n        /**\n         * The signal period of financial indicators, where applicable.\n        *\n        * The `indicatorSignalPeriod` property applies to only to MovingAverageConvergenceDivergence indicator type.\n        *\n        * ```ts\n        * <IgrFinancialChart\n        *     width=\"100%\"\n        *     height=\"400px\"\n        *     dataSource={this.data}\n        * \tindicatorSignalPeriod ={8} />\n        * ```\n        */\n        get: function () {\n            return this.i.afk;\n        },\n        set: function (v) {\n            this.i.afk = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"rangeSelectorOptions\", {\n        /**\n         * A FinancialChartRangeSelectorOptionCollection containing the available range selector options on the toolbar.\n        */\n        get: function () {\n            if (this._rangeSelectorOptions === null) {\n                var coll = new IgrFinancialChartRangeSelectorOptionCollection();\n                var innerColl = this.i.abq;\n                if (!innerColl) {\n                    innerColl = new FinancialChartRangeSelectorOptionCollection_internal(0);\n                }\n                this._rangeSelectorOptions = coll._fromInner(innerColl);\n                this.i.abq = innerColl;\n            }\n            return this._rangeSelectorOptions;\n        },\n        set: function (v) {\n            if (this._rangeSelectorOptions !== null) {\n                this._rangeSelectorOptions._setSyncTarget(null);\n                this._rangeSelectorOptions = null;\n            }\n            var coll = new IgrFinancialChartRangeSelectorOptionCollection();\n            this._rangeSelectorOptions = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(FinancialChartRangeSelectorOption_$type);\n            var innerColl = this.i.abq;\n            if (!innerColl) {\n                innerColl = new FinancialChartRangeSelectorOptionCollection_internal(0);\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._rangeSelectorOptions._setSyncTarget(syncColl);\n            this.i.abq = innerColl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"customIndicatorNames\", {\n        /**\n         * The names of custom indicators to add to the chart.\n         * When CustomIndicatorNames is set, the ApplyCustomIndicators event will be raised for each custom indicator name.\n        */\n        get: function () {\n            if (this._customIndicatorNames === null) {\n                var coll = new IgrCustomIndicatorNameCollection();\n                var innerColl = this.i.customIndicatorNames;\n                if (!innerColl) {\n                    innerColl = new CustomIndicatorNameCollection_internal(0);\n                }\n                this._customIndicatorNames = coll._fromInner(innerColl);\n                this.i.customIndicatorNames = innerColl;\n            }\n            return this._customIndicatorNames;\n        },\n        set: function (v) {\n            if (this._customIndicatorNames !== null) {\n                this._customIndicatorNames._setSyncTarget(null);\n                this._customIndicatorNames = null;\n            }\n            var coll = new IgrCustomIndicatorNameCollection();\n            this._customIndicatorNames = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(String_$type);\n            var innerColl = this.i.customIndicatorNames;\n            if (!innerColl) {\n                innerColl = new CustomIndicatorNameCollection_internal(0);\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._customIndicatorNames._setSyncTarget(syncColl);\n            this.i.customIndicatorNames = innerColl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"isVerticalZoomEnabled\", {\n        get: function () {\n            return this.i.e6;\n        },\n        set: function (v) {\n            this.i.e6 = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"zoomSliderXAxisMajorStroke\", {\n        /**\n         * Gets or sets stroke brush of major gridlines on x-axis of the zoom slider pane\n        */\n        get: function () {\n            return brushToString(this.i.ajr);\n        },\n        set: function (v) {\n            this.i.ajr = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"zoomSliderXAxisMajorStrokeThickness\", {\n        /**\n         * Gets or sets thickness of major gridlines on x-axis of the zoom slider pane\n        */\n        get: function () {\n            return this.i.ae3;\n        },\n        set: function (v) {\n            this.i.ae3 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"isLegendVisible\", {\n        /**\n         * Gets or sets weather or not a legend is visible between toolbar and chart's plot area\n        */\n        get: function () {\n            return this.i.ado;\n        },\n        set: function (v) {\n            this.i.ado = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"xAxisMinimumValue\", {\n        /**\n         * Gets or sets minimum value on x-axis\n        */\n        get: function () {\n            return this.i.aee;\n        },\n        set: function (v) {\n            this.i.aee = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrFinancialChart.prototype, \"xAxisMaximumValue\", {\n        /**\n         * Gets or sets maximum value on x-axis\n        */\n        get: function () {\n            return this.i.aed;\n        },\n        set: function (v) {\n            this.i.aed = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrFinancialChart.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.indicatorTypes != null && this.indicatorTypes.findByName && this.indicatorTypes.findByName(name)) {\n            return this.indicatorTypes.findByName(name);\n        }\n        if (this.overlayTypes != null && this.overlayTypes.findByName && this.overlayTypes.findByName(name)) {\n            return this.overlayTypes.findByName(name);\n        }\n        if (this.indicatorDisplayTypes != null && this.indicatorDisplayTypes.findByName && this.indicatorDisplayTypes.findByName(name)) {\n            return this.indicatorDisplayTypes.findByName(name);\n        }\n        if (this.rangeSelectorOptions != null && this.rangeSelectorOptions.findByName && this.rangeSelectorOptions.findByName(name)) {\n            return this.rangeSelectorOptions.findByName(name);\n        }\n        if (this.xAxisBreaks != null && this.xAxisBreaks.findByName && this.xAxisBreaks.findByName(name)) {\n            return this.xAxisBreaks.findByName(name);\n        }\n        return null;\n    };\n    /**\n * Called by the UI framework to provide a UI container for rendering this control.\n\r\n* @param container  * The UI container element.\n*/\n    IgrFinancialChart.prototype.provideContainer = function (container) {\n        this.i.provideContainer(container);\n    };\n    IgrFinancialChart.prototype.notifyInsertItem = function (source_, index, newItem) {\n        this.i.qf(source_, index, newItem);\n    };\n    IgrFinancialChart.prototype.notifyRemoveItem = function (source_, index, oldItem) {\n        this.i.qg(source_, index, oldItem);\n    };\n    IgrFinancialChart.prototype.notifyClearItems = function (source_) {\n        this.i.qe(source_);\n    };\n    IgrFinancialChart.prototype.notifySetItem = function (source_, index, oldItem, newItem) {\n        this.i.qi(source_, index, oldItem, newItem);\n    };\n    /**\n     * Returns visuals as a serialized string.\n    \r\n    */\n    IgrFinancialChart.prototype.exportSerializedVisualData = function () {\n        var iv = this.i.af7();\n        return (iv);\n    };\n    Object.defineProperty(IgrFinancialChart.prototype, \"applyCustomIndicators\", {\n        /**\n         * Event raised by the chart when custom indicator data is needed from the application.\n         * During series rendering, event will be raised once for each value in the CustomIndicatorNames collection.\n        */\n        get: function () {\n            return this._applyCustomIndicators;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._applyCustomIndicators_wrapped !== null) {\n                this.i.applyCustomIndicators = delegateRemove(this.i.applyCustomIndicators, this._applyCustomIndicators_wrapped);\n                this._applyCustomIndicators_wrapped = null;\n                this._applyCustomIndicators = null;\n            }\n            this._applyCustomIndicators = ev;\n            this._applyCustomIndicators_wrapped = function (o, e) {\n                var outerArgs = new IgrFinancialChartCustomIndicatorArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeApplyCustomIndicators) {\n                    _this.beforeApplyCustomIndicators(_this, outerArgs);\n                }\n                if (_this._applyCustomIndicators) {\n                    _this._applyCustomIndicators(_this, outerArgs);\n                }\n            };\n            this.i.applyCustomIndicators = delegateCombine(this.i.applyCustomIndicators, this._applyCustomIndicators_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrFinancialChart;\n}(IgrXYChart));\nexport { IgrFinancialChart };\n"]},"metadata":{},"sourceType":"module"}