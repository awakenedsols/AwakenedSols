{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrHorizontalStackedSeriesBase } from \"./igr-horizontal-stacked-series-base\";\nimport { StackedLineSeries } from \"./StackedLineSeries\";\n/**\n * Represents a stacked series, where the points in each series are connected with a line.\n*/\n\nvar IgrStackedLineSeries =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrStackedLineSeries, _super);\n\n  function IgrStackedLineSeries(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrStackedLineSeries.prototype.createImplementation = function () {\n    return new StackedLineSeries();\n  };\n\n  Object.defineProperty(IgrStackedLineSeries.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrStackedLineSeries.prototype, \"isLineOnly\", {\n    /**\n     * Gets whether the current series shows only line shapes.\n    */\n    get: function () {\n      return this.i.d1;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrStackedLineSeries;\n}(IgrHorizontalStackedSeriesBase);\n\nexport { IgrStackedLineSeries };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-stacked-line-series.js"],"names":["__extends","IgrHorizontalStackedSeriesBase","StackedLineSeries","IgrStackedLineSeries","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","d1"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,8BAAT,QAA+C,sCAA/C;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA;AACA;AACA;;AACA,IAAIC,oBAAoB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACtEJ,EAAAA,SAAS,CAACG,oBAAD,EAAuBC,MAAvB,CAAT;;AACA,WAASD,oBAAT,CAA8BE,KAA9B,EAAqC;AACjC,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDF,EAAAA,oBAAoB,CAACI,SAArB,CAA+BC,oBAA/B,GAAsD,YAAY;AAC9D,WAAO,IAAIN,iBAAJ,EAAP;AACH,GAFD;;AAGAO,EAAAA,MAAM,CAACC,cAAP,CAAsBP,oBAAoB,CAACI,SAA3C,EAAsD,GAAtD,EAA2D;AACvD;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANsD;AAOvDC,IAAAA,UAAU,EAAE,KAP2C;AAQvDC,IAAAA,YAAY,EAAE;AARyC,GAA3D;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,oBAAoB,CAACI,SAA3C,EAAsD,YAAtD,EAAoE;AAChE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOC,EAAd;AACH,KAN+D;AAOhEH,IAAAA,UAAU,EAAE,KAPoD;AAQhEC,IAAAA,YAAY,EAAE;AARkD,GAApE;AAUA,SAAOX,oBAAP;AACH,CA7BuD,CA6BtDF,8BA7BsD,CAAxD;;AA8BA,SAASE,oBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrHorizontalStackedSeriesBase } from \"./igr-horizontal-stacked-series-base\";\nimport { StackedLineSeries } from \"./StackedLineSeries\";\n/**\n * Represents a stacked series, where the points in each series are connected with a line.\n*/\nvar IgrStackedLineSeries = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrStackedLineSeries, _super);\n    function IgrStackedLineSeries(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrStackedLineSeries.prototype.createImplementation = function () {\n        return new StackedLineSeries();\n    };\n    Object.defineProperty(IgrStackedLineSeries.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrStackedLineSeries.prototype, \"isLineOnly\", {\n        /**\n         * Gets whether the current series shows only line shapes.\n        */\n        get: function () {\n            return this.i.d1;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrStackedLineSeries;\n}(IgrHorizontalStackedSeriesBase));\nexport { IgrStackedLineSeries };\n"]},"metadata":{},"sourceType":"module"}