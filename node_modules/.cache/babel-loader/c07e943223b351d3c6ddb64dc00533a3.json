{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\nimport { IDetectsCollisions_$type } from \"./IDetectsCollisions\";\n/**\n * @hidden\n */\n\nvar NonCollisionAvoider =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(NonCollisionAvoider, _super);\n\n  function NonCollisionAvoider() {\n    return _super.call(this) || this;\n  }\n\n  Object.defineProperty(NonCollisionAvoider, \"b\", {\n    get: function () {\n      if (NonCollisionAvoider.a == null) {\n        NonCollisionAvoider.a = new NonCollisionAvoider();\n      }\n\n      return NonCollisionAvoider.a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  NonCollisionAvoider.prototype.clear = function () {};\n\n  NonCollisionAvoider.prototype.tryAdd = function (a) {\n    return true;\n  };\n\n  NonCollisionAvoider.$t = markType(NonCollisionAvoider, 'NonCollisionAvoider', Base.$, [IDetectsCollisions_$type]);\n  NonCollisionAvoider.a = null;\n  return NonCollisionAvoider;\n}(Base);\n\nexport { NonCollisionAvoider };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/NonCollisionAvoider.js"],"names":["__extends","Base","markType","IDetectsCollisions_$type","NonCollisionAvoider","_super","call","Object","defineProperty","get","a","enumerable","configurable","prototype","clear","tryAdd","$t","$"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,qBAA/B;AACA,SAASC,wBAAT,QAAyC,sBAAzC;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACrEL,EAAAA,SAAS,CAACI,mBAAD,EAAsBC,MAAtB,CAAT;;AACA,WAASD,mBAAT,GAA+B;AAC3B,WAAOC,MAAM,CAACC,IAAP,CAAY,IAAZ,KAAqB,IAA5B;AACH;;AACDC,EAAAA,MAAM,CAACC,cAAP,CAAsBJ,mBAAtB,EAA2C,GAA3C,EAAgD;AAC5CK,IAAAA,GAAG,EAAE,YAAY;AACb,UAAIL,mBAAmB,CAACM,CAApB,IAAyB,IAA7B,EAAmC;AAC/BN,QAAAA,mBAAmB,CAACM,CAApB,GAAwB,IAAIN,mBAAJ,EAAxB;AACH;;AACD,aAAOA,mBAAmB,CAACM,CAA3B;AACH,KAN2C;AAO5CC,IAAAA,UAAU,EAAE,KAPgC;AAQ5CC,IAAAA,YAAY,EAAE;AAR8B,GAAhD;;AAUAR,EAAAA,mBAAmB,CAACS,SAApB,CAA8BC,KAA9B,GAAsC,YAAY,CACjD,CADD;;AAEAV,EAAAA,mBAAmB,CAACS,SAApB,CAA8BE,MAA9B,GAAuC,UAAUL,CAAV,EAAa;AAChD,WAAO,IAAP;AACH,GAFD;;AAGAN,EAAAA,mBAAmB,CAACY,EAApB,GAAyBd,QAAQ,CAACE,mBAAD,EAAsB,qBAAtB,EAA6CH,IAAI,CAACgB,CAAlD,EAAqD,CAACd,wBAAD,CAArD,CAAjC;AACAC,EAAAA,mBAAmB,CAACM,CAApB,GAAwB,IAAxB;AACA,SAAON,mBAAP;AACH,CAvBsD,CAuBrDH,IAvBqD,CAAvD;;AAwBA,SAASG,mBAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"igniteui-react-core\";\nimport { IDetectsCollisions_$type } from \"./IDetectsCollisions\";\n/**\n * @hidden\n */\nvar NonCollisionAvoider = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(NonCollisionAvoider, _super);\n    function NonCollisionAvoider() {\n        return _super.call(this) || this;\n    }\n    Object.defineProperty(NonCollisionAvoider, \"b\", {\n        get: function () {\n            if (NonCollisionAvoider.a == null) {\n                NonCollisionAvoider.a = new NonCollisionAvoider();\n            }\n            return NonCollisionAvoider.a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    NonCollisionAvoider.prototype.clear = function () {\n    };\n    NonCollisionAvoider.prototype.tryAdd = function (a) {\n        return true;\n    };\n    NonCollisionAvoider.$t = markType(NonCollisionAvoider, 'NonCollisionAvoider', Base.$, [IDetectsCollisions_$type]);\n    NonCollisionAvoider.a = null;\n    return NonCollisionAvoider;\n}(Base));\nexport { NonCollisionAvoider };\n"]},"metadata":{},"sourceType":"module"}