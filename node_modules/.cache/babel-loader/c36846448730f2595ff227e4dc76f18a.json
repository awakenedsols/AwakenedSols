{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Description } from \"./Description\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar DataGridComparisonOperatorSelectorDescription =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DataGridComparisonOperatorSelectorDescription, _super);\n\n  function DataGridComparisonOperatorSelectorDescription() {\n    var _this = _super.call(this) || this;\n\n    _this.n = null;\n    _this.k = null;\n    _this.f = 0;\n    _this.l = null;\n    _this.g = 0;\n    _this.o = null;\n    _this.m = null;\n    _this.j = null;\n    return _this;\n  }\n\n  DataGridComparisonOperatorSelectorDescription.prototype.get_type = function () {\n    return \"DataGridComparisonOperatorSelector\";\n  };\n\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"type\", {\n    get: function () {\n      return this.get_type();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"value\", {\n    get: function () {\n      return this.n;\n    },\n    set: function (a) {\n      this.n = a;\n      this.e(\"Value\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"customFilterID\", {\n    get: function () {\n      return this.k;\n    },\n    set: function (a) {\n      this.k = a;\n      this.e(\"CustomFilterID\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"customFilterIndex\", {\n    get: function () {\n      return this.f;\n    },\n    set: function (a) {\n      this.f = a;\n      this.e(\"CustomFilterIndex\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"dataType\", {\n    get: function () {\n      return this.l;\n    },\n    set: function (a) {\n      this.l = a;\n      this.e(\"DataType\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"maxHeight\", {\n    get: function () {\n      return this.g;\n    },\n    set: function (a) {\n      this.g = a;\n      this.e(\"MaxHeight\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"valueChangedRef\", {\n    get: function () {\n      return this.o;\n    },\n    set: function (a) {\n      this.o = a;\n      this.e(\"ValueChangedRef\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"openingRef\", {\n    get: function () {\n      return this.m;\n    },\n    set: function (a) {\n      this.m = a;\n      this.e(\"OpeningRef\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"closingRef\", {\n    get: function () {\n      return this.j;\n    },\n    set: function (a) {\n      this.j = a;\n      this.e(\"ClosingRef\");\n    },\n    enumerable: false,\n    configurable: true\n  });\n  DataGridComparisonOperatorSelectorDescription.$t = markType(DataGridComparisonOperatorSelectorDescription, 'DataGridComparisonOperatorSelectorDescription', Description.$);\n  return DataGridComparisonOperatorSelectorDescription;\n}(Description);\n\nexport { DataGridComparisonOperatorSelectorDescription };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/DataGridComparisonOperatorSelectorDescription.js"],"names":["__extends","Description","markType","DataGridComparisonOperatorSelectorDescription","_super","_this","call","n","k","f","l","g","o","m","j","prototype","get_type","Object","defineProperty","get","enumerable","configurable","set","a","e","$t","$"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Description } from \"./Description\";\nimport { markType } from \"./type\";\n/**\n * @hidden\n */\nvar DataGridComparisonOperatorSelectorDescription = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DataGridComparisonOperatorSelectorDescription, _super);\n    function DataGridComparisonOperatorSelectorDescription() {\n        var _this = _super.call(this) || this;\n        _this.n = null;\n        _this.k = null;\n        _this.f = 0;\n        _this.l = null;\n        _this.g = 0;\n        _this.o = null;\n        _this.m = null;\n        _this.j = null;\n        return _this;\n    }\n    DataGridComparisonOperatorSelectorDescription.prototype.get_type = function () {\n        return \"DataGridComparisonOperatorSelector\";\n    };\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"type\", {\n        get: function () {\n            return this.get_type();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"value\", {\n        get: function () {\n            return this.n;\n        },\n        set: function (a) {\n            this.n = a;\n            this.e(\"Value\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"customFilterID\", {\n        get: function () {\n            return this.k;\n        },\n        set: function (a) {\n            this.k = a;\n            this.e(\"CustomFilterID\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"customFilterIndex\", {\n        get: function () {\n            return this.f;\n        },\n        set: function (a) {\n            this.f = a;\n            this.e(\"CustomFilterIndex\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"dataType\", {\n        get: function () {\n            return this.l;\n        },\n        set: function (a) {\n            this.l = a;\n            this.e(\"DataType\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"maxHeight\", {\n        get: function () {\n            return this.g;\n        },\n        set: function (a) {\n            this.g = a;\n            this.e(\"MaxHeight\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"valueChangedRef\", {\n        get: function () {\n            return this.o;\n        },\n        set: function (a) {\n            this.o = a;\n            this.e(\"ValueChangedRef\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"openingRef\", {\n        get: function () {\n            return this.m;\n        },\n        set: function (a) {\n            this.m = a;\n            this.e(\"OpeningRef\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(DataGridComparisonOperatorSelectorDescription.prototype, \"closingRef\", {\n        get: function () {\n            return this.j;\n        },\n        set: function (a) {\n            this.j = a;\n            this.e(\"ClosingRef\");\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DataGridComparisonOperatorSelectorDescription.$t = markType(DataGridComparisonOperatorSelectorDescription, 'DataGridComparisonOperatorSelectorDescription', Description.$);\n    return DataGridComparisonOperatorSelectorDescription;\n}(Description));\nexport { DataGridComparisonOperatorSelectorDescription };\n"]},"metadata":{},"sourceType":"module"}