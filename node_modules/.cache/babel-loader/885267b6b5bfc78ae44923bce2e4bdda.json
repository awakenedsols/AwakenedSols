{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType, getInstanceType } from \"igniteui-react-core\";\nimport { IOverlayProxy_$type } from \"./IOverlayProxy\";\n/**\n * @hidden\n */\n\nvar OverlayProxy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(OverlayProxy, _super);\n\n  function OverlayProxy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  OverlayProxy.prototype.matchesType = function (a) {\n    if (a.dr) {\n      return true;\n    }\n\n    return false;\n  };\n\n  OverlayProxy.prototype.setCloseMemberPath = function (a, b) {\n    a.sg = b;\n  };\n\n  OverlayProxy.prototype.setHighMemberPath = function (a, b) {\n    a.sj = b;\n  };\n\n  OverlayProxy.prototype.setLowMemberPath = function (a, b) {\n    a.so = b;\n  };\n\n  OverlayProxy.prototype.setMultiplier = function (a, b) {\n    if (getInstanceType(a).typeName == \"BollingerBandsOverlay\") {\n      var s_ = a;\n      var p_ = b;\n      s_['multiplier'] = p_;\n    }\n  };\n\n  OverlayProxy.prototype.setOpenMemberPath = function (a, b) {\n    a.ss = b;\n  };\n\n  OverlayProxy.prototype.setVolumeMemberPath = function (a, b) {\n    a.sw = b;\n  };\n\n  OverlayProxy.prototype.setXAxis = function (a, b) {\n    a.qc = b;\n  };\n\n  OverlayProxy.prototype.setYAxis = function (a, b) {\n    a.qy = b;\n  };\n\n  OverlayProxy.$t = markType(OverlayProxy, 'OverlayProxy', Base.$, [IOverlayProxy_$type]);\n  return OverlayProxy;\n}(Base);\n\nexport { OverlayProxy };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/OverlayProxy.js"],"names":["__extends","Base","markType","getInstanceType","IOverlayProxy_$type","OverlayProxy","_super","apply","arguments","prototype","matchesType","a","dr","setCloseMemberPath","b","sg","setHighMemberPath","sj","setLowMemberPath","so","setMultiplier","typeName","s_","p_","setOpenMemberPath","ss","setVolumeMemberPath","sw","setXAxis","qc","setYAxis","qy","$t","$"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,eAAzB,QAAgD,qBAAhD;AACA,SAASC,mBAAT,QAAoC,iBAApC;AACA;AACA;AACA;;AACA,IAAIC,YAAY;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC9DN,EAAAA,SAAS,CAACK,YAAD,EAAeC,MAAf,CAAT;;AACA,WAASD,YAAT,GAAwB;AACpB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,YAAY,CAACI,SAAb,CAAuBC,WAAvB,GAAqC,UAAUC,CAAV,EAAa;AAC9C,QAAIA,CAAC,CAACC,EAAN,EAAU;AACN,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GALD;;AAMAP,EAAAA,YAAY,CAACI,SAAb,CAAuBI,kBAAvB,GAA4C,UAAUF,CAAV,EAAaG,CAAb,EAAgB;AACxDH,IAAAA,CAAC,CAACI,EAAF,GAAOD,CAAP;AACH,GAFD;;AAGAT,EAAAA,YAAY,CAACI,SAAb,CAAuBO,iBAAvB,GAA2C,UAAUL,CAAV,EAAaG,CAAb,EAAgB;AACvDH,IAAAA,CAAC,CAACM,EAAF,GAAOH,CAAP;AACH,GAFD;;AAGAT,EAAAA,YAAY,CAACI,SAAb,CAAuBS,gBAAvB,GAA0C,UAAUP,CAAV,EAAaG,CAAb,EAAgB;AACtDH,IAAAA,CAAC,CAACQ,EAAF,GAAOL,CAAP;AACH,GAFD;;AAGAT,EAAAA,YAAY,CAACI,SAAb,CAAuBW,aAAvB,GAAuC,UAAUT,CAAV,EAAaG,CAAb,EAAgB;AACnD,QAAIX,eAAe,CAACQ,CAAD,CAAf,CAAmBU,QAAnB,IAA+B,uBAAnC,EAA4D;AACxD,UAAIC,EAAE,GAAGX,CAAT;AACA,UAAIY,EAAE,GAAGT,CAAT;AACAQ,MAAAA,EAAE,CAAC,YAAD,CAAF,GAAmBC,EAAnB;AACH;AACJ,GAND;;AAOAlB,EAAAA,YAAY,CAACI,SAAb,CAAuBe,iBAAvB,GAA2C,UAAUb,CAAV,EAAaG,CAAb,EAAgB;AACvDH,IAAAA,CAAC,CAACc,EAAF,GAAOX,CAAP;AACH,GAFD;;AAGAT,EAAAA,YAAY,CAACI,SAAb,CAAuBiB,mBAAvB,GAA6C,UAAUf,CAAV,EAAaG,CAAb,EAAgB;AACzDH,IAAAA,CAAC,CAACgB,EAAF,GAAOb,CAAP;AACH,GAFD;;AAGAT,EAAAA,YAAY,CAACI,SAAb,CAAuBmB,QAAvB,GAAkC,UAAUjB,CAAV,EAAaG,CAAb,EAAgB;AAC9CH,IAAAA,CAAC,CAACkB,EAAF,GAAOf,CAAP;AACH,GAFD;;AAGAT,EAAAA,YAAY,CAACI,SAAb,CAAuBqB,QAAvB,GAAkC,UAAUnB,CAAV,EAAaG,CAAb,EAAgB;AAC9CH,IAAAA,CAAC,CAACoB,EAAF,GAAOjB,CAAP;AACH,GAFD;;AAGAT,EAAAA,YAAY,CAAC2B,EAAb,GAAkB9B,QAAQ,CAACG,YAAD,EAAe,cAAf,EAA+BJ,IAAI,CAACgC,CAApC,EAAuC,CAAC7B,mBAAD,CAAvC,CAA1B;AACA,SAAOC,YAAP;AACH,CAzC+C,CAyC9CJ,IAzC8C,CAAhD;;AA0CA,SAASI,YAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType, getInstanceType } from \"igniteui-react-core\";\nimport { IOverlayProxy_$type } from \"./IOverlayProxy\";\n/**\n * @hidden\n */\nvar OverlayProxy = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(OverlayProxy, _super);\n    function OverlayProxy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    OverlayProxy.prototype.matchesType = function (a) {\n        if (a.dr) {\n            return true;\n        }\n        return false;\n    };\n    OverlayProxy.prototype.setCloseMemberPath = function (a, b) {\n        a.sg = b;\n    };\n    OverlayProxy.prototype.setHighMemberPath = function (a, b) {\n        a.sj = b;\n    };\n    OverlayProxy.prototype.setLowMemberPath = function (a, b) {\n        a.so = b;\n    };\n    OverlayProxy.prototype.setMultiplier = function (a, b) {\n        if (getInstanceType(a).typeName == \"BollingerBandsOverlay\") {\n            var s_ = a;\n            var p_ = b;\n            s_['multiplier'] = p_;\n        }\n    };\n    OverlayProxy.prototype.setOpenMemberPath = function (a, b) {\n        a.ss = b;\n    };\n    OverlayProxy.prototype.setVolumeMemberPath = function (a, b) {\n        a.sw = b;\n    };\n    OverlayProxy.prototype.setXAxis = function (a, b) {\n        a.qc = b;\n    };\n    OverlayProxy.prototype.setYAxis = function (a, b) {\n        a.qy = b;\n    };\n    OverlayProxy.$t = markType(OverlayProxy, 'OverlayProxy', Base.$, [IOverlayProxy_$type]);\n    return OverlayProxy;\n}(Base));\nexport { OverlayProxy };\n"]},"metadata":{},"sourceType":"module"}