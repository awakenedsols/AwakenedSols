{"ast":null,"code":"import { delegateCombine, delegateRemove } from './type';\nimport { ShapefileConverter as ShapefileConverter_internal } from \"./ShapefileConverter\";\nimport { fromRect, toRect, ensureBool } from \"./componentUtil\";\nimport { IgrAsyncCompletedEventArgs } from './igr-async-completed-event-args';\nimport { IgrShapefileRecord } from './igr-shapefile-record';\nimport { IgrShapeFilterRecordEventArgs } from './igr-shape-filter-record-event-args';\n/**\n * Class used to convert Shapefiles into CLR objects.\n*/\n\nvar IgrShapeDataSource =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IgrShapeDataSource() {\n    //@@ZoneRunner\n    this._importPending = null;\n    this._importPending_wrapped = null;\n    this._importCompleted = null;\n    this._importCompleted_wrapped = null;\n    this._filter = null;\n    this._filter_wrapped = null;\n    this._implementation = this.createImplementation();\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  }\n\n  IgrShapeDataSource.prototype.createImplementation = function () {\n    return new ShapefileConverter_internal();\n  };\n\n  Object.defineProperty(IgrShapeDataSource.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrShapeDataSource.prototype.onImplementationCreated = function () {};\n\n  IgrShapeDataSource.prototype._provideImplementation = function (i) {\n    this._implementation = i;\n    this._implementation.externalObject = this;\n    this.onImplementationCreated();\n  }; //   private _databaseSource: string;\n  ///**\n  // * Gets the string Uri path of the .dbf portion of the Shapefile\n  //*/\n  //   get databaseSource(): string {\n  //       return this._databaseSource;\n  //   }\n  ///**\n  // * Sets the string Uri path of the .dbf portion of the Shapefile\n  //*/\n  //   set databaseSource(v: string) {\n  //       this._databaseSource = v;\n  //   }\n  //   private _shapefileSource: string;\n  ///**\n  // * Gets the string Uri path of the .shp portion of the Shapefile\n  //*/\n  //   get shapefileSource(): string {\n  //       return this._shapefileSource;\n  //   }\n  ///**\n  // * Sets the string Uri path of the .shp portion of the Shapefile\n  //*/\n  //   set shapefileSource(v: string) {\n  //       this._shapefileSource = v;\n  //   }\n\n\n  IgrShapeDataSource.prototype.dataBind = function () {//this.i.shapefileSource = null;\n    //this.i.databaseSource = null;\n    //if (this._shapefileSource && this._databaseSource) {\n    //    this.i.shapefileSource = new Uri(0, this._shapefileSource);\n    //    this.i.databaseSource = new Uri(0, this._databaseSource);\n    //}\n  };\n  /**\n  * Gets the point data.\n  */\n\n\n  IgrShapeDataSource.prototype.getPointData = function () {\n    var list = this.i.getPointData();\n    var ret = [];\n\n    for (var i = 0; i < list.count; i++) {\n      var shapeRecord = list.item(i);\n\n      if (!shapeRecord.externalObject) {\n        var e = new IgrShapefileRecord();\n        e._implementation = shapeRecord;\n        shapeRecord.externalObject = e;\n      }\n\n      ret.push(shapeRecord.externalObject);\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(IgrShapeDataSource.prototype, \"name\", {\n    get: function () {\n      return this.i.name;\n    },\n    set: function (v) {\n      this.i.name = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeDataSource.prototype, \"worldRect\", {\n    /**\n     * Gets the world bounding rectangle, as read from the header of the Shapefile.\n    */\n    get: function () {\n      return fromRect(this.i.worldRect);\n    },\n    set: function (v) {\n      this.i.worldRect = toRect(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeDataSource.prototype, \"computedWorldRect\", {\n    /**\n     * Gets the world bounding rectangle, based on the filtered shapes\n    */\n    get: function () {\n      return fromRect(this.i.computedWorldRect);\n    },\n    set: function (v) {\n      this.i.computedWorldRect = toRect(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeDataSource.prototype, \"shapeType\", {\n    /**\n     * Gets the shape type, as read from the header of the Shapefile.\n    */\n    get: function () {\n      return this.i.shapeType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeDataSource.prototype, \"shapeHeader\", {\n    /**\n     * Gets the header of the Shapefile.\n    */\n    get: function () {\n      return this.i.shapeHeader;\n    },\n    set: function (v) {\n      this.i.shapeHeader = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeDataSource.prototype, \"deferImportCompleted\", {\n    /**\n     * The Uri of the .shp portion of the Shapefile.\n    */\n    get: function () {\n      return this.i.deferImportCompleted;\n    },\n    set: function (v) {\n      this.i.deferImportCompleted = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeDataSource.prototype, \"shapefileSource\", {\n    /**\n     * The Uri of the .shp portion of the Shapefile.\n    */\n    get: function () {\n      return this.i.shapefileSource;\n    },\n    set: function (v) {\n      this.i.shapefileSource = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeDataSource.prototype, \"databaseSource\", {\n    /**\n     * The Uri of the .dbf portion of the Shapefile.\n    */\n    get: function () {\n      return this.i.databaseSource;\n    },\n    set: function (v) {\n      this.i.databaseSource = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeDataSource.prototype, \"count\", {\n    /**\n     * The total number of ShapefileRecords in the collection.\n    */\n    get: function () {\n      return this.i.count;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrShapeDataSource.prototype.findByName = function (name) {\n    return null;\n  };\n\n  IgrShapeDataSource.prototype.getWorldBounds = function (useComputed) {\n    var iv = this.i.getWorldBounds(useComputed);\n    return fromRect(iv);\n  };\n\n  IgrShapeDataSource.prototype.setWorldBounds = function (setComputed, bounds) {\n    this.i.setWorldBounds(setComputed, toRect(bounds));\n  };\n\n  IgrShapeDataSource.prototype.sendImportCompleted = function () {\n    this.i.sendImportCompleted();\n  };\n\n  IgrShapeDataSource.prototype.getRecordsCount = function () {\n    var iv = this.i.getRecordsCount();\n    return iv;\n  };\n\n  IgrShapeDataSource.prototype.getRecord = function (index) {\n    var iv = this.i.getRecord(index);\n    return iv == null ? null : iv.externalObject;\n  };\n\n  IgrShapeDataSource.prototype.getRecordBounds = function (index) {\n    var iv = this.i.getRecordBounds(index);\n    return fromRect(iv);\n  };\n\n  IgrShapeDataSource.prototype.getRecordFieldNames = function (index) {\n    var iv = this.i.getRecordFieldNames(index);\n    return iv;\n  };\n\n  IgrShapeDataSource.prototype.getRecordValue = function (index, fieldName) {\n    var iv = this.i.getRecordValue(index, fieldName);\n    return iv;\n  };\n\n  IgrShapeDataSource.prototype.removeRecord = function (index) {\n    this.i.removeRecord(index);\n  };\n\n  IgrShapeDataSource.prototype.shiftAllShapes = function (offsetX, offsetY) {\n    this.i.shiftAllShapes(offsetX, offsetY);\n  };\n\n  IgrShapeDataSource.prototype.shiftShapes = function (recordIndex, offsetX, offsetY) {\n    this.i.shiftShapes(recordIndex, offsetX, offsetY);\n  };\n\n  IgrShapeDataSource.prototype.getMaxLongitude = function (recordIndex, useLargestShape, fromLongitude, toLongitude) {\n    var iv = this.i.getMaxLongitude(recordIndex, useLargestShape, fromLongitude, toLongitude);\n    return iv;\n  };\n\n  IgrShapeDataSource.prototype.setRecordValue = function (index, fieldName, value) {\n    this.i.setRecordValue(index, fieldName, value);\n  };\n\n  IgrShapeDataSource.prototype.getRecordValues = function (fieldName) {\n    var iv = this.i.getRecordValues(fieldName);\n    return iv;\n  };\n\n  IgrShapeDataSource.prototype.setRecordValues = function (fieldName, values) {\n    this.i.setRecordValues(fieldName, values);\n  };\n\n  IgrShapeDataSource.prototype.getLargestShapeBoundsForRecord = function (index) {\n    var iv = this.i.getLargestShapeBoundsForRecord(index);\n    return fromRect(iv);\n  };\n\n  Object.defineProperty(IgrShapeDataSource.prototype, \"importPending\", {\n    /**\n     * Event raised when the Shapefile has been imported from both the ShapefileSource and DatabaseSource Uris.\n    */\n    get: function () {\n      return this._importPending;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._importPending_wrapped !== null) {\n        this.i.importPending = delegateRemove(this.i.importPending, this._importPending_wrapped);\n        this._importPending_wrapped = null;\n        this._importPending = null;\n      }\n\n      this._importPending = ev;\n\n      this._importPending_wrapped = function (o, e) {\n        var outerArgs = new IgrAsyncCompletedEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeImportPending) {\n          _this.beforeImportPending(_this, outerArgs);\n        }\n\n        if (_this._importPending) {\n          _this._importPending(_this, outerArgs);\n        }\n      };\n\n      this.i.importPending = delegateCombine(this.i.importPending, this._importPending_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeDataSource.prototype, \"importCompleted\", {\n    /**\n     * Event raised when the Shapefile has been imported from both the ShapefileSource and DatabaseSource Uris.\n    */\n    get: function () {\n      return this._importCompleted;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._importCompleted_wrapped !== null) {\n        this.i.importCompleted = delegateRemove(this.i.importCompleted, this._importCompleted_wrapped);\n        this._importCompleted_wrapped = null;\n        this._importCompleted = null;\n      }\n\n      this._importCompleted = ev;\n\n      this._importCompleted_wrapped = function (o, e) {\n        var outerArgs = new IgrAsyncCompletedEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeImportCompleted) {\n          _this.beforeImportCompleted(_this, outerArgs);\n        }\n\n        if (_this._importCompleted) {\n          _this._importCompleted(_this, outerArgs);\n        }\n      };\n\n      this.i.importCompleted = delegateCombine(this.i.importCompleted, this._importCompleted_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeDataSource.prototype, \"filter\", {\n    get: function () {\n      return this._filter;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._filter_wrapped !== null) {\n        this.i.filter = delegateRemove(this.i.filter, this._filter_wrapped);\n        this._filter_wrapped = null;\n        this._filter = null;\n      }\n\n      this._filter = ev;\n\n      this._filter_wrapped = function (o, e) {\n        var outerArgs = new IgrShapeFilterRecordEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeFilter) {\n          _this.beforeFilter(_this, outerArgs);\n        }\n\n        if (_this._filter) {\n          _this._filter(_this, outerArgs);\n        }\n      };\n\n      this.i.filter = delegateCombine(this.i.filter, this._filter_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrShapeDataSource;\n}();\n\nexport { IgrShapeDataSource };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/igr-shape-data-source.js"],"names":["delegateCombine","delegateRemove","ShapefileConverter","ShapefileConverter_internal","fromRect","toRect","ensureBool","IgrAsyncCompletedEventArgs","IgrShapefileRecord","IgrShapeFilterRecordEventArgs","IgrShapeDataSource","_importPending","_importPending_wrapped","_importCompleted","_importCompleted_wrapped","_filter","_filter_wrapped","_implementation","createImplementation","externalObject","onImplementationCreated","prototype","Object","defineProperty","get","enumerable","configurable","_provideImplementation","i","dataBind","getPointData","list","ret","count","shapeRecord","item","e","push","name","set","v","worldRect","computedWorldRect","shapeType","shapeHeader","deferImportCompleted","shapefileSource","databaseSource","findByName","getWorldBounds","useComputed","iv","setWorldBounds","setComputed","bounds","sendImportCompleted","getRecordsCount","getRecord","index","getRecordBounds","getRecordFieldNames","getRecordValue","fieldName","removeRecord","shiftAllShapes","offsetX","offsetY","shiftShapes","recordIndex","getMaxLongitude","useLargestShape","fromLongitude","toLongitude","setRecordValue","value","getRecordValues","setRecordValues","values","getLargestShapeBoundsForRecord","ev","_this","importPending","o","outerArgs","beforeImportPending","importCompleted","beforeImportCompleted","filter","beforeFilter"],"mappings":"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","sourcesContent":["import { delegateCombine, delegateRemove } from './type';\nimport { ShapefileConverter as ShapefileConverter_internal } from \"./ShapefileConverter\";\nimport { fromRect, toRect, ensureBool } from \"./componentUtil\";\nimport { IgrAsyncCompletedEventArgs } from './igr-async-completed-event-args';\nimport { IgrShapefileRecord } from './igr-shapefile-record';\nimport { IgrShapeFilterRecordEventArgs } from './igr-shape-filter-record-event-args';\n/**\n * Class used to convert Shapefiles into CLR objects.\n*/\nvar IgrShapeDataSource = /** @class */ /*@__PURE__*/ (function () {\n    function IgrShapeDataSource() {\n        //@@ZoneRunner\n        this._importPending = null;\n        this._importPending_wrapped = null;\n        this._importCompleted = null;\n        this._importCompleted_wrapped = null;\n        this._filter = null;\n        this._filter_wrapped = null;\n        this._implementation = this.createImplementation();\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    }\n    IgrShapeDataSource.prototype.createImplementation = function () {\n        return new ShapefileConverter_internal();\n    };\n    Object.defineProperty(IgrShapeDataSource.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrShapeDataSource.prototype.onImplementationCreated = function () {\n    };\n    IgrShapeDataSource.prototype._provideImplementation = function (i) {\n        this._implementation = i;\n        this._implementation.externalObject = this;\n        this.onImplementationCreated();\n    };\n    //   private _databaseSource: string;\n    ///**\n    // * Gets the string Uri path of the .dbf portion of the Shapefile\n    //*/\n    //   get databaseSource(): string {\n    //       return this._databaseSource;\n    //   }\n    ///**\n    // * Sets the string Uri path of the .dbf portion of the Shapefile\n    //*/\n    //   set databaseSource(v: string) {\n    //       this._databaseSource = v;\n    //   }\n    //   private _shapefileSource: string;\n    ///**\n    // * Gets the string Uri path of the .shp portion of the Shapefile\n    //*/\n    //   get shapefileSource(): string {\n    //       return this._shapefileSource;\n    //   }\n    ///**\n    // * Sets the string Uri path of the .shp portion of the Shapefile\n    //*/\n    //   set shapefileSource(v: string) {\n    //       this._shapefileSource = v;\n    //   }\n    IgrShapeDataSource.prototype.dataBind = function () {\n        //this.i.shapefileSource = null;\n        //this.i.databaseSource = null;\n        //if (this._shapefileSource && this._databaseSource) {\n        //    this.i.shapefileSource = new Uri(0, this._shapefileSource);\n        //    this.i.databaseSource = new Uri(0, this._databaseSource);\n        //}\n    };\n    /**\n    * Gets the point data.\n    */\n    IgrShapeDataSource.prototype.getPointData = function () {\n        var list = this.i.getPointData();\n        var ret = [];\n        for (var i = 0; i < list.count; i++) {\n            var shapeRecord = list.item(i);\n            if (!shapeRecord.externalObject) {\n                var e = new IgrShapefileRecord();\n                e._implementation = shapeRecord;\n                shapeRecord.externalObject = e;\n            }\n            ret.push(shapeRecord.externalObject);\n        }\n        return ret;\n    };\n    Object.defineProperty(IgrShapeDataSource.prototype, \"name\", {\n        get: function () {\n            return this.i.name;\n        },\n        set: function (v) {\n            this.i.name = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeDataSource.prototype, \"worldRect\", {\n        /**\n         * Gets the world bounding rectangle, as read from the header of the Shapefile.\n        */\n        get: function () {\n            return fromRect(this.i.worldRect);\n        },\n        set: function (v) {\n            this.i.worldRect = toRect(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeDataSource.prototype, \"computedWorldRect\", {\n        /**\n         * Gets the world bounding rectangle, based on the filtered shapes\n        */\n        get: function () {\n            return fromRect(this.i.computedWorldRect);\n        },\n        set: function (v) {\n            this.i.computedWorldRect = toRect(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeDataSource.prototype, \"shapeType\", {\n        /**\n         * Gets the shape type, as read from the header of the Shapefile.\n        */\n        get: function () {\n            return this.i.shapeType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeDataSource.prototype, \"shapeHeader\", {\n        /**\n         * Gets the header of the Shapefile.\n        */\n        get: function () {\n            return this.i.shapeHeader;\n        },\n        set: function (v) {\n            this.i.shapeHeader = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeDataSource.prototype, \"deferImportCompleted\", {\n        /**\n         * The Uri of the .shp portion of the Shapefile.\n        */\n        get: function () {\n            return this.i.deferImportCompleted;\n        },\n        set: function (v) {\n            this.i.deferImportCompleted = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeDataSource.prototype, \"shapefileSource\", {\n        /**\n         * The Uri of the .shp portion of the Shapefile.\n        */\n        get: function () {\n            return this.i.shapefileSource;\n        },\n        set: function (v) {\n            this.i.shapefileSource = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeDataSource.prototype, \"databaseSource\", {\n        /**\n         * The Uri of the .dbf portion of the Shapefile.\n        */\n        get: function () {\n            return this.i.databaseSource;\n        },\n        set: function (v) {\n            this.i.databaseSource = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeDataSource.prototype, \"count\", {\n        /**\n         * The total number of ShapefileRecords in the collection.\n        */\n        get: function () {\n            return this.i.count;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrShapeDataSource.prototype.findByName = function (name) {\n        return null;\n    };\n    IgrShapeDataSource.prototype.getWorldBounds = function (useComputed) {\n        var iv = this.i.getWorldBounds(useComputed);\n        return fromRect(iv);\n    };\n    IgrShapeDataSource.prototype.setWorldBounds = function (setComputed, bounds) {\n        this.i.setWorldBounds(setComputed, toRect(bounds));\n    };\n    IgrShapeDataSource.prototype.sendImportCompleted = function () {\n        this.i.sendImportCompleted();\n    };\n    IgrShapeDataSource.prototype.getRecordsCount = function () {\n        var iv = this.i.getRecordsCount();\n        return (iv);\n    };\n    IgrShapeDataSource.prototype.getRecord = function (index) {\n        var iv = this.i.getRecord(index);\n        return (iv == null ? null : iv.externalObject);\n    };\n    IgrShapeDataSource.prototype.getRecordBounds = function (index) {\n        var iv = this.i.getRecordBounds(index);\n        return fromRect(iv);\n    };\n    IgrShapeDataSource.prototype.getRecordFieldNames = function (index) {\n        var iv = this.i.getRecordFieldNames(index);\n        return (iv);\n    };\n    IgrShapeDataSource.prototype.getRecordValue = function (index, fieldName) {\n        var iv = this.i.getRecordValue(index, fieldName);\n        return (iv);\n    };\n    IgrShapeDataSource.prototype.removeRecord = function (index) {\n        this.i.removeRecord(index);\n    };\n    IgrShapeDataSource.prototype.shiftAllShapes = function (offsetX, offsetY) {\n        this.i.shiftAllShapes(offsetX, offsetY);\n    };\n    IgrShapeDataSource.prototype.shiftShapes = function (recordIndex, offsetX, offsetY) {\n        this.i.shiftShapes(recordIndex, offsetX, offsetY);\n    };\n    IgrShapeDataSource.prototype.getMaxLongitude = function (recordIndex, useLargestShape, fromLongitude, toLongitude) {\n        var iv = this.i.getMaxLongitude(recordIndex, useLargestShape, fromLongitude, toLongitude);\n        return (iv);\n    };\n    IgrShapeDataSource.prototype.setRecordValue = function (index, fieldName, value) {\n        this.i.setRecordValue(index, fieldName, value);\n    };\n    IgrShapeDataSource.prototype.getRecordValues = function (fieldName) {\n        var iv = this.i.getRecordValues(fieldName);\n        return (iv);\n    };\n    IgrShapeDataSource.prototype.setRecordValues = function (fieldName, values) {\n        this.i.setRecordValues(fieldName, values);\n    };\n    IgrShapeDataSource.prototype.getLargestShapeBoundsForRecord = function (index) {\n        var iv = this.i.getLargestShapeBoundsForRecord(index);\n        return fromRect(iv);\n    };\n    Object.defineProperty(IgrShapeDataSource.prototype, \"importPending\", {\n        /**\n         * Event raised when the Shapefile has been imported from both the ShapefileSource and DatabaseSource Uris.\n        */\n        get: function () {\n            return this._importPending;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._importPending_wrapped !== null) {\n                this.i.importPending = delegateRemove(this.i.importPending, this._importPending_wrapped);\n                this._importPending_wrapped = null;\n                this._importPending = null;\n            }\n            this._importPending = ev;\n            this._importPending_wrapped = function (o, e) {\n                var outerArgs = new IgrAsyncCompletedEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeImportPending) {\n                    _this.beforeImportPending(_this, outerArgs);\n                }\n                if (_this._importPending) {\n                    _this._importPending(_this, outerArgs);\n                }\n            };\n            this.i.importPending = delegateCombine(this.i.importPending, this._importPending_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeDataSource.prototype, \"importCompleted\", {\n        /**\n         * Event raised when the Shapefile has been imported from both the ShapefileSource and DatabaseSource Uris.\n        */\n        get: function () {\n            return this._importCompleted;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._importCompleted_wrapped !== null) {\n                this.i.importCompleted = delegateRemove(this.i.importCompleted, this._importCompleted_wrapped);\n                this._importCompleted_wrapped = null;\n                this._importCompleted = null;\n            }\n            this._importCompleted = ev;\n            this._importCompleted_wrapped = function (o, e) {\n                var outerArgs = new IgrAsyncCompletedEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeImportCompleted) {\n                    _this.beforeImportCompleted(_this, outerArgs);\n                }\n                if (_this._importCompleted) {\n                    _this._importCompleted(_this, outerArgs);\n                }\n            };\n            this.i.importCompleted = delegateCombine(this.i.importCompleted, this._importCompleted_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeDataSource.prototype, \"filter\", {\n        get: function () {\n            return this._filter;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._filter_wrapped !== null) {\n                this.i.filter = delegateRemove(this.i.filter, this._filter_wrapped);\n                this._filter_wrapped = null;\n                this._filter = null;\n            }\n            this._filter = ev;\n            this._filter_wrapped = function (o, e) {\n                var outerArgs = new IgrShapeFilterRecordEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeFilter) {\n                    _this.beforeFilter(_this, outerArgs);\n                }\n                if (_this._filter) {\n                    _this._filter(_this, outerArgs);\n                }\n            };\n            this.i.filter = delegateCombine(this.i.filter, this._filter_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrShapeDataSource;\n}());\nexport { IgrShapeDataSource };\n"]},"metadata":{},"sourceType":"module"}