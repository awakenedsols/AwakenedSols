{"ast":null,"code":"import { __extends, __values } from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { LabelsPosition_$type } from \"./LabelsPosition\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { LeaderLineType_$type } from \"./LeaderLineType\";\nimport { OthersCategoryType_$type } from \"./OthersCategoryType\";\nimport { IgrIndexCollection } from \"./igr-index-collection\";\nimport { SweepDirection_$type } from \"igniteui-react-core\";\nimport { SliceSelectionMode_$type } from \"./SliceSelectionMode\";\nimport { IgrObjectCollection } from \"igniteui-react-core\";\nimport { IgrLabelClickEventArgs } from \"./igr-label-click-event-args\";\nimport { IgrSelectedItemChangingEventArgs } from \"./igr-selected-item-changing-event-args\";\nimport { IgrSelectedItemsChangingEventArgs } from \"./igr-selected-items-changing-event-args\";\nimport { IgrSelectedItemChangedEventArgs } from \"./igr-selected-item-changed-event-args\";\nimport { IgrSelectedItemsChangedEventArgs } from \"./igr-selected-items-changed-event-args\";\nimport { IgrSliceClickEventArgs } from \"./igr-slice-click-event-args\";\nimport { IgrSliceEventArgs } from \"./igr-slice-event-args\";\nimport { TypeRegistrar, Number_$type, Base } from \"igniteui-react-core\";\nimport { NamePatcher, getModifiedProps, isValidProp, ensureEnum, brushToString, stringToBrush, ensureBool, toBrushCollection, fromBrushCollection, arrayFindByName, toSpinal, initializePropertiesFromCss, toPoint } from \"igniteui-react-core\";\nimport { IndexCollection as IndexCollection_internal } from \"./IndexCollection\";\nimport { SyncableObservableCollection$1 } from \"igniteui-react-core\";\nimport { Style } from \"igniteui-react-core\";\nimport { ObjectCollection as ObjectCollection_internal } from \"igniteui-react-core\";\n/**\n * Represents the base class for the pie chart.\n*/\n\nvar IgrPieChartBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrPieChartBase, _super);\n\n  function IgrPieChartBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._explodedSlices = null;\n    _this._selectedItems = null;\n    _this.__p = null;\n    _this._hasUserValues = new Set();\n    _this._stylingContainer = null;\n    _this._stylingParent = null;\n    _this._inStyling = false;\n    _this._labelClick = null;\n    _this._labelClick_wrapped = null;\n    _this._selectedItemChanging = null;\n    _this._selectedItemChanging_wrapped = null;\n    _this._selectedItemsChanging = null;\n    _this._selectedItemsChanging_wrapped = null;\n    _this._selectedItemChanged = null;\n    _this._selectedItemChanged_wrapped = null;\n    _this._selectedItemsChanged = null;\n    _this._selectedItemsChanged_wrapped = null;\n    _this._sliceClick = null;\n    _this._sliceClick_wrapped = null;\n    _this._sliceEnter = null;\n    _this._sliceEnter_wrapped = null;\n    _this._sliceLeave = null;\n    _this._sliceLeave_wrapped = null;\n    _this._sliceHover = null;\n    _this._sliceHover_wrapped = null;\n\n    if (_this._styling) {\n      NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n    }\n\n    _this._implementation = _this.createImplementation();\n    _this._implementation.externalObject = _this;\n\n    _this.onImplementationCreated();\n\n    return _this;\n  }\n\n  IgrPieChartBase.prototype.createImplementation = function () {\n    return null;\n  };\n\n  Object.defineProperty(IgrPieChartBase.prototype, \"i\", {\n    /**\n     * @hidden\n     */\n    get: function () {\n      return this._implementation;\n    }\n    /**\n                               * @hidden\n                               */\n    ,\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrPieChartBase._createFromInternal = function (internal) {\n    if (!internal) {\n      return null;\n    }\n\n    if (!internal.$type) {\n      return null;\n    }\n\n    var name = internal.$type.name;\n    var externalName = \"Igr\" + name;\n\n    if (!TypeRegistrar.isRegistered(externalName)) {\n      return null;\n    }\n\n    return TypeRegistrar.create(externalName);\n  };\n\n  IgrPieChartBase.prototype.onImplementationCreated = function () {};\n\n  IgrPieChartBase.prototype.componentDidMount = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = this.props[p];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  IgrPieChartBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var e_2, _a;\n\n    var mod = getModifiedProps(this.props, nextProps);\n\n    try {\n      for (var _b = __values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = mod[p];\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return true;\n  };\n\n  IgrPieChartBase.prototype.render = function () {\n    return null;\n  };\n\n  Object.defineProperty(IgrPieChartBase.prototype, \"innerExtent\", {\n    /**\n     * Gets or sets the amount of space between the center and the start of the arc. This property should be set between 0 and 1.\n     * If InnerExtent is set to a value greater than 1, it will be interpreted as a percentage, effectively divided by 100.\n    */\n    get: function () {\n      return this.i.c8;\n    },\n    set: function (v) {\n      this.i.c8 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"valueMemberPath\", {\n    /**\n     * Gets or Sets the property name that contains the values.\n    */\n    get: function () {\n      return this.i.fs;\n    },\n    set: function (v) {\n      this.i.fs = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"labelMemberPath\", {\n    /**\n     * Gets or sets the property name that contains the labels.\n    */\n    get: function () {\n      return this.i.eh;\n    },\n    set: function (v) {\n      this.i.eh = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"legendLabelMemberPath\", {\n    /**\n     * Gets or sets the property name that contains the legend labels.\n    */\n    get: function () {\n      return this.i.ew;\n    },\n    set: function (v) {\n      this.i.ew = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"labelsPosition\", {\n    /**\n     * Gets or sets the position of chart labels.\n    */\n    get: function () {\n      return this.i.az;\n    },\n    set: function (v) {\n      this.i.az = ensureEnum(LabelsPosition_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"labelOuterColor\", {\n    /**\n     * Gets or sets the color for labels rendered outside of the pie chart.\n    */\n    get: function () {\n      return brushToString(this.i.ix);\n    },\n    set: function (v) {\n      this.i.ix = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"labelInnerColor\", {\n    /**\n     * Gets or sets the color for labels rendered inside of the pie chart.\n    */\n    get: function () {\n      return brushToString(this.i.iw);\n    },\n    set: function (v) {\n      this.i.iw = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"actualLabelOuterColor\", {\n    /**\n     * Gets the actual color for labels rendered outside of the pie chart.\n    */\n    get: function () {\n      return brushToString(this.i.iv);\n    },\n    set: function (v) {\n      this.i.iv = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"actualLabelInnerColor\", {\n    /**\n     * Gets the actual color for labels rendered inside of the pie chart.\n    */\n    get: function () {\n      return brushToString(this.i.iu);\n    },\n    set: function (v) {\n      this.i.iu = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"leaderLineVisibility\", {\n    /**\n     * Gets or sets whether the leader lines are visible.\n    */\n    get: function () {\n      return this.i.ja;\n    },\n    set: function (v) {\n      this.i.ja = ensureEnum(Visibility_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"leaderLineType\", {\n    /**\n     * Gets or sets what type of leader lines will be used for the outside end labels.\n    */\n    get: function () {\n      return this.i.a0;\n    },\n    set: function (v) {\n      this.i.a0 = ensureEnum(LeaderLineType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"leaderLineMargin\", {\n    /**\n     * Gets or sets the margin between a label and the end of its leader line. The default is 6 pixels.\n    */\n    get: function () {\n      return this.i.da;\n    },\n    set: function (v) {\n      this.i.da = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"toolTip\", {\n    /**\n     * Gets or sets the ToolTip for the chart.\n    */\n    get: function () {\n      return this.i.dp;\n    },\n    set: function (v) {\n      this.i.dp = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryThreshold\", {\n    /**\n     * Gets or sets the threshold value that determines if slices are grouped into the Others slice.\n    */\n    get: function () {\n      return this.i.db;\n    },\n    set: function (v) {\n      this.i.db = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryType\", {\n    /**\n     * Gets or sets whether to use numeric or percent-based threshold value.\n    */\n    get: function () {\n      return this.i.a1;\n    },\n    set: function (v) {\n      this.i.a1 = ensureEnum(OthersCategoryType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryText\", {\n    /**\n     * Gets or sets the label of the Others slice.\n    */\n    get: function () {\n      return this.i.e3;\n    },\n    set: function (v) {\n      this.i.e3 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"explodedRadius\", {\n    /**\n     * Determines how much the exploded slice is offset from the center. Value between 0 and 1.\n    */\n    get: function () {\n      return this.i.c3;\n    },\n    set: function (v) {\n      this.i.c3 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"radiusFactor\", {\n    /**\n     * Gets or sets the scaling factor of the chart's radius. Value between 0 and 1.\n    */\n    get: function () {\n      return this.i.de;\n    },\n    set: function (v) {\n      this.i.de = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"allowSliceSelection\", {\n    /**\n     * Gets or sets whether the slices can be selected.\n    */\n    get: function () {\n      return this.i.b7;\n    },\n    set: function (v) {\n      this.i.b7 = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"allowSliceExplosion\", {\n    /**\n     * Gets or sets whether the slices can be exploded.\n    */\n    get: function () {\n      return this.i.b6;\n    },\n    set: function (v) {\n      this.i.b6 = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"explodedSlices\", {\n    /**\n     * Gets or sets the collection of exploded slice indices.\n    */\n    get: function () {\n      if (this._explodedSlices === null) {\n        var coll = new IgrIndexCollection();\n        var innerColl = this.i.explodedSlices;\n\n        if (!innerColl) {\n          innerColl = new IndexCollection_internal();\n        }\n\n        this._explodedSlices = coll._fromInner(innerColl);\n        this.i.explodedSlices = innerColl;\n      }\n\n      return this._explodedSlices;\n    },\n    set: function (v) {\n      if (this._explodedSlices !== null) {\n        this._explodedSlices._setSyncTarget(null);\n\n        this._explodedSlices = null;\n      }\n\n      var coll = new IgrIndexCollection();\n      this._explodedSlices = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(Number_$type);\n      var innerColl = this.i.explodedSlices;\n\n      if (!innerColl) {\n        innerColl = new IndexCollection_internal();\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._explodedSlices._setSyncTarget(syncColl);\n\n      this.i.explodedSlices = innerColl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"labelExtent\", {\n    /**\n     * Gets or sets the pixel amount by which the labels are offset from the edge of the slices.\n    */\n    get: function () {\n      return this.i.c9;\n    },\n    set: function (v) {\n      this.i.c9 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"startAngle\", {\n    /**\n     * Gets or sets the starting angle of the chart.\n     * The default zero value is equivalent to 3 o'clock.\n    */\n    get: function () {\n      return this.i.dg;\n    },\n    set: function (v) {\n      this.i.dg = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"sweepDirection\", {\n    /**\n     * Gets or sets the rotational direction of the chart.\n    */\n    get: function () {\n      return this.i.iz;\n    },\n    set: function (v) {\n      this.i.iz = ensureEnum(SweepDirection_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryFill\", {\n    /**\n     * Gets or sets the fill brush.\n    */\n    get: function () {\n      return this.i.i7 ? this.i.i7.fill : null;\n    },\n    set: function (v) {\n      this.ensureOthersCategoryStyle();\n      this.i.i7.fill = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryStroke\", {\n    /**\n     * Gets or sets the stroke brush.\n    */\n    get: function () {\n      return this.i.i7 ? this.i.i7.stroke : null;\n    },\n    set: function (v) {\n      this.ensureOthersCategoryStyle();\n      this.i.i7.stroke = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryStrokeThickness\", {\n    /**\n     * Gets or sets the stroke thickness.\n    */\n    get: function () {\n      return this.i.i7 ? this.i.i7.strokeThickness : NaN;\n    },\n    set: function (v) {\n      this.ensureOthersCategoryStyle();\n      this.i.i7.strokeThickness = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryOpacity\", {\n    /**\n     * Gets or sets the opacity.\n    */\n    get: function () {\n      return this.i.i7 ? this.i.i7.opacity : NaN;\n    },\n    set: function (v) {\n      this.ensureOthersCategoryStyle();\n      this.i.i7.opacity = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrPieChartBase.prototype.ensureOthersCategoryStyle = function () {\n    if (this.i.i7) {\n      return;\n    }\n\n    this.i.i7 = new Style();\n  };\n\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectedSliceFill\", {\n    /**\n     * Gets or sets the fill brush.\n    */\n    get: function () {\n      return this.i.i8 ? this.i.i8.fill : null;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.i8.fill = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectedSliceStroke\", {\n    /**\n     * Gets or sets the stroke brush.\n    */\n    get: function () {\n      return this.i.i8 ? this.i.i8.stroke : null;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.i8.stroke = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectedSliceStrokeThickness\", {\n    /**\n     * Gets or sets the stroke thickness.\n    */\n    get: function () {\n      return this.i.i8 ? this.i.i8.strokeThickness : NaN;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.i8.strokeThickness = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectedSliceOpacity\", {\n    /**\n     * Gets or sets the opacity.\n    */\n    get: function () {\n      return this.i.i8 ? this.i.i8.opacity : NaN;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.i8.opacity = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrPieChartBase.prototype.ensureSelectedStyle = function () {\n    if (this.i.i8) {\n      return;\n    }\n\n    this.i.i8 = new Style();\n  };\n\n  Object.defineProperty(IgrPieChartBase.prototype, \"brushes\", {\n    /**\n     * Gets or sets the palette of brushes to use for coloring the slices.\n    */\n    get: function () {\n      return fromBrushCollection(this.i.am);\n    },\n    set: function (v) {\n      this.i.am = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"actualBrushes\", {\n    /**\n     * Gets the actual palette of brushes to use for coloring the slices.\n    */\n    get: function () {\n      return fromBrushCollection(this.i.ak);\n    },\n    set: function (v) {\n      this.i.ak = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"outlines\", {\n    /**\n     * Gets or sets the palette of brushes to use for outlines on the slices.\n    */\n    get: function () {\n      return fromBrushCollection(this.i.an);\n    },\n    set: function (v) {\n      this.i.an = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"actualOutlines\", {\n    /**\n     * Gets the actual palette of brushes to use for outlines on the slices.\n    */\n    get: function () {\n      return fromBrushCollection(this.i.al);\n    },\n    set: function (v) {\n      this.i.al = toBrushCollection(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"labelFormat\", {\n    /**\n     * Gets or sets the label format string to use for the label.\n    */\n    get: function () {\n      return this.i.ed;\n    },\n    set: function (v) {\n      this.i.ed = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"labelFormatSpecifiers\", {\n    /**\n     * Gets or sets the format specifiers to use with the LabelFormat string.\n    */\n    get: function () {\n      return this.i.ag;\n    },\n    set: function (v) {\n      if (v && !Array.isArray(v) && typeof v == \"string\") {\n        var re = /\\s*(?:,|\\s|$)\\s*/gm;\n        v = v.split(re);\n      }\n\n      this.i.ag = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"othersLabelFormat\", {\n    /**\n     * Gets or sets the label format string to use for the label.\n    */\n    get: function () {\n      return this.i.e7;\n    },\n    set: function (v) {\n      this.i.e7 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"othersLabelFormatSpecifiers\", {\n    /**\n     * Gets or sets the format specifiers to use with the OthersLabelFormat string.\n    */\n    get: function () {\n      return this.i.aj;\n    },\n    set: function (v) {\n      if (v && !Array.isArray(v) && typeof v == \"string\") {\n        var re = /\\s*(?:,|\\s|$)\\s*/gm;\n        v = v.split(re);\n      }\n\n      this.i.aj = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"legendLabelFormat\", {\n    /**\n     * Gets or sets the label format string to use for the label.\n    */\n    get: function () {\n      return this.i.et;\n    },\n    set: function (v) {\n      this.i.et = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"legendLabelFormatSpecifiers\", {\n    /**\n     * Gets or sets the format specifiers to use with the LegendLabelFormat string.\n    */\n    get: function () {\n      return this.i.ah;\n    },\n    set: function (v) {\n      if (v && !Array.isArray(v) && typeof v == \"string\") {\n        var re = /\\s*(?:,|\\s|$)\\s*/gm;\n        v = v.split(re);\n      }\n\n      this.i.ah = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"legendOthersLabelFormat\", {\n    /**\n     * Gets or sets the label format string to use for the label.\n    */\n    get: function () {\n      return this.i.ey;\n    },\n    set: function (v) {\n      this.i.ey = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"legendOthersLabelFormatSpecifiers\", {\n    /**\n     * Gets or sets the format specifiers to use with the LegendOthersLabelFormat string.\n    */\n    get: function () {\n      return this.i.ai;\n    },\n    set: function (v) {\n      if (v && !Array.isArray(v) && typeof v == \"string\") {\n        var re = /\\s*(?:,|\\s|$)\\s*/gm;\n        v = v.split(re);\n      }\n\n      this.i.ai = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"legendItemTemplate\", {\n    /**\n     * Gets or sets the LegendItemTemplate property.\n     * The legend item control content is created according to the LegendItemTemplate on-demand by\n     * the chart object itself.\n    */\n    get: function () {\n      return this.i.legendItemTemplate;\n    },\n    set: function (v) {\n      this.i.legendItemTemplate = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"legendItemBadgeTemplate\", {\n    /**\n     * Gets or sets the LegendItemBadgeTemplate property.\n     * The legend item badge is created according to the LegendItemBadgeTemplate on-demand by\n     * the chart object itself.\n    */\n    get: function () {\n      return this.i.legendItemBadgeTemplate;\n    },\n    set: function (v) {\n      this.i.legendItemBadgeTemplate = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"isDragInteractionEnabled\", {\n    /**\n     * Gets or sets whether the pie chart will handle drag interaction and make them avaiilable in its events.\n    */\n    get: function () {\n      return this.i.cc;\n    },\n    set: function (v) {\n      this.i.cc = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"isSurfaceInteractionDisabled\", {\n    /**\n     * Gets or sets whether all surface interactions with the plot area should be disabled.\n    */\n    get: function () {\n      return this.i.cd;\n    },\n    set: function (v) {\n      this.i.cd = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"shouldDisplayMockData\", {\n    /**\n     * Gets or sets whether the pie chart should display mock data when data isn't present.\n    */\n    get: function () {\n      return this.i.cf;\n    },\n    set: function (v) {\n      this.i.cf = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"shouldUseSkeletonStyleForMockData\", {\n    /**\n     * Gets or sets whether the pie chart should use a skeleton style for mock data.\n    */\n    get: function () {\n      return this.i.cg;\n    },\n    set: function (v) {\n      this.i.cg = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"formatLabel\", {\n    /**\n     * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart.\n    */\n    get: function () {\n      return this.i.a4;\n    },\n    set: function (v) {\n      this.i.a4 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"formatLegendLabel\", {\n    /**\n     * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart's legend.\n    */\n    get: function () {\n      return this.i.a5;\n    },\n    set: function (v) {\n      this.i.a5 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"pixelScalingRatio\", {\n    /**\n     * Gets or sets the scaling value used to affect the pixel density of the control.\n     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control\n     * to appear blurry.\n    */\n    get: function () {\n      return this.i.dd;\n    },\n    set: function (v) {\n      this.i.dd = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"actualPixelScalingRatio\", {\n    /**\n     * Resolved pixel scaling ratio. Unless explicitly overridden by the\n     * PieChartBase.PixelScalingRatio property,\n     * this one returns the default ratio enforced by device. High resolution devices will initialize this property\n     * to a higher value.\n    */\n    get: function () {\n      return this.i.c0;\n    },\n    set: function (v) {\n      this.i.c0 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectionMode\", {\n    /**\n     * Gets or sets which mode to use for selecting slices.\n    */\n    get: function () {\n      return this.i.bi;\n    },\n    set: function (v) {\n      this.i.bi = ensureEnum(SliceSelectionMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectedItem\", {\n    /**\n     * Gets or sets the currently selected data item.  If a different data item is provided the pie chart\n     * will select the slice associated with the new item.\n    */\n    get: function () {\n      return this.i.selectedItem;\n    },\n    set: function (v) {\n      this.i.selectedItem = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectedItems\", {\n    /**\n     * Gets the currently selected data items.  Adding or removing data items from this collection will\n     * select or deselect the slices associated with those items.\n    */\n    get: function () {\n      if (this._selectedItems === null) {\n        var coll = new IgrObjectCollection();\n        var innerColl = this.i.selectedItems;\n\n        if (!innerColl) {\n          innerColl = new ObjectCollection_internal(0);\n        }\n\n        this._selectedItems = coll._fromInner(innerColl);\n        this.i.selectedItems = innerColl;\n      }\n\n      return this._selectedItems;\n    },\n    set: function (v) {\n      if (this._selectedItems !== null) {\n        this._selectedItems._setSyncTarget(null);\n\n        this._selectedItems = null;\n      }\n\n      var coll = new IgrObjectCollection();\n      this._selectedItems = coll._fromOuter(v);\n      var syncColl = new SyncableObservableCollection$1(Base.$type);\n      var innerColl = this.i.selectedItems;\n\n      if (!innerColl) {\n        innerColl = new ObjectCollection_internal(0);\n      }\n\n      syncColl._inner = innerColl;\n      syncColl.clear();\n\n      this._selectedItems._setSyncTarget(syncColl);\n\n      this.i.selectedItems = innerColl;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"textStyle\", {\n    /**\n     * Manually overrides the style to use for the labels.\n    */\n    get: function () {\n      return this.i.fn;\n    },\n    set: function (v) {\n      this.i.fn = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrPieChartBase.prototype.findByName = function (name) {\n    if (this.legend && this.legend.name && this.legend.name == name) {\n      return this.legend;\n    }\n\n    if (this.labelFormatSpecifiers != null && arrayFindByName(this.labelFormatSpecifiers, name)) {\n      return arrayFindByName(this.labelFormatSpecifiers, name);\n    }\n\n    if (this.othersLabelFormatSpecifiers != null && arrayFindByName(this.othersLabelFormatSpecifiers, name)) {\n      return arrayFindByName(this.othersLabelFormatSpecifiers, name);\n    }\n\n    if (this.legendLabelFormatSpecifiers != null && arrayFindByName(this.legendLabelFormatSpecifiers, name)) {\n      return arrayFindByName(this.legendLabelFormatSpecifiers, name);\n    }\n\n    if (this.legendOthersLabelFormatSpecifiers != null && arrayFindByName(this.legendOthersLabelFormatSpecifiers, name)) {\n      return arrayFindByName(this.legendOthersLabelFormatSpecifiers, name);\n    }\n\n    return null;\n  };\n\n  Object.defineProperty(IgrPieChartBase.prototype, \"hasUserValues\", {\n    get: function () {\n      return this._hasUserValues;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrPieChartBase.prototype.__m = function (propertyName) {\n    if (!this._inStyling) {\n      this._hasUserValues.add(propertyName);\n    }\n  };\n\n  IgrPieChartBase.prototype._styling = function (container, component, parent) {\n    if (this._inStyling) {\n      return;\n    }\n\n    this._inStyling = true;\n    this._stylingContainer = container;\n    this._stylingParent = component;\n    var genericPrefix = \"\";\n    var typeName = this.i.$type.name;\n\n    if (typeName.indexOf(\"Xam\") === 0) {\n      typeName = typeName.substring(3);\n    }\n\n    genericPrefix = toSpinal(\"PieChartBase\");\n    var additionalPrefixes = [];\n    var prefix = toSpinal(typeName);\n    additionalPrefixes.push(prefix + \"-\");\n    var b = this.i.$type.baseType;\n\n    while (b && b.name != \"Object\" && b.name != \"Base\" && b.name != \"Control\" && b.Name != \"DependencyObject\" && b.Name != \"FrameworkElement\") {\n      typeName = b.name;\n\n      if (typeName.indexOf(\"Xam\") === 0) {\n        typeName = typeName.substring(3);\n      }\n\n      var basePrefix = toSpinal(typeName);\n      additionalPrefixes.push(basePrefix + \"-\");\n      b = b.baseType;\n    }\n\n    if (parent) {\n      var parentTypeName = parent.i.$type.name;\n\n      if (parentTypeName.indexOf(\"Xam\") === 0) {\n        parentTypeName = parentTypeName.substring(3);\n      }\n\n      var parentPrefix = toSpinal(parentTypeName);\n      additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n      additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n    }\n\n    initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n\n    if (this._otherStyling) {\n      this._otherStyling(container, component, parent);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n   * Returns the chart visuals expressed as a serialized string.\n  \r\n  */\n\n\n  IgrPieChartBase.prototype.exportSerializedVisualData = function () {\n    var iv = this.i.d2();\n    return iv;\n  };\n  /**\n   * Simulates a mouse click action at the specified point.\n  \r\n  * @param point  * The point to click at.\n  */\n\n\n  IgrPieChartBase.prototype.simulateLeftClick = function (point) {\n    this.i.g2(toPoint(point));\n  };\n  /**\n   * Invoked by the containing object to provide reference to the container.\n  \r\n  * @param container  * Reference to the container.\n  */\n\n\n  IgrPieChartBase.prototype.provideContainer = function (container) {\n    this.i.provideContainer(container);\n  };\n  /**\n   * Notification from the containing object that the container has been resized.\n  \r\n  */\n\n\n  IgrPieChartBase.prototype.notifyContainerResized = function () {\n    this.i.notifyContainerResized();\n  };\n  /**\n   * Invoked when the instance is being destroyed.\n  \r\n  */\n\n\n  IgrPieChartBase.prototype.destroy = function () {\n    this.i.destroy();\n  };\n  /**\n   * Use to force the pie chart to finish any deferred work before printing or evaluating its visual.\n   * This should only be called if the visual of the pie chart needs to be synchronously saved or evaluated.\n   * Calling this method too often will hinder the performance of the pie chart.\n  \r\n  */\n\n\n  IgrPieChartBase.prototype.flush = function () {\n    this.i.fx();\n  };\n\n  IgrPieChartBase.prototype.notifySetItem = function (source_, index, oldItem, newItem) {\n    this.i.f6(source_, index, oldItem, newItem);\n  };\n  /**\n   * Manually notifies the pie chart's data source that the data it has bound to has been cleared and needs to be re-examined.\n   * This should not be called if the data that the pie chart is bound to is already observable.\n  \r\n  * @param source_  * The data source.\n  */\n\n\n  IgrPieChartBase.prototype.notifyClearItems = function (source_) {\n    this.i.f2(source_);\n  };\n\n  IgrPieChartBase.prototype.notifyInsertItem = function (source_, index, newItem) {\n    this.i.f4(source_, index, newItem);\n  };\n\n  IgrPieChartBase.prototype.notifyRemoveItem = function (source_, index, oldItem) {\n    this.i.f5(source_, index, oldItem);\n  };\n  /**\n   * Assigns data source for the items.\n  \r\n  * @param source_  * Array of the data source items.\n  */\n\n\n  IgrPieChartBase.prototype.setWidgetLevelDataSource = function (source_) {\n    this.i.g1(source_);\n  };\n  /**\n   * Resets items data source.\n  \r\n  */\n\n\n  IgrPieChartBase.prototype.removeWidgetLevelDataSource = function () {\n    this.i.gs();\n  };\n  /**\n   * Invoked when style is updated.\n  \r\n  */\n\n\n  IgrPieChartBase.prototype.styleUpdated = function () {\n    this.i.g6();\n  };\n\n  Object.defineProperty(IgrPieChartBase.prototype, \"labelClick\", {\n    /**\n     * Raised when the slice's label is clicked.\n    */\n    get: function () {\n      return this._labelClick;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._labelClick_wrapped !== null) {\n        this.i.labelClick = delegateRemove(this.i.labelClick, this._labelClick_wrapped);\n        this._labelClick_wrapped = null;\n        this._labelClick = null;\n      }\n\n      this._labelClick = ev;\n\n      this._labelClick_wrapped = function (o, e) {\n        var outerArgs = new IgrLabelClickEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeLabelClick) {\n          _this.beforeLabelClick(_this, outerArgs);\n        }\n\n        if (_this._labelClick) {\n          _this._labelClick(_this, outerArgs);\n        }\n      };\n\n      this.i.labelClick = delegateCombine(this.i.labelClick, this._labelClick_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectedItemChanging\", {\n    /**\n     * Raised when the SelectedItem property is changing.  This event is cancelable.\n    */\n    get: function () {\n      return this._selectedItemChanging;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._selectedItemChanging_wrapped !== null) {\n        this.i.selectedItemChanging = delegateRemove(this.i.selectedItemChanging, this._selectedItemChanging_wrapped);\n        this._selectedItemChanging_wrapped = null;\n        this._selectedItemChanging = null;\n      }\n\n      this._selectedItemChanging = ev;\n\n      this._selectedItemChanging_wrapped = function (o, e) {\n        var outerArgs = new IgrSelectedItemChangingEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeSelectedItemChanging) {\n          _this.beforeSelectedItemChanging(_this, outerArgs);\n        }\n\n        if (_this._selectedItemChanging) {\n          _this._selectedItemChanging(_this, outerArgs);\n        }\n      };\n\n      this.i.selectedItemChanging = delegateCombine(this.i.selectedItemChanging, this._selectedItemChanging_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectedItemsChanging\", {\n    /**\n     * Raised when the SelectedItems collection is changing.  This event is cancelable.\n    */\n    get: function () {\n      return this._selectedItemsChanging;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._selectedItemsChanging_wrapped !== null) {\n        this.i.selectedItemsChanging = delegateRemove(this.i.selectedItemsChanging, this._selectedItemsChanging_wrapped);\n        this._selectedItemsChanging_wrapped = null;\n        this._selectedItemsChanging = null;\n      }\n\n      this._selectedItemsChanging = ev;\n\n      this._selectedItemsChanging_wrapped = function (o, e) {\n        var outerArgs = new IgrSelectedItemsChangingEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeSelectedItemsChanging) {\n          _this.beforeSelectedItemsChanging(_this, outerArgs);\n        }\n\n        if (_this._selectedItemsChanging) {\n          _this._selectedItemsChanging(_this, outerArgs);\n        }\n      };\n\n      this.i.selectedItemsChanging = delegateCombine(this.i.selectedItemsChanging, this._selectedItemsChanging_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectedItemChanged\", {\n    /**\n     * Raised when the SelectedItem property has changed.\n    */\n    get: function () {\n      return this._selectedItemChanged;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._selectedItemChanged_wrapped !== null) {\n        this.i.selectedItemChanged = delegateRemove(this.i.selectedItemChanged, this._selectedItemChanged_wrapped);\n        this._selectedItemChanged_wrapped = null;\n        this._selectedItemChanged = null;\n      }\n\n      this._selectedItemChanged = ev;\n\n      this._selectedItemChanged_wrapped = function (o, e) {\n        var outerArgs = new IgrSelectedItemChangedEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeSelectedItemChanged) {\n          _this.beforeSelectedItemChanged(_this, outerArgs);\n        }\n\n        if (_this._selectedItemChanged) {\n          _this._selectedItemChanged(_this, outerArgs);\n        }\n      };\n\n      this.i.selectedItemChanged = delegateCombine(this.i.selectedItemChanged, this._selectedItemChanged_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"selectedItemsChanged\", {\n    /**\n     * Raised when the SelectedItems collection has changed.\n    */\n    get: function () {\n      return this._selectedItemsChanged;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._selectedItemsChanged_wrapped !== null) {\n        this.i.selectedItemsChanged = delegateRemove(this.i.selectedItemsChanged, this._selectedItemsChanged_wrapped);\n        this._selectedItemsChanged_wrapped = null;\n        this._selectedItemsChanged = null;\n      }\n\n      this._selectedItemsChanged = ev;\n\n      this._selectedItemsChanged_wrapped = function (o, e) {\n        var outerArgs = new IgrSelectedItemsChangedEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeSelectedItemsChanged) {\n          _this.beforeSelectedItemsChanged(_this, outerArgs);\n        }\n\n        if (_this._selectedItemsChanged) {\n          _this._selectedItemsChanged(_this, outerArgs);\n        }\n      };\n\n      this.i.selectedItemsChanged = delegateCombine(this.i.selectedItemsChanged, this._selectedItemsChanged_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"sliceClick\", {\n    /**\n     * Raised when the slice is clicked.\n    */\n    get: function () {\n      return this._sliceClick;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._sliceClick_wrapped !== null) {\n        this.i.sliceClick = delegateRemove(this.i.sliceClick, this._sliceClick_wrapped);\n        this._sliceClick_wrapped = null;\n        this._sliceClick = null;\n      }\n\n      this._sliceClick = ev;\n\n      this._sliceClick_wrapped = function (o, e) {\n        var outerArgs = new IgrSliceClickEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeSliceClick) {\n          _this.beforeSliceClick(_this, outerArgs);\n        }\n\n        if (_this._sliceClick) {\n          _this._sliceClick(_this, outerArgs);\n        }\n      };\n\n      this.i.sliceClick = delegateCombine(this.i.sliceClick, this._sliceClick_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"sliceEnter\", {\n    /**\n     * Raised when a slice is entered by the pointer.\n    */\n    get: function () {\n      return this._sliceEnter;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._sliceEnter_wrapped !== null) {\n        this.i.sliceEnter = delegateRemove(this.i.sliceEnter, this._sliceEnter_wrapped);\n        this._sliceEnter_wrapped = null;\n        this._sliceEnter = null;\n      }\n\n      this._sliceEnter = ev;\n\n      this._sliceEnter_wrapped = function (o, e) {\n        var outerArgs = new IgrSliceEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeSliceEnter) {\n          _this.beforeSliceEnter(_this, outerArgs);\n        }\n\n        if (_this._sliceEnter) {\n          _this._sliceEnter(_this, outerArgs);\n        }\n      };\n\n      this.i.sliceEnter = delegateCombine(this.i.sliceEnter, this._sliceEnter_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"sliceLeave\", {\n    /**\n     * Raised when a slice is left by the pointer;\n    */\n    get: function () {\n      return this._sliceLeave;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._sliceLeave_wrapped !== null) {\n        this.i.sliceLeave = delegateRemove(this.i.sliceLeave, this._sliceLeave_wrapped);\n        this._sliceLeave_wrapped = null;\n        this._sliceLeave = null;\n      }\n\n      this._sliceLeave = ev;\n\n      this._sliceLeave_wrapped = function (o, e) {\n        var outerArgs = new IgrSliceEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeSliceLeave) {\n          _this.beforeSliceLeave(_this, outerArgs);\n        }\n\n        if (_this._sliceLeave) {\n          _this._sliceLeave(_this, outerArgs);\n        }\n      };\n\n      this.i.sliceLeave = delegateCombine(this.i.sliceLeave, this._sliceLeave_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrPieChartBase.prototype, \"sliceHover\", {\n    /**\n     * Raised when a pointer moves over a slice.\n    */\n    get: function () {\n      return this._sliceHover;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._sliceHover_wrapped !== null) {\n        this.i.sliceHover = delegateRemove(this.i.sliceHover, this._sliceHover_wrapped);\n        this._sliceHover_wrapped = null;\n        this._sliceHover = null;\n      }\n\n      this._sliceHover = ev;\n\n      this._sliceHover_wrapped = function (o, e) {\n        var outerArgs = new IgrSliceEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeSliceHover) {\n          _this.beforeSliceHover(_this, outerArgs);\n        }\n\n        if (_this._sliceHover) {\n          _this._sliceHover(_this, outerArgs);\n        }\n      };\n\n      this.i.sliceHover = delegateCombine(this.i.sliceHover, this._sliceHover_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrPieChartBase;\n}(React.Component);\n\nexport { IgrPieChartBase };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-pie-chart-base.js"],"names":["__extends","__values","React","delegateCombine","delegateRemove","LabelsPosition_$type","Visibility_$type","LeaderLineType_$type","OthersCategoryType_$type","IgrIndexCollection","SweepDirection_$type","SliceSelectionMode_$type","IgrObjectCollection","IgrLabelClickEventArgs","IgrSelectedItemChangingEventArgs","IgrSelectedItemsChangingEventArgs","IgrSelectedItemChangedEventArgs","IgrSelectedItemsChangedEventArgs","IgrSliceClickEventArgs","IgrSliceEventArgs","TypeRegistrar","Number_$type","Base","NamePatcher","getModifiedProps","isValidProp","ensureEnum","brushToString","stringToBrush","ensureBool","toBrushCollection","fromBrushCollection","arrayFindByName","toSpinal","initializePropertiesFromCss","toPoint","IndexCollection","IndexCollection_internal","SyncableObservableCollection$1","Style","ObjectCollection","ObjectCollection_internal","IgrPieChartBase","_super","props","_this","call","_explodedSlices","_selectedItems","__p","_hasUserValues","Set","_stylingContainer","_stylingParent","_inStyling","_labelClick","_labelClick_wrapped","_selectedItemChanging","_selectedItemChanging_wrapped","_selectedItemsChanging","_selectedItemsChanging_wrapped","_selectedItemChanged","_selectedItemChanged_wrapped","_selectedItemsChanged","_selectedItemsChanged_wrapped","_sliceClick","_sliceClick_wrapped","_sliceEnter","_sliceEnter_wrapped","_sliceLeave","_sliceLeave_wrapped","_sliceHover","_sliceHover_wrapped","_styling","ensureStylablePatched","Object","getPrototypeOf","_implementation","createImplementation","externalObject","onImplementationCreated","prototype","defineProperty","get","enumerable","configurable","_createFromInternal","internal","$type","name","externalName","isRegistered","create","componentDidMount","e_1","_a","_b","keys","_c","next","done","p","value","e_1_1","error","return","shouldComponentUpdate","nextProps","nextState","e_2","mod","e_2_1","render","i","c8","set","v","fs","eh","ew","az","ix","iw","iv","iu","ja","a0","da","dp","db","a1","e3","c3","de","b7","b6","coll","innerColl","explodedSlices","_fromInner","_setSyncTarget","_fromOuter","syncColl","_inner","clear","c9","dg","iz","i7","fill","ensureOthersCategoryStyle","stroke","strokeThickness","NaN","opacity","i8","ensureSelectedStyle","am","ak","an","al","ed","ag","Array","isArray","re","split","e7","aj","et","ah","ey","ai","legendItemTemplate","legendItemBadgeTemplate","cc","cd","cf","cg","a4","a5","dd","c0","bi","selectedItem","selectedItems","fn","findByName","legend","labelFormatSpecifiers","othersLabelFormatSpecifiers","legendLabelFormatSpecifiers","legendOthersLabelFormatSpecifiers","__m","propertyName","add","container","component","parent","genericPrefix","typeName","indexOf","substring","additionalPrefixes","prefix","push","b","baseType","Name","basePrefix","parentTypeName","parentPrefix","hasUserValues","_otherStyling","exportSerializedVisualData","d2","simulateLeftClick","point","g2","provideContainer","notifyContainerResized","destroy","flush","fx","notifySetItem","source_","index","oldItem","newItem","f6","notifyClearItems","f2","notifyInsertItem","f4","notifyRemoveItem","f5","setWidgetLevelDataSource","g1","removeWidgetLevelDataSource","gs","styleUpdated","g6","ev","labelClick","o","e","outerArgs","_provideImplementation","beforeLabelClick","selectedItemChanging","beforeSelectedItemChanging","selectedItemsChanging","beforeSelectedItemsChanging","selectedItemChanged","beforeSelectedItemChanged","selectedItemsChanged","beforeSelectedItemsChanged","sliceClick","beforeSliceClick","sliceEnter","beforeSliceEnter","sliceLeave","beforeSliceLeave","sliceHover","beforeSliceHover","Component"],"mappings":"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","sourcesContent":["import { __extends, __values } from \"tslib\";\nimport * as React from 'react';\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { LabelsPosition_$type } from \"./LabelsPosition\";\nimport { Visibility_$type } from \"igniteui-react-core\";\nimport { LeaderLineType_$type } from \"./LeaderLineType\";\nimport { OthersCategoryType_$type } from \"./OthersCategoryType\";\nimport { IgrIndexCollection } from \"./igr-index-collection\";\nimport { SweepDirection_$type } from \"igniteui-react-core\";\nimport { SliceSelectionMode_$type } from \"./SliceSelectionMode\";\nimport { IgrObjectCollection } from \"igniteui-react-core\";\nimport { IgrLabelClickEventArgs } from \"./igr-label-click-event-args\";\nimport { IgrSelectedItemChangingEventArgs } from \"./igr-selected-item-changing-event-args\";\nimport { IgrSelectedItemsChangingEventArgs } from \"./igr-selected-items-changing-event-args\";\nimport { IgrSelectedItemChangedEventArgs } from \"./igr-selected-item-changed-event-args\";\nimport { IgrSelectedItemsChangedEventArgs } from \"./igr-selected-items-changed-event-args\";\nimport { IgrSliceClickEventArgs } from \"./igr-slice-click-event-args\";\nimport { IgrSliceEventArgs } from \"./igr-slice-event-args\";\nimport { TypeRegistrar, Number_$type, Base } from \"igniteui-react-core\";\nimport { NamePatcher, getModifiedProps, isValidProp, ensureEnum, brushToString, stringToBrush, ensureBool, toBrushCollection, fromBrushCollection, arrayFindByName, toSpinal, initializePropertiesFromCss, toPoint } from \"igniteui-react-core\";\nimport { IndexCollection as IndexCollection_internal } from \"./IndexCollection\";\nimport { SyncableObservableCollection$1 } from \"igniteui-react-core\";\nimport { Style } from \"igniteui-react-core\";\nimport { ObjectCollection as ObjectCollection_internal } from \"igniteui-react-core\";\n/**\n * Represents the base class for the pie chart.\n*/\nvar IgrPieChartBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrPieChartBase, _super);\n    function IgrPieChartBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._explodedSlices = null;\n        _this._selectedItems = null;\n        _this.__p = null;\n        _this._hasUserValues = new Set();\n        _this._stylingContainer = null;\n        _this._stylingParent = null;\n        _this._inStyling = false;\n        _this._labelClick = null;\n        _this._labelClick_wrapped = null;\n        _this._selectedItemChanging = null;\n        _this._selectedItemChanging_wrapped = null;\n        _this._selectedItemsChanging = null;\n        _this._selectedItemsChanging_wrapped = null;\n        _this._selectedItemChanged = null;\n        _this._selectedItemChanged_wrapped = null;\n        _this._selectedItemsChanged = null;\n        _this._selectedItemsChanged_wrapped = null;\n        _this._sliceClick = null;\n        _this._sliceClick_wrapped = null;\n        _this._sliceEnter = null;\n        _this._sliceEnter_wrapped = null;\n        _this._sliceLeave = null;\n        _this._sliceLeave_wrapped = null;\n        _this._sliceHover = null;\n        _this._sliceHover_wrapped = null;\n        if (_this._styling) {\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n        }\n        _this._implementation = _this.createImplementation();\n        _this._implementation.externalObject = _this;\n        _this.onImplementationCreated();\n        return _this;\n    }\n    IgrPieChartBase.prototype.createImplementation = function () {\n        return null;\n    };\n    Object.defineProperty(IgrPieChartBase.prototype, \"i\", {\n        /**\n         * @hidden\n         */\n        get: function () {\n            return this._implementation;\n        } /**\n                                     * @hidden\n                                     */,\n        enumerable: false,\n        configurable: true\n    });\n    IgrPieChartBase._createFromInternal = function (internal) {\n        if (!internal) {\n            return null;\n        }\n        if (!internal.$type) {\n            return null;\n        }\n        var name = internal.$type.name;\n        var externalName = \"Igr\" + name;\n        if (!TypeRegistrar.isRegistered(externalName)) {\n            return null;\n        }\n        return TypeRegistrar.create(externalName);\n    };\n    IgrPieChartBase.prototype.onImplementationCreated = function () {\n    };\n    IgrPieChartBase.prototype.componentDidMount = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = this.props[p];\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    IgrPieChartBase.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var e_2, _a;\n        var mod = getModifiedProps(this.props, nextProps);\n        try {\n            for (var _b = __values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = mod[p];\n                }\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return true;\n    };\n    IgrPieChartBase.prototype.render = function () {\n        return null;\n    };\n    Object.defineProperty(IgrPieChartBase.prototype, \"innerExtent\", {\n        /**\n         * Gets or sets the amount of space between the center and the start of the arc. This property should be set between 0 and 1.\n         * If InnerExtent is set to a value greater than 1, it will be interpreted as a percentage, effectively divided by 100.\n        */\n        get: function () {\n            return this.i.c8;\n        },\n        set: function (v) {\n            this.i.c8 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"valueMemberPath\", {\n        /**\n         * Gets or Sets the property name that contains the values.\n        */\n        get: function () {\n            return this.i.fs;\n        },\n        set: function (v) {\n            this.i.fs = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"labelMemberPath\", {\n        /**\n         * Gets or sets the property name that contains the labels.\n        */\n        get: function () {\n            return this.i.eh;\n        },\n        set: function (v) {\n            this.i.eh = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"legendLabelMemberPath\", {\n        /**\n         * Gets or sets the property name that contains the legend labels.\n        */\n        get: function () {\n            return this.i.ew;\n        },\n        set: function (v) {\n            this.i.ew = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"labelsPosition\", {\n        /**\n         * Gets or sets the position of chart labels.\n        */\n        get: function () {\n            return this.i.az;\n        },\n        set: function (v) {\n            this.i.az = ensureEnum(LabelsPosition_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"labelOuterColor\", {\n        /**\n         * Gets or sets the color for labels rendered outside of the pie chart.\n        */\n        get: function () {\n            return brushToString(this.i.ix);\n        },\n        set: function (v) {\n            this.i.ix = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"labelInnerColor\", {\n        /**\n         * Gets or sets the color for labels rendered inside of the pie chart.\n        */\n        get: function () {\n            return brushToString(this.i.iw);\n        },\n        set: function (v) {\n            this.i.iw = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"actualLabelOuterColor\", {\n        /**\n         * Gets the actual color for labels rendered outside of the pie chart.\n        */\n        get: function () {\n            return brushToString(this.i.iv);\n        },\n        set: function (v) {\n            this.i.iv = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"actualLabelInnerColor\", {\n        /**\n         * Gets the actual color for labels rendered inside of the pie chart.\n        */\n        get: function () {\n            return brushToString(this.i.iu);\n        },\n        set: function (v) {\n            this.i.iu = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"leaderLineVisibility\", {\n        /**\n         * Gets or sets whether the leader lines are visible.\n        */\n        get: function () {\n            return this.i.ja;\n        },\n        set: function (v) {\n            this.i.ja = ensureEnum(Visibility_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"leaderLineType\", {\n        /**\n         * Gets or sets what type of leader lines will be used for the outside end labels.\n        */\n        get: function () {\n            return this.i.a0;\n        },\n        set: function (v) {\n            this.i.a0 = ensureEnum(LeaderLineType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"leaderLineMargin\", {\n        /**\n         * Gets or sets the margin between a label and the end of its leader line. The default is 6 pixels.\n        */\n        get: function () {\n            return this.i.da;\n        },\n        set: function (v) {\n            this.i.da = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"toolTip\", {\n        /**\n         * Gets or sets the ToolTip for the chart.\n        */\n        get: function () {\n            return this.i.dp;\n        },\n        set: function (v) {\n            this.i.dp = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryThreshold\", {\n        /**\n         * Gets or sets the threshold value that determines if slices are grouped into the Others slice.\n        */\n        get: function () {\n            return this.i.db;\n        },\n        set: function (v) {\n            this.i.db = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryType\", {\n        /**\n         * Gets or sets whether to use numeric or percent-based threshold value.\n        */\n        get: function () {\n            return this.i.a1;\n        },\n        set: function (v) {\n            this.i.a1 = ensureEnum(OthersCategoryType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryText\", {\n        /**\n         * Gets or sets the label of the Others slice.\n        */\n        get: function () {\n            return this.i.e3;\n        },\n        set: function (v) {\n            this.i.e3 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"explodedRadius\", {\n        /**\n         * Determines how much the exploded slice is offset from the center. Value between 0 and 1.\n        */\n        get: function () {\n            return this.i.c3;\n        },\n        set: function (v) {\n            this.i.c3 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"radiusFactor\", {\n        /**\n         * Gets or sets the scaling factor of the chart's radius. Value between 0 and 1.\n        */\n        get: function () {\n            return this.i.de;\n        },\n        set: function (v) {\n            this.i.de = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"allowSliceSelection\", {\n        /**\n         * Gets or sets whether the slices can be selected.\n        */\n        get: function () {\n            return this.i.b7;\n        },\n        set: function (v) {\n            this.i.b7 = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"allowSliceExplosion\", {\n        /**\n         * Gets or sets whether the slices can be exploded.\n        */\n        get: function () {\n            return this.i.b6;\n        },\n        set: function (v) {\n            this.i.b6 = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"explodedSlices\", {\n        /**\n         * Gets or sets the collection of exploded slice indices.\n        */\n        get: function () {\n            if (this._explodedSlices === null) {\n                var coll = new IgrIndexCollection();\n                var innerColl = this.i.explodedSlices;\n                if (!innerColl) {\n                    innerColl = new IndexCollection_internal();\n                }\n                this._explodedSlices = coll._fromInner(innerColl);\n                this.i.explodedSlices = innerColl;\n            }\n            return this._explodedSlices;\n        },\n        set: function (v) {\n            if (this._explodedSlices !== null) {\n                this._explodedSlices._setSyncTarget(null);\n                this._explodedSlices = null;\n            }\n            var coll = new IgrIndexCollection();\n            this._explodedSlices = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(Number_$type);\n            var innerColl = this.i.explodedSlices;\n            if (!innerColl) {\n                innerColl = new IndexCollection_internal();\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._explodedSlices._setSyncTarget(syncColl);\n            this.i.explodedSlices = innerColl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"labelExtent\", {\n        /**\n         * Gets or sets the pixel amount by which the labels are offset from the edge of the slices.\n        */\n        get: function () {\n            return this.i.c9;\n        },\n        set: function (v) {\n            this.i.c9 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"startAngle\", {\n        /**\n         * Gets or sets the starting angle of the chart.\n         * The default zero value is equivalent to 3 o'clock.\n        */\n        get: function () {\n            return this.i.dg;\n        },\n        set: function (v) {\n            this.i.dg = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"sweepDirection\", {\n        /**\n         * Gets or sets the rotational direction of the chart.\n        */\n        get: function () {\n            return this.i.iz;\n        },\n        set: function (v) {\n            this.i.iz = ensureEnum(SweepDirection_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryFill\", {\n        /**\n         * Gets or sets the fill brush.\n        */\n        get: function () {\n            return this.i.i7 ? this.i.i7.fill : null;\n        },\n        set: function (v) {\n            this.ensureOthersCategoryStyle();\n            this.i.i7.fill = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryStroke\", {\n        /**\n         * Gets or sets the stroke brush.\n        */\n        get: function () {\n            return this.i.i7 ? this.i.i7.stroke : null;\n        },\n        set: function (v) {\n            this.ensureOthersCategoryStyle();\n            this.i.i7.stroke = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryStrokeThickness\", {\n        /**\n         * Gets or sets the stroke thickness.\n        */\n        get: function () {\n            return this.i.i7 ? this.i.i7.strokeThickness : NaN;\n        },\n        set: function (v) {\n            this.ensureOthersCategoryStyle();\n            this.i.i7.strokeThickness = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"othersCategoryOpacity\", {\n        /**\n         * Gets or sets the opacity.\n        */\n        get: function () {\n            return this.i.i7 ? this.i.i7.opacity : NaN;\n        },\n        set: function (v) {\n            this.ensureOthersCategoryStyle();\n            this.i.i7.opacity = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrPieChartBase.prototype.ensureOthersCategoryStyle = function () {\n        if (this.i.i7) {\n            return;\n        }\n        this.i.i7 = new Style();\n    };\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectedSliceFill\", {\n        /**\n         * Gets or sets the fill brush.\n        */\n        get: function () {\n            return this.i.i8 ? this.i.i8.fill : null;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.i8.fill = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectedSliceStroke\", {\n        /**\n         * Gets or sets the stroke brush.\n        */\n        get: function () {\n            return this.i.i8 ? this.i.i8.stroke : null;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.i8.stroke = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectedSliceStrokeThickness\", {\n        /**\n         * Gets or sets the stroke thickness.\n        */\n        get: function () {\n            return this.i.i8 ? this.i.i8.strokeThickness : NaN;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.i8.strokeThickness = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectedSliceOpacity\", {\n        /**\n         * Gets or sets the opacity.\n        */\n        get: function () {\n            return this.i.i8 ? this.i.i8.opacity : NaN;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.i8.opacity = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrPieChartBase.prototype.ensureSelectedStyle = function () {\n        if (this.i.i8) {\n            return;\n        }\n        this.i.i8 = new Style();\n    };\n    Object.defineProperty(IgrPieChartBase.prototype, \"brushes\", {\n        /**\n         * Gets or sets the palette of brushes to use for coloring the slices.\n        */\n        get: function () {\n            return fromBrushCollection(this.i.am);\n        },\n        set: function (v) {\n            this.i.am = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"actualBrushes\", {\n        /**\n         * Gets the actual palette of brushes to use for coloring the slices.\n        */\n        get: function () {\n            return fromBrushCollection(this.i.ak);\n        },\n        set: function (v) {\n            this.i.ak = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"outlines\", {\n        /**\n         * Gets or sets the palette of brushes to use for outlines on the slices.\n        */\n        get: function () {\n            return fromBrushCollection(this.i.an);\n        },\n        set: function (v) {\n            this.i.an = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"actualOutlines\", {\n        /**\n         * Gets the actual palette of brushes to use for outlines on the slices.\n        */\n        get: function () {\n            return fromBrushCollection(this.i.al);\n        },\n        set: function (v) {\n            this.i.al = toBrushCollection(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"labelFormat\", {\n        /**\n         * Gets or sets the label format string to use for the label.\n        */\n        get: function () {\n            return this.i.ed;\n        },\n        set: function (v) {\n            this.i.ed = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"labelFormatSpecifiers\", {\n        /**\n         * Gets or sets the format specifiers to use with the LabelFormat string.\n        */\n        get: function () {\n            return this.i.ag;\n        },\n        set: function (v) {\n            if (v && !Array.isArray(v) && typeof (v) == \"string\") {\n                var re = /\\s*(?:,|\\s|$)\\s*/gm;\n                v = v.split(re);\n            }\n            this.i.ag = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"othersLabelFormat\", {\n        /**\n         * Gets or sets the label format string to use for the label.\n        */\n        get: function () {\n            return this.i.e7;\n        },\n        set: function (v) {\n            this.i.e7 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"othersLabelFormatSpecifiers\", {\n        /**\n         * Gets or sets the format specifiers to use with the OthersLabelFormat string.\n        */\n        get: function () {\n            return this.i.aj;\n        },\n        set: function (v) {\n            if (v && !Array.isArray(v) && typeof (v) == \"string\") {\n                var re = /\\s*(?:,|\\s|$)\\s*/gm;\n                v = v.split(re);\n            }\n            this.i.aj = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"legendLabelFormat\", {\n        /**\n         * Gets or sets the label format string to use for the label.\n        */\n        get: function () {\n            return this.i.et;\n        },\n        set: function (v) {\n            this.i.et = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"legendLabelFormatSpecifiers\", {\n        /**\n         * Gets or sets the format specifiers to use with the LegendLabelFormat string.\n        */\n        get: function () {\n            return this.i.ah;\n        },\n        set: function (v) {\n            if (v && !Array.isArray(v) && typeof (v) == \"string\") {\n                var re = /\\s*(?:,|\\s|$)\\s*/gm;\n                v = v.split(re);\n            }\n            this.i.ah = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"legendOthersLabelFormat\", {\n        /**\n         * Gets or sets the label format string to use for the label.\n        */\n        get: function () {\n            return this.i.ey;\n        },\n        set: function (v) {\n            this.i.ey = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"legendOthersLabelFormatSpecifiers\", {\n        /**\n         * Gets or sets the format specifiers to use with the LegendOthersLabelFormat string.\n        */\n        get: function () {\n            return this.i.ai;\n        },\n        set: function (v) {\n            if (v && !Array.isArray(v) && typeof (v) == \"string\") {\n                var re = /\\s*(?:,|\\s|$)\\s*/gm;\n                v = v.split(re);\n            }\n            this.i.ai = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"legendItemTemplate\", {\n        /**\n         * Gets or sets the LegendItemTemplate property.\n         * The legend item control content is created according to the LegendItemTemplate on-demand by\n         * the chart object itself.\n        */\n        get: function () {\n            return this.i.legendItemTemplate;\n        },\n        set: function (v) {\n            this.i.legendItemTemplate = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"legendItemBadgeTemplate\", {\n        /**\n         * Gets or sets the LegendItemBadgeTemplate property.\n         * The legend item badge is created according to the LegendItemBadgeTemplate on-demand by\n         * the chart object itself.\n        */\n        get: function () {\n            return this.i.legendItemBadgeTemplate;\n        },\n        set: function (v) {\n            this.i.legendItemBadgeTemplate = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"isDragInteractionEnabled\", {\n        /**\n         * Gets or sets whether the pie chart will handle drag interaction and make them avaiilable in its events.\n        */\n        get: function () {\n            return this.i.cc;\n        },\n        set: function (v) {\n            this.i.cc = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"isSurfaceInteractionDisabled\", {\n        /**\n         * Gets or sets whether all surface interactions with the plot area should be disabled.\n        */\n        get: function () {\n            return this.i.cd;\n        },\n        set: function (v) {\n            this.i.cd = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"shouldDisplayMockData\", {\n        /**\n         * Gets or sets whether the pie chart should display mock data when data isn't present.\n        */\n        get: function () {\n            return this.i.cf;\n        },\n        set: function (v) {\n            this.i.cf = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"shouldUseSkeletonStyleForMockData\", {\n        /**\n         * Gets or sets whether the pie chart should use a skeleton style for mock data.\n        */\n        get: function () {\n            return this.i.cg;\n        },\n        set: function (v) {\n            this.i.cg = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"formatLabel\", {\n        /**\n         * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart.\n        */\n        get: function () {\n            return this.i.a4;\n        },\n        set: function (v) {\n            this.i.a4 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"formatLegendLabel\", {\n        /**\n         * Sets or gets a function which takes an object that produces a formatted label for displaying in the chart's legend.\n        */\n        get: function () {\n            return this.i.a5;\n        },\n        set: function (v) {\n            this.i.a5 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"pixelScalingRatio\", {\n        /**\n         * Gets or sets the scaling value used to affect the pixel density of the control.\n         * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control\n         * to appear blurry.\n        */\n        get: function () {\n            return this.i.dd;\n        },\n        set: function (v) {\n            this.i.dd = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"actualPixelScalingRatio\", {\n        /**\n         * Resolved pixel scaling ratio. Unless explicitly overridden by the\n         * PieChartBase.PixelScalingRatio property,\n         * this one returns the default ratio enforced by device. High resolution devices will initialize this property\n         * to a higher value.\n        */\n        get: function () {\n            return this.i.c0;\n        },\n        set: function (v) {\n            this.i.c0 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectionMode\", {\n        /**\n         * Gets or sets which mode to use for selecting slices.\n        */\n        get: function () {\n            return this.i.bi;\n        },\n        set: function (v) {\n            this.i.bi = ensureEnum(SliceSelectionMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectedItem\", {\n        /**\n         * Gets or sets the currently selected data item.  If a different data item is provided the pie chart\n         * will select the slice associated with the new item.\n        */\n        get: function () {\n            return this.i.selectedItem;\n        },\n        set: function (v) {\n            this.i.selectedItem = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectedItems\", {\n        /**\n         * Gets the currently selected data items.  Adding or removing data items from this collection will\n         * select or deselect the slices associated with those items.\n        */\n        get: function () {\n            if (this._selectedItems === null) {\n                var coll = new IgrObjectCollection();\n                var innerColl = this.i.selectedItems;\n                if (!innerColl) {\n                    innerColl = new ObjectCollection_internal(0);\n                }\n                this._selectedItems = coll._fromInner(innerColl);\n                this.i.selectedItems = innerColl;\n            }\n            return this._selectedItems;\n        },\n        set: function (v) {\n            if (this._selectedItems !== null) {\n                this._selectedItems._setSyncTarget(null);\n                this._selectedItems = null;\n            }\n            var coll = new IgrObjectCollection();\n            this._selectedItems = coll._fromOuter(v);\n            var syncColl = new SyncableObservableCollection$1(Base.$type);\n            var innerColl = this.i.selectedItems;\n            if (!innerColl) {\n                innerColl = new ObjectCollection_internal(0);\n            }\n            syncColl._inner = innerColl;\n            syncColl.clear();\n            this._selectedItems._setSyncTarget(syncColl);\n            this.i.selectedItems = innerColl;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"textStyle\", {\n        /**\n         * Manually overrides the style to use for the labels.\n        */\n        get: function () {\n            return this.i.fn;\n        },\n        set: function (v) {\n            this.i.fn = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrPieChartBase.prototype.findByName = function (name) {\n        if (this.legend && this.legend.name && this.legend.name == name) {\n            return this.legend;\n        }\n        if (this.labelFormatSpecifiers != null && arrayFindByName(this.labelFormatSpecifiers, name)) {\n            return arrayFindByName(this.labelFormatSpecifiers, name);\n        }\n        if (this.othersLabelFormatSpecifiers != null && arrayFindByName(this.othersLabelFormatSpecifiers, name)) {\n            return arrayFindByName(this.othersLabelFormatSpecifiers, name);\n        }\n        if (this.legendLabelFormatSpecifiers != null && arrayFindByName(this.legendLabelFormatSpecifiers, name)) {\n            return arrayFindByName(this.legendLabelFormatSpecifiers, name);\n        }\n        if (this.legendOthersLabelFormatSpecifiers != null && arrayFindByName(this.legendOthersLabelFormatSpecifiers, name)) {\n            return arrayFindByName(this.legendOthersLabelFormatSpecifiers, name);\n        }\n        return null;\n    };\n    Object.defineProperty(IgrPieChartBase.prototype, \"hasUserValues\", {\n        get: function () {\n            return this._hasUserValues;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrPieChartBase.prototype.__m = function (propertyName) {\n        if (!this._inStyling) {\n            this._hasUserValues.add(propertyName);\n        }\n    };\n    IgrPieChartBase.prototype._styling = function (container, component, parent) {\n        if (this._inStyling) {\n            return;\n        }\n        this._inStyling = true;\n        this._stylingContainer = container;\n        this._stylingParent = component;\n        var genericPrefix = \"\";\n        var typeName = this.i.$type.name;\n        if (typeName.indexOf(\"Xam\") === 0) {\n            typeName = typeName.substring(3);\n        }\n        genericPrefix = toSpinal(\"PieChartBase\");\n        var additionalPrefixes = [];\n        var prefix = toSpinal(typeName);\n        additionalPrefixes.push(prefix + \"-\");\n        var b = this.i.$type.baseType;\n        while (b && b.name != \"Object\" &&\n            b.name != \"Base\" &&\n            b.name != \"Control\" &&\n            b.Name != \"DependencyObject\" &&\n            b.Name != \"FrameworkElement\") {\n            typeName = b.name;\n            if (typeName.indexOf(\"Xam\") === 0) {\n                typeName = typeName.substring(3);\n            }\n            var basePrefix = toSpinal(typeName);\n            additionalPrefixes.push(basePrefix + \"-\");\n            b = b.baseType;\n        }\n        if (parent) {\n            var parentTypeName = parent.i.$type.name;\n            if (parentTypeName.indexOf(\"Xam\") === 0) {\n                parentTypeName = parentTypeName.substring(3);\n            }\n            var parentPrefix = toSpinal(parentTypeName);\n            additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n            additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n        }\n        initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n        if (this._otherStyling) {\n            this._otherStyling(container, component, parent);\n        }\n        this._inStyling = false;\n    };\n    /**\n     * Returns the chart visuals expressed as a serialized string.\n    \r\n    */\n    IgrPieChartBase.prototype.exportSerializedVisualData = function () {\n        var iv = this.i.d2();\n        return (iv);\n    };\n    /**\n     * Simulates a mouse click action at the specified point.\n    \r\n    * @param point  * The point to click at.\n    */\n    IgrPieChartBase.prototype.simulateLeftClick = function (point) {\n        this.i.g2(toPoint(point));\n    };\n    /**\n     * Invoked by the containing object to provide reference to the container.\n    \r\n    * @param container  * Reference to the container.\n    */\n    IgrPieChartBase.prototype.provideContainer = function (container) {\n        this.i.provideContainer(container);\n    };\n    /**\n     * Notification from the containing object that the container has been resized.\n    \r\n    */\n    IgrPieChartBase.prototype.notifyContainerResized = function () {\n        this.i.notifyContainerResized();\n    };\n    /**\n     * Invoked when the instance is being destroyed.\n    \r\n    */\n    IgrPieChartBase.prototype.destroy = function () {\n        this.i.destroy();\n    };\n    /**\n     * Use to force the pie chart to finish any deferred work before printing or evaluating its visual.\n     * This should only be called if the visual of the pie chart needs to be synchronously saved or evaluated.\n     * Calling this method too often will hinder the performance of the pie chart.\n    \r\n    */\n    IgrPieChartBase.prototype.flush = function () {\n        this.i.fx();\n    };\n    IgrPieChartBase.prototype.notifySetItem = function (source_, index, oldItem, newItem) {\n        this.i.f6(source_, index, oldItem, newItem);\n    };\n    /**\n     * Manually notifies the pie chart's data source that the data it has bound to has been cleared and needs to be re-examined.\n     * This should not be called if the data that the pie chart is bound to is already observable.\n    \r\n    * @param source_  * The data source.\n    */\n    IgrPieChartBase.prototype.notifyClearItems = function (source_) {\n        this.i.f2(source_);\n    };\n    IgrPieChartBase.prototype.notifyInsertItem = function (source_, index, newItem) {\n        this.i.f4(source_, index, newItem);\n    };\n    IgrPieChartBase.prototype.notifyRemoveItem = function (source_, index, oldItem) {\n        this.i.f5(source_, index, oldItem);\n    };\n    /**\n     * Assigns data source for the items.\n    \r\n    * @param source_  * Array of the data source items.\n    */\n    IgrPieChartBase.prototype.setWidgetLevelDataSource = function (source_) {\n        this.i.g1(source_);\n    };\n    /**\n     * Resets items data source.\n    \r\n    */\n    IgrPieChartBase.prototype.removeWidgetLevelDataSource = function () {\n        this.i.gs();\n    };\n    /**\n     * Invoked when style is updated.\n    \r\n    */\n    IgrPieChartBase.prototype.styleUpdated = function () {\n        this.i.g6();\n    };\n    Object.defineProperty(IgrPieChartBase.prototype, \"labelClick\", {\n        /**\n         * Raised when the slice's label is clicked.\n        */\n        get: function () {\n            return this._labelClick;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._labelClick_wrapped !== null) {\n                this.i.labelClick = delegateRemove(this.i.labelClick, this._labelClick_wrapped);\n                this._labelClick_wrapped = null;\n                this._labelClick = null;\n            }\n            this._labelClick = ev;\n            this._labelClick_wrapped = function (o, e) {\n                var outerArgs = new IgrLabelClickEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeLabelClick) {\n                    _this.beforeLabelClick(_this, outerArgs);\n                }\n                if (_this._labelClick) {\n                    _this._labelClick(_this, outerArgs);\n                }\n            };\n            this.i.labelClick = delegateCombine(this.i.labelClick, this._labelClick_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectedItemChanging\", {\n        /**\n         * Raised when the SelectedItem property is changing.  This event is cancelable.\n        */\n        get: function () {\n            return this._selectedItemChanging;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._selectedItemChanging_wrapped !== null) {\n                this.i.selectedItemChanging = delegateRemove(this.i.selectedItemChanging, this._selectedItemChanging_wrapped);\n                this._selectedItemChanging_wrapped = null;\n                this._selectedItemChanging = null;\n            }\n            this._selectedItemChanging = ev;\n            this._selectedItemChanging_wrapped = function (o, e) {\n                var outerArgs = new IgrSelectedItemChangingEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeSelectedItemChanging) {\n                    _this.beforeSelectedItemChanging(_this, outerArgs);\n                }\n                if (_this._selectedItemChanging) {\n                    _this._selectedItemChanging(_this, outerArgs);\n                }\n            };\n            this.i.selectedItemChanging = delegateCombine(this.i.selectedItemChanging, this._selectedItemChanging_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectedItemsChanging\", {\n        /**\n         * Raised when the SelectedItems collection is changing.  This event is cancelable.\n        */\n        get: function () {\n            return this._selectedItemsChanging;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._selectedItemsChanging_wrapped !== null) {\n                this.i.selectedItemsChanging = delegateRemove(this.i.selectedItemsChanging, this._selectedItemsChanging_wrapped);\n                this._selectedItemsChanging_wrapped = null;\n                this._selectedItemsChanging = null;\n            }\n            this._selectedItemsChanging = ev;\n            this._selectedItemsChanging_wrapped = function (o, e) {\n                var outerArgs = new IgrSelectedItemsChangingEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeSelectedItemsChanging) {\n                    _this.beforeSelectedItemsChanging(_this, outerArgs);\n                }\n                if (_this._selectedItemsChanging) {\n                    _this._selectedItemsChanging(_this, outerArgs);\n                }\n            };\n            this.i.selectedItemsChanging = delegateCombine(this.i.selectedItemsChanging, this._selectedItemsChanging_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectedItemChanged\", {\n        /**\n         * Raised when the SelectedItem property has changed.\n        */\n        get: function () {\n            return this._selectedItemChanged;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._selectedItemChanged_wrapped !== null) {\n                this.i.selectedItemChanged = delegateRemove(this.i.selectedItemChanged, this._selectedItemChanged_wrapped);\n                this._selectedItemChanged_wrapped = null;\n                this._selectedItemChanged = null;\n            }\n            this._selectedItemChanged = ev;\n            this._selectedItemChanged_wrapped = function (o, e) {\n                var outerArgs = new IgrSelectedItemChangedEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeSelectedItemChanged) {\n                    _this.beforeSelectedItemChanged(_this, outerArgs);\n                }\n                if (_this._selectedItemChanged) {\n                    _this._selectedItemChanged(_this, outerArgs);\n                }\n            };\n            this.i.selectedItemChanged = delegateCombine(this.i.selectedItemChanged, this._selectedItemChanged_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"selectedItemsChanged\", {\n        /**\n         * Raised when the SelectedItems collection has changed.\n        */\n        get: function () {\n            return this._selectedItemsChanged;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._selectedItemsChanged_wrapped !== null) {\n                this.i.selectedItemsChanged = delegateRemove(this.i.selectedItemsChanged, this._selectedItemsChanged_wrapped);\n                this._selectedItemsChanged_wrapped = null;\n                this._selectedItemsChanged = null;\n            }\n            this._selectedItemsChanged = ev;\n            this._selectedItemsChanged_wrapped = function (o, e) {\n                var outerArgs = new IgrSelectedItemsChangedEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeSelectedItemsChanged) {\n                    _this.beforeSelectedItemsChanged(_this, outerArgs);\n                }\n                if (_this._selectedItemsChanged) {\n                    _this._selectedItemsChanged(_this, outerArgs);\n                }\n            };\n            this.i.selectedItemsChanged = delegateCombine(this.i.selectedItemsChanged, this._selectedItemsChanged_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"sliceClick\", {\n        /**\n         * Raised when the slice is clicked.\n        */\n        get: function () {\n            return this._sliceClick;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._sliceClick_wrapped !== null) {\n                this.i.sliceClick = delegateRemove(this.i.sliceClick, this._sliceClick_wrapped);\n                this._sliceClick_wrapped = null;\n                this._sliceClick = null;\n            }\n            this._sliceClick = ev;\n            this._sliceClick_wrapped = function (o, e) {\n                var outerArgs = new IgrSliceClickEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeSliceClick) {\n                    _this.beforeSliceClick(_this, outerArgs);\n                }\n                if (_this._sliceClick) {\n                    _this._sliceClick(_this, outerArgs);\n                }\n            };\n            this.i.sliceClick = delegateCombine(this.i.sliceClick, this._sliceClick_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"sliceEnter\", {\n        /**\n         * Raised when a slice is entered by the pointer.\n        */\n        get: function () {\n            return this._sliceEnter;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._sliceEnter_wrapped !== null) {\n                this.i.sliceEnter = delegateRemove(this.i.sliceEnter, this._sliceEnter_wrapped);\n                this._sliceEnter_wrapped = null;\n                this._sliceEnter = null;\n            }\n            this._sliceEnter = ev;\n            this._sliceEnter_wrapped = function (o, e) {\n                var outerArgs = new IgrSliceEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeSliceEnter) {\n                    _this.beforeSliceEnter(_this, outerArgs);\n                }\n                if (_this._sliceEnter) {\n                    _this._sliceEnter(_this, outerArgs);\n                }\n            };\n            this.i.sliceEnter = delegateCombine(this.i.sliceEnter, this._sliceEnter_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"sliceLeave\", {\n        /**\n         * Raised when a slice is left by the pointer;\n        */\n        get: function () {\n            return this._sliceLeave;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._sliceLeave_wrapped !== null) {\n                this.i.sliceLeave = delegateRemove(this.i.sliceLeave, this._sliceLeave_wrapped);\n                this._sliceLeave_wrapped = null;\n                this._sliceLeave = null;\n            }\n            this._sliceLeave = ev;\n            this._sliceLeave_wrapped = function (o, e) {\n                var outerArgs = new IgrSliceEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeSliceLeave) {\n                    _this.beforeSliceLeave(_this, outerArgs);\n                }\n                if (_this._sliceLeave) {\n                    _this._sliceLeave(_this, outerArgs);\n                }\n            };\n            this.i.sliceLeave = delegateCombine(this.i.sliceLeave, this._sliceLeave_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrPieChartBase.prototype, \"sliceHover\", {\n        /**\n         * Raised when a pointer moves over a slice.\n        */\n        get: function () {\n            return this._sliceHover;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._sliceHover_wrapped !== null) {\n                this.i.sliceHover = delegateRemove(this.i.sliceHover, this._sliceHover_wrapped);\n                this._sliceHover_wrapped = null;\n                this._sliceHover = null;\n            }\n            this._sliceHover = ev;\n            this._sliceHover_wrapped = function (o, e) {\n                var outerArgs = new IgrSliceEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeSliceHover) {\n                    _this.beforeSliceHover(_this, outerArgs);\n                }\n                if (_this._sliceHover) {\n                    _this._sliceHover(_this, outerArgs);\n                }\n            };\n            this.i.sliceHover = delegateCombine(this.i.sliceHover, this._sliceHover_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrPieChartBase;\n}(React.Component));\nexport { IgrPieChartBase };\n"]},"metadata":{},"sourceType":"module"}