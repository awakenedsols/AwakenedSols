{"ast":null,"code":"import { __extends } from \"tslib\"; //\n// Original version: https://github.com/mosa/Mono-Class-Libraries/blob/master/mcs/class/System.XML/System.Xml/XmlTextReader.cs\n//\n// System.Xml.XmlInputStream \n//\tencoding-specification-wise XML input stream and reader\n//\n// Author:\n//\tAtsushi Enomoto (ginga@kit.hi-ho.ne.jp)\n//\n//\t(C)2003 Atsushi Enomoto\n//\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nimport { NonBlockingStreamReader } from \"./NonBlockingStreamReader\";\nimport { XmlInputStream } from \"./XmlInputStream\";\nimport { markType } from \"./type\";\nimport { XmlException } from \"./XmlException\";\n/**\n * @hidden\n */\n\nvar XmlStreamReader =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(XmlStreamReader, _super);\n\n  function XmlStreamReader(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = this;\n\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        {\n          var c = _rest[0];\n          _this = _super.call(this, c, c.actualEncoding != null ? c.actualEncoding : XmlInputStream.strictUTF8) || this;\n          _this.ae = null;\n          _this.ae = c;\n        }\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          var d = [new XmlInputStream(c)];\n          {\n            var f = d[0];\n            _this = _super.call(this, f, f.actualEncoding != null ? f.actualEncoding : XmlInputStream.strictUTF8) || this;\n            _this.ae = null;\n            _this.ae = f;\n          }\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  XmlStreamReader.prototype.i = function () {\n    this.ae.close();\n  };\n\n  XmlStreamReader.prototype.c = function (a, b, c) {\n    try {\n      return _super.prototype.c.call(this, a, b, c);\n    } catch (d) {\n      throw new XmlException(3, \"invalid data.\");\n    }\n  };\n\n  XmlStreamReader.prototype.dispose1 = function (a) {\n    _super.prototype.dispose1.call(this, a);\n\n    if (a) {\n      this.i();\n    }\n  };\n\n  XmlStreamReader.$t = markType(XmlStreamReader, 'XmlStreamReader', NonBlockingStreamReader.$);\n  XmlStreamReader.ad = new XmlException(3, \"invalid data.\");\n  return XmlStreamReader;\n}(NonBlockingStreamReader);\n\nexport { XmlStreamReader };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/XmlStreamReader.js"],"names":["__extends","NonBlockingStreamReader","XmlInputStream","markType","XmlException","XmlStreamReader","_super","a","_rest","_i","arguments","length","_this","c","call","actualEncoding","strictUTF8","ae","d","f","prototype","i","close","b","dispose1","$t","$","ad"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\n//\n// Original version: https://github.com/mosa/Mono-Class-Libraries/blob/master/mcs/class/System.XML/System.Xml/XmlTextReader.cs\n//\n// System.Xml.XmlInputStream \n//\tencoding-specification-wise XML input stream and reader\n//\n// Author:\n//\tAtsushi Enomoto (ginga@kit.hi-ho.ne.jp)\n//\n//\t(C)2003 Atsushi Enomoto\n//\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\nimport { NonBlockingStreamReader } from \"./NonBlockingStreamReader\";\nimport { XmlInputStream } from \"./XmlInputStream\";\nimport { markType } from \"./type\";\nimport { XmlException } from \"./XmlException\";\n/**\n * @hidden\n */\nvar XmlStreamReader = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(XmlStreamReader, _super);\n    function XmlStreamReader(a) {\n        var _rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _rest[_i - 1] = arguments[_i];\n        }\n        var _this = this;\n        a = (a == void 0) ? 0 : a;\n        switch (a) {\n            case 0:\n                {\n                    var c = _rest[0];\n                    _this = _super.call(this, c, c.actualEncoding != null ? c.actualEncoding : XmlInputStream.strictUTF8) || this;\n                    _this.ae = null;\n                    _this.ae = c;\n                }\n                break;\n            case 1:\n                {\n                    var c = _rest[0];\n                    var d = [new XmlInputStream(c)];\n                    {\n                        var f = d[0];\n                        _this = _super.call(this, f, f.actualEncoding != null ? f.actualEncoding : XmlInputStream.strictUTF8) || this;\n                        _this.ae = null;\n                        _this.ae = f;\n                    }\n                }\n                break;\n        }\n        return _this;\n    }\n    XmlStreamReader.prototype.i = function () {\n        this.ae.close();\n    };\n    XmlStreamReader.prototype.c = function (a, b, c) {\n        try {\n            return _super.prototype.c.call(this, a, b, c);\n        }\n        catch (d) {\n            throw new XmlException(3, \"invalid data.\");\n        }\n    };\n    XmlStreamReader.prototype.dispose1 = function (a) {\n        _super.prototype.dispose1.call(this, a);\n        if (a) {\n            this.i();\n        }\n    };\n    XmlStreamReader.$t = markType(XmlStreamReader, 'XmlStreamReader', NonBlockingStreamReader.$);\n    XmlStreamReader.ad = new XmlException(3, \"invalid data.\");\n    return XmlStreamReader;\n}(NonBlockingStreamReader));\nexport { XmlStreamReader };\n"]},"metadata":{},"sourceType":"module"}