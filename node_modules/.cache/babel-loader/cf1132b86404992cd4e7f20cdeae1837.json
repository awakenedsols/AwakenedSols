{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { SegmentData } from \"./SegmentData\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\nimport { markType } from \"./type\";\nimport { StringBuilder } from \"./StringBuilder\";\n/**\n * @hidden\n */\n\nvar PolyBezierSegmentData =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(PolyBezierSegmentData, _super);\n\n  function PolyBezierSegmentData(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this._points = null;\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        {\n          _this.points = new List$1(PointData.$, 0);\n        }\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          _this.points = new List$1(PointData.$, 0);\n\n          for (var d = 0; d < c.b.count; d++) {\n            _this.points.add(PointData.b(c.b._inner[d]));\n          }\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  PolyBezierSegmentData.prototype.get_type = function () {\n    return \"PolyBezierSpline\";\n  };\n\n  Object.defineProperty(PolyBezierSegmentData.prototype, \"type\", {\n    get: function () {\n      return this.get_type();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(PolyBezierSegmentData.prototype, \"points\", {\n    get: function () {\n      return this._points;\n    },\n    set: function (a) {\n      this._points = a;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  PolyBezierSegmentData.prototype.a = function () {\n    var a = new StringBuilder(0);\n    a.u(\"points: [\");\n\n    for (var b = 0; b < this.points.count; b++) {\n      if (b != 0) {\n        a.l(\", \");\n      }\n\n      a.l(\"{ x: \" + this.points._inner[b].x + \", y: \" + this.points._inner[b].y + \"}\");\n    }\n\n    a.u(\"]\");\n    return a.toString();\n  };\n\n  PolyBezierSegmentData.prototype.scaleByViewport = function (a) {\n    for (var b = 0; b < this.points.count; b++) {\n      this.points._inner[b] = new PointData((this.points._inner[b].x - a.left) / a.width, (this.points._inner[b].y - a.top) / a.height);\n    }\n  };\n\n  PolyBezierSegmentData.prototype.getPointsOverride = function (a, b) {\n    for (var c = 0; c < this.points.count; c++) {\n      a.add(new PointData(this.points._inner[c].x, this.points._inner[c].y));\n    }\n  };\n\n  PolyBezierSegmentData.$t = markType(PolyBezierSegmentData, 'PolyBezierSegmentData', SegmentData.$);\n  return PolyBezierSegmentData;\n}(SegmentData);\n\nexport { PolyBezierSegmentData };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/PolyBezierSegmentData.js"],"names":["__extends","SegmentData","List$1","PointData","markType","StringBuilder","PolyBezierSegmentData","_super","a","_rest","_i","arguments","length","_this","call","_points","points","$","c","d","b","count","add","_inner","prototype","get_type","Object","defineProperty","get","enumerable","configurable","set","u","l","x","y","toString","scaleByViewport","left","width","top","height","getPointsOverride","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { SegmentData } from \"./SegmentData\";\nimport { List$1 } from \"./List$1\";\nimport { PointData } from \"./PointData\";\nimport { markType } from \"./type\";\nimport { StringBuilder } from \"./StringBuilder\";\n/**\n * @hidden\n */\nvar PolyBezierSegmentData = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(PolyBezierSegmentData, _super);\n    function PolyBezierSegmentData(a) {\n        var _rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _rest[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this._points = null;\n        a = (a == void 0) ? 0 : a;\n        switch (a) {\n            case 0:\n                {\n                    _this.points = new List$1(PointData.$, 0);\n                }\n                break;\n            case 1:\n                {\n                    var c = _rest[0];\n                    _this.points = new List$1(PointData.$, 0);\n                    for (var d = 0; d < c.b.count; d++) {\n                        _this.points.add(PointData.b(c.b._inner[d]));\n                    }\n                }\n                break;\n        }\n        return _this;\n    }\n    PolyBezierSegmentData.prototype.get_type = function () {\n        return \"PolyBezierSpline\";\n    };\n    Object.defineProperty(PolyBezierSegmentData.prototype, \"type\", {\n        get: function () {\n            return this.get_type();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(PolyBezierSegmentData.prototype, \"points\", {\n        get: function () {\n            return this._points;\n        },\n        set: function (a) {\n            this._points = a;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PolyBezierSegmentData.prototype.a = function () {\n        var a = new StringBuilder(0);\n        a.u(\"points: [\");\n        for (var b = 0; b < this.points.count; b++) {\n            if (b != 0) {\n                a.l(\", \");\n            }\n            a.l(\"{ x: \" + this.points._inner[b].x + \", y: \" + this.points._inner[b].y + \"}\");\n        }\n        a.u(\"]\");\n        return a.toString();\n    };\n    PolyBezierSegmentData.prototype.scaleByViewport = function (a) {\n        for (var b = 0; b < this.points.count; b++) {\n            this.points._inner[b] = new PointData((this.points._inner[b].x - a.left) / a.width, (this.points._inner[b].y - a.top) / a.height);\n        }\n    };\n    PolyBezierSegmentData.prototype.getPointsOverride = function (a, b) {\n        for (var c = 0; c < this.points.count; c++) {\n            a.add(new PointData(this.points._inner[c].x, this.points._inner[c].y));\n        }\n    };\n    PolyBezierSegmentData.$t = markType(PolyBezierSegmentData, 'PolyBezierSegmentData', SegmentData.$);\n    return PolyBezierSegmentData;\n}(SegmentData));\nexport { PolyBezierSegmentData };\n"]},"metadata":{},"sourceType":"module"}