{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { SplineType_$type } from \"./SplineType\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { ensureBool, ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent spline series.\n*/\n\nvar IgrSplineSeriesBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrSplineSeriesBase, _super);\n\n  function IgrSplineSeriesBase(props) {\n    return _super.call(this, props) || this;\n  }\n\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"isSplineShapePartOfRange\", {\n    /**\n     * Gets or sets whether to include the spline shape in the axis range requested of the axis.\n    */\n    get: function () {\n      return this.i.vc;\n    },\n    set: function (v) {\n      this.i.vc = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"isAreaOrLine\", {\n    /**\n     * Gets whether the current series shows an area or line shape.\n    */\n    get: function () {\n      return this.i.de;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrSplineSeriesBase.prototype, \"splineType\", {\n    /**\n     * Gets or sets the type of spline to be rendered.\n    *\n    * ```ts\n    * this.series.splineType = SplineType.Clamped;\n    * ```\n    *\n    * ```ts\n    *  <IgrDataChart\n    *     dataSource={this.state.dataSource} >\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" />\n    *     <IgrNumericYAxis name=\"yAxis\" />\n    *\n    *     <IgrSplineAreaSeries\n    *      name=\"series1\"\n    *      valueMemberPath=\"value\"/>\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.vb;\n    },\n    set: function (v) {\n      this.i.vb = ensureEnum(SplineType_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrSplineSeriesBase;\n}(IgrHorizontalAnchoredCategorySeries);\n\nexport { IgrSplineSeriesBase };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-spline-series-base.js"],"names":["__extends","SplineType_$type","IgrHorizontalAnchoredCategorySeries","ensureBool","ensureEnum","IgrSplineSeriesBase","_super","props","call","Object","defineProperty","prototype","get","_implementation","enumerable","configurable","i","vc","set","v","de","vb"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,gBAAT,QAAiC,cAAjC;AACA,SAASC,mCAAT,QAAoD,2CAApD;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,qBAAvC;AACA;AACA;AACA;;AACA,IAAIC,mBAAmB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACrEN,EAAAA,SAAS,CAACK,mBAAD,EAAsBC,MAAtB,CAAT;;AACA,WAASD,mBAAT,CAA6BE,KAA7B,EAAoC;AAChC,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDE,EAAAA,MAAM,CAACC,cAAP,CAAsBL,mBAAmB,CAACM,SAA1C,EAAqD,GAArD,EAA0D;AACtD;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANqD;AAOtDC,IAAAA,UAAU,EAAE,KAP0C;AAQtDC,IAAAA,YAAY,EAAE;AARwC,GAA1D;AAUAN,EAAAA,MAAM,CAACC,cAAP,CAAsBL,mBAAmB,CAACM,SAA1C,EAAqD,0BAArD,EAAiF;AAC7E;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOC,EAAd;AACH,KAN4E;AAO7EC,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOC,EAAP,GAAYd,UAAU,CAACgB,CAAD,CAAtB;AACH,KAT4E;AAU7EL,IAAAA,UAAU,EAAE,KAViE;AAW7EC,IAAAA,YAAY,EAAE;AAX+D,GAAjF;AAaAN,EAAAA,MAAM,CAACC,cAAP,CAAsBL,mBAAmB,CAACM,SAA1C,EAAqD,cAArD,EAAqE;AACjE;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOI,EAAd;AACH,KANgE;AAOjEN,IAAAA,UAAU,EAAE,KAPqD;AAQjEC,IAAAA,YAAY,EAAE;AARmD,GAArE;AAUAN,EAAAA,MAAM,CAACC,cAAP,CAAsBL,mBAAmB,CAACM,SAA1C,EAAqD,YAArD,EAAmE;AAC/D;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOK,EAAd;AACH,KAvB8D;AAwB/DH,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOK,EAAP,GAAYjB,UAAU,CAACH,gBAAD,EAAmBkB,CAAnB,CAAtB;AACH,KA1B8D;AA2B/DL,IAAAA,UAAU,EAAE,KA3BmD;AA4B/DC,IAAAA,YAAY,EAAE;AA5BiD,GAAnE;AA8BA,SAAOV,mBAAP;AACH,CArEsD,CAqErDH,mCArEqD,CAAvD;;AAsEA,SAASG,mBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { SplineType_$type } from \"./SplineType\";\nimport { IgrHorizontalAnchoredCategorySeries } from \"./igr-horizontal-anchored-category-series\";\nimport { ensureBool, ensureEnum } from \"igniteui-react-core\";\n/**\n * Represents the base class for all IgxDataChartComponent spline series.\n*/\nvar IgrSplineSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrSplineSeriesBase, _super);\n    function IgrSplineSeriesBase(props) {\n        return _super.call(this, props) || this;\n    }\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"isSplineShapePartOfRange\", {\n        /**\n         * Gets or sets whether to include the spline shape in the axis range requested of the axis.\n        */\n        get: function () {\n            return this.i.vc;\n        },\n        set: function (v) {\n            this.i.vc = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"isAreaOrLine\", {\n        /**\n         * Gets whether the current series shows an area or line shape.\n        */\n        get: function () {\n            return this.i.de;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrSplineSeriesBase.prototype, \"splineType\", {\n        /**\n         * Gets or sets the type of spline to be rendered.\n        *\n        * ```ts\n        * this.series.splineType = SplineType.Clamped;\n        * ```\n        *\n        * ```ts\n        *  <IgrDataChart\n        *     dataSource={this.state.dataSource} >\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" />\n        *     <IgrNumericYAxis name=\"yAxis\" />\n        *\n        *     <IgrSplineAreaSeries\n        *      name=\"series1\"\n        *      valueMemberPath=\"value\"/>\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.vb;\n        },\n        set: function (v) {\n            this.i.vb = ensureEnum(SplineType_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrSplineSeriesBase;\n}(IgrHorizontalAnchoredCategorySeries));\nexport { IgrSplineSeriesBase };\n"]},"metadata":{},"sourceType":"module"}