{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AssigningScatterStyleEventArgsDescriptionMetadata } from \"./AssigningScatterStyleEventArgsDescriptionMetadata\";\nimport { AssigningScatterMarkerStyleEventArgsDescriptionMetadata } from \"./AssigningScatterMarkerStyleEventArgsDescriptionMetadata\";\nimport { MarkerSeriesDescriptionMetadata } from \"./MarkerSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar ScatterBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ScatterBaseDescriptionMetadata, _super);\n\n  function ScatterBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ScatterBaseDescriptionMetadata.b = function (a) {\n    if (ScatterBaseDescriptionMetadata.a == null) {\n      ScatterBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ScatterBaseDescriptionMetadata.c(ScatterBaseDescriptionMetadata.a);\n    }\n\n    if (a.g(ScatterBaseDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ScatterBaseDescriptionMetadata.a);\n    AssigningScatterStyleEventArgsDescriptionMetadata.d(a);\n    AssigningScatterMarkerStyleEventArgsDescriptionMetadata.d(a);\n  };\n\n  ScatterBaseDescriptionMetadata.c = function (a) {\n    MarkerSeriesDescriptionMetadata.c(a);\n    a.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\n    a.item(\"XAxisRef@nameBinding\", \"true\");\n    a.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\n    a.item(\"YAxisRef@nameBinding\", \"true\");\n    a.item(\"XMemberPath\", \"String\");\n    a.item(\"YMemberPath\", \"String\");\n    a.item(\"XMemberAsLegendLabel\", \"String\");\n    a.item(\"YMemberAsLegendLabel\", \"String\");\n    a.item(\"XMemberAsLegendUnit\", \"String\");\n    a.item(\"YMemberAsLegendUnit\", \"String\");\n    a.item(\"TrendLineType\", \"ExportedType:string:TrendLineType\");\n    a.item(\"TrendLineType@names\", \"None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage\");\n    a.item(\"TrendLineBrush\", \"Brush\");\n    a.item(\"ActualTrendLineBrush\", \"Brush\");\n    a.item(\"TrendLineThickness\", \"Number:double\");\n    a.item(\"TrendLinePeriod\", \"Number:int\");\n    a.item(\"MarkerCollisionAvoidance\", \"ExportedType:string:CollisionAvoidanceType\");\n    a.item(\"MarkerCollisionAvoidance@names\", \"None;Omit;Fade;OmitAndShift;FadeAndShift\");\n    a.item(\"TrendLineZIndex\", \"Number:int\");\n    a.item(\"MaximumMarkers\", \"Number:int\");\n    a.item(\"ItemSearchMode\", \"ExportedType:string:ScatterItemSearchMode\");\n    a.item(\"ItemSearchMode@names\", \"Auto;ClosestVisiblePoint;ClosestPoint;ClosestVisiblePointOnClosestLine;ClosestPointOnClosestLine;None\");\n    a.item(\"ItemSearchThreshold\", \"Number:int\");\n    a.item(\"ActualItemSearchMode\", \"ExportedType:string:ScatterItemSearchMode\");\n    a.item(\"ActualItemSearchMode@names\", \"Auto;ClosestVisiblePoint;ClosestPoint;ClosestVisiblePointOnClosestLine;ClosestPointOnClosestLine;None\");\n    a.item(\"IsCustomScatterStyleAllowed\", \"Boolean\");\n    a.item(\"IsCustomScatterMarkerStyleAllowed\", \"Boolean\");\n    a.item(\"AssigningScatterStyleRef\", \"EventRef::assigningScatterStyle\");\n    a.item(\"AssigningScatterMarkerStyleRef\", \"EventRef::assigningScatterMarkerStyle\");\n  };\n\n  ScatterBaseDescriptionMetadata.d = function (a) {\n    ScatterBaseDescriptionMetadata.b(a);\n    a.t(\"ScatterBase\", ScatterBaseDescriptionMetadata.a);\n  };\n\n  ScatterBaseDescriptionMetadata.$t = markType(ScatterBaseDescriptionMetadata, 'ScatterBaseDescriptionMetadata');\n  ScatterBaseDescriptionMetadata.a = null;\n  return ScatterBaseDescriptionMetadata;\n}(Base);\n\nexport { ScatterBaseDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/ScatterBaseDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","AssigningScatterStyleEventArgsDescriptionMetadata","AssigningScatterMarkerStyleEventArgsDescriptionMetadata","MarkerSeriesDescriptionMetadata","ScatterBaseDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","t","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { AssigningScatterStyleEventArgsDescriptionMetadata } from \"./AssigningScatterStyleEventArgsDescriptionMetadata\";\nimport { AssigningScatterMarkerStyleEventArgsDescriptionMetadata } from \"./AssigningScatterMarkerStyleEventArgsDescriptionMetadata\";\nimport { MarkerSeriesDescriptionMetadata } from \"./MarkerSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar ScatterBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ScatterBaseDescriptionMetadata, _super);\n    function ScatterBaseDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScatterBaseDescriptionMetadata.b = function (a) {\n        if (ScatterBaseDescriptionMetadata.a == null) {\n            ScatterBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ScatterBaseDescriptionMetadata.c(ScatterBaseDescriptionMetadata.a);\n        }\n        if (a.g(ScatterBaseDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ScatterBaseDescriptionMetadata.a);\n        AssigningScatterStyleEventArgsDescriptionMetadata.d(a);\n        AssigningScatterMarkerStyleEventArgsDescriptionMetadata.d(a);\n    };\n    ScatterBaseDescriptionMetadata.c = function (a) {\n        MarkerSeriesDescriptionMetadata.c(a);\n        a.item(\"XAxisRef\", \"(w:XAxis,wf:XAxis)DataRef::object\");\n        a.item(\"XAxisRef@nameBinding\", \"true\");\n        a.item(\"YAxisRef\", \"(w:YAxis,wf:YAxis)DataRef::object\");\n        a.item(\"YAxisRef@nameBinding\", \"true\");\n        a.item(\"XMemberPath\", \"String\");\n        a.item(\"YMemberPath\", \"String\");\n        a.item(\"XMemberAsLegendLabel\", \"String\");\n        a.item(\"YMemberAsLegendLabel\", \"String\");\n        a.item(\"XMemberAsLegendUnit\", \"String\");\n        a.item(\"YMemberAsLegendUnit\", \"String\");\n        a.item(\"TrendLineType\", \"ExportedType:string:TrendLineType\");\n        a.item(\"TrendLineType@names\", \"None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage\");\n        a.item(\"TrendLineBrush\", \"Brush\");\n        a.item(\"ActualTrendLineBrush\", \"Brush\");\n        a.item(\"TrendLineThickness\", \"Number:double\");\n        a.item(\"TrendLinePeriod\", \"Number:int\");\n        a.item(\"MarkerCollisionAvoidance\", \"ExportedType:string:CollisionAvoidanceType\");\n        a.item(\"MarkerCollisionAvoidance@names\", \"None;Omit;Fade;OmitAndShift;FadeAndShift\");\n        a.item(\"TrendLineZIndex\", \"Number:int\");\n        a.item(\"MaximumMarkers\", \"Number:int\");\n        a.item(\"ItemSearchMode\", \"ExportedType:string:ScatterItemSearchMode\");\n        a.item(\"ItemSearchMode@names\", \"Auto;ClosestVisiblePoint;ClosestPoint;ClosestVisiblePointOnClosestLine;ClosestPointOnClosestLine;None\");\n        a.item(\"ItemSearchThreshold\", \"Number:int\");\n        a.item(\"ActualItemSearchMode\", \"ExportedType:string:ScatterItemSearchMode\");\n        a.item(\"ActualItemSearchMode@names\", \"Auto;ClosestVisiblePoint;ClosestPoint;ClosestVisiblePointOnClosestLine;ClosestPointOnClosestLine;None\");\n        a.item(\"IsCustomScatterStyleAllowed\", \"Boolean\");\n        a.item(\"IsCustomScatterMarkerStyleAllowed\", \"Boolean\");\n        a.item(\"AssigningScatterStyleRef\", \"EventRef::assigningScatterStyle\");\n        a.item(\"AssigningScatterMarkerStyleRef\", \"EventRef::assigningScatterMarkerStyle\");\n    };\n    ScatterBaseDescriptionMetadata.d = function (a) {\n        ScatterBaseDescriptionMetadata.b(a);\n        a.t(\"ScatterBase\", ScatterBaseDescriptionMetadata.a);\n    };\n    ScatterBaseDescriptionMetadata.$t = markType(ScatterBaseDescriptionMetadata, 'ScatterBaseDescriptionMetadata');\n    ScatterBaseDescriptionMetadata.a = null;\n    return ScatterBaseDescriptionMetadata;\n}(Base));\nexport { ScatterBaseDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}