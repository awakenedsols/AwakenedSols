{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { IgrCategoryAxisBase } from \"./igr-category-axis-base\";\nimport { CategoryAngleAxis } from \"./CategoryAngleAxis\";\n/**\n * Represents a IgxDataChartComponent category angle axis. Useful for displaying radial categories.\n*\n* `IgrCategoryAngleAxis` represents a IgxDataChartComponent category angle axis. Useful for displaying radial categories\n*\n* ```ts\n* <IgrDataChart\n* \tref={this.onChartRef}\n* \tdataSource={this.state.dataSource}\n* \twidth=\"100%\"\n* \theight=\"100%\" >\n*\n*     <IgrCategoryAngleAxis name=\"angleAxis\" label=\"Department\" />\n*     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n*\n* </IgrDataChart>\n* ```\n*/\n\nvar IgrCategoryAngleAxis =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrCategoryAngleAxis, _super);\n\n  function IgrCategoryAngleAxis(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._actualIntervalChange = null;\n    _this._actualIntervalChange_wrapped = null;\n    return _this;\n  }\n\n  IgrCategoryAngleAxis.prototype.createImplementation = function () {\n    return new CategoryAngleAxis();\n  };\n\n  Object.defineProperty(IgrCategoryAngleAxis.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryAngleAxis.prototype, \"isAngular\", {\n    /**\n     * Checks if the axis is of angular type\n    */\n    get: function () {\n      return this.i.b8;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryAngleAxis.prototype, \"startAngleOffset\", {\n    /**\n     * Indicates the angle in degress that the chart's 0th angle should be offset.\n    *\n    * Indicates the angle in degress that the chart's 0th angle should be offset.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}   >\n    *\n    *     <IgrCategoryAngleAxis name=\"angleAxis\" startAngleOffset ={30} />\n    *     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n    *\n    * </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.m1;\n    },\n    set: function (v) {\n      this.i.m1 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryAngleAxis.prototype, \"interval\", {\n    /**\n     * Gets or sets the frequency of displayed labels.\n     * The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.\n    *\n    * Gets or sets the frequency of displayed labels.The set value is a factor that determines which labels will be hidden.\n    * For example, an interval of 2 will display every other label.\n    *\n    * ```ts\n    * <IgrDataChart\n    *     dataSource={this.state.dataSource}   >\n    *\n    *     <IgrCategoryAngleAxis name=\"angleAxis\" interval ={2} />\n    *     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n    *\n    * </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.my;\n    },\n    set: function (v) {\n      this.i.my = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryAngleAxis.prototype, \"actualInterval\", {\n    /**\n     * Gets the effective value for the current Interval.\n    *\n    * Gets the effective value for the current Interval.\n    *\n    * ```ts\n    *\n    * \t<IgrDataChart\n    * \tref={this.onChartRef}\n    * \tdataSource={this.state.dataSource}\n    * \twidth=\"100%\"\n    * \theight=\"100%\" >\n    *\n    *     <IgrCategoryAngleAxis name=\"angleAxis\" label=\"Department\" actualInterval={5} />\n    *     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n    *\n    * </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.ms;\n    },\n    set: function (v) {\n      this.i.ms = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryAngleAxis.prototype, \"minorInterval\", {\n    /**\n     * Gets or sets the frequency of displayed minor lines.\n     * The set value is a factor that determines how the minor lines will be displayed.\n    *\n    * Gets or sets the frequency of displayed minor lines. The set value is a factor that determines how the minor lines will be displayed.\n    *\n    * ```ts\n    *    <IgrDataChart\n    * \tref={this.onChartRef}\n    * \tdataSource={this.state.dataSource}\n    * \twidth=\"100%\"\n    * \theight=\"100%\" >\n    *\n    *     <IgrCategoryAngleAxis name=\"angleAxis\" label=\"Department\" minorInterval={5} />\n    *     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n    *\n    * </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.mz;\n    },\n    set: function (v) {\n      this.i.mz = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrCategoryAngleAxis.prototype, \"actualMinorInterval\", {\n    /**\n     * Gets the effective value for the current MinorInterval.\n    *\n    * Get the effective value for the current minorInterval.\n    *\n    * ```ts\n    *    <IgrDataChart\n    * \tref={this.onChartRef}\n    * \tdataSource={this.state.dataSource}\n    * \twidth=\"100%\"\n    * \theight=\"100%\" >\n    *\n    *     <IgrCategoryAngleAxis name=\"angleAxis\" label=\"Department\" actualMinorInterval={5} />\n    *     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n    *\n    * </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.mt;\n    },\n    set: function (v) {\n      this.i.mt = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  /**\n   * Gets the scaled angle in radians from the raw axis value.\n  \r\n  * @param unscaledAngle  * The raw axis value.\n  */\n\n  IgrCategoryAngleAxis.prototype.getScaledAngle = function (unscaledAngle) {\n    var iv = this.i.getScaledAngle(unscaledAngle);\n    return iv;\n  };\n  /**\n   * Gets the raw axis value from the scaled angle in radians.\n  \r\n  */\n\n\n  IgrCategoryAngleAxis.prototype.getUnscaledAngle = function (scaledAngle) {\n    var iv = this.i.getUnscaledAngle(scaledAngle);\n    return iv;\n  };\n\n  Object.defineProperty(IgrCategoryAngleAxis.prototype, \"actualIntervalChange\", {\n    get: function () {\n      return this._actualIntervalChange;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._actualIntervalChange_wrapped !== null) {\n        this.i.propertyChanged = delegateRemove(this.i.propertyChanged, this._actualIntervalChange_wrapped);\n        this._actualIntervalChange_wrapped = null;\n        this._actualIntervalChange = null;\n      }\n\n      this._actualIntervalChange = ev;\n\n      this._actualIntervalChange_wrapped = function (o, e) {\n        var ext = _this.actualInterval;\n\n        if (_this.beforeActualIntervalChange) {\n          _this.beforeActualIntervalChange(_this, ext);\n        }\n\n        if (_this._actualIntervalChange) {\n          _this._actualIntervalChange(_this, ext);\n        }\n      };\n\n      this.i.propertyChanged = delegateCombine(this.i.propertyChanged, this._actualIntervalChange_wrapped);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrCategoryAngleAxis;\n}(IgrCategoryAxisBase);\n\nexport { IgrCategoryAngleAxis };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-category-angle-axis.js"],"names":["__extends","delegateCombine","delegateRemove","IgrCategoryAxisBase","CategoryAngleAxis","IgrCategoryAngleAxis","_super","props","_this","call","_actualIntervalChange","_actualIntervalChange_wrapped","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","b8","m1","set","v","my","ms","mz","mt","getScaledAngle","unscaledAngle","iv","getUnscaledAngle","scaledAngle","ev","propertyChanged","o","e","ext","actualInterval","beforeActualIntervalChange"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { IgrCategoryAxisBase } from \"./igr-category-axis-base\";\nimport { CategoryAngleAxis } from \"./CategoryAngleAxis\";\n/**\n * Represents a IgxDataChartComponent category angle axis. Useful for displaying radial categories.\n*\n* `IgrCategoryAngleAxis` represents a IgxDataChartComponent category angle axis. Useful for displaying radial categories\n*\n* ```ts\n* <IgrDataChart\n* \tref={this.onChartRef}\n* \tdataSource={this.state.dataSource}\n* \twidth=\"100%\"\n* \theight=\"100%\" >\n*\n*     <IgrCategoryAngleAxis name=\"angleAxis\" label=\"Department\" />\n*     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n*\n* </IgrDataChart>\n* ```\n*/\nvar IgrCategoryAngleAxis = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrCategoryAngleAxis, _super);\n    function IgrCategoryAngleAxis(props) {\n        var _this = _super.call(this, props) || this;\n        _this._actualIntervalChange = null;\n        _this._actualIntervalChange_wrapped = null;\n        return _this;\n    }\n    IgrCategoryAngleAxis.prototype.createImplementation = function () {\n        return new CategoryAngleAxis();\n    };\n    Object.defineProperty(IgrCategoryAngleAxis.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryAngleAxis.prototype, \"isAngular\", {\n        /**\n         * Checks if the axis is of angular type\n        */\n        get: function () {\n            return this.i.b8;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryAngleAxis.prototype, \"startAngleOffset\", {\n        /**\n         * Indicates the angle in degress that the chart's 0th angle should be offset.\n        *\n        * Indicates the angle in degress that the chart's 0th angle should be offset.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}   >\n        *\n        *     <IgrCategoryAngleAxis name=\"angleAxis\" startAngleOffset ={30} />\n        *     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n        *\n        * </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.m1;\n        },\n        set: function (v) {\n            this.i.m1 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryAngleAxis.prototype, \"interval\", {\n        /**\n         * Gets or sets the frequency of displayed labels.\n         * The set value is a factor that determines which labels will be hidden. For example, an interval of 2 will display every other label.\n        *\n        * Gets or sets the frequency of displayed labels.The set value is a factor that determines which labels will be hidden.\n        * For example, an interval of 2 will display every other label.\n        *\n        * ```ts\n        * <IgrDataChart\n        *     dataSource={this.state.dataSource}   >\n        *\n        *     <IgrCategoryAngleAxis name=\"angleAxis\" interval ={2} />\n        *     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n        *\n        * </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.my;\n        },\n        set: function (v) {\n            this.i.my = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryAngleAxis.prototype, \"actualInterval\", {\n        /**\n         * Gets the effective value for the current Interval.\n        *\n        * Gets the effective value for the current Interval.\n        *\n        * ```ts\n        *\n        * \t<IgrDataChart\n        * \tref={this.onChartRef}\n        * \tdataSource={this.state.dataSource}\n        * \twidth=\"100%\"\n        * \theight=\"100%\" >\n        *\n        *     <IgrCategoryAngleAxis name=\"angleAxis\" label=\"Department\" actualInterval={5} />\n        *     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n        *\n        * </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.ms;\n        },\n        set: function (v) {\n            this.i.ms = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryAngleAxis.prototype, \"minorInterval\", {\n        /**\n         * Gets or sets the frequency of displayed minor lines.\n         * The set value is a factor that determines how the minor lines will be displayed.\n        *\n        * Gets or sets the frequency of displayed minor lines. The set value is a factor that determines how the minor lines will be displayed.\n        *\n        * ```ts\n        *    <IgrDataChart\n        * \tref={this.onChartRef}\n        * \tdataSource={this.state.dataSource}\n        * \twidth=\"100%\"\n        * \theight=\"100%\" >\n        *\n        *     <IgrCategoryAngleAxis name=\"angleAxis\" label=\"Department\" minorInterval={5} />\n        *     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n        *\n        * </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.mz;\n        },\n        set: function (v) {\n            this.i.mz = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrCategoryAngleAxis.prototype, \"actualMinorInterval\", {\n        /**\n         * Gets the effective value for the current MinorInterval.\n        *\n        * Get the effective value for the current minorInterval.\n        *\n        * ```ts\n        *    <IgrDataChart\n        * \tref={this.onChartRef}\n        * \tdataSource={this.state.dataSource}\n        * \twidth=\"100%\"\n        * \theight=\"100%\" >\n        *\n        *     <IgrCategoryAngleAxis name=\"angleAxis\" label=\"Department\" actualMinorInterval={5} />\n        *     <IgrNumericRadiusAxis name=\"radiusAxis\" />\n        *\n        * </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.mt;\n        },\n        set: function (v) {\n            this.i.mt = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Gets the scaled angle in radians from the raw axis value.\n    \r\n    * @param unscaledAngle  * The raw axis value.\n    */\n    IgrCategoryAngleAxis.prototype.getScaledAngle = function (unscaledAngle) {\n        var iv = this.i.getScaledAngle(unscaledAngle);\n        return (iv);\n    };\n    /**\n     * Gets the raw axis value from the scaled angle in radians.\n    \r\n    */\n    IgrCategoryAngleAxis.prototype.getUnscaledAngle = function (scaledAngle) {\n        var iv = this.i.getUnscaledAngle(scaledAngle);\n        return (iv);\n    };\n    Object.defineProperty(IgrCategoryAngleAxis.prototype, \"actualIntervalChange\", {\n        get: function () {\n            return this._actualIntervalChange;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._actualIntervalChange_wrapped !== null) {\n                this.i.propertyChanged = delegateRemove(this.i.propertyChanged, this._actualIntervalChange_wrapped);\n                this._actualIntervalChange_wrapped = null;\n                this._actualIntervalChange = null;\n            }\n            this._actualIntervalChange = ev;\n            this._actualIntervalChange_wrapped = function (o, e) {\n                var ext = _this.actualInterval;\n                if (_this.beforeActualIntervalChange) {\n                    _this.beforeActualIntervalChange(_this, ext);\n                }\n                if (_this._actualIntervalChange) {\n                    _this._actualIntervalChange(_this, ext);\n                }\n            };\n            this.i.propertyChanged = delegateCombine(this.i.propertyChanged, this._actualIntervalChange_wrapped);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrCategoryAngleAxis;\n}(IgrCategoryAxisBase));\nexport { IgrCategoryAngleAxis };\n"]},"metadata":{},"sourceType":"module"}