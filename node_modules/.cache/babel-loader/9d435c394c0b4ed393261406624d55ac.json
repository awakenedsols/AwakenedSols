{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgCollection } from \"igniteui-react-core\";\nimport { markType } from \"igniteui-react-core\";\nimport { SyncableObservableCollection$2 } from \"igniteui-react-core\";\nimport { RingSeriesBase as RingSeriesBase_internal } from './RingSeriesBase';\nimport { IgrRingSeriesBase } from './igr-ring-series-base';\n\nvar IgrRingSeriesCollection =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrRingSeriesCollection, _super);\n\n  function IgrRingSeriesCollection(list) {\n    var _this = _super.call(this) || this;\n\n    if (!IgrRingSeriesBase.$type) {\n      IgrRingSeriesBase.$type = markType(IgrRingSeriesBase, \"IgrRingSeriesBase\");\n    }\n\n    if (list) {\n      for (var i = 0; i < list.length; i++) {\n        _this.add(list[i]);\n      }\n    }\n\n    return _this;\n  }\n\n  IgrRingSeriesCollection.prototype._createInnerColl = function () {\n    if (!IgrRingSeriesBase.$type) {\n      IgrRingSeriesBase.$type = markType(IgrRingSeriesBase, \"IgrRingSeriesBase\");\n    }\n\n    var coll = new SyncableObservableCollection$2(IgrRingSeriesBase.$type, RingSeriesBase_internal.$type, 0);\n\n    coll.compare = function (ext, int) {\n      var comp = ext;\n\n      if (comp._implementation) {\n        comp = comp._implementation;\n      }\n\n      if (comp.equals) {\n        return comp.equals(int);\n      }\n\n      return comp === int;\n    };\n\n    coll.createTo = function (ext) {\n      return ext._implementation;\n    };\n\n    coll.createFrom = function (int) {\n      var ext = int.externalObject;\n\n      if (!ext) {\n        ext = IgrRingSeriesBase._createFromInternal(int);\n\n        if (ext) {\n          ext._implementation = int;\n        }\n      }\n\n      return ext;\n    };\n\n    return coll;\n  };\n\n  return IgrRingSeriesCollection;\n}(IgCollection);\n\nexport { IgrRingSeriesCollection };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-ring-series-collection.js"],"names":["__extends","IgCollection","markType","SyncableObservableCollection$2","RingSeriesBase","RingSeriesBase_internal","IgrRingSeriesBase","IgrRingSeriesCollection","_super","list","_this","call","$type","i","length","add","prototype","_createInnerColl","coll","compare","ext","int","comp","_implementation","equals","createTo","createFrom","externalObject","_createFromInternal"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,YAAT,QAA6B,qBAA7B;AACA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SAASC,8BAAT,QAA+C,qBAA/C;AACA,SAASC,cAAc,IAAIC,uBAA3B,QAA0D,kBAA1D;AACA,SAASC,iBAAT,QAAuD,wBAAvD;;AACA,IAAIC,uBAAuB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACzER,EAAAA,SAAS,CAACO,uBAAD,EAA0BC,MAA1B,CAAT;;AACA,WAASD,uBAAT,CAAiCE,IAAjC,EAAuC;AACnC,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACA,QAAI,CAACL,iBAAiB,CAACM,KAAvB,EAA8B;AAC1BN,MAAAA,iBAAiB,CAACM,KAAlB,GAA0BV,QAAQ,CAACI,iBAAD,EAAoB,mBAApB,CAAlC;AACH;;AACD,QAAIG,IAAJ,EAAU;AACN,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,IAAI,CAACK,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AAClCH,QAAAA,KAAK,CAACK,GAAN,CAAUN,IAAI,CAACI,CAAD,CAAd;AACH;AACJ;;AACD,WAAOH,KAAP;AACH;;AACDH,EAAAA,uBAAuB,CAACS,SAAxB,CAAkCC,gBAAlC,GAAqD,YAAY;AAC7D,QAAI,CAACX,iBAAiB,CAACM,KAAvB,EAA8B;AAC1BN,MAAAA,iBAAiB,CAACM,KAAlB,GAA0BV,QAAQ,CAACI,iBAAD,EAAoB,mBAApB,CAAlC;AACH;;AACD,QAAIY,IAAI,GAAG,IAAIf,8BAAJ,CAAmCG,iBAAiB,CAACM,KAArD,EAA4DP,uBAAuB,CAACO,KAApF,EAA2F,CAA3F,CAAX;;AACAM,IAAAA,IAAI,CAACC,OAAL,GAAe,UAAUC,GAAV,EAAeC,GAAf,EAAoB;AAC/B,UAAIC,IAAI,GAAGF,GAAX;;AACA,UAAIE,IAAI,CAACC,eAAT,EAA0B;AACtBD,QAAAA,IAAI,GAAGA,IAAI,CAACC,eAAZ;AACH;;AACD,UAAID,IAAI,CAACE,MAAT,EAAiB;AACb,eAAOF,IAAI,CAACE,MAAL,CAAYH,GAAZ,CAAP;AACH;;AACD,aAAOC,IAAI,KAAKD,GAAhB;AACH,KATD;;AAUAH,IAAAA,IAAI,CAACO,QAAL,GAAgB,UAAUL,GAAV,EAAe;AAC3B,aAAOA,GAAG,CAACG,eAAX;AACH,KAFD;;AAGAL,IAAAA,IAAI,CAACQ,UAAL,GAAkB,UAAUL,GAAV,EAAe;AAC7B,UAAID,GAAG,GAAGC,GAAG,CAACM,cAAd;;AACA,UAAI,CAACP,GAAL,EAAU;AACNA,QAAAA,GAAG,GAAGd,iBAAiB,CAACsB,mBAAlB,CAAsCP,GAAtC,CAAN;;AACA,YAAID,GAAJ,EAAS;AACLA,UAAAA,GAAG,CAACG,eAAJ,GAAsBF,GAAtB;AACH;AACJ;;AACD,aAAOD,GAAP;AACH,KATD;;AAUA,WAAOF,IAAP;AACH,GA7BD;;AA8BA,SAAOX,uBAAP;AACH,CA7C0D,CA6CzDN,YA7CyD,CAA3D;;AA8CA,SAASM,uBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgCollection } from \"igniteui-react-core\";\nimport { markType } from \"igniteui-react-core\";\nimport { SyncableObservableCollection$2 } from \"igniteui-react-core\";\nimport { RingSeriesBase as RingSeriesBase_internal } from './RingSeriesBase';\nimport { IgrRingSeriesBase as IgrRingSeriesBase } from './igr-ring-series-base';\nvar IgrRingSeriesCollection = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrRingSeriesCollection, _super);\n    function IgrRingSeriesCollection(list) {\n        var _this = _super.call(this) || this;\n        if (!IgrRingSeriesBase.$type) {\n            IgrRingSeriesBase.$type = markType(IgrRingSeriesBase, \"IgrRingSeriesBase\");\n        }\n        if (list) {\n            for (var i = 0; i < list.length; i++) {\n                _this.add(list[i]);\n            }\n        }\n        return _this;\n    }\n    IgrRingSeriesCollection.prototype._createInnerColl = function () {\n        if (!IgrRingSeriesBase.$type) {\n            IgrRingSeriesBase.$type = markType(IgrRingSeriesBase, \"IgrRingSeriesBase\");\n        }\n        var coll = new SyncableObservableCollection$2(IgrRingSeriesBase.$type, RingSeriesBase_internal.$type, 0);\n        coll.compare = function (ext, int) {\n            var comp = ext;\n            if (comp._implementation) {\n                comp = comp._implementation;\n            }\n            if (comp.equals) {\n                return comp.equals(int);\n            }\n            return comp === int;\n        };\n        coll.createTo = function (ext) {\n            return ext._implementation;\n        };\n        coll.createFrom = function (int) {\n            var ext = int.externalObject;\n            if (!ext) {\n                ext = IgrRingSeriesBase._createFromInternal(int);\n                if (ext) {\n                    ext._implementation = int;\n                }\n            }\n            return ext;\n        };\n        return coll;\n    };\n    return IgrRingSeriesCollection;\n}(IgCollection));\nexport { IgrRingSeriesCollection };\n"]},"metadata":{},"sourceType":"module"}