{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/CollectionsTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport solanaIcon from './solanaIcon.png';\nimport styled from 'styled-components';\nimport { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const CollectionsTable = _ref => {\n  _s();\n\n  let {\n    children,\n    ...props\n  } = _ref;\n  const [collections, setCollections] = useState();\n  const [data, setData] = useState();\n  const wallet = props.wallet;\n\n  const getCollections = async () => {\n    var config = {\n      method: 'get',\n      url: 'https://api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200'\n    };\n    axios(config).then(function (response) {\n      console.log(JSON.stringify(response.data));\n      setData(response.data);\n      return response.data;\n    }).then(function (res) {\n      console.log(res);\n\n      for (var x = 0; x < res.count; x++) {\n        console.log(res.count);\n        var getStats = {\n          method: 'get',\n          url: 'https://api-devnet.magiceden.dev/v2/collections/' + res[x].symbol + '/stats'\n        };\n        axios(getStats).then(function (response) {\n          console.log(JSON.stringify(response.data));\n        }).catch(function (error) {\n          console.log(error);\n        });\n      }\n    }).catch(function (error) {\n      console.log(error);\n    });\n  };\n\n  useEffect(() => {\n    console.log('use effect');\n\n    if (collections) {\n      console.log(collections);\n    }\n\n    if (wallet) {\n      console.log(wallet);\n    }\n\n    if (data) {\n      console.log(data);\n    }\n  });\n  const Styles = styled.div`\n  table {\n    background-color: #192026;\n    color:white;\n    border-spacing: 0;\n    position:relative;\n\n    tr {\n      td {\n        border-bottom: 0;\n      }\n    }\n\n    th{\n      background-color: #192026;\n      top:0;\n      position:sticky;\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.2rem;\n    }\n  }\n`;\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      //assign interval to a variable to clear it.\n      console.log('use effect');\n      getCollections();\n\n      if (data) {\n        console.log(data);\n      }\n    }, 5000);\n    return () => clearInterval(intervalId); //This is important\n  }, [useState]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: data ? /*#__PURE__*/_jsxDEV(Styles, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Launch Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"FP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Listed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.map(collection => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                fontFamily: \"Press Start 2P\"\n              },\n              children: collection.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"left\",\n              children: collection.launchDateTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"symbolIcon\",\n                src: solanaIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 30\n              }, this), collection.floorPrice]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"left\",\n              children: collection.volumeAll\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"left\",\n              children: collection.listedCount\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                fontFamily: \"Press Start 2P\"\n              },\n              align: \"left\",\n              children: collection.symbol\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this)]\n          }, collection.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(CollectionsTable, \"Hggj40njzaTxJHCn/Jc21Iu7GkU=\");\n\n_c = CollectionsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionsTable\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/CollectionsTable.tsx"],"names":["React","solanaIcon","styled","useEffect","useState","axios","CollectionsTable","children","props","collections","setCollections","data","setData","wallet","getCollections","config","method","url","then","response","console","log","JSON","stringify","res","x","count","getStats","symbol","catch","error","Styles","div","intervalId","setInterval","clearInterval","map","collection","fontFamily","name","launchDateTime","floorPrice","volumeAll","listedCount"],"mappings":"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","sourcesContent":["import React, { ReactNode } from \"react\";\nimport {Row, Col, Container} from \"react-bootstrap\";\nimport enlargeIcon from './enlargeIcon.png'\nimport solanaIcon from './solanaIcon.png'\nimport styled from 'styled-components'\nimport { Key, ReactChild, ReactFragment, ReactPortal, useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { useQuery, gql } from \"@apollo/client\";\n\ninterface Props {\n    children?: ReactNode\n    // any props that come into the component\n    wallet: any\n}\n\nexport const CollectionsTable = ({ children, ...props }: Props) => {\n\n  const [collections, setCollections] = useState<string>();\n  const [data, setData] = useState<any>();\n  const wallet = props.wallet;\n\n  const getCollections = async () => {\n\n    var config = {\n      method: 'get',\n      url: 'https://api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200'\n    };\n    \n    \n\n    axios(config)\n    .then(function (response) {\n      console.log(JSON.stringify(response.data));\n      setData(response.data);\n      return response.data;\n      }).then(function(res) {\n        console.log(res);\n          for(var x=0;x<res.count; x++){\n              console.log(res.count);\n            var getStats = {\n              method: 'get',\n              url: 'https://api-devnet.magiceden.dev/v2/collections/' + res[x].symbol + '/stats'\n            };\n    \n            axios(getStats)\n              .then(function (response) {\n                console.log(JSON.stringify(response.data));\n              })\n              .catch(function (error) {\n                console.log(error);\n              });\n          }\n      }).catch(function (error) {\n      console.log(error);\n    });\n  }\n\n  useEffect(() => {\n        console.log('use effect');\n        if(collections){\n          console.log(collections);\n        }\n        if(wallet){\n          console.log(wallet);\n        }\n        if(data){\n          console.log(data);\n        }\n  });\n  \n\n  const Styles = styled.div`\n  table {\n    background-color: #192026;\n    color:white;\n    border-spacing: 0;\n    position:relative;\n\n    tr {\n      td {\n        border-bottom: 0;\n      }\n    }\n\n    th{\n      background-color: #192026;\n      top:0;\n      position:sticky;\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.2rem;\n    }\n  }\n`\n\nuseEffect(() => {\n  const intervalId = setInterval(() => {  //assign interval to a variable to clear it.\n    console.log('use effect');\n    getCollections();\n  \n    if(data){\n      console.log(data);\n    }\n  \n  }, 5000)\n\n  return () => clearInterval(intervalId); //This is important\n \n}, [useState])\n\n\nreturn (\n  <>\n  {data ? (\n    <Styles>\n    <table>\n      <thead>\n        <tr>\n          <th align=\"left\">Name</th>\n          <th align=\"left\">Launch Date</th>\n          <th align=\"left\">FP</th>\n          <th align=\"left\">Volume</th>\n          <th align=\"left\">Listed</th>\n          <th align=\"left\">Symbol</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.map((collection:any) => (\n          <tr \n            key={collection.name}\n          >\n            <td style={{fontFamily: \"Press Start 2P\"}}>\n              {collection.name} \n            </td>\n            <td align=\"left\">{collection.launchDateTime}</td>\n            <td align=\"left\"><img className=\"symbolIcon\" src={solanaIcon}></img>{collection.floorPrice}</td>\n            <td align=\"left\">{collection.volumeAll}</td>\n            <td align=\"left\">{collection.listedCount}</td>\n            <td style={{fontFamily: \"Press Start 2P\"}} align=\"left\">{collection.symbol}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  </Styles> \n    ) : (\n      <h1>Loading...</h1>\n  )}\n  </>\n);\n};"]},"metadata":{},"sourceType":"module"}