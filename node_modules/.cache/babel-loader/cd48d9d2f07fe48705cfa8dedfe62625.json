{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FilterExpressionDescriptionMetadata } from \"./FilterExpressionDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar WrapperExpressionDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(WrapperExpressionDescriptionMetadata, _super);\n\n  function WrapperExpressionDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  WrapperExpressionDescriptionMetadata.b = function (a) {\n    if (WrapperExpressionDescriptionMetadata.a == null) {\n      WrapperExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      WrapperExpressionDescriptionMetadata.c(WrapperExpressionDescriptionMetadata.a);\n    }\n\n    if (a.g(WrapperExpressionDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(WrapperExpressionDescriptionMetadata.a);\n    FilterExpressionDescriptionMetadata.d(a);\n  };\n\n  WrapperExpressionDescriptionMetadata.c = function (a) {\n    FilterExpressionDescriptionMetadata.c(a);\n    a.item(\"InnerExpression\", \"ExportedType:IFilterExpression\");\n    a.item(\"Expression\", \"ExportedType:FilterExpression\");\n    a.item(\"PropertyName\", \"String\");\n  };\n\n  WrapperExpressionDescriptionMetadata.d = function (a) {\n    WrapperExpressionDescriptionMetadata.b(a);\n    a.t(\"WrapperExpression\", WrapperExpressionDescriptionMetadata.a);\n  };\n\n  WrapperExpressionDescriptionMetadata.$t = markType(WrapperExpressionDescriptionMetadata, 'WrapperExpressionDescriptionMetadata');\n  WrapperExpressionDescriptionMetadata.a = null;\n  return WrapperExpressionDescriptionMetadata;\n}(Base);\n\nexport { WrapperExpressionDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/WrapperExpressionDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","FilterExpressionDescriptionMetadata","WrapperExpressionDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,mCAAT,QAAoD,uCAApD;AACA;AACA;AACA;;AACA,IAAIC,oCAAoC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACtFP,EAAAA,SAAS,CAACM,oCAAD,EAAuCC,MAAvC,CAAT;;AACA,WAASD,oCAAT,GAAgD;AAC5C,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,oCAAoC,CAACI,CAArC,GAAyC,UAAUC,CAAV,EAAa;AAClD,QAAIL,oCAAoC,CAACK,CAArC,IAA0C,IAA9C,EAAoD;AAChDL,MAAAA,oCAAoC,CAACK,CAArC,GAAyC,IAAIP,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAAzC;AACAI,MAAAA,oCAAoC,CAACM,CAArC,CAAuCN,oCAAoC,CAACK,CAA5E;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,oCAAoC,CAACK,CAAzC,CAAJ,EAAiD;AAC7C;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,oCAAoC,CAACK,CAAzC;AACAN,IAAAA,mCAAmC,CAACU,CAApC,CAAsCJ,CAAtC;AACH,GAVD;;AAWAL,EAAAA,oCAAoC,CAACM,CAArC,GAAyC,UAAUD,CAAV,EAAa;AAClDN,IAAAA,mCAAmC,CAACO,CAApC,CAAsCD,CAAtC;AACAA,IAAAA,CAAC,CAACK,IAAF,CAAO,iBAAP,EAA0B,gCAA1B;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,YAAP,EAAqB,+BAArB;AACAL,IAAAA,CAAC,CAACK,IAAF,CAAO,cAAP,EAAuB,QAAvB;AACH,GALD;;AAMAV,EAAAA,oCAAoC,CAACS,CAArC,GAAyC,UAAUJ,CAAV,EAAa;AAClDL,IAAAA,oCAAoC,CAACI,CAArC,CAAuCC,CAAvC;AACAA,IAAAA,CAAC,CAACM,CAAF,CAAI,mBAAJ,EAAyBX,oCAAoC,CAACK,CAA9D;AACH,GAHD;;AAIAL,EAAAA,oCAAoC,CAACY,EAArC,GAA0Cf,QAAQ,CAACG,oCAAD,EAAuC,sCAAvC,CAAlD;AACAA,EAAAA,oCAAoC,CAACK,CAArC,GAAyC,IAAzC;AACA,SAAOL,oCAAP;AACH,CA7BuE,CA6BtEL,IA7BsE,CAAxE;;AA8BA,SAASK,oCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FilterExpressionDescriptionMetadata } from \"./FilterExpressionDescriptionMetadata\";\n/**\n * @hidden\n */\nvar WrapperExpressionDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(WrapperExpressionDescriptionMetadata, _super);\n    function WrapperExpressionDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    WrapperExpressionDescriptionMetadata.b = function (a) {\n        if (WrapperExpressionDescriptionMetadata.a == null) {\n            WrapperExpressionDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            WrapperExpressionDescriptionMetadata.c(WrapperExpressionDescriptionMetadata.a);\n        }\n        if (a.g(WrapperExpressionDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(WrapperExpressionDescriptionMetadata.a);\n        FilterExpressionDescriptionMetadata.d(a);\n    };\n    WrapperExpressionDescriptionMetadata.c = function (a) {\n        FilterExpressionDescriptionMetadata.c(a);\n        a.item(\"InnerExpression\", \"ExportedType:IFilterExpression\");\n        a.item(\"Expression\", \"ExportedType:FilterExpression\");\n        a.item(\"PropertyName\", \"String\");\n    };\n    WrapperExpressionDescriptionMetadata.d = function (a) {\n        WrapperExpressionDescriptionMetadata.b(a);\n        a.t(\"WrapperExpression\", WrapperExpressionDescriptionMetadata.a);\n    };\n    WrapperExpressionDescriptionMetadata.$t = markType(WrapperExpressionDescriptionMetadata, 'WrapperExpressionDescriptionMetadata');\n    WrapperExpressionDescriptionMetadata.a = null;\n    return WrapperExpressionDescriptionMetadata;\n}(Base));\nexport { WrapperExpressionDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}