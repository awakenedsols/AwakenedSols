{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { ShapeItemSearchMode_$type } from \"./ShapeItemSearchMode\";\nimport { IgrNumericXAxis } from \"./igr-numeric-x-axis\";\nimport { IgrNumericYAxis } from \"./igr-numeric-y-axis\";\nimport { IgrAssigningShapeStyleEventArgs } from \"./igr-assigning-shape-style-event-args\";\nimport { IgrAssigningShapeMarkerStyleEventArgs } from \"./igr-assigning-shape-marker-style-event-args\";\nimport { IgrStyleShapeEventArgs } from \"./igr-style-shape-event-args\";\nimport { IgrSeries } from \"./igr-series\";\nimport { ensureBool, ensureEnum, toPoint, fromPoint } from \"igniteui-react-core\";\n/**\n * Series class for rendering polygons.\n*/\n\nvar IgrShapeSeriesBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrShapeSeriesBase, _super);\n\n  function IgrShapeSeriesBase(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._xAxisName = null;\n    _this._yAxisName = null;\n    _this._assigningShapeStyle = null;\n    _this._assigningShapeStyle_wrapped = null;\n    _this._assigningShapeMarkerStyle = null;\n    _this._assigningShapeMarkerStyle_wrapped = null;\n    _this._styleShape = null;\n    _this._styleShape_wrapped = null;\n    return _this;\n  }\n\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"isCustomShapeStyleAllowed\", {\n    /**\n     * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\n    */\n    get: function () {\n      return this.i.q5;\n    },\n    set: function (v) {\n      this.i.q5 = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"isCustomShapeMarkerStyleAllowed\", {\n    /**\n     * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\n    */\n    get: function () {\n      return this.i.q4;\n    },\n    set: function (v) {\n      this.i.q4 = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"actualItemSearchMode\", {\n    get: function () {\n      return this.i.qp;\n    },\n    set: function (v) {\n      this.i.qp = ensureEnum(ShapeItemSearchMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"itemSearchMode\", {\n    /**\n     * Gets or sets the mode the series will use to find the closest point to the cursor.\n    */\n    get: function () {\n      return this.i.qr;\n    },\n    set: function (v) {\n      this.i.qr = ensureEnum(ShapeItemSearchMode_$type, v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"itemSearchThreshold\", {\n    /**\n     * Gets or sets the threshold to use when searching for items using ItemSearchMode.\n    */\n    get: function () {\n      return this.i.rn;\n    },\n    set: function (v) {\n      this.i.rn = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"itemSearchPointsThreshold\", {\n    /**\n     * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\n    */\n    get: function () {\n      return this.i.rm;\n    },\n    set: function (v) {\n      this.i.rm = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"shapeMemberPath\", {\n    /**\n     * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\n     * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\n    */\n    get: function () {\n      return this.i.rx;\n    },\n    set: function (v) {\n      this.i.rx = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"xAxis\", {\n    /**\n     * Gets or sets the effective x-axis for the current ScatterBase object.\n    */\n    get: function () {\n      if (this.i.ql == null) {\n        return null;\n      }\n\n      if (!this.i.ql.externalObject) {\n        var e = IgrNumericXAxis._createFromInternal(this.i.ql);\n\n        if (e) {\n          e._implementation = this.i.ql;\n        }\n\n        this.i.ql.externalObject = e;\n      }\n\n      return this.i.ql.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.ql = null : this.i.ql = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"xAxisName\", {\n    /**\n    * Gets or sets the name to use to resolve xAxis from markup.\n    */\n    get: function () {\n      return this._xAxisName;\n    },\n    set: function (v) {\n      this._xAxisName = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"yAxis\", {\n    /**\n     * Gets or sets the effective y-axis for the current ScatterBase object.\n    */\n    get: function () {\n      if (this.i.qn == null) {\n        return null;\n      }\n\n      if (!this.i.qn.externalObject) {\n        var e = IgrNumericYAxis._createFromInternal(this.i.qn);\n\n        if (e) {\n          e._implementation = this.i.qn;\n        }\n\n        this.i.qn.externalObject = e;\n      }\n\n      return this.i.qn.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.qn = null : this.i.qn = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"yAxisName\", {\n    /**\n    * Gets or sets the name to use to resolve yAxis from markup.\n    */\n    get: function () {\n      return this._yAxisName;\n    },\n    set: function (v) {\n      this._yAxisName = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"shapeFilterResolution\", {\n    /**\n     * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\n     * In the case of ScatterPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\n    */\n    get: function () {\n      return this.i.rj;\n    },\n    set: function (v) {\n      this.i.rj = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"isShape\", {\n    /**\n     * Gets whether or not this series is a shape series\n    */\n    get: function () {\n      return this.i.ed;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"isMarkerlessDisplayPreferred\", {\n    /**\n     * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n    */\n    get: function () {\n      return this.i.d2;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrShapeSeriesBase.prototype.bindAxes = function (axes) {\n    _super.prototype.bindAxes.call(this, axes);\n\n    for (var i = 0; i < axes.length; i++) {\n      if (this.xAxisName && this.xAxisName.length > 0 && axes[i].name == this.xAxisName) {\n        this.xAxis = axes[i];\n      }\n    }\n\n    for (var i = 0; i < axes.length; i++) {\n      if (this.yAxisName && this.yAxisName.length > 0 && axes[i].name == this.yAxisName) {\n        this.yAxis = axes[i];\n      }\n    }\n  };\n\n  IgrShapeSeriesBase.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.xAxis && this.xAxis.name && this.xAxis.name == name) {\n      return this.xAxis;\n    }\n\n    if (this.yAxis && this.yAxis.name && this.yAxis.name == name) {\n      return this.yAxis;\n    }\n\n    return null;\n  };\n\n  IgrShapeSeriesBase.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.xAxis && this.xAxis._styling) {\n      this.xAxis._styling(container, component, this);\n    }\n\n    if (this.yAxis && this.yAxis._styling) {\n      this.yAxis._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n\n  IgrShapeSeriesBase.prototype.getItemValue = function (item, memberPathName) {\n    var iv = this.i.hw(item, memberPathName);\n    return iv;\n  };\n\n  IgrShapeSeriesBase.prototype.getExactItemIndex = function (world) {\n    var iv = this.i.f5(toPoint(world));\n    return iv;\n  };\n\n  IgrShapeSeriesBase.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.pm(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n  /**\n   * Gets the item that is the best match for the specified world coordinates.\n  \r\n  * @param world  * The world coordinates to use.\n  */\n\n\n  IgrShapeSeriesBase.prototype.getItem = function (world) {\n    var iv = this.i.ht(toPoint(world));\n    return iv;\n  };\n  /**\n   * Determine if object can be used as YAxis\n  \r\n  * @param axis  * The object to check\n  */\n\n\n  IgrShapeSeriesBase.prototype.canUseAsYAxis = function (axis) {\n    var iv = this.i.q0(axis);\n    return iv;\n  };\n  /**\n   * Determine if object can be used as XAxis\n  \r\n  * @param axis  * The object to check\n  */\n\n\n  IgrShapeSeriesBase.prototype.canUseAsXAxis = function (axis) {\n    var iv = this.i.qz(axis);\n    return iv;\n  };\n\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"assigningShapeStyle\", {\n    /**\n     * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\n    */\n    get: function () {\n      return this._assigningShapeStyle;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._assigningShapeStyle_wrapped !== null) {\n        this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\n        this._assigningShapeStyle_wrapped = null;\n        this._assigningShapeStyle = null;\n      }\n\n      this._assigningShapeStyle = ev;\n\n      this._assigningShapeStyle_wrapped = function (o, e) {\n        var outerArgs = new IgrAssigningShapeStyleEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeAssigningShapeStyle) {\n          _this.beforeAssigningShapeStyle(_this, outerArgs);\n        }\n\n        if (_this._assigningShapeStyle) {\n          _this._assigningShapeStyle(_this, outerArgs);\n        }\n      };\n\n      this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"assigningShapeMarkerStyle\", {\n    /**\n     * Event raised when Assigning Shape Marker Style\n    */\n    get: function () {\n      return this._assigningShapeMarkerStyle;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._assigningShapeMarkerStyle_wrapped !== null) {\n        this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\n        this._assigningShapeMarkerStyle_wrapped = null;\n        this._assigningShapeMarkerStyle = null;\n      }\n\n      this._assigningShapeMarkerStyle = ev;\n\n      this._assigningShapeMarkerStyle_wrapped = function (o, e) {\n        var outerArgs = new IgrAssigningShapeMarkerStyleEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeAssigningShapeMarkerStyle) {\n          _this.beforeAssigningShapeMarkerStyle(_this, outerArgs);\n        }\n\n        if (_this._assigningShapeMarkerStyle) {\n          _this._assigningShapeMarkerStyle(_this, outerArgs);\n        }\n      };\n\n      this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrShapeSeriesBase.prototype, \"styleShape\", {\n    /**\n     * Raised when tile's image URI should be provided\n    */\n    get: function () {\n      return this._styleShape;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._styleShape_wrapped !== null) {\n        this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\n        this._styleShape_wrapped = null;\n        this._styleShape = null;\n      }\n\n      this._styleShape = ev;\n\n      this._styleShape_wrapped = function (o, e) {\n        var outerArgs = new IgrStyleShapeEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeStyleShape) {\n          _this.beforeStyleShape(_this, outerArgs);\n        }\n\n        if (_this._styleShape) {\n          _this._styleShape(_this, outerArgs);\n        }\n      };\n\n      this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrShapeSeriesBase;\n}(IgrSeries);\n\nexport { IgrShapeSeriesBase };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-shape-series-base.js"],"names":["__extends","delegateCombine","delegateRemove","ShapeItemSearchMode_$type","IgrNumericXAxis","IgrNumericYAxis","IgrAssigningShapeStyleEventArgs","IgrAssigningShapeMarkerStyleEventArgs","IgrStyleShapeEventArgs","IgrSeries","ensureBool","ensureEnum","toPoint","fromPoint","IgrShapeSeriesBase","_super","props","_this","call","_xAxisName","_yAxisName","_assigningShapeStyle","_assigningShapeStyle_wrapped","_assigningShapeMarkerStyle","_assigningShapeMarkerStyle_wrapped","_styleShape","_styleShape_wrapped","Object","defineProperty","prototype","get","_implementation","enumerable","configurable","i","q5","set","v","q4","qp","qr","rn","rm","rx","ql","externalObject","e","_createFromInternal","_stylingContainer","_styling","qn","rj","ed","d2","bindAxes","axes","length","xAxisName","name","xAxis","yAxisName","yAxis","findByName","baseResult","container","component","parent","_inStyling","getItemValue","item","memberPathName","iv","hw","getExactItemIndex","world","f5","getSeriesValuePosition","useInterpolation","skipUnknowns","pm","getItem","ht","canUseAsYAxis","axis","q0","canUseAsXAxis","qz","ev","assigningShapeStyle","o","outerArgs","_provideImplementation","beforeAssigningShapeStyle","assigningShapeMarkerStyle","beforeAssigningShapeMarkerStyle","styleShape","beforeStyleShape"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,eAAT,EAA0BC,cAA1B,QAAgD,qBAAhD;AACA,SAASC,yBAAT,QAA0C,uBAA1C;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,eAAT,QAAgC,sBAAhC;AACA,SAASC,+BAAT,QAAgD,wCAAhD;AACA,SAASC,qCAAT,QAAsD,+CAAtD;AACA,SAASC,sBAAT,QAAuC,8BAAvC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,UAAT,EAAqBC,UAArB,EAAiCC,OAAjC,EAA0CC,SAA1C,QAA2D,qBAA3D;AACA;AACA;AACA;;AACA,IAAIC,kBAAkB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACpEf,EAAAA,SAAS,CAACc,kBAAD,EAAqBC,MAArB,CAAT;;AACA,WAASD,kBAAT,CAA4BE,KAA5B,EAAmC;AAC/B,QAAIC,KAAK,GAAGF,MAAM,CAACG,IAAP,CAAY,IAAZ,EAAkBF,KAAlB,KAA4B,IAAxC;;AACAC,IAAAA,KAAK,CAACE,UAAN,GAAmB,IAAnB;AACAF,IAAAA,KAAK,CAACG,UAAN,GAAmB,IAAnB;AACAH,IAAAA,KAAK,CAACI,oBAAN,GAA6B,IAA7B;AACAJ,IAAAA,KAAK,CAACK,4BAAN,GAAqC,IAArC;AACAL,IAAAA,KAAK,CAACM,0BAAN,GAAmC,IAAnC;AACAN,IAAAA,KAAK,CAACO,kCAAN,GAA2C,IAA3C;AACAP,IAAAA,KAAK,CAACQ,WAAN,GAAoB,IAApB;AACAR,IAAAA,KAAK,CAACS,mBAAN,GAA4B,IAA5B;AACA,WAAOT,KAAP;AACH;;AACDU,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,GAApD,EAAyD;AACrD;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANoD;AAOrDC,IAAAA,UAAU,EAAE,KAPyC;AAQrDC,IAAAA,YAAY,EAAE;AARuC,GAAzD;AAUAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,2BAApD,EAAiF;AAC7E;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOC,EAAd;AACH,KAN4E;AAO7EC,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOC,EAAP,GAAYzB,UAAU,CAAC2B,CAAD,CAAtB;AACH,KAT4E;AAU7EL,IAAAA,UAAU,EAAE,KAViE;AAW7EC,IAAAA,YAAY,EAAE;AAX+D,GAAjF;AAaAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,iCAApD,EAAuF;AACnF;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOI,EAAd;AACH,KANkF;AAOnFF,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOI,EAAP,GAAY5B,UAAU,CAAC2B,CAAD,CAAtB;AACH,KATkF;AAUnFL,IAAAA,UAAU,EAAE,KAVuE;AAWnFC,IAAAA,YAAY,EAAE;AAXqE,GAAvF;AAaAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,sBAApD,EAA4E;AACxEC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOK,EAAd;AACH,KAHuE;AAIxEH,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOK,EAAP,GAAY5B,UAAU,CAACR,yBAAD,EAA4BkC,CAA5B,CAAtB;AACH,KANuE;AAOxEL,IAAAA,UAAU,EAAE,KAP4D;AAQxEC,IAAAA,YAAY,EAAE;AAR0D,GAA5E;AAUAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,gBAApD,EAAsE;AAClE;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOM,EAAd;AACH,KANiE;AAOlEJ,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOM,EAAP,GAAY7B,UAAU,CAACR,yBAAD,EAA4BkC,CAA5B,CAAtB;AACH,KATiE;AAUlEL,IAAAA,UAAU,EAAE,KAVsD;AAWlEC,IAAAA,YAAY,EAAE;AAXoD,GAAtE;AAaAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,qBAApD,EAA2E;AACvE;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOO,EAAd;AACH,KANsE;AAOvEL,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOO,EAAP,GAAY,CAACJ,CAAb;AACH,KATsE;AAUvEL,IAAAA,UAAU,EAAE,KAV2D;AAWvEC,IAAAA,YAAY,EAAE;AAXyD,GAA3E;AAaAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,2BAApD,EAAiF;AAC7E;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOQ,EAAd;AACH,KAN4E;AAO7EN,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOQ,EAAP,GAAY,CAACL,CAAb;AACH,KAT4E;AAU7EL,IAAAA,UAAU,EAAE,KAViE;AAW7EC,IAAAA,YAAY,EAAE;AAX+D,GAAjF;AAaAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,iBAApD,EAAuE;AACnE;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOS,EAAd;AACH,KAPkE;AAQnEP,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOS,EAAP,GAAYN,CAAZ;AACH,KAVkE;AAWnEL,IAAAA,UAAU,EAAE,KAXuD;AAYnEC,IAAAA,YAAY,EAAE;AAZqD,GAAvE;AAcAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,OAApD,EAA6D;AACzD;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKI,CAAL,CAAOU,EAAP,IAAa,IAAjB,EAAuB;AACnB,eAAO,IAAP;AACH;;AACD,UAAI,CAAC,KAAKV,CAAL,CAAOU,EAAP,CAAUC,cAAf,EAA+B;AAC3B,YAAIC,CAAC,GAAG1C,eAAe,CAAC2C,mBAAhB,CAAoC,KAAKb,CAAL,CAAOU,EAA3C,CAAR;;AACA,YAAIE,CAAJ,EAAO;AACHA,UAAAA,CAAC,CAACf,eAAF,GAAoB,KAAKG,CAAL,CAAOU,EAA3B;AACH;;AACD,aAAKV,CAAL,CAAOU,EAAP,CAAUC,cAAV,GAA2BC,CAA3B;AACH;;AACD,aAAO,KAAKZ,CAAL,CAAOU,EAAP,CAAUC,cAAjB;AACH,KAhBwD;AAiBzDT,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,UAAIA,CAAC,IAAI,IAAL,IAAa,KAAKW,iBAAlB,IAAuCX,CAAC,CAACY,QAA7C,EACIZ,CAAC,CAACY,QAAF,CAAW,KAAKD,iBAAhB,EAAmC,IAAnC,EAAyC,IAAzC;AACJX,MAAAA,CAAC,IAAI,IAAL,GAAY,KAAKH,CAAL,CAAOU,EAAP,GAAY,IAAxB,GAA+B,KAAKV,CAAL,CAAOU,EAAP,GAAYP,CAAC,CAACH,CAA7C;AACH,KArBwD;AAsBzDF,IAAAA,UAAU,EAAE,KAtB6C;AAuBzDC,IAAAA,YAAY,EAAE;AAvB2C,GAA7D;AAyBAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,WAApD,EAAiE;AAC7D;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKX,UAAZ;AACH,KAN4D;AAO7DiB,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKlB,UAAL,GAAkBkB,CAAlB;AACH,KAT4D;AAU7DL,IAAAA,UAAU,EAAE,KAViD;AAW7DC,IAAAA,YAAY,EAAE;AAX+C,GAAjE;AAaAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,OAApD,EAA6D;AACzD;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,UAAI,KAAKI,CAAL,CAAOgB,EAAP,IAAa,IAAjB,EAAuB;AACnB,eAAO,IAAP;AACH;;AACD,UAAI,CAAC,KAAKhB,CAAL,CAAOgB,EAAP,CAAUL,cAAf,EAA+B;AAC3B,YAAIC,CAAC,GAAGzC,eAAe,CAAC0C,mBAAhB,CAAoC,KAAKb,CAAL,CAAOgB,EAA3C,CAAR;;AACA,YAAIJ,CAAJ,EAAO;AACHA,UAAAA,CAAC,CAACf,eAAF,GAAoB,KAAKG,CAAL,CAAOgB,EAA3B;AACH;;AACD,aAAKhB,CAAL,CAAOgB,EAAP,CAAUL,cAAV,GAA2BC,CAA3B;AACH;;AACD,aAAO,KAAKZ,CAAL,CAAOgB,EAAP,CAAUL,cAAjB;AACH,KAhBwD;AAiBzDT,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,UAAIA,CAAC,IAAI,IAAL,IAAa,KAAKW,iBAAlB,IAAuCX,CAAC,CAACY,QAA7C,EACIZ,CAAC,CAACY,QAAF,CAAW,KAAKD,iBAAhB,EAAmC,IAAnC,EAAyC,IAAzC;AACJX,MAAAA,CAAC,IAAI,IAAL,GAAY,KAAKH,CAAL,CAAOgB,EAAP,GAAY,IAAxB,GAA+B,KAAKhB,CAAL,CAAOgB,EAAP,GAAYb,CAAC,CAACH,CAA7C;AACH,KArBwD;AAsBzDF,IAAAA,UAAU,EAAE,KAtB6C;AAuBzDC,IAAAA,YAAY,EAAE;AAvB2C,GAA7D;AAyBAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,WAApD,EAAiE;AAC7D;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKV,UAAZ;AACH,KAN4D;AAO7DgB,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKjB,UAAL,GAAkBiB,CAAlB;AACH,KAT4D;AAU7DL,IAAAA,UAAU,EAAE,KAViD;AAW7DC,IAAAA,YAAY,EAAE;AAX+C,GAAjE;AAaAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,uBAApD,EAA6E;AACzE;AACR;AACA;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOiB,EAAd;AACH,KAPwE;AAQzEf,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOiB,EAAP,GAAY,CAACd,CAAb;AACH,KAVwE;AAWzEL,IAAAA,UAAU,EAAE,KAX6D;AAYzEC,IAAAA,YAAY,EAAE;AAZ2D,GAA7E;AAcAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,SAApD,EAA+D;AAC3D;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOkB,EAAd;AACH,KAN0D;AAO3DpB,IAAAA,UAAU,EAAE,KAP+C;AAQ3DC,IAAAA,YAAY,EAAE;AAR6C,GAA/D;AAUAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,8BAApD,EAAoF;AAChF;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOmB,EAAd;AACH,KAN+E;AAOhFrB,IAAAA,UAAU,EAAE,KAPoE;AAQhFC,IAAAA,YAAY,EAAE;AARkE,GAApF;;AAUAnB,EAAAA,kBAAkB,CAACe,SAAnB,CAA6ByB,QAA7B,GAAwC,UAAUC,IAAV,EAAgB;AACpDxC,IAAAA,MAAM,CAACc,SAAP,CAAiByB,QAAjB,CAA0BpC,IAA1B,CAA+B,IAA/B,EAAqCqC,IAArC;;AACA,SAAK,IAAIrB,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,IAAI,CAACC,MAAzB,EAAiCtB,CAAC,EAAlC,EAAsC;AAClC,UAAI,KAAKuB,SAAL,IAAkB,KAAKA,SAAL,CAAeD,MAAf,GAAwB,CAA1C,IACAD,IAAI,CAACrB,CAAD,CAAJ,CAAQwB,IAAR,IAAgB,KAAKD,SADzB,EACoC;AAChC,aAAKE,KAAL,GAAaJ,IAAI,CAACrB,CAAD,CAAjB;AACH;AACJ;;AACD,SAAK,IAAIA,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGqB,IAAI,CAACC,MAAzB,EAAiCtB,CAAC,EAAlC,EAAsC;AAClC,UAAI,KAAK0B,SAAL,IAAkB,KAAKA,SAAL,CAAeJ,MAAf,GAAwB,CAA1C,IACAD,IAAI,CAACrB,CAAD,CAAJ,CAAQwB,IAAR,IAAgB,KAAKE,SADzB,EACoC;AAChC,aAAKC,KAAL,GAAaN,IAAI,CAACrB,CAAD,CAAjB;AACH;AACJ;AACJ,GAdD;;AAeApB,EAAAA,kBAAkB,CAACe,SAAnB,CAA6BiC,UAA7B,GAA0C,UAAUJ,IAAV,EAAgB;AACtD,QAAIK,UAAU,GAAGhD,MAAM,CAACc,SAAP,CAAiBiC,UAAjB,CAA4B5C,IAA5B,CAAiC,IAAjC,EAAuCwC,IAAvC,CAAjB;;AACA,QAAIK,UAAJ,EAAgB;AACZ,aAAOA,UAAP;AACH;;AACD,QAAI,KAAKJ,KAAL,IAAc,KAAKA,KAAL,CAAWD,IAAzB,IAAiC,KAAKC,KAAL,CAAWD,IAAX,IAAmBA,IAAxD,EAA8D;AAC1D,aAAO,KAAKC,KAAZ;AACH;;AACD,QAAI,KAAKE,KAAL,IAAc,KAAKA,KAAL,CAAWH,IAAzB,IAAiC,KAAKG,KAAL,CAAWH,IAAX,IAAmBA,IAAxD,EAA8D;AAC1D,aAAO,KAAKG,KAAZ;AACH;;AACD,WAAO,IAAP;AACH,GAZD;;AAaA/C,EAAAA,kBAAkB,CAACe,SAAnB,CAA6BoB,QAA7B,GAAwC,UAAUe,SAAV,EAAqBC,SAArB,EAAgCC,MAAhC,EAAwC;AAC5EnD,IAAAA,MAAM,CAACc,SAAP,CAAiBoB,QAAjB,CAA0B/B,IAA1B,CAA+B,IAA/B,EAAqC8C,SAArC,EAAgDC,SAAhD,EAA2DC,MAA3D;;AACA,SAAKC,UAAL,GAAkB,IAAlB;;AACA,QAAI,KAAKR,KAAL,IAAc,KAAKA,KAAL,CAAWV,QAA7B,EAAuC;AACnC,WAAKU,KAAL,CAAWV,QAAX,CAAoBe,SAApB,EAA+BC,SAA/B,EAA0C,IAA1C;AACH;;AACD,QAAI,KAAKJ,KAAL,IAAc,KAAKA,KAAL,CAAWZ,QAA7B,EAAuC;AACnC,WAAKY,KAAL,CAAWZ,QAAX,CAAoBe,SAApB,EAA+BC,SAA/B,EAA0C,IAA1C;AACH;;AACD,SAAKE,UAAL,GAAkB,KAAlB;AACH,GAVD;;AAWArD,EAAAA,kBAAkB,CAACe,SAAnB,CAA6BuC,YAA7B,GAA4C,UAAUC,IAAV,EAAgBC,cAAhB,EAAgC;AACxE,QAAIC,EAAE,GAAG,KAAKrC,CAAL,CAAOsC,EAAP,CAAUH,IAAV,EAAgBC,cAAhB,CAAT;AACA,WAAQC,EAAR;AACH,GAHD;;AAIAzD,EAAAA,kBAAkB,CAACe,SAAnB,CAA6B4C,iBAA7B,GAAiD,UAAUC,KAAV,EAAiB;AAC9D,QAAIH,EAAE,GAAG,KAAKrC,CAAL,CAAOyC,EAAP,CAAU/D,OAAO,CAAC8D,KAAD,CAAjB,CAAT;AACA,WAAQH,EAAR;AACH,GAHD;;AAIAzD,EAAAA,kBAAkB,CAACe,SAAnB,CAA6B+C,sBAA7B,GAAsD,UAAUF,KAAV,EAAiBG,gBAAjB,EAAmCC,YAAnC,EAAiD;AACnG,QAAIP,EAAE,GAAG,KAAKrC,CAAL,CAAO6C,EAAP,CAAUnE,OAAO,CAAC8D,KAAD,CAAjB,EAA0BG,gBAA1B,EAA4CC,YAA5C,CAAT;AACA,WAAOjE,SAAS,CAAC0D,EAAD,CAAhB;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;;;AACIzD,EAAAA,kBAAkB,CAACe,SAAnB,CAA6BmD,OAA7B,GAAuC,UAAUN,KAAV,EAAiB;AACpD,QAAIH,EAAE,GAAG,KAAKrC,CAAL,CAAO+C,EAAP,CAAUrE,OAAO,CAAC8D,KAAD,CAAjB,CAAT;AACA,WAAQH,EAAR;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;;;AACIzD,EAAAA,kBAAkB,CAACe,SAAnB,CAA6BqD,aAA7B,GAA6C,UAAUC,IAAV,EAAgB;AACzD,QAAIZ,EAAE,GAAG,KAAKrC,CAAL,CAAOkD,EAAP,CAAUD,IAAV,CAAT;AACA,WAAQZ,EAAR;AACH,GAHD;AAIA;AACJ;AACA;AACA;AACA;;;AACIzD,EAAAA,kBAAkB,CAACe,SAAnB,CAA6BwD,aAA7B,GAA6C,UAAUF,IAAV,EAAgB;AACzD,QAAIZ,EAAE,GAAG,KAAKrC,CAAL,CAAOoD,EAAP,CAAUH,IAAV,CAAT;AACA,WAAQZ,EAAR;AACH,GAHD;;AAIA5C,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,qBAApD,EAA2E;AACvE;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKT,oBAAZ;AACH,KANsE;AAOvEe,IAAAA,GAAG,EAAE,UAAUmD,EAAV,EAAc;AACf,UAAItE,KAAK,GAAG,IAAZ;;AACA,UAAI,KAAKK,4BAAL,KAAsC,IAA1C,EAAgD;AAC5C,aAAKY,CAAL,CAAOsD,mBAAP,GAA6BtF,cAAc,CAAC,KAAKgC,CAAL,CAAOsD,mBAAR,EAA6B,KAAKlE,4BAAlC,CAA3C;AACA,aAAKA,4BAAL,GAAoC,IAApC;AACA,aAAKD,oBAAL,GAA4B,IAA5B;AACH;;AACD,WAAKA,oBAAL,GAA4BkE,EAA5B;;AACA,WAAKjE,4BAAL,GAAoC,UAAUmE,CAAV,EAAa3C,CAAb,EAAgB;AAChD,YAAI4C,SAAS,GAAG,IAAIpF,+BAAJ,EAAhB;;AACAoF,QAAAA,SAAS,CAACC,sBAAV,CAAiC7C,CAAjC;;AACA,YAAI7B,KAAK,CAAC2E,yBAAV,EAAqC;AACjC3E,UAAAA,KAAK,CAAC2E,yBAAN,CAAgC3E,KAAhC,EAAuCyE,SAAvC;AACH;;AACD,YAAIzE,KAAK,CAACI,oBAAV,EAAgC;AAC5BJ,UAAAA,KAAK,CAACI,oBAAN,CAA2BJ,KAA3B,EAAkCyE,SAAlC;AACH;AACJ,OATD;;AAUA,WAAKxD,CAAL,CAAOsD,mBAAP,GAA6BvF,eAAe,CAAC,KAAKiC,CAAL,CAAOsD,mBAAR,EAA6B,KAAKlE,4BAAlC,CAA5C;AACA;AACH,KA3BsE;AA4BvEU,IAAAA,UAAU,EAAE,KA5B2D;AA6BvEC,IAAAA,YAAY,EAAE;AA7ByD,GAA3E;AA+BAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,2BAApD,EAAiF;AAC7E;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKP,0BAAZ;AACH,KAN4E;AAO7Ea,IAAAA,GAAG,EAAE,UAAUmD,EAAV,EAAc;AACf,UAAItE,KAAK,GAAG,IAAZ;;AACA,UAAI,KAAKO,kCAAL,KAA4C,IAAhD,EAAsD;AAClD,aAAKU,CAAL,CAAO2D,yBAAP,GAAmC3F,cAAc,CAAC,KAAKgC,CAAL,CAAO2D,yBAAR,EAAmC,KAAKrE,kCAAxC,CAAjD;AACA,aAAKA,kCAAL,GAA0C,IAA1C;AACA,aAAKD,0BAAL,GAAkC,IAAlC;AACH;;AACD,WAAKA,0BAAL,GAAkCgE,EAAlC;;AACA,WAAK/D,kCAAL,GAA0C,UAAUiE,CAAV,EAAa3C,CAAb,EAAgB;AACtD,YAAI4C,SAAS,GAAG,IAAInF,qCAAJ,EAAhB;;AACAmF,QAAAA,SAAS,CAACC,sBAAV,CAAiC7C,CAAjC;;AACA,YAAI7B,KAAK,CAAC6E,+BAAV,EAA2C;AACvC7E,UAAAA,KAAK,CAAC6E,+BAAN,CAAsC7E,KAAtC,EAA6CyE,SAA7C;AACH;;AACD,YAAIzE,KAAK,CAACM,0BAAV,EAAsC;AAClCN,UAAAA,KAAK,CAACM,0BAAN,CAAiCN,KAAjC,EAAwCyE,SAAxC;AACH;AACJ,OATD;;AAUA,WAAKxD,CAAL,CAAO2D,yBAAP,GAAmC5F,eAAe,CAAC,KAAKiC,CAAL,CAAO2D,yBAAR,EAAmC,KAAKrE,kCAAxC,CAAlD;AACA;AACH,KA3B4E;AA4B7EQ,IAAAA,UAAU,EAAE,KA5BiE;AA6B7EC,IAAAA,YAAY,EAAE;AA7B+D,GAAjF;AA+BAN,EAAAA,MAAM,CAACC,cAAP,CAAsBd,kBAAkB,CAACe,SAAzC,EAAoD,YAApD,EAAkE;AAC9D;AACR;AACA;AACQC,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKL,WAAZ;AACH,KAN6D;AAO9DW,IAAAA,GAAG,EAAE,UAAUmD,EAAV,EAAc;AACf,UAAItE,KAAK,GAAG,IAAZ;;AACA,UAAI,KAAKS,mBAAL,KAA6B,IAAjC,EAAuC;AACnC,aAAKQ,CAAL,CAAO6D,UAAP,GAAoB7F,cAAc,CAAC,KAAKgC,CAAL,CAAO6D,UAAR,EAAoB,KAAKrE,mBAAzB,CAAlC;AACA,aAAKA,mBAAL,GAA2B,IAA3B;AACA,aAAKD,WAAL,GAAmB,IAAnB;AACH;;AACD,WAAKA,WAAL,GAAmB8D,EAAnB;;AACA,WAAK7D,mBAAL,GAA2B,UAAU+D,CAAV,EAAa3C,CAAb,EAAgB;AACvC,YAAI4C,SAAS,GAAG,IAAIlF,sBAAJ,EAAhB;;AACAkF,QAAAA,SAAS,CAACC,sBAAV,CAAiC7C,CAAjC;;AACA,YAAI7B,KAAK,CAAC+E,gBAAV,EAA4B;AACxB/E,UAAAA,KAAK,CAAC+E,gBAAN,CAAuB/E,KAAvB,EAA8ByE,SAA9B;AACH;;AACD,YAAIzE,KAAK,CAACQ,WAAV,EAAuB;AACnBR,UAAAA,KAAK,CAACQ,WAAN,CAAkBR,KAAlB,EAAyByE,SAAzB;AACH;AACJ,OATD;;AAUA,WAAKxD,CAAL,CAAO6D,UAAP,GAAoB9F,eAAe,CAAC,KAAKiC,CAAL,CAAO6D,UAAR,EAAoB,KAAKrE,mBAAzB,CAAnC;AACA;AACH,KA3B6D;AA4B9DM,IAAAA,UAAU,EAAE,KA5BkD;AA6B9DC,IAAAA,YAAY,EAAE;AA7BgD,GAAlE;AA+BA,SAAOnB,kBAAP;AACH,CA3YqD,CA2YpDL,SA3YoD,CAAtD;;AA4YA,SAASK,kBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { ShapeItemSearchMode_$type } from \"./ShapeItemSearchMode\";\nimport { IgrNumericXAxis } from \"./igr-numeric-x-axis\";\nimport { IgrNumericYAxis } from \"./igr-numeric-y-axis\";\nimport { IgrAssigningShapeStyleEventArgs } from \"./igr-assigning-shape-style-event-args\";\nimport { IgrAssigningShapeMarkerStyleEventArgs } from \"./igr-assigning-shape-marker-style-event-args\";\nimport { IgrStyleShapeEventArgs } from \"./igr-style-shape-event-args\";\nimport { IgrSeries } from \"./igr-series\";\nimport { ensureBool, ensureEnum, toPoint, fromPoint } from \"igniteui-react-core\";\n/**\n * Series class for rendering polygons.\n*/\nvar IgrShapeSeriesBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrShapeSeriesBase, _super);\n    function IgrShapeSeriesBase(props) {\n        var _this = _super.call(this, props) || this;\n        _this._xAxisName = null;\n        _this._yAxisName = null;\n        _this._assigningShapeStyle = null;\n        _this._assigningShapeStyle_wrapped = null;\n        _this._assigningShapeMarkerStyle = null;\n        _this._assigningShapeMarkerStyle_wrapped = null;\n        _this._styleShape = null;\n        _this._styleShape_wrapped = null;\n        return _this;\n    }\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"isCustomShapeStyleAllowed\", {\n        /**\n         * Gets or sets whether this Shape series should allow custom style overrides of its individual visuals.\n        */\n        get: function () {\n            return this.i.q5;\n        },\n        set: function (v) {\n            this.i.q5 = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"isCustomShapeMarkerStyleAllowed\", {\n        /**\n         * Gets or sets whether this Shape series should allow custom style overrides of its individual marker visuals.\n        */\n        get: function () {\n            return this.i.q4;\n        },\n        set: function (v) {\n            this.i.q4 = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"actualItemSearchMode\", {\n        get: function () {\n            return this.i.qp;\n        },\n        set: function (v) {\n            this.i.qp = ensureEnum(ShapeItemSearchMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"itemSearchMode\", {\n        /**\n         * Gets or sets the mode the series will use to find the closest point to the cursor.\n        */\n        get: function () {\n            return this.i.qr;\n        },\n        set: function (v) {\n            this.i.qr = ensureEnum(ShapeItemSearchMode_$type, v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"itemSearchThreshold\", {\n        /**\n         * Gets or sets the threshold to use when searching for items using ItemSearchMode.\n        */\n        get: function () {\n            return this.i.rn;\n        },\n        set: function (v) {\n            this.i.rn = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"itemSearchPointsThreshold\", {\n        /**\n         * Gets or sets the points threshold to use when searching for items using ItemSearchMode.\n        */\n        get: function () {\n            return this.i.rm;\n        },\n        set: function (v) {\n            this.i.rm = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"shapeMemberPath\", {\n        /**\n         * The name of the property on ItemsSource items which, for each shape, contains a list of points to be converted to a polygon.\n         * To be consistent with the Shapefile technical description, it is expected that each list of points is defined as an IEnumerable of IEnumerable of Point, or in other words, a list of lists of points.\n        */\n        get: function () {\n            return this.i.rx;\n        },\n        set: function (v) {\n            this.i.rx = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"xAxis\", {\n        /**\n         * Gets or sets the effective x-axis for the current ScatterBase object.\n        */\n        get: function () {\n            if (this.i.ql == null) {\n                return null;\n            }\n            if (!this.i.ql.externalObject) {\n                var e = IgrNumericXAxis._createFromInternal(this.i.ql);\n                if (e) {\n                    e._implementation = this.i.ql;\n                }\n                this.i.ql.externalObject = e;\n            }\n            return this.i.ql.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.ql = null : this.i.ql = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"xAxisName\", {\n        /**\n        * Gets or sets the name to use to resolve xAxis from markup.\n        */\n        get: function () {\n            return this._xAxisName;\n        },\n        set: function (v) {\n            this._xAxisName = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"yAxis\", {\n        /**\n         * Gets or sets the effective y-axis for the current ScatterBase object.\n        */\n        get: function () {\n            if (this.i.qn == null) {\n                return null;\n            }\n            if (!this.i.qn.externalObject) {\n                var e = IgrNumericYAxis._createFromInternal(this.i.qn);\n                if (e) {\n                    e._implementation = this.i.qn;\n                }\n                this.i.qn.externalObject = e;\n            }\n            return this.i.qn.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.qn = null : this.i.qn = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"yAxisName\", {\n        /**\n        * Gets or sets the name to use to resolve yAxis from markup.\n        */\n        get: function () {\n            return this._yAxisName;\n        },\n        set: function (v) {\n            this._yAxisName = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"shapeFilterResolution\", {\n        /**\n         * The resolution at which to filter out shapes in the series.  For example, if the ShapeFilterResolution is set to 3, then elements with a bounding rectangle smaller than 3 X 3 pixels will be filtered out.\n         * In the case of ScatterPolylineSeries, the resolution is compared to either dimension, rather than both.  In other words, a polyline will not be filtered if its height or its width exceeds the value of this property.  Whereas with a ShapeSeries, both the height and the width must exceed the value of this property.\n        */\n        get: function () {\n            return this.i.rj;\n        },\n        set: function (v) {\n            this.i.rj = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"isShape\", {\n        /**\n         * Gets whether or not this series is a shape series\n        */\n        get: function () {\n            return this.i.ed;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"isMarkerlessDisplayPreferred\", {\n        /**\n         * Overridden by derived series classes to indicate when marker-less display is preferred or not.\n        */\n        get: function () {\n            return this.i.d2;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrShapeSeriesBase.prototype.bindAxes = function (axes) {\n        _super.prototype.bindAxes.call(this, axes);\n        for (var i = 0; i < axes.length; i++) {\n            if (this.xAxisName && this.xAxisName.length > 0 &&\n                axes[i].name == this.xAxisName) {\n                this.xAxis = axes[i];\n            }\n        }\n        for (var i = 0; i < axes.length; i++) {\n            if (this.yAxisName && this.yAxisName.length > 0 &&\n                axes[i].name == this.yAxisName) {\n                this.yAxis = axes[i];\n            }\n        }\n    };\n    IgrShapeSeriesBase.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.xAxis && this.xAxis.name && this.xAxis.name == name) {\n            return this.xAxis;\n        }\n        if (this.yAxis && this.yAxis.name && this.yAxis.name == name) {\n            return this.yAxis;\n        }\n        return null;\n    };\n    IgrShapeSeriesBase.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.xAxis && this.xAxis._styling) {\n            this.xAxis._styling(container, component, this);\n        }\n        if (this.yAxis && this.yAxis._styling) {\n            this.yAxis._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    IgrShapeSeriesBase.prototype.getItemValue = function (item, memberPathName) {\n        var iv = this.i.hw(item, memberPathName);\n        return (iv);\n    };\n    IgrShapeSeriesBase.prototype.getExactItemIndex = function (world) {\n        var iv = this.i.f5(toPoint(world));\n        return (iv);\n    };\n    IgrShapeSeriesBase.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.pm(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    /**\n     * Gets the item that is the best match for the specified world coordinates.\n    \r\n    * @param world  * The world coordinates to use.\n    */\n    IgrShapeSeriesBase.prototype.getItem = function (world) {\n        var iv = this.i.ht(toPoint(world));\n        return (iv);\n    };\n    /**\n     * Determine if object can be used as YAxis\n    \r\n    * @param axis  * The object to check\n    */\n    IgrShapeSeriesBase.prototype.canUseAsYAxis = function (axis) {\n        var iv = this.i.q0(axis);\n        return (iv);\n    };\n    /**\n     * Determine if object can be used as XAxis\n    \r\n    * @param axis  * The object to check\n    */\n    IgrShapeSeriesBase.prototype.canUseAsXAxis = function (axis) {\n        var iv = this.i.qz(axis);\n        return (iv);\n    };\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"assigningShapeStyle\", {\n        /**\n         * Event raised when Assigning Shape Style. Note, if using this event, or highlighting, its best to avoid use of ShapeStyle/StyleShape/ShapeStyleSelector.\n        */\n        get: function () {\n            return this._assigningShapeStyle;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._assigningShapeStyle_wrapped !== null) {\n                this.i.assigningShapeStyle = delegateRemove(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\n                this._assigningShapeStyle_wrapped = null;\n                this._assigningShapeStyle = null;\n            }\n            this._assigningShapeStyle = ev;\n            this._assigningShapeStyle_wrapped = function (o, e) {\n                var outerArgs = new IgrAssigningShapeStyleEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeAssigningShapeStyle) {\n                    _this.beforeAssigningShapeStyle(_this, outerArgs);\n                }\n                if (_this._assigningShapeStyle) {\n                    _this._assigningShapeStyle(_this, outerArgs);\n                }\n            };\n            this.i.assigningShapeStyle = delegateCombine(this.i.assigningShapeStyle, this._assigningShapeStyle_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"assigningShapeMarkerStyle\", {\n        /**\n         * Event raised when Assigning Shape Marker Style\n        */\n        get: function () {\n            return this._assigningShapeMarkerStyle;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._assigningShapeMarkerStyle_wrapped !== null) {\n                this.i.assigningShapeMarkerStyle = delegateRemove(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\n                this._assigningShapeMarkerStyle_wrapped = null;\n                this._assigningShapeMarkerStyle = null;\n            }\n            this._assigningShapeMarkerStyle = ev;\n            this._assigningShapeMarkerStyle_wrapped = function (o, e) {\n                var outerArgs = new IgrAssigningShapeMarkerStyleEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeAssigningShapeMarkerStyle) {\n                    _this.beforeAssigningShapeMarkerStyle(_this, outerArgs);\n                }\n                if (_this._assigningShapeMarkerStyle) {\n                    _this._assigningShapeMarkerStyle(_this, outerArgs);\n                }\n            };\n            this.i.assigningShapeMarkerStyle = delegateCombine(this.i.assigningShapeMarkerStyle, this._assigningShapeMarkerStyle_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrShapeSeriesBase.prototype, \"styleShape\", {\n        /**\n         * Raised when tile's image URI should be provided\n        */\n        get: function () {\n            return this._styleShape;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._styleShape_wrapped !== null) {\n                this.i.styleShape = delegateRemove(this.i.styleShape, this._styleShape_wrapped);\n                this._styleShape_wrapped = null;\n                this._styleShape = null;\n            }\n            this._styleShape = ev;\n            this._styleShape_wrapped = function (o, e) {\n                var outerArgs = new IgrStyleShapeEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeStyleShape) {\n                    _this.beforeStyleShape(_this, outerArgs);\n                }\n                if (_this._styleShape) {\n                    _this._styleShape(_this, outerArgs);\n                }\n            };\n            this.i.styleShape = delegateCombine(this.i.styleShape, this._styleShape_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrShapeSeriesBase;\n}(IgrSeries));\nexport { IgrShapeSeriesBase };\n"]},"metadata":{},"sourceType":"module"}