{"ast":null,"code":"import { __extends, __values } from \"tslib\";\n/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\n\nimport * as React from 'react';\nimport { TimeAxisLabelFormat } from \"./TimeAxisLabelFormat\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { NamePatcher, getModifiedProps, isValidProp, toSpinal, initializePropertiesFromCss } from \"igniteui-react-core\";\n\nvar IgrTimeAxisLabelFormat =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrTimeAxisLabelFormat, _super);\n\n  function IgrTimeAxisLabelFormat(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._renderer = null;\n    _this.__p = null;\n    _this._hasUserValues = new Set();\n    _this._stylingContainer = null;\n    _this._stylingParent = null;\n    _this._inStyling = false;\n\n    if (_this._styling) {\n      NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n    }\n\n    _this._implementation = _this.createImplementation();\n    _this._implementation.externalObject = _this;\n\n    _this.onImplementationCreated();\n\n    return _this;\n  }\n\n  Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrTimeAxisLabelFormat.prototype.onImplementationCreated = function () {};\n\n  IgrTimeAxisLabelFormat.prototype.componentDidMount = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = this.props[p];\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  };\n\n  IgrTimeAxisLabelFormat.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var e_2, _a;\n\n    var mod = getModifiedProps(this.props, nextProps);\n\n    try {\n      for (var _b = __values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = mod[p];\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return true;\n  };\n\n  IgrTimeAxisLabelFormat.prototype.render = function () {\n    return null;\n  };\n\n  IgrTimeAxisLabelFormat.prototype.createImplementation = function () {\n    return new TimeAxisLabelFormat();\n  };\n\n  IgrTimeAxisLabelFormat.prototype._provideRenderer = function (renderer) {\n    this._renderer = renderer;\n  };\n\n  IgrTimeAxisLabelFormat._createFromInternal = function (internal) {\n    if (!internal) {\n      return null;\n    }\n\n    if (!internal.$type) {\n      return null;\n    }\n\n    var name = internal.$type.name;\n    var externalName = \"Igr\" + name;\n\n    if (!TypeRegistrar.isRegistered(externalName)) {\n      return null;\n    }\n\n    return TypeRegistrar.create(externalName);\n  };\n\n  Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"range\", {\n    /**\n    * The visible axis range at which to apply this label format.\n    *\n    * The `range` property provide the visible axis range at which to apply this label format.\n    *\n    * ```ts\n    * let labelFormat = new TimeAxisLabelFormat();\n    * labelFormat.format = \"hh:mm:ss\";\n    * labelFormat.range = 1000;\n    * this.xAxis.labelFormats.add(labelFormat);\n    * labelFormat = new TimeAxisLabelFormat();\n    * labelFormat.format = \"hh:mm\";\n    * labelFormat.range = 60 * 1000;\n    * this.xAxis.labelFormats.add(labelFormat);\n    * labelFormat = new TimeAxisLabelFormat();\n    * labelFormat.format = \"MMM-dd-yy\";\n    * labelFormat.range = 24 * 60 * 60 * 1000;\n    * this.xAxis.labelFormats.add(labelFormat);\n    * ```\n    */\n    get: function () {\n      return this.i.o;\n    },\n    set: function (v) {\n      this.i.o = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"format\", {\n    /**\n     * The DateTime format string to apply.\n     * Some common DateTime format strings are: yyyy, MM/dd/yy, and hh:mm:ss.\n    *\n    * The `format` property provide the DateTime format string to apply.\n    *\n    * ```ts\n    * let labelFormat = new TimeAxisLabelFormat();\n    * labelFormat.format = \"hh:mm:ss\";\n    * labelFormat.range = 1000;\n    * this.xAxis.labelFormats.add(labelFormat);\n    * labelFormat = new TimeAxisLabelFormat();\n    * labelFormat.format = \"hh:mm\";\n    * labelFormat.range = 60 * 1000;\n    * this.xAxis.labelFormats.add(labelFormat);\n    * labelFormat = new TimeAxisLabelFormat();\n    * labelFormat.format = \"MMM-dd-yy\";\n    * labelFormat.range = 24 * 60 * 60 * 1000;\n    * this.xAxis.labelFormats.add(labelFormat);\n    * ```\n    *\n    * ```ts\n    *   <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *     <IgrTimeXAxis name=\"xAxis\" label=\"Date\"\n    * \t\t\tdateTimeMemberPath=\"Date\" />\n    *  </IgrDataChart>\n    * ```\n    */\n    get: function () {\n      return this.i.e;\n    },\n    set: function (v) {\n      this.i.e = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"repeatedYearFormat\", {\n    /**\n     * The DateTime format string to apply, if the year is repeated from the prior date.\n     * Some common DateTime format strings are: yyyy, MM/dd/yy, and hh:mm:ss.\n    */\n    get: function () {\n      return this.i.l;\n    },\n    set: function (v) {\n      this.i.l = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"repeatedMonthFormat\", {\n    /**\n     * The DateTime format string to apply, if the month is repeated from the prior date.\n     * Some common DateTime format strings are: yyyy, MM/dd/yy, and hh:mm:ss.\n    */\n    get: function () {\n      return this.i.j;\n    },\n    set: function (v) {\n      this.i.j = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"repeatedDayFormat\", {\n    /**\n     * The DateTime format string to apply, if the day is repeated from the prior date.\n     * Some common DateTime format strings are: yyyy, MM/dd/yy, and hh:mm:ss.\n    */\n    get: function () {\n      return this.i.h;\n    },\n    set: function (v) {\n      this.i.h = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrTimeAxisLabelFormat.prototype.findByName = function (name) {\n    return null;\n  };\n\n  Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"hasUserValues\", {\n    get: function () {\n      return this._hasUserValues;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrTimeAxisLabelFormat.prototype.__m = function (propertyName) {\n    if (!this._inStyling) {\n      this._hasUserValues.add(propertyName);\n    }\n  };\n\n  IgrTimeAxisLabelFormat.prototype._styling = function (container, component, parent) {\n    if (this._inStyling) {\n      return;\n    }\n\n    this._inStyling = true;\n    this._stylingContainer = container;\n    this._stylingParent = component;\n    var genericPrefix = \"\";\n    var typeName = this.i.$type.name;\n\n    if (typeName.indexOf(\"Xam\") === 0) {\n      typeName = typeName.substring(3);\n    }\n\n    genericPrefix = toSpinal(\"TimeAxisLabelFormat\");\n    var additionalPrefixes = [];\n    var prefix = toSpinal(typeName);\n    additionalPrefixes.push(prefix + \"-\");\n    var b = this.i.$type.baseType;\n\n    while (b && b.name != \"Object\" && b.name != \"Base\" && b.name != \"Control\" && b.Name != \"DependencyObject\" && b.Name != \"FrameworkElement\") {\n      typeName = b.name;\n\n      if (typeName.indexOf(\"Xam\") === 0) {\n        typeName = typeName.substring(3);\n      }\n\n      var basePrefix = toSpinal(typeName);\n      additionalPrefixes.push(basePrefix + \"-\");\n      b = b.baseType;\n    }\n\n    if (parent) {\n      var parentTypeName = parent.i.$type.name;\n\n      if (parentTypeName.indexOf(\"Xam\") === 0) {\n        parentTypeName = parentTypeName.substring(3);\n      }\n\n      var parentPrefix = toSpinal(parentTypeName);\n      additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n      additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n    }\n\n    initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n\n    if (this._otherStyling) {\n      this._otherStyling(container, component, parent);\n    }\n\n    this._inStyling = false;\n  };\n\n  return IgrTimeAxisLabelFormat;\n}(React.Component);\n\nexport { IgrTimeAxisLabelFormat };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-time-axis-label-format.js"],"names":["__extends","__values","React","TimeAxisLabelFormat","TypeRegistrar","NamePatcher","getModifiedProps","isValidProp","toSpinal","initializePropertiesFromCss","IgrTimeAxisLabelFormat","_super","props","_this","call","_renderer","__p","_hasUserValues","Set","_stylingContainer","_stylingParent","_inStyling","_styling","ensureStylablePatched","Object","getPrototypeOf","_implementation","createImplementation","externalObject","onImplementationCreated","defineProperty","prototype","get","enumerable","configurable","componentDidMount","e_1","_a","_b","keys","_c","next","done","p","value","e_1_1","error","return","shouldComponentUpdate","nextProps","nextState","e_2","mod","e_2_1","render","_provideRenderer","renderer","_createFromInternal","internal","$type","name","externalName","isRegistered","create","i","o","set","v","e","l","j","h","findByName","__m","propertyName","add","container","component","parent","genericPrefix","typeName","indexOf","substring","additionalPrefixes","prefix","push","b","baseType","Name","basePrefix","parentTypeName","parentPrefix","hasUserValues","_otherStyling","Component"],"mappings":"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","sourcesContent":["import { __extends, __values } from \"tslib\";\n/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport * as React from 'react';\nimport { TimeAxisLabelFormat } from \"./TimeAxisLabelFormat\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { NamePatcher, getModifiedProps, isValidProp, toSpinal, initializePropertiesFromCss } from \"igniteui-react-core\";\nvar IgrTimeAxisLabelFormat = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrTimeAxisLabelFormat, _super);\n    function IgrTimeAxisLabelFormat(props) {\n        var _this = _super.call(this, props) || this;\n        _this._renderer = null;\n        _this.__p = null;\n        _this._hasUserValues = new Set();\n        _this._stylingContainer = null;\n        _this._stylingParent = null;\n        _this._inStyling = false;\n        if (_this._styling) {\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n        }\n        _this._implementation = _this.createImplementation();\n        _this._implementation.externalObject = _this;\n        _this.onImplementationCreated();\n        return _this;\n    }\n    Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrTimeAxisLabelFormat.prototype.onImplementationCreated = function () {\n    };\n    IgrTimeAxisLabelFormat.prototype.componentDidMount = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = this.props[p];\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    };\n    IgrTimeAxisLabelFormat.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var e_2, _a;\n        var mod = getModifiedProps(this.props, nextProps);\n        try {\n            for (var _b = __values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = mod[p];\n                }\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return true;\n    };\n    IgrTimeAxisLabelFormat.prototype.render = function () {\n        return null;\n    };\n    IgrTimeAxisLabelFormat.prototype.createImplementation = function () {\n        return new TimeAxisLabelFormat();\n    };\n    IgrTimeAxisLabelFormat.prototype._provideRenderer = function (renderer) {\n        this._renderer = renderer;\n    };\n    IgrTimeAxisLabelFormat._createFromInternal = function (internal) {\n        if (!internal) {\n            return null;\n        }\n        if (!internal.$type) {\n            return null;\n        }\n        var name = internal.$type.name;\n        var externalName = \"Igr\" + name;\n        if (!TypeRegistrar.isRegistered(externalName)) {\n            return null;\n        }\n        return TypeRegistrar.create(externalName);\n    };\n    Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"range\", {\n        /**\n     * The visible axis range at which to apply this label format.\n    *\n    * The `range` property provide the visible axis range at which to apply this label format.\n    *\n    * ```ts\n    * let labelFormat = new TimeAxisLabelFormat();\n    * labelFormat.format = \"hh:mm:ss\";\n    * labelFormat.range = 1000;\n    * this.xAxis.labelFormats.add(labelFormat);\n    * labelFormat = new TimeAxisLabelFormat();\n    * labelFormat.format = \"hh:mm\";\n    * labelFormat.range = 60 * 1000;\n    * this.xAxis.labelFormats.add(labelFormat);\n    * labelFormat = new TimeAxisLabelFormat();\n    * labelFormat.format = \"MMM-dd-yy\";\n    * labelFormat.range = 24 * 60 * 60 * 1000;\n    * this.xAxis.labelFormats.add(labelFormat);\n    * ```\n    */\n        get: function () {\n            return this.i.o;\n        },\n        set: function (v) {\n            this.i.o = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"format\", {\n        /**\n         * The DateTime format string to apply.\n         * Some common DateTime format strings are: yyyy, MM/dd/yy, and hh:mm:ss.\n        *\n        * The `format` property provide the DateTime format string to apply.\n        *\n        * ```ts\n        * let labelFormat = new TimeAxisLabelFormat();\n        * labelFormat.format = \"hh:mm:ss\";\n        * labelFormat.range = 1000;\n        * this.xAxis.labelFormats.add(labelFormat);\n        * labelFormat = new TimeAxisLabelFormat();\n        * labelFormat.format = \"hh:mm\";\n        * labelFormat.range = 60 * 1000;\n        * this.xAxis.labelFormats.add(labelFormat);\n        * labelFormat = new TimeAxisLabelFormat();\n        * labelFormat.format = \"MMM-dd-yy\";\n        * labelFormat.range = 24 * 60 * 60 * 1000;\n        * this.xAxis.labelFormats.add(labelFormat);\n        * ```\n        *\n        * ```ts\n        *   <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *     <IgrTimeXAxis name=\"xAxis\" label=\"Date\"\n        * \t\t\tdateTimeMemberPath=\"Date\" />\n        *  </IgrDataChart>\n        * ```\n        */\n        get: function () {\n            return this.i.e;\n        },\n        set: function (v) {\n            this.i.e = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"repeatedYearFormat\", {\n        /**\n         * The DateTime format string to apply, if the year is repeated from the prior date.\n         * Some common DateTime format strings are: yyyy, MM/dd/yy, and hh:mm:ss.\n        */\n        get: function () {\n            return this.i.l;\n        },\n        set: function (v) {\n            this.i.l = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"repeatedMonthFormat\", {\n        /**\n         * The DateTime format string to apply, if the month is repeated from the prior date.\n         * Some common DateTime format strings are: yyyy, MM/dd/yy, and hh:mm:ss.\n        */\n        get: function () {\n            return this.i.j;\n        },\n        set: function (v) {\n            this.i.j = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"repeatedDayFormat\", {\n        /**\n         * The DateTime format string to apply, if the day is repeated from the prior date.\n         * Some common DateTime format strings are: yyyy, MM/dd/yy, and hh:mm:ss.\n        */\n        get: function () {\n            return this.i.h;\n        },\n        set: function (v) {\n            this.i.h = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrTimeAxisLabelFormat.prototype.findByName = function (name) {\n        return null;\n    };\n    Object.defineProperty(IgrTimeAxisLabelFormat.prototype, \"hasUserValues\", {\n        get: function () {\n            return this._hasUserValues;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrTimeAxisLabelFormat.prototype.__m = function (propertyName) {\n        if (!this._inStyling) {\n            this._hasUserValues.add(propertyName);\n        }\n    };\n    IgrTimeAxisLabelFormat.prototype._styling = function (container, component, parent) {\n        if (this._inStyling) {\n            return;\n        }\n        this._inStyling = true;\n        this._stylingContainer = container;\n        this._stylingParent = component;\n        var genericPrefix = \"\";\n        var typeName = this.i.$type.name;\n        if (typeName.indexOf(\"Xam\") === 0) {\n            typeName = typeName.substring(3);\n        }\n        genericPrefix = toSpinal(\"TimeAxisLabelFormat\");\n        var additionalPrefixes = [];\n        var prefix = toSpinal(typeName);\n        additionalPrefixes.push(prefix + \"-\");\n        var b = this.i.$type.baseType;\n        while (b && b.name != \"Object\" &&\n            b.name != \"Base\" &&\n            b.name != \"Control\" &&\n            b.Name != \"DependencyObject\" &&\n            b.Name != \"FrameworkElement\") {\n            typeName = b.name;\n            if (typeName.indexOf(\"Xam\") === 0) {\n                typeName = typeName.substring(3);\n            }\n            var basePrefix = toSpinal(typeName);\n            additionalPrefixes.push(basePrefix + \"-\");\n            b = b.baseType;\n        }\n        if (parent) {\n            var parentTypeName = parent.i.$type.name;\n            if (parentTypeName.indexOf(\"Xam\") === 0) {\n                parentTypeName = parentTypeName.substring(3);\n            }\n            var parentPrefix = toSpinal(parentTypeName);\n            additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n            additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n        }\n        initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n        if (this._otherStyling) {\n            this._otherStyling(container, component, parent);\n        }\n        this._inStyling = false;\n    };\n    return IgrTimeAxisLabelFormat;\n}(React.Component));\nexport { IgrTimeAxisLabelFormat };\n"]},"metadata":{},"sourceType":"module"}