{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { CategoryTrendLineManager } from \"./CategoryTrendLineManager\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Point_$type, markType } from \"igniteui-react-core\";\nimport { BarTrendFitCalculator } from \"./BarTrendFitCalculator\";\nimport { TrendAverageCalculator } from \"./TrendAverageCalculator\";\n/**\n * @hidden\n */\n\nvar BarTrendLineManager =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(BarTrendLineManager, _super);\n\n  function BarTrendLineManager() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  BarTrendLineManager.prototype.prepareLineCore = function (a, b, c, d, e, f, g) {\n    var h = g.d * g.c;\n    var i = g.e * g.c;\n    var j = new List$1(Point_$type, 0);\n\n    if (b == 0) {\n      this.a = null;\n      this.d.clear();\n      return;\n    }\n\n    if (this.c(b)) {\n      this.d.clear();\n      this.a = BarTrendFitCalculator.a(j, b, g, this.a, c.count, function (k) {\n        return c.item(k);\n      }, function (k) {\n        return k + 1;\n      }, e, function (k) {\n        return f(k - 1);\n      }, h + 1, i + 1);\n    }\n\n    if (this.b(b)) {\n      this.a = null;\n      TrendAverageCalculator.b(b, this.d, c, d);\n\n      for (var k = g.d; k <= g.e; k += 1) {\n        var l = k * g.c;\n\n        if (l >= 0 && l < this.d.count) {\n          var m = e(this.d._inner[l]);\n          var n = f(l);\n          j.add({\n            $type: Point_$type,\n            x: m,\n            y: n + g.a\n          });\n        }\n      }\n    }\n\n    this.e(j, g, a);\n  };\n\n  BarTrendLineManager.$t = markType(BarTrendLineManager, 'BarTrendLineManager', CategoryTrendLineManager.$);\n  return BarTrendLineManager;\n}(CategoryTrendLineManager);\n\nexport { BarTrendLineManager };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/BarTrendLineManager.js"],"names":["__extends","CategoryTrendLineManager","List$1","Point_$type","markType","BarTrendFitCalculator","TrendAverageCalculator","BarTrendLineManager","_super","apply","arguments","prototype","prepareLineCore","a","b","c","d","e","f","g","h","i","j","clear","count","k","item","l","m","_inner","n","add","$type","x","y","$t","$"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { CategoryTrendLineManager } from \"./CategoryTrendLineManager\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { Point_$type, markType } from \"igniteui-react-core\";\nimport { BarTrendFitCalculator } from \"./BarTrendFitCalculator\";\nimport { TrendAverageCalculator } from \"./TrendAverageCalculator\";\n/**\n * @hidden\n */\nvar BarTrendLineManager = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(BarTrendLineManager, _super);\n    function BarTrendLineManager() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BarTrendLineManager.prototype.prepareLineCore = function (a, b, c, d, e, f, g) {\n        var h = g.d * g.c;\n        var i = g.e * g.c;\n        var j = new List$1(Point_$type, 0);\n        if (b == 0) {\n            this.a = null;\n            this.d.clear();\n            return;\n        }\n        if (this.c(b)) {\n            this.d.clear();\n            this.a = BarTrendFitCalculator.a(j, b, g, this.a, c.count, function (k) { return c.item(k); }, function (k) { return k + 1; }, e, function (k) { return f(k - 1); }, h + 1, i + 1);\n        }\n        if (this.b(b)) {\n            this.a = null;\n            TrendAverageCalculator.b(b, this.d, c, d);\n            for (var k = g.d; k <= g.e; k += 1) {\n                var l = k * g.c;\n                if (l >= 0 && l < this.d.count) {\n                    var m = e(this.d._inner[l]);\n                    var n = f(l);\n                    j.add({ $type: Point_$type, x: m, y: n + g.a });\n                }\n            }\n        }\n        this.e(j, g, a);\n    };\n    BarTrendLineManager.$t = markType(BarTrendLineManager, 'BarTrendLineManager', CategoryTrendLineManager.$);\n    return BarTrendLineManager;\n}(CategoryTrendLineManager));\nexport { BarTrendLineManager };\n"]},"metadata":{},"sourceType":"module"}