{"ast":null,"code":"//\n// System.Xml.XmlTextReader\n//\n// Author:\n//   Jason Diamond (jason@injektilo.org)\n//   Adam Treat (manyoso@yahoo.com)\n//   Atsushi Enomoto  (ginga@kit.hi-ho.ne.jp)\n//\n// (C) 2001, 2002 Jason Diamond  http://injektilo.org/\n// Copyright (C) 2005-2006 Novell, Inc (http://www.novell.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n//#define USE_NAME_BUFFER\nimport { __extends } from \"tslib\"; //\n// Optimization TODOs:\n//\n//\t- support PushbackChar() which reverts one character read.\n//\t\t- ReadTextReader() should always keep one pushback buffer\n//\t\t  as pushback safety net.\n//\t- Replace (peek,read) * n -> read * n + pushback\n//\n\nimport { ValueType, markStruct } from \"./type\";\n/**\n * @hidden\n */\n\nvar XmlTextReader_TagName =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(XmlTextReader_TagName, _super);\n\n  function XmlTextReader_TagName(a) {\n    var _rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      _rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.b = null;\n    _this.a = null;\n    _this.c = null;\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          var d = _rest[1];\n          var e = _rest[2];\n          _this.b = c;\n          _this.a = d;\n          _this.c = e;\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  XmlTextReader_TagName.$t = markStruct(XmlTextReader_TagName, 'XmlTextReader_TagName');\n  return XmlTextReader_TagName;\n}(ValueType);\n\nexport { XmlTextReader_TagName };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/XmlTextReader_TagName.js"],"names":["__extends","ValueType","markStruct","XmlTextReader_TagName","_super","a","_rest","_i","arguments","length","_this","call","b","c","d","e","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B,C,CACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,QAAtC;AACA;AACA;AACA;;AACA,IAAIC,qBAAqB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACvEJ,EAAAA,SAAS,CAACG,qBAAD,EAAwBC,MAAxB,CAAT;;AACA,WAASD,qBAAT,CAA+BE,CAA/B,EAAkC;AAC9B,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,KAAK,CAACC,EAAE,GAAG,CAAN,CAAL,GAAgBC,SAAS,CAACD,EAAD,CAAzB;AACH;;AACD,QAAIG,KAAK,GAAGN,MAAM,CAACO,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACAD,IAAAA,KAAK,CAACE,CAAN,GAAU,IAAV;AACAF,IAAAA,KAAK,CAACL,CAAN,GAAU,IAAV;AACAK,IAAAA,KAAK,CAACG,CAAN,GAAU,IAAV;AACAR,IAAAA,CAAC,GAAIA,CAAC,IAAI,KAAK,CAAX,GAAgB,CAAhB,GAAoBA,CAAxB;;AACA,YAAQA,CAAR;AACI,WAAK,CAAL;AAAQ;;AACR,WAAK,CAAL;AACI;AACI,cAAIQ,CAAC,GAAGP,KAAK,CAAC,CAAD,CAAb;AACA,cAAIQ,CAAC,GAAGR,KAAK,CAAC,CAAD,CAAb;AACA,cAAIS,CAAC,GAAGT,KAAK,CAAC,CAAD,CAAb;AACAI,UAAAA,KAAK,CAACE,CAAN,GAAUC,CAAV;AACAH,UAAAA,KAAK,CAACL,CAAN,GAAUS,CAAV;AACAJ,UAAAA,KAAK,CAACG,CAAN,GAAUE,CAAV;AACH;AACD;AAXR;;AAaA,WAAOL,KAAP;AACH;;AACDP,EAAAA,qBAAqB,CAACa,EAAtB,GAA2Bd,UAAU,CAACC,qBAAD,EAAwB,uBAAxB,CAArC;AACA,SAAOA,qBAAP;AACH,CA7BwD,CA6BvDF,SA7BuD,CAAzD;;AA8BA,SAASE,qBAAT","sourcesContent":["//\n// System.Xml.XmlTextReader\n//\n// Author:\n//   Jason Diamond (jason@injektilo.org)\n//   Adam Treat (manyoso@yahoo.com)\n//   Atsushi Enomoto  (ginga@kit.hi-ho.ne.jp)\n//\n// (C) 2001, 2002 Jason Diamond  http://injektilo.org/\n// Copyright (C) 2005-2006 Novell, Inc (http://www.novell.com)\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n// \n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n// \n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\n// NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\n// LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\n// OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\n// WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n//#define USE_NAME_BUFFER\nimport { __extends } from \"tslib\";\n//\n// Optimization TODOs:\n//\n//\t- support PushbackChar() which reverts one character read.\n//\t\t- ReadTextReader() should always keep one pushback buffer\n//\t\t  as pushback safety net.\n//\t- Replace (peek,read) * n -> read * n + pushback\n//\nimport { ValueType, markStruct } from \"./type\";\n/**\n * @hidden\n */\nvar XmlTextReader_TagName = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(XmlTextReader_TagName, _super);\n    function XmlTextReader_TagName(a) {\n        var _rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            _rest[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this.b = null;\n        _this.a = null;\n        _this.c = null;\n        a = (a == void 0) ? 0 : a;\n        switch (a) {\n            case 0: break;\n            case 1:\n                {\n                    var c = _rest[0];\n                    var d = _rest[1];\n                    var e = _rest[2];\n                    _this.b = c;\n                    _this.a = d;\n                    _this.c = e;\n                }\n                break;\n        }\n        return _this;\n    }\n    XmlTextReader_TagName.$t = markStruct(XmlTextReader_TagName, 'XmlTextReader_TagName');\n    return XmlTextReader_TagName;\n}(ValueType));\nexport { XmlTextReader_TagName };\n"]},"metadata":{},"sourceType":"module"}