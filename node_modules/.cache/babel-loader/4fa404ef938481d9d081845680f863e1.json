{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { AccumulationDistributionIndicator } from \"./AccumulationDistributionIndicator\";\n/**\n * Represents a IgxDataChartComponent Accumulation/Distribution indicator series.\n * Default required members: Close, Low, High, Volume\n*\n* You can use the `IgrAccumulationDistributionIndicator` to evaluate the suppy and demand of a stock, security, or index.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrAccumulationDistributionIndicator\n* \tname=\"series1\"\n* \txAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\"/>\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrAccumulationDistributionIndicator({name:\"series3\"});\n* series.xAxisName = this.xAxis;\n* series.yAxisName = this.yAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\n\nvar IgrAccumulationDistributionIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrAccumulationDistributionIndicator, _super);\n\n  function IgrAccumulationDistributionIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrAccumulationDistributionIndicator.prototype.createImplementation = function () {\n    return new AccumulationDistributionIndicator();\n  };\n\n  Object.defineProperty(IgrAccumulationDistributionIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrAccumulationDistributionIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrAccumulationDistributionIndicator };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-accumulation-distribution-indicator.js"],"names":["__extends","IgrStrategyBasedIndicator","AccumulationDistributionIndicator","IgrAccumulationDistributionIndicator","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,SAASC,iCAAT,QAAkD,qCAAlD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,oCAAoC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACtFJ,EAAAA,SAAS,CAACG,oCAAD,EAAuCC,MAAvC,CAAT;;AACA,WAASD,oCAAT,CAA8CE,KAA9C,EAAqD;AACjD,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDF,EAAAA,oCAAoC,CAACI,SAArC,CAA+CC,oBAA/C,GAAsE,YAAY;AAC9E,WAAO,IAAIN,iCAAJ,EAAP;AACH,GAFD;;AAGAO,EAAAA,MAAM,CAACC,cAAP,CAAsBP,oCAAoC,CAACI,SAA3D,EAAsE,GAAtE,EAA2E;AACvE;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANsE;AAOvEC,IAAAA,UAAU,EAAE,KAP2D;AAQvEC,IAAAA,YAAY,EAAE;AARyD,GAA3E;AAUA,SAAOX,oCAAP;AACH,CAnBuE,CAmBtEF,yBAnBsE,CAAxE;;AAoBA,SAASE,oCAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { AccumulationDistributionIndicator } from \"./AccumulationDistributionIndicator\";\n/**\n * Represents a IgxDataChartComponent Accumulation/Distribution indicator series.\n * Default required members: Close, Low, High, Volume\n*\n* You can use the `IgrAccumulationDistributionIndicator` to evaluate the suppy and demand of a stock, security, or index.\n*\n* ```ts\n* <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*\n*\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n*\n*     <IgrAccumulationDistributionIndicator\n* \tname=\"series1\"\n* \txAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     displayType=\"Line\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\"/>\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrAccumulationDistributionIndicator({name:\"series3\"});\n* series.xAxisName = this.xAxis;\n* series.yAxisName = this.yAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\nvar IgrAccumulationDistributionIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrAccumulationDistributionIndicator, _super);\n    function IgrAccumulationDistributionIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrAccumulationDistributionIndicator.prototype.createImplementation = function () {\n        return new AccumulationDistributionIndicator();\n    };\n    Object.defineProperty(IgrAccumulationDistributionIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrAccumulationDistributionIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrAccumulationDistributionIndicator };\n"]},"metadata":{},"sourceType":"module"}