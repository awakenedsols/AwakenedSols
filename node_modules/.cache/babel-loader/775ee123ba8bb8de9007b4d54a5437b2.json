{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/Sniper.tsx\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useMemo, useState } from 'react';\nimport './home.css';\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n_c = ConnectButton;\nconst MintContainer = styled.div``; // add your owns styles here\n\n//icy tools trending collections on eth query\nconst FILMS_QUERY = gql`\nquery TrendingCollections {\n  contracts(orderBy: SALES, orderDirection: DESC) {\n    edges {\n      node {\n        address\n        ... on ERC721Contract {\n          name\n          stats {\n            totalSales\n            average\n            ceiling\n            floor\n            volume\n          }\n          symbol\n        }\n      }\n    }\n  }\n}\n`;\n\nconst Sniper = props => {\n  _s();\n\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(FILMS_QUERY);\n  const [alertState, setAlertState] = useState({\n    open: false,\n    message: '',\n    severity: undefined\n  });\n  const [isHolder, setIsHolder] = useState(false);\n  const [collections, setCollections] = useState();\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n  const anchorWallet = useMemo(() => {\n    if (!wallet || !wallet.publicKey || !wallet.signAllTransactions || !wallet.signTransaction) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction\n    };\n  }, [wallet]);\n\n  const getCollections = async () => {// await fetch(\"api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200\")\n    // .then(response => response.text())\n    // .then(result => setCollections(result))\n    // .catch(error => console.log('error', error));\n    // const response = await fetch(\"api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200\");\n    // let data = await response.text();\n    // setCollections(data);\n    // var config = {\n    //   method: 'get',\n    //   url: 'api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200'\n    // };\n    // axios(config)\n    // .then(function (response) {\n    //   console.log(JSON.stringify(response.data));\n    // })\n    // .catch(function (error) {\n    //   console.log(error);\n    // });\n    //opensea\n    // const options = {method: 'GET', headers: {Accept: 'application/json'}};\n    // fetch('https://api.opensea.io/api/v1/collections?offset=0&limit=300', options)\n    //   .then(response => response.json())\n    //   .then(response => console.log(response))\n    //   .catch(err => console.error(err));\n  };\n\n  useEffect(() => {\n    console.log('use effect'); //getCollections();\n\n    if (collections) {\n      console.log(collections);\n    }\n\n    if (data) {\n      console.log(data);\n    }\n\n    if (error) {\n      console.log(error);\n    }\n\n    if (loading) {\n      console.log('loading');\n    }\n  });\n  if (loading) return /*#__PURE__*/_jsxDEV(\"h1\", {\n    style: {\n      fontFamily: \"SinMedia Sans\"\n    },\n    children: \"\\\"Loading...\\\"\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 153,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [!wallet.connected ? /*#__PURE__*/_jsxDEV(Container, {\n          maxWidth: \"xs\",\n          style: {\n            position: 'relative'\n          },\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            style: {\n              padding: 24,\n              paddingBottom: 10,\n              backgroundColor: '#151A1F',\n              borderRadius: 6\n            },\n            children: /*#__PURE__*/_jsxDEV(ConnectButton, {\n              children: \"Connect Wallet\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 14\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            id: \"connected\",\n            children: \"sniper\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 14\n          }, this)\n        }, void 0, false), /*#__PURE__*/_jsxDEV(Snackbar, {\n          open: alertState.open,\n          autoHideDuration: alertState.hideDuration === undefined ? 6000 : alertState.hideDuration,\n          onClose: () => setAlertState({ ...alertState,\n            open: false\n          }),\n          children: /*#__PURE__*/_jsxDEV(Alert, {\n            onClose: () => setAlertState({ ...alertState,\n              open: false\n            }),\n            severity: alertState.severity,\n            children: alertState.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 155,\n    columnNumber: 7\n  }, this);\n};\n\n_s(Sniper, \"yoyt+np04q+fqIVGLGG1vlnEAT8=\", false, function () {\n  return [useQuery, useWallet];\n});\n\n_c2 = Sniper;\nexport default Sniper;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ConnectButton\");\n$RefreshReg$(_c2, \"Sniper\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/Sniper.tsx"],"names":["useEffect","useMemo","useState","styled","Container","Snackbar","Paper","Alert","useWallet","WalletDialogButton","useQuery","gql","ConnectButton","MintContainer","div","FILMS_QUERY","Sniper","props","data","loading","error","alertState","setAlertState","open","message","severity","undefined","isHolder","setIsHolder","collections","setCollections","rpcUrl","rpcHost","wallet","anchorWallet","publicKey","signAllTransactions","signTransaction","getCollections","console","log","fontFamily","connected","position","padding","paddingBottom","backgroundColor","borderRadius","hideDuration"],"mappings":"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","sourcesContent":["import { Key, ReactChild, ReactFragment, ReactPortal, useCallback, useEffect, useMemo, useState } from 'react';\nimport * as anchor from '@project-serum/anchor';\nimport './home.css';\nimport styled from 'styled-components';\nimport { Container, Snackbar } from '@material-ui/core';\nimport Paper from '@material-ui/core/Paper';\nimport Alert from '@material-ui/lab/Alert';\nimport Grid from '@material-ui/core/Grid';\nimport { useWallet } from '@solana/wallet-adapter-react';\nimport { WalletDialogButton } from '@solana/wallet-adapter-material-ui';\nimport { AlertState, formatNumber, getAtaForMint, toDate } from './utils';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport axios from 'axios';\nimport { useQuery, gql } from \"@apollo/client\";\n\nimport Table from '@mui/material/Table';\nimport TableBody from '@mui/material/TableBody';\nimport TableCell from '@mui/material/TableCell';\nimport TableContainer from '@mui/material/TableContainer';\nimport TableHead from '@mui/material/TableHead';\nimport TableRow from '@mui/material/TableRow';\n\nconst ConnectButton = styled(WalletDialogButton)`\n  width: 100%;\n  height: 60px;\n  margin-top: 10px;\n  margin-bottom: 5px;\n  background: linear-gradient(180deg, #604ae5 0%, #813eee 100%);\n  color: white;\n  font-size: 16px;\n  font-weight: bold;\n`;\n\nconst MintContainer = styled.div``; // add your owns styles here\n\nexport interface SniperProps {\n  candyMachineId?: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  txTimeout: number;\n  rpcHost: string;\n  network: WalletAdapterNetwork;\n}\n\n//icy tools trending collections on eth query\nconst FILMS_QUERY = gql`\nquery TrendingCollections {\n  contracts(orderBy: SALES, orderDirection: DESC) {\n    edges {\n      node {\n        address\n        ... on ERC721Contract {\n          name\n          stats {\n            totalSales\n            average\n            ceiling\n            floor\n            volume\n          }\n          symbol\n        }\n      }\n    }\n  }\n}\n`;\n\nconst Sniper = (props: SniperProps) => {\n  const { data, loading, error } = useQuery(FILMS_QUERY);\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: '',\n    severity: undefined,\n  });\n\n  const [isHolder, setIsHolder] = useState(false);\n  const [collections, setCollections] = useState<string>();\n\n  const rpcUrl = props.rpcHost;\n  const wallet = useWallet();\n\n  const anchorWallet = useMemo(() => {\n    if (\n      !wallet ||\n      !wallet.publicKey ||\n      !wallet.signAllTransactions ||\n      !wallet.signTransaction\n    ) {\n      return;\n    }\n\n    return {\n      publicKey: wallet.publicKey,\n      signAllTransactions: wallet.signAllTransactions,\n      signTransaction: wallet.signTransaction,\n    } as anchor.Wallet;\n  }, [wallet]);\n  \n  const getCollections = async () => {\n\n    // await fetch(\"api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200\")\n    // .then(response => response.text())\n    // .then(result => setCollections(result))\n    // .catch(error => console.log('error', error));\n\n\n    // const response = await fetch(\"api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200\");\n    // let data = await response.text();\n    // setCollections(data);\n\n    // var config = {\n    //   method: 'get',\n    //   url: 'api-devnet.magiceden.dev/v2/launchpad/collections?offset=0&limit=200'\n    // };\n    \n    // axios(config)\n    // .then(function (response) {\n    //   console.log(JSON.stringify(response.data));\n    // })\n    // .catch(function (error) {\n    //   console.log(error);\n    // });\n\n    //opensea\n    // const options = {method: 'GET', headers: {Accept: 'application/json'}};\n\n    // fetch('https://api.opensea.io/api/v1/collections?offset=0&limit=300', options)\n    //   .then(response => response.json())\n    //   .then(response => console.log(response))\n    //   .catch(err => console.error(err));\n  }\n\n  useEffect(() => {\n        console.log('use effect');\n        //getCollections();\n        if(collections){\n          console.log(collections);\n        }\n\n        if(data){\n          console.log(data);\n        }\n\n        if(error){\n          console.log(error);\n        }\n\n        if(loading){\n          console.log('loading');\n        }\n  });\n  \n  if (loading) return <h1 style={{fontFamily: \"SinMedia Sans\"}}>\"Loading...\"</h1>;\n  return (\n      <main>\n    {/* {wallet && <p>Balance: {(balance || 0).toLocaleString()} SOL</p>} */}\n    <div>\n        <Container>\n      {!wallet.connected ? (\n             <Container maxWidth=\"xs\" style={{ position: 'relative' }}>\n               <Paper\n             style={{\n               padding: 24,\n               paddingBottom: 10,\n               backgroundColor: '#151A1F',\n               borderRadius: 6,\n             }}\n           ><ConnectButton>Connect Wallet</ConnectButton></Paper>\n           </Container>\n          ) : (\n            <>\n             <h1 id=\"connected\">sniper</h1>\n            </>\n          )}\n      <Snackbar\n        open={alertState.open}\n        autoHideDuration={\n          alertState.hideDuration === undefined ? 6000 : alertState.hideDuration\n        }\n        onClose={() => setAlertState({ ...alertState, open: false })}\n      >\n        <Alert\n          onClose={() => setAlertState({ ...alertState, open: false })}\n          severity={alertState.severity}\n        >\n          {alertState.message}\n        </Alert>\n      </Snackbar>\n    </Container>\n    </div>\n\n     </main>\n     );\n          \n   };\nexport default Sniper;\n"]},"metadata":{},"sourceType":"module"}