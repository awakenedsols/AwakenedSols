{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, Point_$type, markType } from \"igniteui-react-core\";\nimport { LeastSquaresFit } from \"igniteui-react-core\";\nimport { NotImplementedException } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar BarTrendFitCalculator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(BarTrendFitCalculator, _super);\n\n  function BarTrendFitCalculator() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  BarTrendFitCalculator.a = function (a, b, c, d, e, f, g, h, i, j, k) {\n    if (d == null) {\n      switch (b) {\n        case 1:\n          d = LeastSquaresFit.k(e, g, f);\n          break;\n\n        case 2:\n          d = LeastSquaresFit.o(e, g, f);\n          break;\n\n        case 3:\n          d = LeastSquaresFit.i(e, g, f);\n          break;\n\n        case 4:\n          d = LeastSquaresFit.p(e, g, f);\n          break;\n\n        case 5:\n          d = LeastSquaresFit.q(e, g, f);\n          break;\n\n        case 7:\n          d = LeastSquaresFit.j(e, g, f);\n          break;\n\n        case 6:\n          d = LeastSquaresFit.l(e, g, f);\n          break;\n\n        case 8:\n          d = LeastSquaresFit.n(e, g, f);\n          break;\n\n        default:\n          throw new NotImplementedException(0);\n      }\n    }\n\n    if (d == null) {\n      return null;\n    }\n\n    for (var l = 0; l < c.f.height; l += 2) {\n      var m = l / (c.f.height - 1);\n      var n = j + m * (k - j);\n      var o = NaN;\n\n      switch (b) {\n        case 1:\n          o = LeastSquaresFit.ad(d, n);\n          break;\n\n        case 2:\n          o = LeastSquaresFit.ah(d, n);\n          break;\n\n        case 3:\n          o = LeastSquaresFit.ab(d, n);\n          break;\n\n        case 4:\n          o = LeastSquaresFit.ai(d, n);\n          break;\n\n        case 5:\n          o = LeastSquaresFit.aj(d, n);\n          break;\n\n        case 7:\n          o = LeastSquaresFit.ac(d, n);\n          break;\n\n        case 6:\n          o = LeastSquaresFit.ae(d, n);\n          break;\n\n        case 8:\n          o = LeastSquaresFit.ag(d, n);\n          break;\n\n        default:\n          throw new NotImplementedException(0);\n      }\n\n      o = h(o);\n      n = i(n);\n\n      if (!isNaN_(o) && !isInfinity(o)) {\n        a.add({\n          $type: Point_$type,\n          x: o,\n          y: n + c.a\n        });\n      }\n    }\n\n    return d;\n  };\n\n  BarTrendFitCalculator.$t = markType(BarTrendFitCalculator, 'BarTrendFitCalculator');\n  return BarTrendFitCalculator;\n}(Base);\n\nexport { BarTrendFitCalculator };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/BarTrendFitCalculator.js"],"names":["__extends","Base","Point_$type","markType","LeastSquaresFit","NotImplementedException","isNaN_","isInfinity","BarTrendFitCalculator","_super","apply","arguments","a","b","c","d","e","f","g","h","i","j","k","o","p","q","l","n","height","m","NaN","ad","ah","ab","ai","aj","ac","ae","ag","add","$type","x","y","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, Point_$type, markType } from \"igniteui-react-core\";\nimport { LeastSquaresFit } from \"igniteui-react-core\";\nimport { NotImplementedException } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar BarTrendFitCalculator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(BarTrendFitCalculator, _super);\n    function BarTrendFitCalculator() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    BarTrendFitCalculator.a = function (a, b, c, d, e, f, g, h, i, j, k) {\n        if (d == null) {\n            switch (b) {\n                case 1:\n                    d = LeastSquaresFit.k(e, g, f);\n                    break;\n                case 2:\n                    d = LeastSquaresFit.o(e, g, f);\n                    break;\n                case 3:\n                    d = LeastSquaresFit.i(e, g, f);\n                    break;\n                case 4:\n                    d = LeastSquaresFit.p(e, g, f);\n                    break;\n                case 5:\n                    d = LeastSquaresFit.q(e, g, f);\n                    break;\n                case 7:\n                    d = LeastSquaresFit.j(e, g, f);\n                    break;\n                case 6:\n                    d = LeastSquaresFit.l(e, g, f);\n                    break;\n                case 8:\n                    d = LeastSquaresFit.n(e, g, f);\n                    break;\n                default: throw new NotImplementedException(0);\n            }\n        }\n        if (d == null) {\n            return null;\n        }\n        for (var l = 0; l < c.f.height; l += 2) {\n            var m = l / (c.f.height - 1);\n            var n = j + m * (k - j);\n            var o = NaN;\n            switch (b) {\n                case 1:\n                    o = LeastSquaresFit.ad(d, n);\n                    break;\n                case 2:\n                    o = LeastSquaresFit.ah(d, n);\n                    break;\n                case 3:\n                    o = LeastSquaresFit.ab(d, n);\n                    break;\n                case 4:\n                    o = LeastSquaresFit.ai(d, n);\n                    break;\n                case 5:\n                    o = LeastSquaresFit.aj(d, n);\n                    break;\n                case 7:\n                    o = LeastSquaresFit.ac(d, n);\n                    break;\n                case 6:\n                    o = LeastSquaresFit.ae(d, n);\n                    break;\n                case 8:\n                    o = LeastSquaresFit.ag(d, n);\n                    break;\n                default: throw new NotImplementedException(0);\n            }\n            o = h(o);\n            n = i(n);\n            if (!isNaN_(o) && !isInfinity(o)) {\n                a.add({ $type: Point_$type, x: o, y: n + c.a });\n            }\n        }\n        return d;\n    };\n    BarTrendFitCalculator.$t = markType(BarTrendFitCalculator, 'BarTrendFitCalculator');\n    return BarTrendFitCalculator;\n}(Base));\nexport { BarTrendFitCalculator };\n"]},"metadata":{},"sourceType":"module"}