{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalAnchoredCategorySeriesDescriptionMetadata } from \"./HorizontalAnchoredCategorySeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar FragmentBaseDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(FragmentBaseDescriptionMetadata, _super);\n\n  function FragmentBaseDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FragmentBaseDescriptionMetadata.b = function (a) {\n    if (FragmentBaseDescriptionMetadata.a == null) {\n      FragmentBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      FragmentBaseDescriptionMetadata.c(FragmentBaseDescriptionMetadata.a);\n    }\n\n    if (a.g(FragmentBaseDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(FragmentBaseDescriptionMetadata.a);\n  };\n\n  FragmentBaseDescriptionMetadata.c = function (a) {\n    HorizontalAnchoredCategorySeriesDescriptionMetadata.c(a);\n  };\n\n  FragmentBaseDescriptionMetadata.d = function (a) {\n    FragmentBaseDescriptionMetadata.b(a);\n    a.t(\"FragmentBase\", FragmentBaseDescriptionMetadata.a);\n  };\n\n  FragmentBaseDescriptionMetadata.$t = markType(FragmentBaseDescriptionMetadata, 'FragmentBaseDescriptionMetadata');\n  FragmentBaseDescriptionMetadata.a = null;\n  return FragmentBaseDescriptionMetadata;\n}(Base);\n\nexport { FragmentBaseDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/FragmentBaseDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","HorizontalAnchoredCategorySeriesDescriptionMetadata","FragmentBaseDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,mDAAT,QAAoE,uDAApE;AACA;AACA;AACA;;AACA,IAAIC,+BAA+B;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACjFP,EAAAA,SAAS,CAACM,+BAAD,EAAkCC,MAAlC,CAAT;;AACA,WAASD,+BAAT,GAA2C;AACvC,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,+BAA+B,CAACI,CAAhC,GAAoC,UAAUC,CAAV,EAAa;AAC7C,QAAIL,+BAA+B,CAACK,CAAhC,IAAqC,IAAzC,EAA+C;AAC3CL,MAAAA,+BAA+B,CAACK,CAAhC,GAAoC,IAAIP,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAApC;AACAI,MAAAA,+BAA+B,CAACM,CAAhC,CAAkCN,+BAA+B,CAACK,CAAlE;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,+BAA+B,CAACK,CAApC,CAAJ,EAA4C;AACxC;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,+BAA+B,CAACK,CAApC;AACH,GATD;;AAUAL,EAAAA,+BAA+B,CAACM,CAAhC,GAAoC,UAAUD,CAAV,EAAa;AAC7CN,IAAAA,mDAAmD,CAACO,CAApD,CAAsDD,CAAtD;AACH,GAFD;;AAGAL,EAAAA,+BAA+B,CAACS,CAAhC,GAAoC,UAAUJ,CAAV,EAAa;AAC7CL,IAAAA,+BAA+B,CAACI,CAAhC,CAAkCC,CAAlC;AACAA,IAAAA,CAAC,CAACK,CAAF,CAAI,cAAJ,EAAoBV,+BAA+B,CAACK,CAApD;AACH,GAHD;;AAIAL,EAAAA,+BAA+B,CAACW,EAAhC,GAAqCd,QAAQ,CAACG,+BAAD,EAAkC,iCAAlC,CAA7C;AACAA,EAAAA,+BAA+B,CAACK,CAAhC,GAAoC,IAApC;AACA,SAAOL,+BAAP;AACH,CAzBkE,CAyBjEL,IAzBiE,CAAnE;;AA0BA,SAASK,+BAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { HorizontalAnchoredCategorySeriesDescriptionMetadata } from \"./HorizontalAnchoredCategorySeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar FragmentBaseDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(FragmentBaseDescriptionMetadata, _super);\n    function FragmentBaseDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FragmentBaseDescriptionMetadata.b = function (a) {\n        if (FragmentBaseDescriptionMetadata.a == null) {\n            FragmentBaseDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            FragmentBaseDescriptionMetadata.c(FragmentBaseDescriptionMetadata.a);\n        }\n        if (a.g(FragmentBaseDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(FragmentBaseDescriptionMetadata.a);\n    };\n    FragmentBaseDescriptionMetadata.c = function (a) {\n        HorizontalAnchoredCategorySeriesDescriptionMetadata.c(a);\n    };\n    FragmentBaseDescriptionMetadata.d = function (a) {\n        FragmentBaseDescriptionMetadata.b(a);\n        a.t(\"FragmentBase\", FragmentBaseDescriptionMetadata.a);\n    };\n    FragmentBaseDescriptionMetadata.$t = markType(FragmentBaseDescriptionMetadata, 'FragmentBaseDescriptionMetadata');\n    FragmentBaseDescriptionMetadata.a = null;\n    return FragmentBaseDescriptionMetadata;\n}(Base));\nexport { FragmentBaseDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}