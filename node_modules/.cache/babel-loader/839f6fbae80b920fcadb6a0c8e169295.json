{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FinancialSeriesDescriptionMetadata } from \"./FinancialSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\n\nvar FinancialIndicatorDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(FinancialIndicatorDescriptionMetadata, _super);\n\n  function FinancialIndicatorDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  FinancialIndicatorDescriptionMetadata.b = function (a) {\n    if (FinancialIndicatorDescriptionMetadata.a == null) {\n      FinancialIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      FinancialIndicatorDescriptionMetadata.c(FinancialIndicatorDescriptionMetadata.a);\n    }\n\n    if (a.g(FinancialIndicatorDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(FinancialIndicatorDescriptionMetadata.a);\n  };\n\n  FinancialIndicatorDescriptionMetadata.c = function (a) {\n    FinancialSeriesDescriptionMetadata.c(a);\n    a.item(\"DisplayType\", \"ExportedType:string:IndicatorDisplayType\");\n    a.item(\"DisplayType@names\", \"Line;Area;Column\");\n    a.item(\"IgnoreFirst\", \"Number:int\");\n    a.item(\"TrendLineType\", \"ExportedType:string:TrendLineType\");\n    a.item(\"TrendLineType@names\", \"None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage\");\n    a.item(\"TrendLineBrush\", \"Brush\");\n    a.item(\"ActualTrendLineBrush\", \"Brush\");\n    a.item(\"TrendLineThickness\", \"Number:double\");\n    a.item(\"TrendLinePeriod\", \"Number:int\");\n  };\n\n  FinancialIndicatorDescriptionMetadata.d = function (a) {\n    FinancialIndicatorDescriptionMetadata.b(a);\n    a.t(\"FinancialIndicator\", FinancialIndicatorDescriptionMetadata.a);\n  };\n\n  FinancialIndicatorDescriptionMetadata.$t = markType(FinancialIndicatorDescriptionMetadata, 'FinancialIndicatorDescriptionMetadata');\n  FinancialIndicatorDescriptionMetadata.a = null;\n  return FinancialIndicatorDescriptionMetadata;\n}(Base);\n\nexport { FinancialIndicatorDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/FinancialIndicatorDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","FinancialSeriesDescriptionMetadata","FinancialIndicatorDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","item","d","t","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,QAA7C;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,kCAAT,QAAmD,sCAAnD;AACA;AACA;AACA;;AACA,IAAIC,qCAAqC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACvFP,EAAAA,SAAS,CAACM,qCAAD,EAAwCC,MAAxC,CAAT;;AACA,WAASD,qCAAT,GAAiD;AAC7C,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,qCAAqC,CAACI,CAAtC,GAA0C,UAAUC,CAAV,EAAa;AACnD,QAAIL,qCAAqC,CAACK,CAAtC,IAA2C,IAA/C,EAAqD;AACjDL,MAAAA,qCAAqC,CAACK,CAAtC,GAA0C,IAAIP,YAAJ,CAAiBF,YAAjB,EAA+BA,YAA/B,EAA6C,CAA7C,CAA1C;AACAI,MAAAA,qCAAqC,CAACM,CAAtC,CAAwCN,qCAAqC,CAACK,CAA9E;AACH;;AACD,QAAIA,CAAC,CAACE,CAAF,CAAIP,qCAAqC,CAACK,CAA1C,CAAJ,EAAkD;AAC9C;AACH;;AACDA,IAAAA,CAAC,CAACG,CAAF,CAAIR,qCAAqC,CAACK,CAA1C;AACH,GATD;;AAUAL,EAAAA,qCAAqC,CAACM,CAAtC,GAA0C,UAAUD,CAAV,EAAa;AACnDN,IAAAA,kCAAkC,CAACO,CAAnC,CAAqCD,CAArC;AACAA,IAAAA,CAAC,CAACI,IAAF,CAAO,aAAP,EAAsB,0CAAtB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,mBAAP,EAA4B,kBAA5B;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,aAAP,EAAsB,YAAtB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,eAAP,EAAwB,mCAAxB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,qBAAP,EAA8B,yLAA9B;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,gBAAP,EAAyB,OAAzB;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,sBAAP,EAA+B,OAA/B;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,oBAAP,EAA6B,eAA7B;AACAJ,IAAAA,CAAC,CAACI,IAAF,CAAO,iBAAP,EAA0B,YAA1B;AACH,GAXD;;AAYAT,EAAAA,qCAAqC,CAACU,CAAtC,GAA0C,UAAUL,CAAV,EAAa;AACnDL,IAAAA,qCAAqC,CAACI,CAAtC,CAAwCC,CAAxC;AACAA,IAAAA,CAAC,CAACM,CAAF,CAAI,oBAAJ,EAA0BX,qCAAqC,CAACK,CAAhE;AACH,GAHD;;AAIAL,EAAAA,qCAAqC,CAACY,EAAtC,GAA2Cf,QAAQ,CAACG,qCAAD,EAAwC,uCAAxC,CAAnD;AACAA,EAAAA,qCAAqC,CAACK,CAAtC,GAA0C,IAA1C;AACA,SAAOL,qCAAP;AACH,CAlCwE,CAkCvEL,IAlCuE,CAAzE;;AAmCA,SAASK,qCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { FinancialSeriesDescriptionMetadata } from \"./FinancialSeriesDescriptionMetadata\";\n/**\n * @hidden\n */\nvar FinancialIndicatorDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(FinancialIndicatorDescriptionMetadata, _super);\n    function FinancialIndicatorDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    FinancialIndicatorDescriptionMetadata.b = function (a) {\n        if (FinancialIndicatorDescriptionMetadata.a == null) {\n            FinancialIndicatorDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            FinancialIndicatorDescriptionMetadata.c(FinancialIndicatorDescriptionMetadata.a);\n        }\n        if (a.g(FinancialIndicatorDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(FinancialIndicatorDescriptionMetadata.a);\n    };\n    FinancialIndicatorDescriptionMetadata.c = function (a) {\n        FinancialSeriesDescriptionMetadata.c(a);\n        a.item(\"DisplayType\", \"ExportedType:string:IndicatorDisplayType\");\n        a.item(\"DisplayType@names\", \"Line;Area;Column\");\n        a.item(\"IgnoreFirst\", \"Number:int\");\n        a.item(\"TrendLineType\", \"ExportedType:string:TrendLineType\");\n        a.item(\"TrendLineType@names\", \"None;LinearFit;QuadraticFit;CubicFit;QuarticFit;QuinticFit;LogarithmicFit;ExponentialFit;PowerLawFit;SimpleAverage;ExponentialAverage;ModifiedAverage;CumulativeAverage;WeightedAverage\");\n        a.item(\"TrendLineBrush\", \"Brush\");\n        a.item(\"ActualTrendLineBrush\", \"Brush\");\n        a.item(\"TrendLineThickness\", \"Number:double\");\n        a.item(\"TrendLinePeriod\", \"Number:int\");\n    };\n    FinancialIndicatorDescriptionMetadata.d = function (a) {\n        FinancialIndicatorDescriptionMetadata.b(a);\n        a.t(\"FinancialIndicator\", FinancialIndicatorDescriptionMetadata.a);\n    };\n    FinancialIndicatorDescriptionMetadata.$t = markType(FinancialIndicatorDescriptionMetadata, 'FinancialIndicatorDescriptionMetadata');\n    FinancialIndicatorDescriptionMetadata.a = null;\n    return FinancialIndicatorDescriptionMetadata;\n}(Base));\nexport { FinancialIndicatorDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}