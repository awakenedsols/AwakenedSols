{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { TRIXIndicator } from \"./TRIXIndicator\";\n/**\n * Represents a IgxDataChartComponent TRIX indicator series.\n * Default required members: Close\n*\n* The `IgrTRIXIndicator` class specify the series as Trix Indicator series.\n*\n* ```ts\n*   <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n* <IgrTRIXIndicator\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrTRIXIndicator({name:\"series\"});\n* series.xAxis = this.xAxis;\n* series.yAxis = this.yAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\n\nvar IgrTRIXIndicator =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrTRIXIndicator, _super);\n\n  function IgrTRIXIndicator(props) {\n    return _super.call(this, props) || this;\n  }\n\n  IgrTRIXIndicator.prototype.createImplementation = function () {\n    return new TRIXIndicator();\n  };\n\n  Object.defineProperty(IgrTRIXIndicator.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrTRIXIndicator.prototype, \"period\", {\n    /**\n     * Gets or sets the moving average period for the current TRIXIndicator object.\n     * The typical, and initial, value for TRIX periods is 15.\n    *\n    * The `period` property is used for moving average period of the current TRIXIndicator object.\n    *\n    * ```ts\n    *   <IgrDataChart\n    *     dataSource={this.state.dataSource}\n    *     width=\"700px\"\n    *     height=\"500px\">\n    *\n    *\n    *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n    *     <IgrNumericYAxis  name=\"yAxis\" />\n    *\n    *\n    *     <IgrFinancialPriceSeries\n    *     name=\"series2\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     displayType=\"Candlestick\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\" />\n    * <IgrTRIXIndicator\n    *     name=\"series1\"\n    *     xAxisName=\"xAxis\"\n    *     yAxisName=\"yAxis\"\n    *     lowMemberPath=\"Low\"\n    *     highMemberPath=\"High\"\n    *     openMemberPath=\"Open\"\n    *     closeMemberPath=\"Close\"\n    *     volumeMemberPath=\"Volume\"\n    * \tperiod=\"7\"  />\n    *  </IgrDataChart>\n    * ```\n    *\n    * ```ts\n    * this.series.period = 30;\n    * ```\n    */\n    get: function () {\n      return this.i.u2;\n    },\n    set: function (v) {\n      this.i.u2 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrTRIXIndicator;\n}(IgrStrategyBasedIndicator);\n\nexport { IgrTRIXIndicator };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-trix-indicator.js"],"names":["__extends","IgrStrategyBasedIndicator","TRIXIndicator","IgrTRIXIndicator","_super","props","call","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","u2","set","v"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,yBAAT,QAA0C,gCAA1C;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAClEJ,EAAAA,SAAS,CAACG,gBAAD,EAAmBC,MAAnB,CAAT;;AACA,WAASD,gBAAT,CAA0BE,KAA1B,EAAiC;AAC7B,WAAOD,MAAM,CAACE,IAAP,CAAY,IAAZ,EAAkBD,KAAlB,KAA4B,IAAnC;AACH;;AACDF,EAAAA,gBAAgB,CAACI,SAAjB,CAA2BC,oBAA3B,GAAkD,YAAY;AAC1D,WAAO,IAAIN,aAAJ,EAAP;AACH,GAFD;;AAGAO,EAAAA,MAAM,CAACC,cAAP,CAAsBP,gBAAgB,CAACI,SAAvC,EAAkD,GAAlD,EAAuD;AACnD;AACR;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKC,eAAZ;AACH,KANkD;AAOnDC,IAAAA,UAAU,EAAE,KAPuC;AAQnDC,IAAAA,YAAY,EAAE;AARqC,GAAvD;AAUAL,EAAAA,MAAM,CAACC,cAAP,CAAsBP,gBAAgB,CAACI,SAAvC,EAAkD,QAAlD,EAA4D;AACxD;AACR;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACQI,IAAAA,GAAG,EAAE,YAAY;AACb,aAAO,KAAKI,CAAL,CAAOC,EAAd;AACH,KA/CuD;AAgDxDC,IAAAA,GAAG,EAAE,UAAUC,CAAV,EAAa;AACd,WAAKH,CAAL,CAAOC,EAAP,GAAY,CAACE,CAAb;AACH,KAlDuD;AAmDxDL,IAAAA,UAAU,EAAE,KAnD4C;AAoDxDC,IAAAA,YAAY,EAAE;AApD0C,GAA5D;AAsDA,SAAOX,gBAAP;AACH,CAzEmD,CAyElDF,yBAzEkD,CAApD;;AA0EA,SAASE,gBAAT","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrStrategyBasedIndicator } from \"./igr-strategy-based-indicator\";\nimport { TRIXIndicator } from \"./TRIXIndicator\";\n/**\n * Represents a IgxDataChartComponent TRIX indicator series.\n * Default required members: Close\n*\n* The `IgrTRIXIndicator` class specify the series as Trix Indicator series.\n*\n* ```ts\n*   <IgrDataChart\n*     dataSource={this.state.dataSource}\n*     width=\"700px\"\n*     height=\"500px\">\n*     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n*     <IgrNumericYAxis  name=\"yAxis\" />\n* <IgrTRIXIndicator\n*     name=\"series1\"\n*     xAxisName=\"xAxis\"\n*     yAxisName=\"yAxis\"\n*     lowMemberPath=\"Low\"\n*     highMemberPath=\"High\"\n*     openMemberPath=\"Open\"\n*     closeMemberPath=\"Close\"\n*     volumeMemberPath=\"Volume\" />\n*  </IgrDataChart>\n* ```\n*\n* ```ts\n* let series = new IgrTRIXIndicator({name:\"series\"});\n* series.xAxis = this.xAxis;\n* series.yAxis = this.yAxis;\n* series.openMemberPath = \"open\";\n* series.highMemberPath = \"high\";\n* series.lowMemberPath = \"low\";\n* series.closeMemberPath = \"close\";\n* this.chart.series.add(series);\n* ```\n*/\nvar IgrTRIXIndicator = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrTRIXIndicator, _super);\n    function IgrTRIXIndicator(props) {\n        return _super.call(this, props) || this;\n    }\n    IgrTRIXIndicator.prototype.createImplementation = function () {\n        return new TRIXIndicator();\n    };\n    Object.defineProperty(IgrTRIXIndicator.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrTRIXIndicator.prototype, \"period\", {\n        /**\n         * Gets or sets the moving average period for the current TRIXIndicator object.\n         * The typical, and initial, value for TRIX periods is 15.\n        *\n        * The `period` property is used for moving average period of the current TRIXIndicator object.\n        *\n        * ```ts\n        *   <IgrDataChart\n        *     dataSource={this.state.dataSource}\n        *     width=\"700px\"\n        *     height=\"500px\">\n        *\n        *\n        *     <IgrCategoryXAxis name=\"xAxis\" label=\"Date\" />\n        *     <IgrNumericYAxis  name=\"yAxis\" />\n        *\n        *\n        *     <IgrFinancialPriceSeries\n        *     name=\"series2\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     displayType=\"Candlestick\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\" />\n        * <IgrTRIXIndicator\n        *     name=\"series1\"\n        *     xAxisName=\"xAxis\"\n        *     yAxisName=\"yAxis\"\n        *     lowMemberPath=\"Low\"\n        *     highMemberPath=\"High\"\n        *     openMemberPath=\"Open\"\n        *     closeMemberPath=\"Close\"\n        *     volumeMemberPath=\"Volume\"\n        * \tperiod=\"7\"  />\n        *  </IgrDataChart>\n        * ```\n        *\n        * ```ts\n        * this.series.period = 30;\n        * ```\n        */\n        get: function () {\n            return this.i.u2;\n        },\n        set: function (v) {\n            this.i.u2 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrTRIXIndicator;\n}(IgrStrategyBasedIndicator));\nexport { IgrTRIXIndicator };\n"]},"metadata":{},"sourceType":"module"}