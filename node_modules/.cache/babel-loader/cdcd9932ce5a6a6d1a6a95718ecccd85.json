{"ast":null,"code":"import { __extends, __values } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ReactRenderer, ReactWrapper } from \"igniteui-react-core\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { DataChartStylingDefaults } from './DataChartStylingDefaults';\nimport { XamDoughnutChart } from './XamDoughnutChart';\nimport { ensureBool, fromPoint, CollectionAdapter, initializePropertiesFromCss, NamePatcher, isValidProp, getModifiedProps, toSpinal } from \"igniteui-react-core\";\nimport { Style } from \"igniteui-react-core\";\nimport { IgrSliceClickEventArgs } from \"./igr-slice-click-event-args\";\nimport { IgrHoleDimensionsChangedEventArgs } from \"./igr-hole-dimensions-changed-event-args\";\nimport { RingSeriesBase } from \"./RingSeriesBase\";\nimport { NotifyCollectionChangedAction } from \"igniteui-react-core\";\nimport { IgrRingSeriesCollection } from \"./igr-ring-series-collection\";\nimport { IgrDataContext } from \"igniteui-react-core\";\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { ContentChildrenManager } from \"igniteui-react-core\";\n/**\n * Represents concentric circles divided on arcs  depending on data.\n*/\n\nvar IgrDoughnutChart =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrDoughnutChart, _super);\n\n  function IgrDoughnutChart(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._contentChildren = null;\n    _this._contentChildrenActual = null;\n    _this._contentChildrenMap = null;\n    _this._contentChildrenUnresolved = 0;\n    /**\n     * The series actually present in the chart. Do not directly modify this array.\n     * This array's contents can be modified by causing Angular to reproject the child content.\n     * Or adding and removing series from the manual series collection on the series property.\n     */\n\n    _this.actualSeries = [];\n    _this._seriesAdapter = null;\n    _this._series = null;\n    _this._defaultTooltips = null;\n    _this._uniqueTooltipId = 0;\n    _this._initialized = false;\n    _this.__p = null;\n    _this._hasUserValues = new Set();\n    _this._stylingContainer = null;\n    _this._stylingParent = null;\n    _this._inStyling = false;\n    _this._sliceClick = null;\n    _this._sliceClick_wrapped = null;\n    _this._holeDimensionsChanged = null;\n    _this._holeDimensionsChanged_wrapped = null;\n\n    if (_this._styling) {\n      NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n    }\n\n    _this._getMainRef = _this._getMainRef.bind(_this);\n    _this._tooltipRef = _this._tooltipRef.bind(_this);\n    _this._activeTooltipElements = new Map();\n    _this._activeTooltips = new Map();\n    _this._currentTooltips = [];\n    _this._contentChildrenManager = new ContentChildrenManager(function (ch) {\n      return ch.key || ch.props.name;\n    }, function (ch) {\n      return ch.key || ch.props.name;\n    }, function () {\n      return _this._updateContentChildren();\n    });\n    var container = null;\n\n    if (document) {\n      container = document.createElement(\"div\");\n      container.style.display = \"block\";\n      container.style.width = \"100%\";\n      container.style.height = \"100%\";\n    }\n\n    var root;\n    root = container;\n    _this._renderer = new ReactRenderer(root, document, true, DataChartStylingDefaults);\n    _this.container = _this._renderer.getWrapper(container);\n    _this._implementation = _this.createImplementation();\n    _this._implementation.externalObject = _this;\n\n    _this.onImplementationCreated();\n\n    _this._wrapper = _this._renderer;\n    var chart = _this.i;\n    _this._chart = chart;\n    chart.provideContainer(_this._renderer);\n\n    _this._renderer.addSizeWatcher(function () {\n      _this._chart.notifyResized();\n    });\n\n    return _this;\n  }\n\n  Object.defineProperty(IgrDoughnutChart.prototype, \"height\", {\n    get: function () {\n      return this._height;\n    },\n    set: function (value) {\n      this._height = value;\n\n      if (this._elRef) {\n        this._elRef.style.height = value;\n\n        this._chart.notifyResized();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDoughnutChart.prototype, \"width\", {\n    get: function () {\n      return this._width;\n    },\n    set: function (value) {\n      this._width = value;\n\n      if (this._elRef) {\n        this._elRef.style.width = value;\n\n        this._chart.notifyResized();\n      }\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrDoughnutChart.prototype._updateContentChildren = function () {\n    this.contentSeries = [];\n    var contentChildrenActual = this._contentChildrenManager.contentChildrenActual;\n\n    for (var i = 0; i < contentChildrenActual.length; i++) {\n      if (RingSeriesBase.$type.isAssignableFrom(contentChildrenActual[i].i.$type)) {\n        this.contentSeries.push(contentChildrenActual[i]);\n      }\n    }\n\n    if (this._seriesAdapter !== null) {\n      this._seriesAdapter.notifyContentChanged();\n    }\n  };\n\n  IgrDoughnutChart.prototype._tooltipRef = function (t) {\n    //console.log(t);\n    if (t === null) {\n      return;\n    }\n\n    if (t.currentOwner && t.currentOwner.tooltipTemplate) {\n      t.template = t.currentOwner.tooltipTemplate;\n    }\n\n    this._activeTooltips.set(t.currentOwner, t);\n  };\n\n  IgrDoughnutChart.prototype.render = function () {\n    // if (!this._childrenDiffer(this.props.children)) {\n    // \tlet div = React.createElement(\"div\", {\n    // \t\tref: (ref) => {\n    // \t\t\tthis._elRef = ref;\n    // \t\t},\n    // \t\tchildren: this.props.children\n    // \t});\n    // \treturn div;\n    // } else {\n    var children = this._contentChildrenManager.getChildren(this.props.children);\n\n    if (this._currentTooltips && this._currentTooltips.length > 0) {\n      for (var i = 0; i < this._currentTooltips.length; i++) {\n        var t = this._currentTooltips[i];\n\n        if (this._activeTooltipElements.has(t)) {\n          children.push(this._activeTooltipElements.get(t));\n        } else {\n          if (!TypeRegistrar.isRegistered(\"IgrTooltipContainer\")) {\n            continue;\n          }\n\n          var Tooltip = TypeRegistrar.get(\"IgrTooltipContainer\");\n          var tEle = React.createElement(Tooltip, {\n            ref: this._tooltipRef,\n            key: this._currentTooltips[i].key,\n            owner: this._currentTooltips[i]\n          });\n          var portal = ReactDOM.createPortal(tEle, t, this._currentTooltips[i].key);\n\n          this._activeTooltipElements.set(t, portal);\n\n          children.push(portal);\n        }\n      }\n    }\n\n    var div = React.createElement(\"div\", {\n      className: \"ig-doughnut-chart igr-doughnut-chart\",\n      ref: this._getMainRef,\n      children: children\n    });\n    return div; //}\n  };\n\n  IgrDoughnutChart.prototype.componentDidMount = function () {\n    var e_1, _a;\n\n    try {\n      for (var _b = __values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          {\n            this[p] = this.props[p];\n          }\n        }\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n\n    this._elRef.style.width = this._width ? this._width : \"\";\n    this._elRef.style.height = this._height ? this._height : \"\";\n\n    this._elRef.appendChild(this.container.getNativeElement());\n\n    this._chart.notifyResized();\n\n    this.initializeContent();\n  };\n\n  IgrDoughnutChart.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n    var e_2, _a;\n\n    var mod = getModifiedProps(this.props, nextProps);\n\n    try {\n      for (var _b = __values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n        var p = _c.value;\n\n        if (isValidProp(this, p)) {\n          this[p] = mod[p];\n        }\n      }\n    } catch (e_2_1) {\n      e_2 = {\n        error: e_2_1\n      };\n    } finally {\n      try {\n        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);\n      } finally {\n        if (e_2) throw e_2.error;\n      }\n    }\n\n    return true;\n  };\n\n  IgrDoughnutChart.prototype._getMainRef = function (div) {\n    this._elRef = div;\n  };\n\n  IgrDoughnutChart.prototype.destroy = function () {\n    this._chart.destroy();\n\n    this._wrapper.destroy();\n  };\n\n  IgrDoughnutChart.prototype.initializeContent = function () {\n    var _this = this;\n\n    this._updateContentChildren();\n\n    this._seriesAdapter = new CollectionAdapter(this.contentSeries, this.i.series, this.actualSeries, function (c) {\n      return c.i;\n    }, function (i) {\n      i.owner = _this; // (<any>i)._provideRenderer(this._dataSource);\n\n      if (_this.container && _this.container.getNativeElement().parentElement) {\n        i._styling(_this.container.getNativeElement(), _this, _this);\n      }\n\n      _this._ensureDefaultTooltip(i);\n\n      _this._ensureTooltipCreated(i); //(<any>i)._provideRenderer(this._wrapper); \n\n    }, function (i) {//(<any>i)._provideRenderer(null);\n    });\n\n    this._styling(this.container.getNativeElement(), this);\n\n    if (this.actualSeries && this.actualSeries.length > 0) {\n      var currSeries = this.actualSeries;\n\n      for (var i = 0; i < currSeries.length; i++) {\n        currSeries[i]._styling(this.container.getNativeElement(), this, this);\n      }\n    }\n\n    this.i.notifyResized();\n  };\n\n  IgrDoughnutChart.prototype.componentWillUnmount = function () {\n    //this._grid.destroy();\n    this.destroy();\n  };\n\n  IgrDoughnutChart.prototype.onImplementationCreated = function () {};\n\n  IgrDoughnutChart.prototype.createImplementation = function () {\n    return new XamDoughnutChart();\n  };\n\n  Object.defineProperty(IgrDoughnutChart.prototype, \"i\", {\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrDoughnutChart.prototype.createSeriesComponent = function (type) {\n    if (TypeRegistrar.isRegistered(type)) {\n      var s = TypeRegistrar.create(type);\n      s.owner = this;\n\n      s._provideRenderer(this._wrapper);\n\n      return s;\n    } else {\n      //we shouldn't get here, hopefully.\n      throw Error(\"series type not loaded: \" + type);\n    }\n  };\n\n  Object.defineProperty(IgrDoughnutChart.prototype, \"series\", {\n    /**\n     * A collection or manually added series for the chart.\n    */\n    get: function () {\n      var _this = this;\n\n      if (this._series === null) {\n        var coll = new IgrRingSeriesCollection();\n        var inner = coll._innerColl;\n        inner.addListener(function (sender, e) {\n          switch (e.action) {\n            case NotifyCollectionChangedAction.Add:\n              _this._seriesAdapter.addManualItem(e.newItems.item(0));\n\n              break;\n\n            case NotifyCollectionChangedAction.Remove:\n              _this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\n\n              break;\n\n            case NotifyCollectionChangedAction.Replace:\n              _this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\n\n              _this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\n\n              break;\n\n            case NotifyCollectionChangedAction.Reset:\n              _this._seriesAdapter.clearManualItems();\n\n              break;\n          }\n        });\n        this._series = coll;\n      }\n\n      return this._series;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrDoughnutChart.prototype._ensureTooltipCreated = function (series) {\n    if (series.i.toolTip == null) {\n      var tooltip = this.createTooltip();\n      var ele = tooltip;\n\n      if (tooltip == null) {\n        return;\n      }\n\n      series._tooltipContent = tooltip; //(<any>tooltip.instance).template = this._tooltipTemplate;\n\n      series.i.toolTip = this.createWrapper(tooltip);\n\n      if (this._activeTooltips.has(ele)) {\n        var tCont = this._activeTooltips.get(ele);\n\n        tCont.template = ele.tooltipTemplate;\n      }\n    }\n  };\n\n  IgrDoughnutChart.prototype.createWrapper = function (ele) {\n    var wrapper = new ReactWrapper(ele, this._wrapper);\n    wrapper.updateToolTip = ele.updateToolTip;\n    wrapper.hideToolTip = ele.hideToolTip;\n\n    if (this._activeTooltips.has(ele)) {\n      var tCont = this._activeTooltips.get(ele);\n\n      tCont.template = ele.tooltipTemplate;\n    }\n\n    return wrapper;\n  };\n\n  IgrDoughnutChart.prototype._ensureDefaultTooltip = function (series) {\n    if (this._defaultTooltips == null) {\n      return;\n    }\n\n    this._defaultTooltips.instance[\"ensureDefaultTooltip\"](series);\n  };\n\n  IgrDoughnutChart.prototype._onDefaultTooltipsReady = function (cr) {\n    if (this.actualSeries && this.actualSeries.length > 0) {\n      var currSeries = this.actualSeries;\n\n      for (var i = 0; i < currSeries.length; i++) {\n        if (currSeries[i].showDefaultTooltip) {\n          this._ensureDefaultTooltip(currSeries[i]);\n        }\n      }\n    }\n  };\n\n  IgrDoughnutChart.prototype.createTooltip = function () {\n    var wrapper = this._wrapper.createElement(\"div\");\n\n    var ele = wrapper.getNativeElement();\n    ele.key = \"__tooltip_\" + this._uniqueTooltipId;\n    this._uniqueTooltipId++;\n    this._currentTooltips = this._currentTooltips.slice(0);\n\n    this._currentTooltips.push(ele); //let element = React.createElement(Tooltip,  );\n    //let portal = ReactDOM.createPortal(element, ele);\n\n\n    var self = this;\n\n    ele.updateToolTip = function (c, isSubContent) {\n      if (c.externalObject) {\n        c = c.externalObject;\n      } else {\n        var ext = new IgrDataContext();\n        ext._implementation = c;\n        c = ext;\n      }\n\n      if (!isSubContent) {\n        if (ele.parentElement != self.container.getNativeElement()) {\n          if (ele.parentElement != null) {\n            ele.parentElement.removeChild(ele);\n          }\n\n          self.container.getNativeElement().appendChild(ele);\n        }\n      } else {\n        c.isSubContent = true;\n      }\n\n      if (self._activeTooltips.has(ele)) {\n        var t = self._activeTooltips.get(ele);\n\n        if (t.template === null && ele.tooltipTemplate !== null) {\n          t.template = ele.tooltipTemplate;\n        }\n\n        t.dataContext = c;\n      }\n\n      ele.style.display = \"block\";\n      return true;\n    };\n\n    ele.hideToolTip = function () {\n      ele.style.display = \"none\";\n    };\n\n    ele.style.display = \"none\";\n\n    this._updateTooltipState();\n\n    return ele;\n  };\n\n  IgrDoughnutChart.prototype._updateTooltipState = function () {\n    if (this._initialized) {\n      this.setState({\n        tooltips: this._currentTooltips\n      });\n    }\n  };\n\n  Object.defineProperty(IgrDoughnutChart.prototype, \"allowSliceSelection\", {\n    /**\n    * Gets or sets whether the slices can be selected.\n    */\n    get: function () {\n      return this.i.aw;\n    },\n    set: function (v) {\n      this.i.aw = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDoughnutChart.prototype, \"isSurfaceInteractionDisabled\", {\n    /**\n     * Gets or sets whether all surface interactions with the plot area should be disabled.\n    */\n    get: function () {\n      return this.i.ax;\n    },\n    set: function (v) {\n      this.i.ax = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDoughnutChart.prototype, \"allowSliceExplosion\", {\n    /**\n     * Gets or sets whether the slices can be exploded.\n    */\n    get: function () {\n      return this.i.av;\n    },\n    set: function (v) {\n      this.i.av = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDoughnutChart.prototype, \"innerExtent\", {\n    /**\n     * Gets or sets the inner extent of the doughnut chart. It is percent from the outer ring's radius.\n    */\n    get: function () {\n      return this.i.a3;\n    },\n    set: function (v) {\n      this.i.a3 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDoughnutChart.prototype, \"selectedSliceFill\", {\n    /**\n     * Gets or sets the fill brush.\n    */\n    get: function () {\n      return this.i.cg ? this.i.cg.fill : null;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.cg.fill = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDoughnutChart.prototype, \"selectedSliceStroke\", {\n    /**\n     * Gets or sets the stroke brush.\n    */\n    get: function () {\n      return this.i.cg ? this.i.cg.stroke : null;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.cg.stroke = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDoughnutChart.prototype, \"selectedSliceStrokeThickness\", {\n    /**\n     * Gets or sets the stroke thickness.\n    */\n    get: function () {\n      return this.i.cg ? this.i.cg.strokeThickness : NaN;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.cg.strokeThickness = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDoughnutChart.prototype, \"selectedSliceOpacity\", {\n    /**\n     * Gets or sets the opacity.\n    */\n    get: function () {\n      return this.i.cg ? this.i.cg.opacity : NaN;\n    },\n    set: function (v) {\n      this.ensureSelectedStyle();\n      this.i.cg.opacity = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrDoughnutChart.prototype.ensureSelectedStyle = function () {\n    if (this.i.cg) {\n      return;\n    }\n\n    this.i.cg = new Style();\n  };\n\n  Object.defineProperty(IgrDoughnutChart.prototype, \"pixelScalingRatio\", {\n    /**\n     * Gets or sets the scaling value used to affect the pixel density of the control.\n     * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control\n     * to appear blurry.\n    */\n    get: function () {\n      return this.i.a4;\n    },\n    set: function (v) {\n      this.i.a4 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDoughnutChart.prototype, \"actualPixelScalingRatio\", {\n    /**\n     * Resolved pixel scaling ratio. Unless explicitly overridden by the\n     * IgxDoughnutChart.PixelScalingRatioComponent property,\n     * this one returns the default ratio enforced by device. High resolution devices will initialize this property\n     * to a higher value.\n    */\n    get: function () {\n      return this.i.a1;\n    },\n    set: function (v) {\n      this.i.a1 = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrDoughnutChart.prototype.findByName = function (name) {\n    if (this.series != null && this.series.findByName && this.series.findByName(name)) {\n      return this.series.findByName(name);\n    }\n\n    return null;\n  };\n\n  Object.defineProperty(IgrDoughnutChart.prototype, \"hasUserValues\", {\n    get: function () {\n      return this._hasUserValues;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrDoughnutChart.prototype.__m = function (propertyName) {\n    if (!this._inStyling) {\n      this._hasUserValues.add(propertyName);\n    }\n  };\n\n  IgrDoughnutChart.prototype._styling = function (container, component, parent) {\n    if (this._inStyling) {\n      return;\n    }\n\n    this._inStyling = true;\n    this._stylingContainer = container;\n    this._stylingParent = component;\n    var genericPrefix = \"\";\n    var typeName = this.i.$type.name;\n\n    if (typeName.indexOf(\"Xam\") === 0) {\n      typeName = typeName.substring(3);\n    }\n\n    genericPrefix = toSpinal(\"DoughnutChart\");\n    var additionalPrefixes = [];\n    var prefix = toSpinal(typeName);\n    additionalPrefixes.push(prefix + \"-\");\n    var b = this.i.$type.baseType;\n\n    while (b && b.name != \"Object\" && b.name != \"Base\" && b.name != \"Control\" && b.Name != \"DependencyObject\" && b.Name != \"FrameworkElement\") {\n      typeName = b.name;\n\n      if (typeName.indexOf(\"Xam\") === 0) {\n        typeName = typeName.substring(3);\n      }\n\n      var basePrefix = toSpinal(typeName);\n      additionalPrefixes.push(basePrefix + \"-\");\n      b = b.baseType;\n    }\n\n    if (parent) {\n      var parentTypeName = parent.i.$type.name;\n\n      if (parentTypeName.indexOf(\"Xam\") === 0) {\n        parentTypeName = parentTypeName.substring(3);\n      }\n\n      var parentPrefix = toSpinal(parentTypeName);\n      additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n      additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n    }\n\n    initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n\n    if (this._otherStyling) {\n      this._otherStyling(container, component, parent);\n    }\n\n    this._inStyling = false;\n  };\n  /**\n  * Called by the UI framework to provide a UI container for rendering this control.\n  * @param container  * The UI container element.\n  */\n\n\n  IgrDoughnutChart.prototype.provideContainer = function (container) {\n    this.i.provideContainer(container);\n  };\n  /**\n   * Called when the control has been resized.\n  \r\n  */\n\n\n  IgrDoughnutChart.prototype.notifyResized = function () {\n    this.i.notifyResized();\n  };\n  /**\n   * Gets the ID of the UI container.\n  \r\n  */\n\n\n  IgrDoughnutChart.prototype.getContainerID = function () {\n    var iv = this.i.bd();\n    return iv;\n  };\n  /**\n   * Gets the center coordinates of the doughnut chart's center presenter.\n  \r\n  */\n\n\n  IgrDoughnutChart.prototype.getCenterCoordinates = function () {\n    var iv = this.i.cf();\n    return fromPoint(iv);\n  };\n  /**\n   * Gets the hole radius of the doughnut chart's center presenter.\n  \r\n  */\n\n\n  IgrDoughnutChart.prototype.getHoleRadius = function () {\n    var iv = this.i.a2();\n    return iv;\n  };\n  /**\n   * Use to force the doughnut chart to finish any deferred work before printing or evaluating its visual.\n   * This should only be called if the visual of the doughnut chart needs to be synchronously saved or evaluated.\n   * Calling this method too often will hinder the performance of the doughnut chart.\n  \r\n  */\n\n\n  IgrDoughnutChart.prototype.flush = function () {\n    this.i.bk();\n  };\n  /**\n   * Returns the chart visuals expressed as a serialized string.\n  \r\n  */\n\n\n  IgrDoughnutChart.prototype.exportSerializedVisualData = function () {\n    var iv = this.i.bc();\n    return iv;\n  };\n\n  IgrDoughnutChart.prototype.notifyInsertItem = function (source_, index, newItem) {\n    this.i.bm(source_, index, newItem);\n  };\n\n  IgrDoughnutChart.prototype.notifySetItem = function (source_, index, oldItem, newItem) {\n    this.i.bp(source_, index, oldItem, newItem);\n  };\n  /**\n   * Used to manually notify the chart that the data source has reset or cleared its items.\n  \r\n  */\n\n\n  IgrDoughnutChart.prototype.notifyClearItems = function (source_) {\n    this.i.bl(source_);\n  };\n\n  IgrDoughnutChart.prototype.notifyRemoveItem = function (source_, index, oldItem) {\n    this.i.bn(source_, index, oldItem);\n  };\n\n  Object.defineProperty(IgrDoughnutChart.prototype, \"sliceClick\", {\n    /**\n     * Raised when the slice is clicked.\n    */\n    get: function () {\n      return this._sliceClick;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._sliceClick_wrapped !== null) {\n        this.i.sliceClick = delegateRemove(this.i.sliceClick, this._sliceClick_wrapped);\n        this._sliceClick_wrapped = null;\n        this._sliceClick = null;\n      }\n\n      this._sliceClick = ev;\n\n      this._sliceClick_wrapped = function (o, e) {\n        var outerArgs = new IgrSliceClickEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeSliceClick) {\n          _this.beforeSliceClick(_this, outerArgs);\n        }\n\n        if (_this._sliceClick) {\n          _this._sliceClick(_this, outerArgs);\n        }\n      };\n\n      this.i.sliceClick = delegateCombine(this.i.sliceClick, this._sliceClick_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrDoughnutChart.prototype, \"holeDimensionsChanged\", {\n    /**\n     * Raised when the dimensions (center point or radius) of the doughnut hole change.\n    */\n    get: function () {\n      return this._holeDimensionsChanged;\n    },\n    set: function (ev) {\n      var _this = this;\n\n      if (this._holeDimensionsChanged_wrapped !== null) {\n        this.i.holeDimensionsChanged = delegateRemove(this.i.holeDimensionsChanged, this._holeDimensionsChanged_wrapped);\n        this._holeDimensionsChanged_wrapped = null;\n        this._holeDimensionsChanged = null;\n      }\n\n      this._holeDimensionsChanged = ev;\n\n      this._holeDimensionsChanged_wrapped = function (o, e) {\n        var outerArgs = new IgrHoleDimensionsChangedEventArgs();\n\n        outerArgs._provideImplementation(e);\n\n        if (_this.beforeHoleDimensionsChanged) {\n          _this.beforeHoleDimensionsChanged(_this, outerArgs);\n        }\n\n        if (_this._holeDimensionsChanged) {\n          _this._holeDimensionsChanged(_this, outerArgs);\n        }\n      };\n\n      this.i.holeDimensionsChanged = delegateCombine(this.i.holeDimensionsChanged, this._holeDimensionsChanged_wrapped);\n      ;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  return IgrDoughnutChart;\n}(React.Component);\n\nexport { IgrDoughnutChart };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-doughnut-chart.js"],"names":["__extends","__values","React","ReactDOM","ReactRenderer","ReactWrapper","TypeRegistrar","DataChartStylingDefaults","XamDoughnutChart","ensureBool","fromPoint","CollectionAdapter","initializePropertiesFromCss","NamePatcher","isValidProp","getModifiedProps","toSpinal","Style","IgrSliceClickEventArgs","IgrHoleDimensionsChangedEventArgs","RingSeriesBase","NotifyCollectionChangedAction","IgrRingSeriesCollection","IgrDataContext","delegateCombine","delegateRemove","ContentChildrenManager","IgrDoughnutChart","_super","props","_this","call","_contentChildren","_contentChildrenActual","_contentChildrenMap","_contentChildrenUnresolved","actualSeries","_seriesAdapter","_series","_defaultTooltips","_uniqueTooltipId","_initialized","__p","_hasUserValues","Set","_stylingContainer","_stylingParent","_inStyling","_sliceClick","_sliceClick_wrapped","_holeDimensionsChanged","_holeDimensionsChanged_wrapped","_styling","ensureStylablePatched","Object","getPrototypeOf","_getMainRef","bind","_tooltipRef","_activeTooltipElements","Map","_activeTooltips","_currentTooltips","_contentChildrenManager","ch","key","name","_updateContentChildren","container","document","createElement","style","display","width","height","root","_renderer","getWrapper","_implementation","createImplementation","externalObject","onImplementationCreated","_wrapper","chart","i","_chart","provideContainer","addSizeWatcher","notifyResized","defineProperty","prototype","get","_height","set","value","_elRef","enumerable","configurable","_width","contentSeries","contentChildrenActual","length","$type","isAssignableFrom","push","notifyContentChanged","t","currentOwner","tooltipTemplate","template","render","children","getChildren","has","isRegistered","Tooltip","tEle","ref","owner","portal","createPortal","div","className","componentDidMount","e_1","_a","_b","keys","_c","next","done","p","e_1_1","error","return","appendChild","getNativeElement","initializeContent","shouldComponentUpdate","nextProps","nextState","e_2","mod","e_2_1","destroy","series","c","parentElement","_ensureDefaultTooltip","_ensureTooltipCreated","currSeries","componentWillUnmount","createSeriesComponent","type","s","create","_provideRenderer","Error","coll","inner","_innerColl","addListener","sender","e","action","Add","addManualItem","newItems","item","Remove","removeManualItemAt","oldStartingIndex","Replace","insertManualItem","newStartingIndex","Reset","clearManualItems","toolTip","tooltip","createTooltip","ele","_tooltipContent","createWrapper","tCont","wrapper","updateToolTip","hideToolTip","instance","_onDefaultTooltipsReady","cr","showDefaultTooltip","slice","self","isSubContent","ext","removeChild","dataContext","_updateTooltipState","setState","tooltips","aw","v","ax","av","a3","cg","fill","ensureSelectedStyle","stroke","strokeThickness","NaN","opacity","a4","a1","findByName","__m","propertyName","add","component","parent","genericPrefix","typeName","indexOf","substring","additionalPrefixes","prefix","b","baseType","Name","basePrefix","parentTypeName","parentPrefix","hasUserValues","_otherStyling","getContainerID","iv","bd","getCenterCoordinates","cf","getHoleRadius","a2","flush","bk","exportSerializedVisualData","bc","notifyInsertItem","source_","index","newItem","bm","notifySetItem","oldItem","bp","notifyClearItems","bl","notifyRemoveItem","bn","ev","sliceClick","o","outerArgs","_provideImplementation","beforeSliceClick","holeDimensionsChanged","beforeHoleDimensionsChanged","Component"],"mappings":"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","sourcesContent":["import { __extends, __values } from \"tslib\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { ReactRenderer, ReactWrapper } from \"igniteui-react-core\";\nimport { TypeRegistrar } from \"igniteui-react-core\";\nimport { DataChartStylingDefaults } from './DataChartStylingDefaults';\nimport { XamDoughnutChart } from './XamDoughnutChart';\nimport { ensureBool, fromPoint, CollectionAdapter, initializePropertiesFromCss, NamePatcher, isValidProp, getModifiedProps, toSpinal } from \"igniteui-react-core\";\nimport { Style } from \"igniteui-react-core\";\nimport { IgrSliceClickEventArgs } from \"./igr-slice-click-event-args\";\nimport { IgrHoleDimensionsChangedEventArgs } from \"./igr-hole-dimensions-changed-event-args\";\nimport { RingSeriesBase } from \"./RingSeriesBase\";\nimport { NotifyCollectionChangedAction } from \"igniteui-react-core\";\nimport { IgrRingSeriesCollection } from \"./igr-ring-series-collection\";\nimport { IgrDataContext } from \"igniteui-react-core\";\nimport { delegateCombine, delegateRemove } from \"igniteui-react-core\";\nimport { ContentChildrenManager } from \"igniteui-react-core\";\n/**\n * Represents concentric circles divided on arcs  depending on data.\n*/\nvar IgrDoughnutChart = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrDoughnutChart, _super);\n    function IgrDoughnutChart(props) {\n        var _this = _super.call(this, props) || this;\n        _this._contentChildren = null;\n        _this._contentChildrenActual = null;\n        _this._contentChildrenMap = null;\n        _this._contentChildrenUnresolved = 0;\n        /**\n         * The series actually present in the chart. Do not directly modify this array.\n         * This array's contents can be modified by causing Angular to reproject the child content.\n         * Or adding and removing series from the manual series collection on the series property.\n         */\n        _this.actualSeries = [];\n        _this._seriesAdapter = null;\n        _this._series = null;\n        _this._defaultTooltips = null;\n        _this._uniqueTooltipId = 0;\n        _this._initialized = false;\n        _this.__p = null;\n        _this._hasUserValues = new Set();\n        _this._stylingContainer = null;\n        _this._stylingParent = null;\n        _this._inStyling = false;\n        _this._sliceClick = null;\n        _this._sliceClick_wrapped = null;\n        _this._holeDimensionsChanged = null;\n        _this._holeDimensionsChanged_wrapped = null;\n        if (_this._styling) {\n            NamePatcher.ensureStylablePatched(Object.getPrototypeOf(_this));\n        }\n        _this._getMainRef = _this._getMainRef.bind(_this);\n        _this._tooltipRef = _this._tooltipRef.bind(_this);\n        _this._activeTooltipElements = new Map();\n        _this._activeTooltips = new Map();\n        _this._currentTooltips = [];\n        _this._contentChildrenManager = new ContentChildrenManager(function (ch) { return ch.key || ch.props.name; }, function (ch) { return ch.key || ch.props.name; }, function () { return _this._updateContentChildren(); });\n        var container = null;\n        if (document) {\n            container = document.createElement(\"div\");\n            container.style.display = \"block\";\n            container.style.width = \"100%\";\n            container.style.height = \"100%\";\n        }\n        var root;\n        root = container;\n        _this._renderer = new ReactRenderer(root, document, true, DataChartStylingDefaults);\n        _this.container = _this._renderer.getWrapper(container);\n        _this._implementation = _this.createImplementation();\n        _this._implementation.externalObject = _this;\n        _this.onImplementationCreated();\n        _this._wrapper = _this._renderer;\n        var chart = _this.i;\n        _this._chart = chart;\n        chart.provideContainer(_this._renderer);\n        _this._renderer.addSizeWatcher(function () {\n            _this._chart.notifyResized();\n        });\n        return _this;\n    }\n    Object.defineProperty(IgrDoughnutChart.prototype, \"height\", {\n        get: function () {\n            return this._height;\n        },\n        set: function (value) {\n            this._height = value;\n            if (this._elRef) {\n                this._elRef.style.height = value;\n                this._chart.notifyResized();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDoughnutChart.prototype, \"width\", {\n        get: function () {\n            return this._width;\n        },\n        set: function (value) {\n            this._width = value;\n            if (this._elRef) {\n                this._elRef.style.width = value;\n                this._chart.notifyResized();\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrDoughnutChart.prototype._updateContentChildren = function () {\n        this.contentSeries = [];\n        var contentChildrenActual = this._contentChildrenManager.contentChildrenActual;\n        for (var i = 0; i < contentChildrenActual.length; i++) {\n            if ((RingSeriesBase.$type).isAssignableFrom(contentChildrenActual[i].i.$type)) {\n                this.contentSeries.push(contentChildrenActual[i]);\n            }\n        }\n        if (this._seriesAdapter !== null) {\n            this._seriesAdapter.notifyContentChanged();\n        }\n    };\n    IgrDoughnutChart.prototype._tooltipRef = function (t) {\n        //console.log(t);\n        if (t === null) {\n            return;\n        }\n        if (t.currentOwner &&\n            t.currentOwner.tooltipTemplate) {\n            t.template = t.currentOwner.tooltipTemplate;\n        }\n        this._activeTooltips.set(t.currentOwner, t);\n    };\n    IgrDoughnutChart.prototype.render = function () {\n        // if (!this._childrenDiffer(this.props.children)) {\n        // \tlet div = React.createElement(\"div\", {\n        // \t\tref: (ref) => {\n        // \t\t\tthis._elRef = ref;\n        // \t\t},\n        // \t\tchildren: this.props.children\n        // \t});\n        // \treturn div;\n        // } else {\n        var children = this._contentChildrenManager.getChildren(this.props.children);\n        if (this._currentTooltips && this._currentTooltips.length > 0) {\n            for (var i = 0; i < this._currentTooltips.length; i++) {\n                var t = this._currentTooltips[i];\n                if (this._activeTooltipElements.has(t)) {\n                    children.push(this._activeTooltipElements.get(t));\n                }\n                else {\n                    if (!TypeRegistrar.isRegistered(\"IgrTooltipContainer\")) {\n                        continue;\n                    }\n                    var Tooltip = TypeRegistrar.get(\"IgrTooltipContainer\");\n                    var tEle = React.createElement(Tooltip, {\n                        ref: this._tooltipRef,\n                        key: this._currentTooltips[i].key,\n                        owner: this._currentTooltips[i]\n                    });\n                    var portal = ReactDOM.createPortal(tEle, t, this._currentTooltips[i].key);\n                    this._activeTooltipElements.set(t, portal);\n                    children.push(portal);\n                }\n            }\n        }\n        var div = React.createElement(\"div\", {\n            className: \"ig-doughnut-chart igr-doughnut-chart\",\n            ref: this._getMainRef,\n            children: children\n        });\n        return div;\n        //}\n    };\n    IgrDoughnutChart.prototype.componentDidMount = function () {\n        var e_1, _a;\n        try {\n            for (var _b = __values(Object.keys(this.props)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    {\n                        this[p] = this.props[p];\n                    }\n                }\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n        this._elRef.style.width = this._width ? this._width : \"\";\n        this._elRef.style.height = this._height ? this._height : \"\";\n        this._elRef.appendChild(this.container.getNativeElement());\n        this._chart.notifyResized();\n        this.initializeContent();\n    };\n    IgrDoughnutChart.prototype.shouldComponentUpdate = function (nextProps, nextState) {\n        var e_2, _a;\n        var mod = getModifiedProps(this.props, nextProps);\n        try {\n            for (var _b = __values(Object.keys(mod)), _c = _b.next(); !_c.done; _c = _b.next()) {\n                var p = _c.value;\n                if (isValidProp(this, p)) {\n                    this[p] = mod[p];\n                }\n            }\n        }\n        catch (e_2_1) {\n            e_2 = { error: e_2_1 };\n        }\n        finally {\n            try {\n                if (_c && !_c.done && (_a = _b.return))\n                    _a.call(_b);\n            }\n            finally {\n                if (e_2)\n                    throw e_2.error;\n            }\n        }\n        return true;\n    };\n    IgrDoughnutChart.prototype._getMainRef = function (div) {\n        this._elRef = div;\n    };\n    IgrDoughnutChart.prototype.destroy = function () {\n        this._chart.destroy();\n        this._wrapper.destroy();\n    };\n    IgrDoughnutChart.prototype.initializeContent = function () {\n        var _this = this;\n        this._updateContentChildren();\n        this._seriesAdapter = new CollectionAdapter(this.contentSeries, this.i.series, this.actualSeries, function (c) { return c.i; }, function (i) {\n            i.owner = _this;\n            // (<any>i)._provideRenderer(this._dataSource);\n            if (_this.container && _this.container.getNativeElement().parentElement) {\n                i._styling(_this.container.getNativeElement(), _this, _this);\n            }\n            _this._ensureDefaultTooltip(i);\n            _this._ensureTooltipCreated(i);\n            //(<any>i)._provideRenderer(this._wrapper); \n        }, function (i) {\n            //(<any>i)._provideRenderer(null);\n        });\n        this._styling(this.container.getNativeElement(), this);\n        if (this.actualSeries && this.actualSeries.length > 0) {\n            var currSeries = this.actualSeries;\n            for (var i = 0; i < currSeries.length; i++) {\n                currSeries[i]._styling(this.container.getNativeElement(), this, this);\n            }\n        }\n        this.i.notifyResized();\n    };\n    IgrDoughnutChart.prototype.componentWillUnmount = function () {\n        //this._grid.destroy();\n        this.destroy();\n    };\n    IgrDoughnutChart.prototype.onImplementationCreated = function () {\n    };\n    IgrDoughnutChart.prototype.createImplementation = function () {\n        return new XamDoughnutChart();\n    };\n    Object.defineProperty(IgrDoughnutChart.prototype, \"i\", {\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrDoughnutChart.prototype.createSeriesComponent = function (type) {\n        if (TypeRegistrar.isRegistered(type)) {\n            var s = TypeRegistrar.create(type);\n            s.owner = this;\n            s._provideRenderer(this._wrapper);\n            return s;\n        }\n        else {\n            //we shouldn't get here, hopefully.\n            throw Error(\"series type not loaded: \" + type);\n        }\n    };\n    Object.defineProperty(IgrDoughnutChart.prototype, \"series\", {\n        /**\n         * A collection or manually added series for the chart.\n        */\n        get: function () {\n            var _this = this;\n            if (this._series === null) {\n                var coll = new IgrRingSeriesCollection();\n                var inner = coll._innerColl;\n                inner.addListener(function (sender, e) {\n                    switch (e.action) {\n                        case NotifyCollectionChangedAction.Add:\n                            _this._seriesAdapter.addManualItem(e.newItems.item(0));\n                            break;\n                        case NotifyCollectionChangedAction.Remove:\n                            _this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\n                            break;\n                        case NotifyCollectionChangedAction.Replace:\n                            _this._seriesAdapter.removeManualItemAt(e.oldStartingIndex);\n                            _this._seriesAdapter.insertManualItem(e.newStartingIndex, e.newItems.item(0));\n                            break;\n                        case NotifyCollectionChangedAction.Reset:\n                            _this._seriesAdapter.clearManualItems();\n                            break;\n                    }\n                });\n                this._series = coll;\n            }\n            return this._series;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrDoughnutChart.prototype._ensureTooltipCreated = function (series) {\n        if (series.i.toolTip == null) {\n            var tooltip = this.createTooltip();\n            var ele = tooltip;\n            if (tooltip == null) {\n                return;\n            }\n            series._tooltipContent = tooltip;\n            //(<any>tooltip.instance).template = this._tooltipTemplate;\n            series.i.toolTip = this.createWrapper(tooltip);\n            if (this._activeTooltips.has(ele)) {\n                var tCont = this._activeTooltips.get(ele);\n                tCont.template = ele.tooltipTemplate;\n            }\n        }\n    };\n    IgrDoughnutChart.prototype.createWrapper = function (ele) {\n        var wrapper = new ReactWrapper(ele, this._wrapper);\n        wrapper.updateToolTip = ele.updateToolTip;\n        wrapper.hideToolTip = ele.hideToolTip;\n        if (this._activeTooltips.has(ele)) {\n            var tCont = this._activeTooltips.get(ele);\n            tCont.template = ele.tooltipTemplate;\n        }\n        return wrapper;\n    };\n    IgrDoughnutChart.prototype._ensureDefaultTooltip = function (series) {\n        if (this._defaultTooltips == null) {\n            return;\n        }\n        this._defaultTooltips.instance[\"ensureDefaultTooltip\"](series);\n    };\n    IgrDoughnutChart.prototype._onDefaultTooltipsReady = function (cr) {\n        if (this.actualSeries && this.actualSeries.length > 0) {\n            var currSeries = this.actualSeries;\n            for (var i = 0; i < currSeries.length; i++) {\n                if (currSeries[i].showDefaultTooltip) {\n                    this._ensureDefaultTooltip(currSeries[i]);\n                }\n            }\n        }\n    };\n    IgrDoughnutChart.prototype.createTooltip = function () {\n        var wrapper = this._wrapper.createElement(\"div\");\n        var ele = wrapper.getNativeElement();\n        ele.key = \"__tooltip_\" + this._uniqueTooltipId;\n        this._uniqueTooltipId++;\n        this._currentTooltips = this._currentTooltips.slice(0);\n        this._currentTooltips.push(ele);\n        //let element = React.createElement(Tooltip,  );\n        //let portal = ReactDOM.createPortal(element, ele);\n        var self = this;\n        ele.updateToolTip = function (c, isSubContent) {\n            if (c.externalObject) {\n                c = c.externalObject;\n            }\n            else {\n                var ext = new IgrDataContext();\n                ext._implementation = c;\n                c = ext;\n            }\n            if (!isSubContent) {\n                if (ele.parentElement != self.container.getNativeElement()) {\n                    if (ele.parentElement != null) {\n                        ele.parentElement.removeChild(ele);\n                    }\n                    self.container.getNativeElement().appendChild(ele);\n                }\n            }\n            else {\n                c.isSubContent = true;\n            }\n            if (self._activeTooltips.has(ele)) {\n                var t = self._activeTooltips.get(ele);\n                if (t.template === null &&\n                    ele.tooltipTemplate !== null) {\n                    t.template = ele.tooltipTemplate;\n                }\n                t.dataContext = c;\n            }\n            ele.style.display = \"block\";\n            return true;\n        };\n        ele.hideToolTip = function () {\n            ele.style.display = \"none\";\n        };\n        ele.style.display = \"none\";\n        this._updateTooltipState();\n        return ele;\n    };\n    IgrDoughnutChart.prototype._updateTooltipState = function () {\n        if (this._initialized) {\n            this.setState({ tooltips: this._currentTooltips });\n        }\n    };\n    Object.defineProperty(IgrDoughnutChart.prototype, \"allowSliceSelection\", {\n        /**\n     * Gets or sets whether the slices can be selected.\n    */\n        get: function () {\n            return this.i.aw;\n        },\n        set: function (v) {\n            this.i.aw = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDoughnutChart.prototype, \"isSurfaceInteractionDisabled\", {\n        /**\n         * Gets or sets whether all surface interactions with the plot area should be disabled.\n        */\n        get: function () {\n            return this.i.ax;\n        },\n        set: function (v) {\n            this.i.ax = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDoughnutChart.prototype, \"allowSliceExplosion\", {\n        /**\n         * Gets or sets whether the slices can be exploded.\n        */\n        get: function () {\n            return this.i.av;\n        },\n        set: function (v) {\n            this.i.av = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDoughnutChart.prototype, \"innerExtent\", {\n        /**\n         * Gets or sets the inner extent of the doughnut chart. It is percent from the outer ring's radius.\n        */\n        get: function () {\n            return this.i.a3;\n        },\n        set: function (v) {\n            this.i.a3 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDoughnutChart.prototype, \"selectedSliceFill\", {\n        /**\n         * Gets or sets the fill brush.\n        */\n        get: function () {\n            return this.i.cg ? this.i.cg.fill : null;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.cg.fill = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDoughnutChart.prototype, \"selectedSliceStroke\", {\n        /**\n         * Gets or sets the stroke brush.\n        */\n        get: function () {\n            return this.i.cg ? this.i.cg.stroke : null;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.cg.stroke = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDoughnutChart.prototype, \"selectedSliceStrokeThickness\", {\n        /**\n         * Gets or sets the stroke thickness.\n        */\n        get: function () {\n            return this.i.cg ? this.i.cg.strokeThickness : NaN;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.cg.strokeThickness = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDoughnutChart.prototype, \"selectedSliceOpacity\", {\n        /**\n         * Gets or sets the opacity.\n        */\n        get: function () {\n            return this.i.cg ? this.i.cg.opacity : NaN;\n        },\n        set: function (v) {\n            this.ensureSelectedStyle();\n            this.i.cg.opacity = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrDoughnutChart.prototype.ensureSelectedStyle = function () {\n        if (this.i.cg) {\n            return;\n        }\n        this.i.cg = new Style();\n    };\n    Object.defineProperty(IgrDoughnutChart.prototype, \"pixelScalingRatio\", {\n        /**\n         * Gets or sets the scaling value used to affect the pixel density of the control.\n         * A higher scaling ratio will produce crisper visuals at the expense of memory.  Lower values will cause the control\n         * to appear blurry.\n        */\n        get: function () {\n            return this.i.a4;\n        },\n        set: function (v) {\n            this.i.a4 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDoughnutChart.prototype, \"actualPixelScalingRatio\", {\n        /**\n         * Resolved pixel scaling ratio. Unless explicitly overridden by the\n         * IgxDoughnutChart.PixelScalingRatioComponent property,\n         * this one returns the default ratio enforced by device. High resolution devices will initialize this property\n         * to a higher value.\n        */\n        get: function () {\n            return this.i.a1;\n        },\n        set: function (v) {\n            this.i.a1 = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrDoughnutChart.prototype.findByName = function (name) {\n        if (this.series != null && this.series.findByName && this.series.findByName(name)) {\n            return this.series.findByName(name);\n        }\n        return null;\n    };\n    Object.defineProperty(IgrDoughnutChart.prototype, \"hasUserValues\", {\n        get: function () {\n            return this._hasUserValues;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrDoughnutChart.prototype.__m = function (propertyName) {\n        if (!this._inStyling) {\n            this._hasUserValues.add(propertyName);\n        }\n    };\n    IgrDoughnutChart.prototype._styling = function (container, component, parent) {\n        if (this._inStyling) {\n            return;\n        }\n        this._inStyling = true;\n        this._stylingContainer = container;\n        this._stylingParent = component;\n        var genericPrefix = \"\";\n        var typeName = this.i.$type.name;\n        if (typeName.indexOf(\"Xam\") === 0) {\n            typeName = typeName.substring(3);\n        }\n        genericPrefix = toSpinal(\"DoughnutChart\");\n        var additionalPrefixes = [];\n        var prefix = toSpinal(typeName);\n        additionalPrefixes.push(prefix + \"-\");\n        var b = this.i.$type.baseType;\n        while (b && b.name != \"Object\" &&\n            b.name != \"Base\" &&\n            b.name != \"Control\" &&\n            b.Name != \"DependencyObject\" &&\n            b.Name != \"FrameworkElement\") {\n            typeName = b.name;\n            if (typeName.indexOf(\"Xam\") === 0) {\n                typeName = typeName.substring(3);\n            }\n            var basePrefix = toSpinal(typeName);\n            additionalPrefixes.push(basePrefix + \"-\");\n            b = b.baseType;\n        }\n        if (parent) {\n            var parentTypeName = parent.i.$type.name;\n            if (parentTypeName.indexOf(\"Xam\") === 0) {\n                parentTypeName = parentTypeName.substring(3);\n            }\n            var parentPrefix = toSpinal(parentTypeName);\n            additionalPrefixes.push(parentPrefix + \"-\" + genericPrefix + \"-\");\n            additionalPrefixes.push(parentPrefix + \"-\" + prefix + \"-\");\n        }\n        initializePropertiesFromCss(container, this, genericPrefix + \"-\", this.hasUserValues, false, additionalPrefixes);\n        if (this._otherStyling) {\n            this._otherStyling(container, component, parent);\n        }\n        this._inStyling = false;\n    };\n    /**\n * Called by the UI framework to provide a UI container for rendering this control.\n\r\n* @param container  * The UI container element.\n*/\n    IgrDoughnutChart.prototype.provideContainer = function (container) {\n        this.i.provideContainer(container);\n    };\n    /**\n     * Called when the control has been resized.\n    \r\n    */\n    IgrDoughnutChart.prototype.notifyResized = function () {\n        this.i.notifyResized();\n    };\n    /**\n     * Gets the ID of the UI container.\n    \r\n    */\n    IgrDoughnutChart.prototype.getContainerID = function () {\n        var iv = this.i.bd();\n        return (iv);\n    };\n    /**\n     * Gets the center coordinates of the doughnut chart's center presenter.\n    \r\n    */\n    IgrDoughnutChart.prototype.getCenterCoordinates = function () {\n        var iv = this.i.cf();\n        return fromPoint(iv);\n    };\n    /**\n     * Gets the hole radius of the doughnut chart's center presenter.\n    \r\n    */\n    IgrDoughnutChart.prototype.getHoleRadius = function () {\n        var iv = this.i.a2();\n        return (iv);\n    };\n    /**\n     * Use to force the doughnut chart to finish any deferred work before printing or evaluating its visual.\n     * This should only be called if the visual of the doughnut chart needs to be synchronously saved or evaluated.\n     * Calling this method too often will hinder the performance of the doughnut chart.\n    \r\n    */\n    IgrDoughnutChart.prototype.flush = function () {\n        this.i.bk();\n    };\n    /**\n     * Returns the chart visuals expressed as a serialized string.\n    \r\n    */\n    IgrDoughnutChart.prototype.exportSerializedVisualData = function () {\n        var iv = this.i.bc();\n        return (iv);\n    };\n    IgrDoughnutChart.prototype.notifyInsertItem = function (source_, index, newItem) {\n        this.i.bm(source_, index, newItem);\n    };\n    IgrDoughnutChart.prototype.notifySetItem = function (source_, index, oldItem, newItem) {\n        this.i.bp(source_, index, oldItem, newItem);\n    };\n    /**\n     * Used to manually notify the chart that the data source has reset or cleared its items.\n    \r\n    */\n    IgrDoughnutChart.prototype.notifyClearItems = function (source_) {\n        this.i.bl(source_);\n    };\n    IgrDoughnutChart.prototype.notifyRemoveItem = function (source_, index, oldItem) {\n        this.i.bn(source_, index, oldItem);\n    };\n    Object.defineProperty(IgrDoughnutChart.prototype, \"sliceClick\", {\n        /**\n         * Raised when the slice is clicked.\n        */\n        get: function () {\n            return this._sliceClick;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._sliceClick_wrapped !== null) {\n                this.i.sliceClick = delegateRemove(this.i.sliceClick, this._sliceClick_wrapped);\n                this._sliceClick_wrapped = null;\n                this._sliceClick = null;\n            }\n            this._sliceClick = ev;\n            this._sliceClick_wrapped = function (o, e) {\n                var outerArgs = new IgrSliceClickEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeSliceClick) {\n                    _this.beforeSliceClick(_this, outerArgs);\n                }\n                if (_this._sliceClick) {\n                    _this._sliceClick(_this, outerArgs);\n                }\n            };\n            this.i.sliceClick = delegateCombine(this.i.sliceClick, this._sliceClick_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrDoughnutChart.prototype, \"holeDimensionsChanged\", {\n        /**\n         * Raised when the dimensions (center point or radius) of the doughnut hole change.\n        */\n        get: function () {\n            return this._holeDimensionsChanged;\n        },\n        set: function (ev) {\n            var _this = this;\n            if (this._holeDimensionsChanged_wrapped !== null) {\n                this.i.holeDimensionsChanged = delegateRemove(this.i.holeDimensionsChanged, this._holeDimensionsChanged_wrapped);\n                this._holeDimensionsChanged_wrapped = null;\n                this._holeDimensionsChanged = null;\n            }\n            this._holeDimensionsChanged = ev;\n            this._holeDimensionsChanged_wrapped = function (o, e) {\n                var outerArgs = new IgrHoleDimensionsChangedEventArgs();\n                outerArgs._provideImplementation(e);\n                if (_this.beforeHoleDimensionsChanged) {\n                    _this.beforeHoleDimensionsChanged(_this, outerArgs);\n                }\n                if (_this._holeDimensionsChanged) {\n                    _this._holeDimensionsChanged(_this, outerArgs);\n                }\n            };\n            this.i.holeDimensionsChanged = delegateCombine(this.i.holeDimensionsChanged, this._holeDimensionsChanged_wrapped);\n            ;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return IgrDoughnutChart;\n}(React.Component));\nexport { IgrDoughnutChart };\n"]},"metadata":{},"sourceType":"module"}