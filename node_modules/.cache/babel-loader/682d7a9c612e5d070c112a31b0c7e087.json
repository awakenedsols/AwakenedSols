{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, Number_$type, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar DataLegendSummaryCalculationBase =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DataLegendSummaryCalculationBase, _super);\n\n  function DataLegendSummaryCalculationBase() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DataLegendSummaryCalculationBase.prototype.a = function (a) {\n    var b = new List$1(Number_$type, 0);\n\n    for (var d = 0; d < a.length; d++) {\n      var c = a[d];\n\n      if (isNaN_(c)) {\n        continue;\n      }\n\n      if (isInfinity(c)) {\n        continue;\n      }\n\n      b.add(c);\n    }\n\n    return b.toArray();\n  };\n\n  DataLegendSummaryCalculationBase.$t = markType(DataLegendSummaryCalculationBase, 'DataLegendSummaryCalculationBase');\n  return DataLegendSummaryCalculationBase;\n}(Base);\n\nexport { DataLegendSummaryCalculationBase };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/DataLegendSummaryCalculationBase.js"],"names":["__extends","Base","Number_$type","markType","List$1","isNaN_","isInfinity","DataLegendSummaryCalculationBase","_super","apply","arguments","prototype","a","b","d","length","c","add","toArray","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,YAAf,EAA6BC,QAA7B,QAA6C,qBAA7C;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,qBAAnC;AACA;AACA;AACA;;AACA,IAAIC,gCAAgC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAClFR,EAAAA,SAAS,CAACO,gCAAD,EAAmCC,MAAnC,CAAT;;AACA,WAASD,gCAAT,GAA4C;AACxC,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,gCAAgC,CAACI,SAAjC,CAA2CC,CAA3C,GAA+C,UAAUA,CAAV,EAAa;AACxD,QAAIC,CAAC,GAAG,IAAIT,MAAJ,CAAWF,YAAX,EAAyB,CAAzB,CAAR;;AACA,SAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,CAAC,CAACG,MAAtB,EAA8BD,CAAC,EAA/B,EAAmC;AAC/B,UAAIE,CAAC,GAAGJ,CAAC,CAACE,CAAD,CAAT;;AACA,UAAIT,MAAM,CAACW,CAAD,CAAV,EAAe;AACX;AACH;;AACD,UAAIV,UAAU,CAACU,CAAD,CAAd,EAAmB;AACf;AACH;;AACDH,MAAAA,CAAC,CAACI,GAAF,CAAMD,CAAN;AACH;;AACD,WAAOH,CAAC,CAACK,OAAF,EAAP;AACH,GAbD;;AAcAX,EAAAA,gCAAgC,CAACY,EAAjC,GAAsChB,QAAQ,CAACI,gCAAD,EAAmC,kCAAnC,CAA9C;AACA,SAAOA,gCAAP;AACH,CArBmE,CAqBlEN,IArBkE,CAApE;;AAsBA,SAASM,gCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, Number_$type, markType } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\nimport { isNaN_, isInfinity } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar DataLegendSummaryCalculationBase = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DataLegendSummaryCalculationBase, _super);\n    function DataLegendSummaryCalculationBase() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataLegendSummaryCalculationBase.prototype.a = function (a) {\n        var b = new List$1(Number_$type, 0);\n        for (var d = 0; d < a.length; d++) {\n            var c = a[d];\n            if (isNaN_(c)) {\n                continue;\n            }\n            if (isInfinity(c)) {\n                continue;\n            }\n            b.add(c);\n        }\n        return b.toArray();\n    };\n    DataLegendSummaryCalculationBase.$t = markType(DataLegendSummaryCalculationBase, 'DataLegendSummaryCalculationBase');\n    return DataLegendSummaryCalculationBase;\n}(Base));\nexport { DataLegendSummaryCalculationBase };\n"]},"metadata":{},"sourceType":"module"}