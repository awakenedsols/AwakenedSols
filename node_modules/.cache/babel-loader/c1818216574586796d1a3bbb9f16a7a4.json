{"ast":null,"code":"/*!\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __generator, __read, __spreadArray, __values } from \"tslib\";\nvar _typeIdentifierCache = {};\nvar _nextTypeIdentifier = 0; // interface Function {\n//     $type?: Type;\n// }\n\nexport function getInstanceType(obj) {\n  if (obj.$type) {\n    return obj.$type;\n  } else if (typeof obj === 'number') {\n    return Number_$type;\n  } else if (typeof obj === 'string') {\n    return String_$type;\n  } else if (typeof obj === 'boolean') {\n    return Boolean_$type;\n  } else if (obj instanceof Date) {\n    return Date_$type;\n  }\n\n  return Base.prototype.$type;\n}\n\nvar Base =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function Base() {}\n\n  Base.prototype.equals = function (other) {\n    return this === other;\n  };\n\n  Base.equalsStatic = function (a, b) {\n    var aIsNull = a == null || !!a.isNullable && !a.hasValue;\n    var bIsNull = b == null || !!b.isNullable && !b.hasValue;\n\n    if (aIsNull || bIsNull) {\n      return aIsNull && bIsNull;\n    }\n\n    if (a.equals) {\n      return a.equals(b);\n    }\n\n    if (b.equals) {\n      return b.equals(a);\n    }\n\n    if (Number.isNaN(a) && Number.isNaN(b)) {\n      return true;\n    }\n\n    if (a instanceof Date) {\n      return b instanceof Date && +a === +b;\n    }\n\n    return a == b && typeof a == typeof b;\n  };\n\n  Base.equalsSimple = function (item1, item2) {\n    return item1 == item2;\n  };\n\n  ;\n\n  Base.compareSimple = function (item1, item2) {\n    if (item1 == item2) {\n      return 0;\n    }\n\n    if (item1 < item2) {\n      return -1;\n    }\n\n    return 1;\n  };\n\n  ;\n\n  Base.compare = function (item1, item2) {\n    if (item1 === item2) {\n      return 0;\n    }\n\n    var xComparable = typeCast(IComparable_$type, item1);\n\n    if (xComparable !== null && xComparable.compareToObject) {\n      return xComparable.compareToObject(item2);\n    }\n\n    var yComparable = typeCast(IComparable_$type, item2);\n\n    if (yComparable !== null && yComparable.compareToObject) {\n      return -yComparable.compareToObject(item1);\n    }\n\n    return Base.compareSimple(item1, item2);\n  };\n\n  ;\n\n  Base.prototype.getHashCode = function () {\n    if (this.$hashCode === undefined) {\n      this.$hashCode = Base.nextHashCode++;\n    }\n\n    return this.$hashCode;\n  };\n\n  Base.getHashCodeStatic = function (obj) {\n    if (obj.getHashCode) {\n      return obj.getHashCode();\n    }\n\n    if (obj.$hashCode !== undefined) {\n      return obj.$hashCode;\n    }\n\n    if (!(typeof obj == \"object\")) {\n      return Type.getPrimitiveHashCode(obj);\n    } else {\n      obj.$hashCode = Base.nextHashCode++;\n      return obj.$hashCode;\n    }\n  };\n\n  Base.prototype.memberwiseClone = function () {\n    var clone;\n\n    try {\n      clone = Object.create(this.$type.InstanceConstructor.prototype);\n    } catch (e) {\n      var Cons =\n      /** @class */\n\n      /*@__PURE__*/\n      function () {\n        function Cons() {}\n\n        return Cons;\n      }();\n\n      Cons.prototype = this.$type.InstanceConstructor.prototype;\n      clone = new Cons();\n    }\n\n    for (var prop in this) {\n      if (this.hasOwnProperty(prop)) {\n        clone[prop] = this[prop];\n      }\n    }\n\n    return clone;\n  };\n\n  Base.referenceEquals = function (a, b) {\n    return a === b || a == null && b == null;\n  };\n\n  Base.getArrayOfValues = function (obj) {\n    var result = [];\n\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        result.push(obj[i]);\n      }\n    }\n\n    return result;\n  };\n\n  Base.getArrayOfProperties = function (obj) {\n    var result = [];\n\n    for (var i in obj) {\n      if (obj.hasOwnProperty(i)) {\n        result.push(i);\n      }\n    }\n\n    return result;\n  };\n\n  ;\n  Base.nextHashCode = 0;\n  return Base;\n}();\n\nexport { Base };\n\nvar Type =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(Type, _super);\n\n  function Type(instanceConstructor, identifier, baseType, interfaces, staticInitializer) {\n    if (baseType === void 0) {\n      baseType = Base.prototype.$type;\n    }\n\n    if (interfaces === void 0) {\n      interfaces = null;\n    }\n\n    if (staticInitializer === void 0) {\n      staticInitializer = null;\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.specializationCache = null;\n    _this._staticInitializer = null;\n    _this.name = null;\n    _this.typeArguments = null;\n    _this.baseType = null;\n    _this.interfaces = null;\n    _this.isEnumType = false;\n    _this._isGenericType = undefined;\n    _this._staticFields = null;\n    _this.isNullable = false;\n    _this._$nullNullable = null;\n    _this.enumInfo = null;\n    _this.specializationCache = {};\n    _this._staticInitializer = staticInitializer;\n    _this._fullName = identifier;\n    _this.name = identifier;\n    _this.InstanceConstructor = instanceConstructor;\n\n    var lastDotIndex = _this.name.lastIndexOf(\".\");\n\n    if (lastDotIndex >= 0) {\n      _this.name = _this.name.substr(lastDotIndex + 1);\n    }\n\n    _this.typeArguments = null;\n    _this.baseType = null;\n    _this.interfaces = null;\n\n    if (baseType) {\n      _this.baseType = baseType;\n    }\n\n    if (interfaces) {\n      _this.interfaces = interfaces;\n    }\n\n    if (_typeIdentifierCache[identifier]) {\n      _this.identifier = _typeIdentifierCache[identifier];\n    } else {\n      _this.identifier = _nextTypeIdentifier++;\n      _typeIdentifierCache[identifier] = _this.identifier;\n    }\n\n    return _this; // rather than always evaluating a function on a type to see if it is an enum\n    // we can just cache it once on the type\n    // if (baseType && Enum && baseType == Enum.prototype.$type) {\n    //     this.isEnumType = true;\n    // }\n  }\n\n  Object.defineProperty(Type.prototype, \"typeName\", {\n    get: function () {\n      return this.name;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Type.prototype, \"fullName\", {\n    get: function () {\n      return this._fullName;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Type.prototype.getSpecId = function (types) {\n    if (types.length === 1) {\n      if (!types[0]) {\n        return \"undef\";\n      } else if (types[0] === -1) {\n        return undefined;\n      } else if (!types[0].typeName) {\n        return types[0].toString();\n      } else if (types[0].stringId) {\n        return types[0].stringId;\n      } else {\n        return types[0].identifier.toString();\n      }\n    }\n\n    var ret = \"\";\n\n    for (var i = 0; i < types.length; i++) {\n      var type = types[i];\n\n      if (!type) {\n        ret += \"undef\";\n      } else if (type == -1) {\n        return undefined;\n      } else if (!type.typeName) {\n        ret += type.toString();\n      } else if (type.stringId) {\n        ret += type.stringId;\n      } else {\n        ret += type.identifier.toString();\n      }\n    }\n\n    return ret;\n  };\n\n  Object.defineProperty(Type.prototype, \"isGenericType\", {\n    get: function () {\n      if (this._isGenericType === undefined) {\n        this._isGenericType = this.name.indexOf(\"$\") >= 0;\n      }\n\n      return this._isGenericType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Type.prototype, \"isGenericTypeDefinition\", {\n    get: function () {\n      return this.typeArguments === null && this.isGenericType;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(Type.prototype, \"genericTypeArguments\", {\n    get: function () {\n      return this.typeArguments;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Type.prototype.getStaticFields = function (type) {\n    if (type === undefined) {\n      type = this;\n    }\n\n    var t = this;\n\n    while (t != null) {\n      if (t === type || t._fullName == type._fullName) {\n        if (t._staticFields == null && t._staticInitializer) {\n          t._staticFields = {};\n\n          t._staticInitializer.apply(t._staticFields, t.typeArguments);\n        }\n\n        return t._staticFields;\n      }\n\n      t = t.baseType;\n    }\n\n    return null;\n  };\n\n  Type.prototype.initSelfReferences = function (replacement) {\n    var i, j;\n\n    if (replacement) {\n      if (this.typeArguments) {\n        var updateCache = false;\n\n        for (j = 0; j < this.typeArguments.length; j++) {\n          var typeArg = this.typeArguments[j];\n\n          if (typeArg == -1) {\n            updateCache = true;\n            this.typeArguments[j] = replacement;\n          } else if (typeArg && typeArg instanceof Type && typeArg.initSelfReferences) {\n            typeArg.initSelfReferences(replacement);\n          }\n        }\n\n        if (updateCache) {\n          var specId = this.getSpecId(this.typeArguments);\n          var ret = this.specializationCache[specId];\n\n          if (!ret) {\n            this.specializationCache[specId] = this;\n          }\n        }\n      }\n    } else {\n      if (this.baseType) {\n        this.baseType.initSelfReferences(this);\n      }\n\n      if (this.interfaces) {\n        for (i = 0; i < this.interfaces.length; i++) {\n          this.interfaces[i].initSelfReferences(this);\n        }\n      }\n    }\n\n    return this;\n  };\n\n  Type.prototype.specialize = function () {\n    var rest = [];\n\n    for (var _i = 0; _i < arguments.length; _i++) {\n      rest[_i] = arguments[_i];\n    }\n\n    var i;\n\n    if (!this.isGenericType) {\n      return this;\n    }\n\n    var specId = this.getSpecId(Array.from(arguments));\n    var ret = this.specializationCache[specId];\n\n    if (ret) {\n      return ret;\n    }\n\n    ret = new Type(this.InstanceConstructor, this._fullName, this.baseType, this.interfaces, this._staticInitializer);\n    ret.specializationCache = this.specializationCache;\n    var placeholders = this.typeArguments;\n    var hasPlaceholders = false; // Make sure the placeholders are actually numbers. If they are types, we are re-specializing an\n    // already specialized type.\n\n    if (placeholders && placeholders.length) {\n      /* going back to how it used to be. we shouldn't assume that the number/order of the arguments\n          relates to the typearguments. this may be an interface that has its type information already\n          and either has placeholders or is a closed type\n      // you can have a mixed bag where some are placeholders and others are not and the\n      // placeholder doesn't have to be the first slot\n      for (i = 0; i < placeholders.length; i++) {\n          if (isFinite(placeholders[ i ])) {\n              hasPlaceholders = true;\n              break;\n          }\n      }*/\n      hasPlaceholders = true;\n    }\n\n    ret.typeArguments = [];\n\n    if (hasPlaceholders) {\n      for (i = 0; i < placeholders.length; i++) {\n        // if the argument being provided is a placeholder index and we already have\n        // a placeholder then keep the index we have. otherwise we're taking the index\n        // of the parent type\n        if (typeof placeholders[i] === \"number\" && isFinite(placeholders[i]) && !isFinite(arguments[placeholders[i]])) {\n          ret.typeArguments[i] = arguments[placeholders[i]];\n        } else {\n          ret.typeArguments[i] = placeholders[i];\n        }\n      }\n    } else {\n      for (i = 0; i < arguments.length; i++) {\n        ret.typeArguments[i] = arguments[i];\n      }\n    } // since the placeholder indexes for the basetype and interfaces implemented are based\n    // on the order of the type arguments for the defining types we should pass its typeargs\n    // and not the outermost type's type arguments which may be different in number and order\n    // than the base type of the base types and interfaces implemented\n\n\n    if (this.baseType && this.baseType.typeArguments) {\n      ret.baseType = this.specialize.apply(this.baseType, ret.typeArguments);\n    }\n\n    if (this.interfaces) {\n      ret.interfaces = [];\n\n      for (i = 0; i < this.interfaces.length; i++) {\n        ret.interfaces[i] = this.specialize.apply(this.interfaces[i], ret.typeArguments);\n      }\n    } // rather than doing this check in various places we could just cache a field on the type\n\n\n    if (this._fullName == \"Nullable$1\" && ret.typeArguments.length == 1) {\n      ret.isNullable = true;\n    } // if this was a self referencing type (e.g. IEquatable<Int32> for Int32 then we won't have the\n    // specId yet because we don't know the type argument. we'll update the cache when we update\n    // the self references. otherwise other types that use self references (but for a different type)\n    // will get and use the wrong type arguments\n\n\n    if (specId) {\n      this.specializationCache[specId] = ret;\n      ret.stringId = ret.generateString();\n    } else {// the self referencing type needs to be able to put itself into the specialization cache\n      // of the original type\n      //ret.specializationCache = this.specializationCache;\n    }\n\n    if (this.InstanceConstructor != null) {\n      var _self = this;\n\n      ret.InstanceConstructor = function () {\n        _self.InstanceConstructor.apply(this, ret.typeArguments.concat(Array.prototype.slice.call(arguments, 0)));\n\n        return this;\n      };\n\n      ret.InstanceConstructor.prototype = this.InstanceConstructor.prototype;\n    }\n\n    return ret;\n  };\n\n  Type.prototype.equals = function (other) {\n    if (!(other instanceof Type)) {\n      return false;\n    }\n\n    if (this.identifier !== other.identifier) {\n      return false;\n    }\n\n    if (this.typeArguments === null && other.typeArguments === null) {\n      return true;\n    }\n\n    if (this.typeArguments === null && other.typeArguments !== null) {\n      return false;\n    }\n\n    if (this.typeArguments !== null && other.typeArguments === null) {\n      return false;\n    }\n\n    if (this.typeArguments.length !== other.typeArguments.length) {\n      return false;\n    }\n\n    for (var i = 0; i < this.typeArguments.length; i++) {\n      //TODO: handle covariance case here.\n      //if (!$.ig.util.canAssign(this.typeArguments[ i ], other.typeArguments[ i ])) {\n      //    return false;\n      //}\n      if (!Type.checkEquals(this.typeArguments[i], other.typeArguments[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  Type.checkEquals = function (type1, type2) {\n    if (type1 instanceof Type) {\n      return type1.equals(type2);\n    } else if (type2 instanceof Type) {\n      return type2.equals(type1);\n    } else {\n      return type1 === type2;\n    }\n  };\n\n  Type.op_Equality = function (type1, type2) {\n    return type1.equals(type2);\n  };\n\n  Type.op_Inequality = function (type1, type2) {\n    return !type1.equals(type2);\n  };\n\n  Type.prototype.generateString = function () {\n    if (!this.typeArguments || !this.typeArguments.length) {\n      return this.identifier.toString();\n    } else {\n      var ret = this.identifier.toString() + \"[\";\n      var first = true;\n\n      for (var i = 0; i < this.typeArguments.length; i++) {\n        if (this.typeArguments[i] == undefined) {\n          continue;\n        }\n\n        if (first) {\n          first = false;\n        } else {\n          ret += \",\";\n        }\n\n        if (this.typeArguments[i].toString) {\n          ret += this.typeArguments[i].toString();\n        } else {\n          ret += this.typeArguments[i].identifier.toString();\n        }\n      }\n\n      ret += \"]\";\n      return ret;\n    }\n  };\n\n  Object.defineProperty(Type.prototype, \"isValueType\", {\n    get: function () {\n      return this.baseType === ValueType.prototype.$type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Type.prototype.isAssignableFrom = function (tOther) {\n    // TODO: Unit test and make sure this is right (especially with generics\n    if (this === tOther) {\n      return true;\n    }\n\n    if (tOther.baseType && this.isAssignableFrom(tOther.baseType)) {\n      return true;\n    }\n\n    if (tOther.interfaces) {\n      for (var i = 0; i < tOther.interfaces.length; i++) {\n        if (this.isAssignableFrom(tOther.interfaces[i])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  };\n\n  Type.prototype.isInstanceOfType = function (value) {\n    return typeCast(this, value) !== null;\n  };\n\n  Object.defineProperty(Type.prototype, \"isPrimitive\", {\n    get: function () {\n      return this === Number_$type || this === Boolean_$type;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Type.canAssign = function (targetType, type) {\n    if (targetType.name === 'Nullable$1' && type.name !== 'Nullable$1') {\n      targetType = Nullable.getUnderlyingType(targetType);\n    }\n\n    return Type.canAssignSimple(targetType, type);\n  };\n\n  Type.canAssignSimple = function (targetType, type) {\n    if (targetType === type || Type.checkEquals(targetType, type)) {\n      return true;\n    }\n\n    if (type.interfaces) {\n      for (var i = 0; i < type.interfaces.length; i++) {\n        if (Type.canAssignSimple(targetType, type.interfaces[i])) {\n          return true;\n        }\n      }\n    }\n\n    if (type.baseType) {\n      return Type.canAssignSimple(targetType, type.baseType);\n    }\n\n    return false;\n  };\n\n  Type.createInstance = function ($t) {\n    if ($t === Number || $t == Number_$type || $t.isEnumType) {\n      return 0;\n    }\n\n    if ($t == Boolean || $t == Boolean_$type) {\n      return false;\n    }\n\n    if ($t.InstanceConstructor) {\n      var result; //result = Object.create((<Type>$t).InstanceConstructor.prototype);\n\n      var C = $t.InstanceConstructor; //(<Type>$t).InstanceConstructor.apply(result, Array.prototype.slice.call(arguments, 1));\n\n      result = new (C.bind.apply(C, __spreadArray([void 0], __read(Array.prototype.slice.call(arguments, 1)), false)))();\n      return result;\n    }\n\n    throw new Error(\"Cannot find instance constructor for the type parameter\");\n  };\n\n  ;\n\n  Type.getDefaultValue = function ($t) {\n    if ($t === Number_$type || $t.isEnumType) {\n      return 0;\n    }\n\n    if ($t == Boolean_$type) {\n      return false;\n    }\n\n    if ($t.baseType === ValueType.$type) {\n      return Type.createInstance($t);\n    }\n\n    return null;\n  };\n\n  ;\n\n  Type.getPrimitiveHashCode = function (v) {\n    var val = typeof v;\n\n    if (val === \"string\" || v instanceof String) {\n      var hash = 0,\n          i,\n          chr,\n          len;\n\n      if (v.length === 0) {\n        return hash;\n      }\n\n      for (i = 0, len = this.length; i < len; i++) {\n        chr = v.charCodeAt(i);\n        /*jslint bitwise: true */\n\n        hash = (hash << 5) - hash + chr;\n        hash |= 0; // Convert to 32bit integer\n      }\n\n      return hash;\n    } else if (val === \"boolean\" || v instanceof Boolean) {\n      return +v;\n    } else {\n      return v;\n    }\n  }; // static mark(t: Function, name: string,\n  //     baseType: Type = Base.prototype.$type, \n  //     interfaces: Type[] = null, \n  //     staticInitializer: () => void = null) {\n  //     t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\n  //     (<any>t).$type = t.prototype.$type;\n  // }\n\n\n  Type.decodePropType = function (val) {\n    if (val === 0) {\n      return Boolean_$type;\n    } else if (val === 1) {\n      return Number_$type;\n    } else if (val === 2) {\n      return String_$type;\n    } else if (val === 3) {\n      return Date_$type;\n    } else {\n      return val;\n    }\n  };\n\n  return Type;\n}(Base);\n\nexport { Type };\nexport function markDep(depProp, PropMeta, t, changedFunction, props) {\n  var names = [];\n  var currName = \"\";\n  var currOpts = [];\n  var hasDefaultValue = false;\n  var defaultValue = null;\n  var propType = null;\n  var changeHandler = null;\n  var setterFunc = null;\n  var getterFunc = null;\n  var aliasName = null;\n  var propertyAlias = null;\n\n  var _loop_1 = function () {\n    if (i % 2 == 0) {\n      currName = props[i];\n\n      if (currName.indexOf(\":\") >= 0) {\n        var parts = currName.split(':');\n\n        if (parts.length == 2) {\n          currName = parts[0];\n          aliasName = parts[1];\n          propertyAlias = currName.substring(0, 1).toLowerCase() + currName.substring(1) + \"Property\";\n        } else {\n          currName = parts[0];\n          aliasName = parts[1];\n\n          if (aliasName.length == 0) {\n            aliasName = currName.substring(0, 1).toLowerCase() + currName.substring(1);\n          }\n\n          propertyAlias = parts[2];\n        }\n      } else {\n        aliasName = currName.substring(0, 1).toLowerCase() + currName.substring(1);\n        propertyAlias = aliasName + \"Property\";\n      }\n\n      names.push(currName);\n    } else {\n      currOpts = props[i];\n\n      if (currOpts.length == 2) {\n        hasDefaultValue = true;\n        defaultValue = currOpts[1];\n        propType = Type.decodePropType(currOpts[0]);\n      } else {\n        hasDefaultValue = false;\n        propType = Type.decodePropType(currOpts[0]);\n      }\n\n      var changedName_1 = currName;\n\n      changeHandler = function (o, a) {\n        o[changedFunction].call(o, changedName_1, a.oldValue, a.newValue);\n      };\n\n      var meta = null;\n\n      if (hasDefaultValue) {\n        meta = PropMeta.createWithDefaultAndCallback(defaultValue, changeHandler);\n      } else {\n        meta = PropMeta.createWithCallback(changeHandler);\n      }\n\n      var dp_1 = depProp.registerAlt(currName, propType, t.$type, meta);\n\n      setterFunc = function (v) {\n        this.setValueAlt(dp_1, v);\n      };\n\n      if (propType.isEnumType) {\n        getterFunc = function () {\n          return typeGetValue(this.getValueAlt(dp_1));\n        };\n      } else {\n        getterFunc = function () {\n          return this.getValueAlt(dp_1);\n        };\n      }\n\n      Object.defineProperty(t.prototype, aliasName, {\n        set: setterFunc,\n        get: getterFunc,\n        configurable: true\n      });\n      t[propertyAlias] = dp_1;\n    }\n  }; //debugger;\n\n\n  for (var i = 0; i < props.length; i++) {\n    _loop_1();\n  } // let superClass = (<any>t).$type.baseType;\n  // if (superClass !== null && superClass !== undefined) {\n  //     let superNames = superClass.InstanceConstructor.$$p;\n  //     if (superNames) {\n  //         for (var j = superNames.length - 1; j >= 0; j--) {\n  //             names.unshift(superNames[j]);\n  //         }\n  //     }\n  // }\n  //(<any>t).$$p = names;\n\n\n  return names;\n}\nexport function typeGetValue(v) {\n  if (v !== null && v.$type && v.$type.isEnumType) {\n    return v.value;\n  }\n\n  return v;\n}\nexport function typeCast(targetType, obj) {\n  if (obj === undefined || obj === null) {\n    return null;\n  }\n\n  if (targetType === Array) {\n    return obj instanceof Array ? obj : null;\n  }\n\n  if (targetType === String) {\n    targetType = String_$type;\n  }\n\n  if (targetType === Number) {\n    targetType = Number_$type;\n  }\n\n  if (targetType === Boolean) {\n    targetType = Boolean_$type;\n  }\n\n  if (targetType === Date) {\n    targetType = Date_$type;\n  }\n\n  var type = obj;\n\n  if (obj.$type) {\n    type = obj.$type;\n  } else if (typeof obj === 'number') {\n    type = targetType === Number ? Number : Number_$type;\n  } else if (typeof obj === 'string') {\n    type = String_$type;\n  } else if (typeof obj === 'boolean') {\n    type = Boolean_$type;\n  } else if (obj instanceof Date) {\n    type = Date_$type;\n  } else if (obj instanceof Array) {\n    type = Array_$type;\n  }\n\n  if (Type.canAssignSimple(targetType, type)) {\n    return obj;\n  }\n\n  if (targetType.name === 'Nullable$1' && type.name !== 'Nullable$1') {\n    targetType = Nullable.getUnderlyingType(targetType);\n\n    if (Type.canAssignSimple(targetType, type)) {\n      return toNullable(targetType, obj);\n    }\n\n    return toNullable(targetType, null);\n  }\n\n  return null;\n}\nexport function typeCastObjTo$t($t, v) {\n  var shouldWrap = false;\n\n  if ($t.isNullable) {\n    $t = $t.typeArguments[0];\n    shouldWrap = true;\n  }\n\n  if (v !== null && $t.isEnumType) {\n    v = v.value;\n  }\n\n  return shouldWrap ? toNullable($t, v) : v;\n}\nvar pendingStaticCtors = /*@__PURE__*/new Array();\nexport function markStruct(t, name, baseType, interfaces, staticInitializer) {\n  if (baseType === void 0) {\n    baseType = ValueType.prototype.$type;\n  }\n\n  if (interfaces === void 0) {\n    interfaces = null;\n  }\n\n  if (staticInitializer === void 0) {\n    staticInitializer = null;\n  }\n\n  t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer); //TODO: do we need/want a flag on the function like we have in js?\n\n  if (typeof t.staticInit === \"function\") {\n    pendingStaticCtors.push(t);\n  }\n\n  t.$type = t.prototype.$type;\n  t.$ = t.prototype.$type;\n  return t.prototype.$type;\n}\n/* #__PURE__ */\n\nexport function markEnum(name, encodedDef) {\n  var t = new Type(null, name, Base.prototype.$type, [IConvertible_$type]);\n  t.isEnumType = true;\n  var parts = encodedDef.split(\"|\");\n  var names = [];\n  var actualNames = [];\n  var namesValuesMap = {};\n  var actualNamesValuesMap = {};\n\n  for (var i = 0; i < parts.length; i++) {\n    var subParts = parts[i].split(\",\");\n    var nameParts = subParts[0].split(\":\");\n    var name_1 = nameParts[0];\n    var actualName = nameParts[0];\n\n    if (nameParts.length > 1) {\n      actualName = nameParts[1];\n    }\n\n    names.push(name_1);\n    actualNames.push(actualName); //TODO: did we support string enums??\n\n    namesValuesMap[name_1] = parseInt(subParts[1]);\n    actualNamesValuesMap[actualName] = parseInt(subParts[1]);\n  }\n\n  var info = {\n    names: names,\n    actualNames: actualNames,\n    namesValuesMap: namesValuesMap,\n    actualNamesValuesMap: actualNamesValuesMap\n  };\n  t.enumInfo = info;\n  return t;\n}\nvar markTypeInitialized = false;\nexport function markType(t, name, baseType, interfaces, staticInitializer) {\n  if (baseType === void 0) {\n    baseType = Base.prototype.$type;\n  }\n\n  if (interfaces === void 0) {\n    interfaces = null;\n  }\n\n  if (staticInitializer === void 0) {\n    staticInitializer = null;\n  }\n\n  t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\n\n  if (!markTypeInitialized) {\n    markTypeInitialized = true;\n    markType(Type, \"Type\");\n    markType(Base, \"Base\", null);\n  } //TODO: do we need/want a flag on the function like we have in js?\n\n\n  if (typeof t.staticInit === \"function\") {\n    pendingStaticCtors.push(t);\n  } //t.prototype.$ = t.prototype.$type;\n\n\n  t.$type = t.prototype.$type;\n  t.$ = t.prototype.$type;\n  return t.prototype.$type;\n}\nexport function callStaticConstructors() {\n  var e_1, _a;\n\n  if (pendingStaticCtors.length > 0) {\n    //TODO: is the copy of the array needed? \n    var classes = Array.from(pendingStaticCtors);\n    pendingStaticCtors.length = 0;\n\n    try {\n      for (var classes_1 = __values(classes), classes_1_1 = classes_1.next(); !classes_1_1.done; classes_1_1 = classes_1.next()) {\n        var c = classes_1_1.value;\n        c.staticInit();\n      }\n    } catch (e_1_1) {\n      e_1 = {\n        error: e_1_1\n      };\n    } finally {\n      try {\n        if (classes_1_1 && !classes_1_1.done && (_a = classes_1.return)) _a.call(classes_1);\n      } finally {\n        if (e_1) throw e_1.error;\n      }\n    }\n  }\n}\nexport var IConvertible_$type = /*@__PURE__*/new Type(null, \"IConvertible\");\n\nvar Enum =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(Enum, _super);\n\n  function Enum() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Enum.$t = markType(Enum, \"Enum\");\n  return Enum;\n}(Base);\n\nexport { Enum };\n\nvar EnumBox =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(EnumBox, _super);\n\n  function EnumBox(value, type) {\n    var _this = _super.call(this) || this;\n\n    _this.value = value;\n    _this.$type = type;\n    return _this;\n  }\n\n  EnumBox.prototype.getHashCode = function () {\n    return this.value;\n  }; // TODO: Fill out remaining IConvertible implementation\n\n\n  EnumBox.prototype.toDouble = function (provider) {\n    return this.value;\n  };\n\n  EnumBox.prototype.toString = function () {\n    return EnumUtil.getName(this.$type, this.value);\n  };\n\n  return EnumBox;\n}(Enum);\n\nexport function getBoxIfEnum($t, v) {\n  if (v !== null && $t) {\n    // TODO: Remove the $t check here and fix the null ref issue\n    if ($t.isNullable) {\n      $t = $t.typeArguments[0];\n    }\n\n    if ($t.isEnumType) {\n      return enumGetBox($t, v);\n    }\n  }\n\n  return v;\n}\n;\nexport function enumGetBox($t, v) {\n  if (!$t._boxes) {\n    $t._boxes = {};\n  }\n\n  if (!$t._boxes[v]) {\n    $t._boxes[v] = new EnumBox(v, $t);\n  }\n\n  return $t._boxes[v];\n}\n\nvar EnumUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function EnumUtil() {}\n\n  EnumUtil.getValueFromName = function (values, enumType, value, ignoreCase) {\n    if (values.hasOwnProperty(value)) {\n      return enumGetBox(enumType, values[value]);\n    } else if (ignoreCase) {\n      var upper = value.toUpperCase();\n\n      for (var x in values) {\n        if (x.toUpperCase() === upper) {\n          return enumGetBox(enumType, values[x]);\n        }\n      }\n    } else {\n      // A.S. Nov 4, 2016 Adjusted to handle case where leading char is _.\n      var firstChar = value.charAt(0);\n\n      if (firstChar != \"_\") {\n        value = firstChar.toLowerCase() + value.substr(1);\n      } else {\n        value = \"_\" + value.charAt(1).toLowerCase() + value.substr(2);\n      }\n\n      if (values.hasOwnProperty(value)) {\n        return enumGetBox(enumType, values[value]);\n      }\n    }\n\n    return null;\n  };\n\n  EnumUtil.parse = function (enumType, value, ignoreCase) {\n    //var info = Type.getDefinedNameAndNamespace(enumType.fullName);\n    //if (Type.canAssign(this.$type, enumType)) \n    {\n      //var p = info.namespace[ info.name ].prototype;\n      var values = enumType.isEnumType ? enumType.enumInfo.actualNamesValuesMap : enumType.InstanceConstructor.prototype;\n      var val = EnumUtil.getValueFromName(values, enumType, value, ignoreCase);\n\n      if (val !== null) {\n        return val;\n      }\n\n      if (enumType.isEnumType) {\n        values = enumType.enumInfo.namesValuesMap;\n        var val_1 = EnumUtil.getValueFromName(values, enumType, value, ignoreCase);\n\n        if (val_1 !== null) {\n          return val_1;\n        }\n      }\n    }\n    throw new Error(\"Invalid \" + enumType.name + \" value: \" + value);\n  }; // static $getName(value: number): string {\n  // }\n  // static $value(): number {\n  // }\n  //private _v: number;\n\n\n  EnumUtil.enumHasFlag = function (value, flag) {\n    /*jslint bitwise: true */\n    return (value & flag) === flag;\n  };\n\n  EnumUtil.toString = function (enumType, value) {\n    return EnumUtil.getName(enumType, value);\n  };\n\n  EnumUtil.getName = function (enumType, v) {\n    if (enumType._nameMap == undefined) {\n      var vals = EnumUtil.getValues(enumType);\n      var names = enumType.isEnumType ? enumType.enumInfo.names : EnumUtil.getNames(enumType);\n      var map = {};\n\n      for (var i = 0; i < vals.length; i++) {\n        map[vals[i]] = names[i];\n      }\n\n      enumType._nameMap = map;\n    }\n\n    var lookup = enumType._nameMap;\n    return lookup[v];\n  };\n\n  EnumUtil.getFlaggedName = function (enumType, v, getName) {\n    var _this = this;\n\n    var names = [];\n    var original = v;\n    var zeroValueName;\n    var value;\n    var values = [];\n\n    for (var p in this) {\n      if (this.hasOwnProperty(p)) {\n        value = enumType[p];\n\n        if (typeof enumType[p] == \"number\") {\n          values.push(p);\n        }\n      }\n    }\n\n    values.sort(function (a, b) {\n      return _this[a] - _this[b];\n    });\n\n    for (var i = values.length - 1; i >= 0; i--) {\n      value = this[values[i]];\n\n      if (value === 0) {\n        zeroValueName = getName(0);\n      }\n      /*jslint bitwise: true */\n      else if ((v & value) === value) {\n        v -= value;\n        names.unshift(getName(value));\n      }\n    }\n\n    if (v !== 0) {\n      return original.toString();\n    }\n\n    if (original !== 0) {\n      return names.join(\", \");\n    }\n\n    return zeroValueName || \"0\";\n  };\n\n  EnumUtil.getValues = function ($t) {\n    var result = [];\n\n    if ($t.isEnumType) {\n      for (var i = 0; i < $t.enumInfo.actualNames.length; i++) {\n        result.push($t.enumInfo.actualNamesValuesMap[$t.enumInfo.actualNames[i]]);\n      }\n\n      return result;\n    }\n\n    var p = $t.isEnumType ? $t.enumInfo.actualNames : $t.InstanceConstructor.prototype;\n\n    for (var member in p) {\n      if (p.hasOwnProperty(member)) {\n        if (typeof p[member] === \"number\") {\n          result.push(p[member]);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  EnumUtil.getNames = function ($t) {\n    var result = [];\n\n    if ($t.isEnumType) {\n      for (var i = 0; i < $t.enumInfo.actualNames.length; i++) {\n        result.push($t.enumInfo.actualNames[i]);\n      }\n\n      return result;\n    }\n\n    var p = $t.isEnumType ? $t.enumInfo.actualNames : $t.InstanceConstructor.prototype;\n\n    for (var member in p) {\n      if (p.hasOwnProperty(member)) {\n        if (typeof p[member] === \"number\") {\n          result.push(member);\n        }\n      }\n    }\n\n    return result;\n  };\n\n  EnumUtil.getEnumValue = function ($t, v) {\n    if (v !== null) {\n      if (typeof v === \"number\") {\n        return v;\n      } else {\n        return v.value;\n      }\n    }\n\n    return 0;\n  };\n\n  EnumUtil.isDefined = function ($t, value) {\n    value = typeGetValue(value);\n    var p = $t.isEnumType ? $t.enumInfo.actualNamesValuesMap : $t.InstanceConstructor.prototype;\n\n    for (var member in p) {\n      if (p.hasOwnProperty(member)) {\n        if (p[member] === value) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }; // TODO: Fill out remaining IConvertible implementation\n\n\n  EnumUtil.toDouble = function (enumType, value, provider) {\n    return value.value;\n  };\n\n  EnumUtil.toObject = function ($t, value) {\n    return value;\n  };\n\n  EnumUtil.tryParse$1 = function ($tEnum, value, ignoreCase, result) {\n    try {\n      return {\n        ret: true,\n        p2: typeGetValue(EnumUtil.parse($tEnum, value, ignoreCase))\n      };\n    } catch (e) {\n      result = Type.createInstance($tEnum);\n      return {\n        ret: false,\n        p2: result\n      };\n    }\n  };\n\n  return EnumUtil;\n}();\n\nexport { EnumUtil };\n\nvar ValueType =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ValueType, _super);\n\n  function ValueType() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ValueType.$t = markType(ValueType, \"ValueType\");\n  return ValueType;\n}(Base);\n\nexport { ValueType };\n\nvar Nullable =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(Nullable, _super);\n\n  function Nullable() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Nullable.getUnderlyingType = function (nullableType) {\n    if (nullableType.isGenericType !== undefined && nullableType.isGenericType && !nullableType.isGenericTypeDefinition && Nullable$1.prototype.$type.typeName == nullableType.typeName) {\n      return nullableType.genericTypeArguments[0];\n    }\n\n    return null;\n  };\n\n  Nullable.$t = markType(Nullable, \"Nullable\");\n  return Nullable;\n}(Base);\n\nexport { Nullable };\n\nvar Nullable$1 =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(Nullable$1, _super);\n\n  function Nullable$1($t, value) {\n    var _this = _super.call(this) || this;\n\n    _this.$t = null;\n    _this._value = null;\n    _this.isNullable = true;\n    _this.$t = $t;\n    _this.$type = _this.$type.specialize(_this.$t);\n\n    if (value !== undefined) {\n      _this._value = value;\n    }\n\n    return _this;\n  }\n\n  Nullable$1.nullableEquals = function (v1, v2) {\n    /*jshint eqnull:true */\n    var v1IsNull = v1 == null || !!v1.isNullable && !v1.hasValue;\n    var v2IsNull = v2 == null || !!v2.isNullable && !v2.hasValue;\n\n    if (v1IsNull && v2IsNull) {\n      return true;\n    }\n\n    if (v1IsNull != v2IsNull) {\n      return false;\n    }\n\n    var val1 = v1;\n    var val2 = v2;\n\n    if (v1.isNullable) {\n      val1 = v1.value;\n    }\n\n    if (v2.isNullable) {\n      val2 = v2.value;\n    }\n\n    return val1 == val2;\n  };\n\n  Nullable$1.prototype.equals = function (value) {\n    return Nullable$1.nullableEquals(this, value);\n  };\n\n  Nullable$1.prototype.getHashCode = function () {\n    if (this._value === null) {\n      return 0;\n    }\n\n    if (this._value[\"getHashCode\"] !== undefined) {\n      return this._value.getHashCode();\n    }\n\n    return Type.getPrimitiveHashCode(this._value);\n  };\n\n  Object.defineProperty(Nullable$1.prototype, \"hasValue\", {\n    get: function () {\n      return this._value !== null;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Nullable$1.prototype.toString = function () {\n    return this._value === null ? \"\" : this._value.toString();\n  };\n\n  Object.defineProperty(Nullable$1.prototype, \"value\", {\n    get: function () {\n      return this._value;\n    },\n    set: function (value) {\n      this._value = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  Nullable$1.prototype.getValueOrDefault = function () {\n    if (this.hasValue) {\n      return this._value;\n    } else {\n      return this.getDefaultValue();\n    }\n  };\n\n  Nullable$1.prototype.getDefaultValue = function () {\n    if (Type.canAssign(Number_$type, this.$t)) {\n      return 0;\n    } else if (Type.canAssign(Boolean_$type, this.$t)) {\n      return false;\n    } else if (this.$t.baseType == ValueType.prototype.$type) {\n      return Type.createInstance(this.$t);\n    } else {\n      return null;\n    }\n  };\n\n  Nullable$1.prototype.getValueOrDefault1 = function (defaultValue) {\n    if (this.hasValue) {\n      return this._value;\n    } else {\n      return defaultValue;\n    }\n  };\n\n  Nullable$1.prototype.preIncrement = function () {\n    if (!this.hasValue) {\n      return this;\n    }\n\n    this._value = this._value + 1;\n    return this;\n  };\n\n  Nullable$1.prototype.preDecrement = function () {\n    if (!this.hasValue) {\n      return this;\n    }\n\n    this._value = this._value - 1;\n    return this;\n  };\n\n  Nullable$1.prototype.postIncrement = function () {\n    if (!this.hasValue) {\n      return this;\n    }\n\n    var originalValue = this._value;\n    this._value = this._value + 1;\n    return new Nullable$1(this.$t, originalValue);\n  };\n\n  Nullable$1.prototype.postDecrement = function () {\n    if (!this.hasValue) {\n      return this;\n    }\n\n    var originalValue = this._value;\n    this._value = this._value - 1;\n    return new Nullable$1(this.$t, originalValue);\n  };\n\n  Nullable$1.$t = markType(Nullable$1, \"Nullable$1\");\n  return Nullable$1;\n}(Base);\n\nexport { Nullable$1 };\nexport function toNullable(t, value) {\n  if (value == null) {\n    return t._$nullNullable || (t._$nullNullable = new Nullable$1(t, null));\n  } else if (value.isNullable) {\n    return value;\n  }\n\n  return new Nullable$1(t, value);\n}\nexport var IComparable_$type = /*@__PURE__*/new Type(null, \"IComparable\");\nexport var IComparable$1_$type = /*@__PURE__*/new Type(null, \"IComparable$1\");\nexport var IEquatable$1_$type = /*@__PURE__*/new Type(null, \"IEquatable$1\");\nexport var INotifyPropertyChanged_$type = /*@__PURE__*/new Type(null, \"INotifyPropertyChanged\");\n\nvar PropertyChangedEventArgs =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(PropertyChangedEventArgs, _super);\n\n  function PropertyChangedEventArgs(propertyName) {\n    var _this = _super.call(this) || this;\n\n    _this._propertyName = null;\n    _this._propertyName = propertyName;\n    return _this;\n  }\n\n  Object.defineProperty(PropertyChangedEventArgs.prototype, \"propertyName\", {\n    get: function () {\n      return this._propertyName;\n    },\n    set: function (value) {\n      this._propertyName = value;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  PropertyChangedEventArgs.$t = markType(PropertyChangedEventArgs, \"PropertyChangedEventArgs\");\n  return PropertyChangedEventArgs;\n}(Base);\n\nexport { PropertyChangedEventArgs };\n\nvar IteratorWrapper =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IteratorWrapper(inner, getNew) {\n    this._inner = null;\n    this._getNew = null;\n    this._hasNext = true;\n    this._current = null;\n    this._inner = inner;\n    this._getNew = getNew;\n  }\n\n  IteratorWrapper.prototype.moveNext = function () {\n    var next = this._inner.next();\n\n    this._hasNext = !next.done;\n    this._current = next.value;\n    return this._hasNext;\n  };\n\n  Object.defineProperty(IteratorWrapper.prototype, \"current\", {\n    get: function () {\n      return this._current;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IteratorWrapper.prototype, \"currentObject\", {\n    get: function () {\n      return this._current;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IteratorWrapper.prototype.dispose = function () {};\n\n  IteratorWrapper.prototype.reset = function () {\n    this._inner = this._getNew();\n    this._current = null;\n    this._hasNext = true;\n  };\n\n  return IteratorWrapper;\n}();\n\nexport { IteratorWrapper };\n\nvar IterableWrapper =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function IterableWrapper(inner) {\n    this._inner = null;\n    this._inner = inner;\n  }\n\n  IterableWrapper.prototype.getEnumerator = function () {\n    var _this = this;\n\n    return new IteratorWrapper(this._inner()[Symbol.iterator](), function () {\n      return _this._inner()[Symbol.iterator]();\n    });\n  };\n\n  IterableWrapper.prototype.getEnumeratorObject = function () {\n    var _this = this;\n\n    return new IteratorWrapper(this._inner()[Symbol.iterator](), function () {\n      return _this._inner()[Symbol.iterator]();\n    });\n  };\n\n  return IterableWrapper;\n}();\n\nexport { IterableWrapper };\n\nvar EnumeratorWrapper =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function EnumeratorWrapper(inner) {\n    this._inner = null;\n    this._inner = inner;\n  }\n\n  EnumeratorWrapper.prototype.next = function () {\n    var done = !this._inner.moveNext();\n    var value = null;\n\n    if (!done) {\n      value = this._inner.current;\n    }\n\n    return {\n      done: done,\n      value: value\n    };\n  };\n\n  return EnumeratorWrapper;\n}();\n\nexport { EnumeratorWrapper };\n\nvar EnumeratorWrapperObject =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function EnumeratorWrapperObject(inner) {\n    this._inner = null;\n    this._inner = inner;\n  }\n\n  EnumeratorWrapperObject.prototype.next = function () {\n    var done = !this._inner.moveNext();\n    var value = null;\n\n    if (!done) {\n      value = this._inner.currentObject;\n    }\n\n    return {\n      done: done,\n      value: value\n    };\n  };\n\n  return EnumeratorWrapperObject;\n}();\n\nexport { EnumeratorWrapperObject };\nexport function getEn(arr) {\n  var arr_1, arr_1_1, item, e_2_1;\n\n  var e_2, _a;\n\n  return __generator(this, function (_b) {\n    switch (_b.label) {\n      case 0:\n        _b.trys.push([0, 5, 6, 7]);\n\n        arr_1 = __values(arr), arr_1_1 = arr_1.next();\n        _b.label = 1;\n\n      case 1:\n        if (!!arr_1_1.done) return [3\n        /*break*/\n        , 4];\n        item = arr_1_1.value;\n        return [4\n        /*yield*/\n        , item];\n\n      case 2:\n        _b.sent();\n\n        _b.label = 3;\n\n      case 3:\n        arr_1_1 = arr_1.next();\n        return [3\n        /*break*/\n        , 1];\n\n      case 4:\n        return [3\n        /*break*/\n        , 7];\n\n      case 5:\n        e_2_1 = _b.sent();\n        e_2 = {\n          error: e_2_1\n        };\n        return [3\n        /*break*/\n        , 7];\n\n      case 6:\n        try {\n          if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return)) _a.call(arr_1);\n        } finally {\n          if (e_2) throw e_2.error;\n        }\n\n        return [7\n        /*endfinally*/\n        ];\n\n      case 7:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\nexport function getEnumeratorObject(en) {\n  if (en instanceof Array || Array.isArray(en)) {\n    var arr_2 = en;\n    return new IteratorWrapper(getEn(arr_2), function () {\n      return getEn(arr_2);\n    });\n  }\n\n  return en.getEnumeratorObject();\n}\nexport function getEnumerator(en) {\n  if (en instanceof Array || Array.isArray(en)) {\n    var arr_3 = en;\n    return new IteratorWrapper(getEn(arr_3), function () {\n      return getEn(arr_3);\n    });\n  }\n\n  return en.getEnumerator();\n}\n\nvar EnumerableWrapper =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function EnumerableWrapper(inner) {\n    this._inner = null;\n    this._inner = inner;\n  }\n\n  EnumerableWrapper.prototype[Symbol.iterator] = function () {\n    return new EnumeratorWrapper(getEnumerator(this._inner));\n  };\n\n  return EnumerableWrapper;\n}();\n\nexport { EnumerableWrapper };\n\nvar EnumerableWrapperObject =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function EnumerableWrapperObject(inner) {\n    this._inner = null;\n    this._inner = inner;\n  }\n\n  EnumerableWrapperObject.prototype[Symbol.iterator] = function () {\n    return new EnumeratorWrapperObject(getEnumeratorObject(this._inner));\n  };\n\n  return EnumerableWrapperObject;\n}();\n\nexport { EnumerableWrapperObject };\nexport function toEnum(v) {\n  return new IterableWrapper(v);\n}\nexport function fromEnum(v) {\n  return new EnumerableWrapper(v);\n}\nexport function toEn(v) {\n  return new IterableWrapper(v);\n}\nexport function fromEn(v) {\n  return new EnumerableWrapperObject(v);\n}\nexport function fromDict(v) {\n  var v_1, v_1_1, item, _a, key, value, e_3_1;\n\n  var e_3, _b;\n\n  return __generator(this, function (_c) {\n    switch (_c.label) {\n      case 0:\n        _c.trys.push([0, 5, 6, 7]);\n\n        v_1 = __values(v), v_1_1 = v_1.next();\n        _c.label = 1;\n\n      case 1:\n        if (!!v_1_1.done) return [3\n        /*break*/\n        , 4];\n        item = v_1_1.value;\n        _a = __read(item, 2), key = _a[0], value = _a[1];\n        return [4\n        /*yield*/\n        , {\n          key: key,\n          value: value\n        }];\n\n      case 2:\n        _c.sent();\n\n        _c.label = 3;\n\n      case 3:\n        v_1_1 = v_1.next();\n        return [3\n        /*break*/\n        , 1];\n\n      case 4:\n        return [3\n        /*break*/\n        , 7];\n\n      case 5:\n        e_3_1 = _c.sent();\n        e_3 = {\n          error: e_3_1\n        };\n        return [3\n        /*break*/\n        , 7];\n\n      case 6:\n        try {\n          if (v_1_1 && !v_1_1.done && (_b = v_1.return)) _b.call(v_1);\n        } finally {\n          if (e_3) throw e_3.error;\n        }\n\n        return [7\n        /*endfinally*/\n        ];\n\n      case 7:\n        return [2\n        /*return*/\n        ];\n    }\n  });\n}\nexport var Number_$type = /*@__PURE__*/new Type(Number, \"Number\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\nexport var String_$type = /*@__PURE__*/new Type(String, \"String\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\nexport var Date_$type = /*@__PURE__*/new Type(Date, \"Date\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\nexport var Boolean_$type = /*@__PURE__*/new Type(Boolean, \"Boolean\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\nexport var Void_$type = /*@__PURE__*/new Type(null, \"Void\", Base.prototype.$type);\nexport var n$ = Number_$type;\nexport var s$ = String_$type;\nexport var d$ = Date_$type;\nexport var b$ = Boolean_$type;\nexport var v$ = Void_$type;\nexport var Delegate_$type = /*@__PURE__*/new Type(null, \"Delegate\");\nexport function runOn(target, func) {\n  var self = func;\n\n  var ret = function () {\n    return self.apply(target, arguments);\n  };\n\n  ret.original = self;\n  ret.target = target;\n  return ret;\n}\nexport function delegateCombine(del1, del2) {\n  if (!del1) {\n    return del2;\n  }\n\n  if (!del2) {\n    return del1;\n  }\n\n  var ret = function () {\n    del1.apply(null, arguments);\n    return del2.apply(null, arguments);\n  };\n\n  ret.enumerate = function (arr) {\n    if (del1) {\n      if (del1.enumerate) {\n        del1.enumerate(arr);\n      } else {\n        arr.push(del1);\n      }\n    }\n\n    if (del2) {\n      if (del2.enumerate) {\n        del2.enumerate(arr);\n      } else {\n        arr.push(del2);\n      }\n    }\n  };\n\n  return ret;\n}\n;\nexport function delegateRemove(del1, del2) {\n  if (!del1) {\n    return null;\n  }\n\n  if (!del2) {\n    return del1;\n  }\n\n  var arr = [];\n  var del = null;\n\n  if (del1.enumerate) {\n    del1.enumerate(arr);\n  } else {\n    arr.push(del1);\n  }\n\n  for (var i = 0; i < arr.length; i++) {\n    if (del2.original) {\n      if (arr[i].original == del2.original && arr[i].target == del2.target) {\n        continue;\n      }\n    }\n\n    if (arr[i] == del2) {\n      continue;\n    }\n\n    del = delegateCombine(del, arr[i]);\n  }\n\n  return del;\n}\n;\nexport var IDisposable_$type = /*@__PURE__*/new Type(null, 'IDisposable');\nexport var IEnumerable_$type = /*@__PURE__*/new Type(null, \"IEnumerable\");\nexport var IEnumerator_$type = /*@__PURE__*/new Type(null, \"IEnumerator\");\nexport var IEqualityComparer$1_$type = /*@__PURE__*/new Type(null, \"IEqualityComparer$1\");\nexport var IEqualityComparer_$type = /*@__PURE__*/new Type(null, \"IEqualityComparer\");\nexport var ICollection_$type = /*@__PURE__*/new Type(null, \"ICollection\", null, [IEnumerable_$type]);\nexport var IList_$type = /*@__PURE__*/new Type(null, \"IList\", null, [IEnumerable_$type, ICollection_$type]);\nexport var IEnumerable$1_$type = /*@__PURE__*/new Type(null, \"IEnumerable$1\", null, [IEnumerable_$type]);\nexport var ICollection$1_$type = /*@__PURE__*/new Type(null, \"ICollection$1\", null, [/*@__PURE__*/IEnumerable$1_$type.specialize(0), IEnumerable_$type]);\nexport var IList$1_$type = /*@__PURE__*/new Type(null, \"IList$1\", null, [/*@__PURE__*/ICollection$1_$type.specialize(0), /*@__PURE__*/IEnumerable$1_$type.specialize(0), IEnumerable_$type]);\nexport var IEnumerator$1_$type = /*@__PURE__*/new Type(null, \"IEnumerator$1\", null, [IEnumerator_$type, IDisposable_$type]);\nexport var IDictionary_$type = /*@__PURE__*/new Type(null, \"IDictionary\");\n\nvar BaseError =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(BaseError, _super);\n\n  function BaseError(initNumber) {\n    if (initNumber === void 0) {\n      initNumber = -1;\n    }\n\n    var rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this._message = null;\n    _this._innerException = null;\n\n    if (initNumber >= 0) {\n      switch (initNumber) {\n        case 1:\n          _this.init1.apply(_this, arguments);\n\n          break;\n\n        case 2:\n          _this.init2.apply(_this, arguments);\n\n          break;\n      }\n    }\n\n    return _this;\n  }\n\n  BaseError.prototype.get_message = function () {\n    return this._message;\n  };\n\n  Object.defineProperty(BaseError.prototype, \"message\", {\n    get: function () {\n      return this.get_message();\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(BaseError.prototype, \"innerException\", {\n    get: function () {\n      return this._innerException;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  BaseError.prototype.init1 = function (initNumber, message) {\n    this._message = message;\n  };\n\n  BaseError.prototype.init2 = function (initNumber, message, innerException) {\n    this._message = message;\n    this._innerException = innerException;\n  };\n\n  BaseError.prototype.toString = function () {\n    return this._message;\n  };\n\n  BaseError.$t = markType(BaseError, \"BaseError\");\n  return BaseError;\n}(Base);\n\nexport { BaseError };\n\nvar SystemException =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(SystemException, _super);\n\n  function SystemException(initNumber) {\n    var rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this, 0) || this;\n\n    if (initNumber > 0) {\n      switch (initNumber) {\n        case 1:\n          _this.init1.apply(_this, arguments);\n\n          break;\n\n        case 2:\n          _this.init2.apply(_this, arguments);\n\n          break;\n      }\n\n      return _this;\n    }\n\n    return _this; //super(0);\n  }\n\n  SystemException.prototype.init1 = function (initNumber, message) {\n    _super.prototype.init1.call(this, 1, message);\n  };\n\n  SystemException.prototype.init2 = function (initNumber, message, innerException) {\n    _super.prototype.init2.call(this, 2, message, innerException);\n  };\n\n  SystemException.$t = markType(SystemException, \"SystemException\", BaseError.prototype.$type);\n  return SystemException;\n}(BaseError);\n\nexport { SystemException };\n\nvar NotSupportedException =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(NotSupportedException, _super);\n\n  function NotSupportedException(initNumber) {\n    var rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this, 0) || this;\n\n    if (initNumber > 0) {\n      switch (initNumber) {\n        case 1:\n          _this.init1.apply(_this, arguments);\n\n          break;\n\n        case 2:\n          _this.init2.apply(_this, arguments);\n\n          break;\n      }\n\n      return _this;\n    }\n\n    return _this;\n  }\n\n  NotSupportedException.prototype.init1 = function (initNumber, message) {\n    _super.prototype.init1.call(this, 1, message);\n  };\n\n  NotSupportedException.prototype.init2 = function (initNumber, message, innerException) {\n    _super.prototype.init2.call(this, 2, message, innerException);\n  };\n\n  NotSupportedException.$t = markType(NotSupportedException, \"NotSupportedException\", SystemException.prototype.$type);\n  return NotSupportedException;\n}(SystemException);\n\nexport { NotSupportedException };\n\nvar FormatException =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(FormatException, _super);\n\n  function FormatException(initNumber) {\n    var rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      rest[_i - 1] = arguments[_i];\n    }\n\n    var _this = _super.call(this, 0) || this;\n\n    if (initNumber > 0) {\n      switch (initNumber) {\n        case 1:\n          _this.init1.apply(_this, arguments);\n\n          break;\n\n        case 2:\n          _this.init2.apply(_this, arguments);\n\n          break;\n      }\n\n      return _this;\n    }\n\n    return _this;\n  }\n\n  FormatException.prototype.init1 = function (initNumber, message) {\n    _super.prototype.init1.call(this, 1, message);\n  };\n\n  FormatException.prototype.init2 = function (initNumber, message, innerException) {\n    _super.prototype.init2.call(this, 2, message, innerException);\n  };\n\n  FormatException.$t = markType(FormatException, \"FormatException\", SystemException.prototype.$type);\n  return FormatException;\n}(SystemException);\n\nexport { FormatException };\n\nvar PointUtil =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function PointUtil() {}\n\n  PointUtil.equals = function (p1, p2) {\n    if (p1 == null && p2 == null) {\n      return true;\n    }\n\n    if (p1 == null && p2 != null) {\n      return false;\n    }\n\n    if (p1 != null && p2 == null) {\n      return false;\n    }\n\n    return p1.x == p2.x && p1.y == p2.y;\n  };\n\n  PointUtil.notEquals = function (p1, p2) {\n    return !PointUtil.equals(p1, p2);\n  };\n\n  PointUtil.create = function () {\n    return {\n      x: 0,\n      y: 0,\n      $type: Point_$type\n    };\n  };\n\n  PointUtil.createXY = function (x, y) {\n    return {\n      x: x,\n      y: y,\n      $type: Point_$type\n    };\n  };\n\n  return PointUtil;\n}();\n\nexport { PointUtil };\nexport var Point_$type = /*@__PURE__*/new Type(null, \"Point\");\nexport var SeekOrigin = /*@__PURE__*/function (SeekOrigin) {\n  SeekOrigin[SeekOrigin[\"Begin\"] = 0] = \"Begin\";\n  SeekOrigin[SeekOrigin[\"Current\"] = 1] = \"Current\";\n  SeekOrigin[SeekOrigin[\"End\"] = 2] = \"End\";\n  return SeekOrigin;\n}({});\n\nvar Stream =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(Stream, _super);\n\n  function Stream() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Stream.prototype.close = function () {\n    this.disposeCore(true);\n  };\n\n  Stream.prototype.dispose = function () {\n    this.close();\n  };\n\n  Stream.prototype.disposeCore = function (disposing) {};\n\n  Stream.prototype.readByte = function () {\n    var bytes = [0];\n    var count = this.read(bytes, 0, 1);\n\n    if (count === 0) {\n      return -1;\n    }\n\n    return bytes[0];\n  };\n\n  Stream.prototype.writeByte = function (value) {\n    this.write([value], 0, 1);\n  };\n\n  Stream.$t = markType(Stream, \"Stream\");\n  return Stream;\n}(Base);\n\nexport { Stream };\n\nvar EventArgs =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(EventArgs, _super);\n\n  function EventArgs() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Object.defineProperty(EventArgs, \"empty\", {\n    get: function () {\n      if (EventArgs._empty) {\n        return EventArgs._empty;\n      }\n\n      EventArgs._empty = new EventArgs();\n      return EventArgs._empty;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  EventArgs.$t = markType(EventArgs, \"EventArgs\");\n  return EventArgs;\n}(Base);\n\nexport { EventArgs };\nexport var IFormatProvider_$type = /*@__PURE__*/new Type(null, 'IFormatProvider');\nexport var Array_$type = /*@__PURE__*/new Type(Array, \"Array\", Base.prototype.$type, [IEnumerable_$type, ICollection_$type]);\nexport var a$ = Array_$type;\n\nvar TypeRegistrar =\n/** @class */\n\n/*@__PURE__*/\nfunction () {\n  function TypeRegistrar() {}\n\n  TypeRegistrar.create = function (typeName) {\n    var rest = [];\n\n    for (var _i = 1; _i < arguments.length; _i++) {\n      rest[_i - 1] = arguments[_i];\n    }\n\n    if (TypeRegistrar.isRegistered(typeName)) {\n      var C = TypeRegistrar.get(typeName);\n\n      if (C.htmlTagName) {\n        return document.createElement(C.htmlTagName);\n      } else {\n        return new (C.bind.apply(C, __spreadArray([void 0], __read(rest), false)))();\n      }\n    } else {\n      return null;\n    }\n  };\n\n  TypeRegistrar.register = function (typeName, type) {\n    TypeRegistrar._registrar.set(typeName, type.InstanceConstructor);\n  };\n\n  TypeRegistrar.registerCons = function (typeName, type) {\n    TypeRegistrar._registrar.set(typeName, type);\n  };\n\n  TypeRegistrar.callRegister = function (typeName) {\n    var type = TypeRegistrar.get(typeName);\n\n    if (type !== undefined && type !== null && type[\"register\"] !== undefined) {\n      type[\"register\"]();\n    }\n  };\n\n  TypeRegistrar.isRegistered = function (typeName) {\n    return TypeRegistrar.get(typeName) !== null;\n  };\n\n  TypeRegistrar.get = function (typeName) {\n    if (TypeRegistrar._registrar.has(typeName)) {\n      return TypeRegistrar._registrar.get(typeName);\n    }\n\n    if (typeName.indexOf(\"Igx\") == 0) {\n      var igc = typeName.replace(\"Igx\", \"Igc\");\n\n      if (TypeRegistrar._registrar.has(igc)) {\n        return TypeRegistrar._registrar.get(igc);\n      }\n\n      var igr = typeName.replace(\"Igx\", \"Igr\");\n\n      if (igr.indexOf(\"Component\") == igr.length - 9) {\n        igr = igr.substring(0, igr.length - 9);\n      }\n\n      if (TypeRegistrar._registrar.has(igr)) {\n        return TypeRegistrar._registrar.get(igr);\n      }\n    }\n\n    return null;\n  };\n\n  TypeRegistrar.createFromInternal = function (internal, prefix, postfix) {\n    if (!internal) {\n      return null;\n    }\n\n    if (!internal.$type) {\n      return null;\n    }\n\n    var name = internal.$type.name;\n    var externalName = prefix + name + postfix;\n\n    if (!TypeRegistrar.isRegistered(externalName)) {\n      return null;\n    }\n\n    return TypeRegistrar.create(externalName);\n  };\n\n  TypeRegistrar._registrar = new Map();\n  return TypeRegistrar;\n}();\n\nexport { TypeRegistrar };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/type.js"],"names":["__extends","__generator","__read","__spreadArray","__values","_typeIdentifierCache","_nextTypeIdentifier","getInstanceType","obj","$type","Number_$type","String_$type","Boolean_$type","Date","Date_$type","Base","prototype","equals","other","equalsStatic","a","b","aIsNull","isNullable","hasValue","bIsNull","Number","isNaN","equalsSimple","item1","item2","compareSimple","compare","xComparable","typeCast","IComparable_$type","compareToObject","yComparable","getHashCode","$hashCode","undefined","nextHashCode","getHashCodeStatic","Type","getPrimitiveHashCode","memberwiseClone","clone","Object","create","InstanceConstructor","e","Cons","prop","hasOwnProperty","referenceEquals","getArrayOfValues","result","i","push","getArrayOfProperties","_super","instanceConstructor","identifier","baseType","interfaces","staticInitializer","_this","call","specializationCache","_staticInitializer","name","typeArguments","isEnumType","_isGenericType","_staticFields","_$nullNullable","enumInfo","_fullName","lastDotIndex","lastIndexOf","substr","defineProperty","get","enumerable","configurable","getSpecId","types","length","typeName","toString","stringId","ret","type","indexOf","isGenericType","getStaticFields","t","apply","initSelfReferences","replacement","j","updateCache","typeArg","specId","specialize","rest","_i","arguments","Array","from","placeholders","hasPlaceholders","isFinite","generateString","_self","concat","slice","checkEquals","type1","type2","op_Equality","op_Inequality","first","ValueType","isAssignableFrom","tOther","isInstanceOfType","value","canAssign","targetType","Nullable","getUnderlyingType","canAssignSimple","createInstance","$t","Boolean","C","bind","Error","getDefaultValue","v","val","String","hash","chr","len","charCodeAt","decodePropType","markDep","depProp","PropMeta","changedFunction","props","names","currName","currOpts","hasDefaultValue","defaultValue","propType","changeHandler","setterFunc","getterFunc","aliasName","propertyAlias","_loop_1","parts","split","substring","toLowerCase","changedName_1","o","oldValue","newValue","meta","createWithDefaultAndCallback","createWithCallback","dp_1","registerAlt","setValueAlt","typeGetValue","getValueAlt","set","Array_$type","toNullable","typeCastObjTo$t","shouldWrap","pendingStaticCtors","markStruct","staticInit","$","markEnum","encodedDef","IConvertible_$type","actualNames","namesValuesMap","actualNamesValuesMap","subParts","nameParts","name_1","actualName","parseInt","info","markTypeInitialized","markType","callStaticConstructors","e_1","_a","classes","classes_1","classes_1_1","next","done","c","e_1_1","error","return","Enum","EnumBox","toDouble","provider","EnumUtil","getName","getBoxIfEnum","enumGetBox","_boxes","getValueFromName","values","enumType","ignoreCase","upper","toUpperCase","x","firstChar","charAt","parse","val_1","enumHasFlag","flag","_nameMap","vals","getValues","getNames","map","lookup","getFlaggedName","original","zeroValueName","p","sort","unshift","join","member","getEnumValue","isDefined","toObject","tryParse$1","$tEnum","p2","nullableType","isGenericTypeDefinition","Nullable$1","genericTypeArguments","_value","nullableEquals","v1","v2","v1IsNull","v2IsNull","val1","val2","getValueOrDefault","getValueOrDefault1","preIncrement","preDecrement","postIncrement","originalValue","postDecrement","IComparable$1_$type","IEquatable$1_$type","INotifyPropertyChanged_$type","PropertyChangedEventArgs","propertyName","_propertyName","IteratorWrapper","inner","getNew","_inner","_getNew","_hasNext","_current","moveNext","dispose","reset","IterableWrapper","getEnumerator","Symbol","iterator","getEnumeratorObject","EnumeratorWrapper","current","EnumeratorWrapperObject","currentObject","getEn","arr","arr_1","arr_1_1","item","e_2_1","e_2","_b","label","trys","sent","en","isArray","arr_2","arr_3","EnumerableWrapper","EnumerableWrapperObject","toEnum","fromEnum","toEn","fromEn","fromDict","v_1","v_1_1","key","e_3_1","e_3","_c","Void_$type","n$","s$","d$","b$","v$","Delegate_$type","runOn","target","func","self","delegateCombine","del1","del2","enumerate","delegateRemove","del","IDisposable_$type","IEnumerable_$type","IEnumerator_$type","IEqualityComparer$1_$type","IEqualityComparer_$type","ICollection_$type","IList_$type","IEnumerable$1_$type","ICollection$1_$type","IList$1_$type","IEnumerator$1_$type","IDictionary_$type","BaseError","initNumber","_message","_innerException","init1","init2","get_message","message","innerException","SystemException","NotSupportedException","FormatException","PointUtil","p1","y","notEquals","Point_$type","createXY","SeekOrigin","Stream","close","disposeCore","disposing","readByte","bytes","count","read","writeByte","write","EventArgs","_empty","IFormatProvider_$type","a$","TypeRegistrar","isRegistered","htmlTagName","document","createElement","register","_registrar","registerCons","callRegister","has","igc","replace","igr","createFromInternal","internal","prefix","postfix","externalName","Map"],"mappings":"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","sourcesContent":["/*!\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends, __generator, __read, __spreadArray, __values } from \"tslib\";\nvar _typeIdentifierCache = {};\nvar _nextTypeIdentifier = 0;\n// interface Function {\n//     $type?: Type;\n// }\nexport function getInstanceType(obj) {\n    if (obj.$type) {\n        return obj.$type;\n    }\n    else if (typeof obj === 'number') {\n        return Number_$type;\n    }\n    else if (typeof obj === 'string') {\n        return String_$type;\n    }\n    else if (typeof obj === 'boolean') {\n        return Boolean_$type;\n    }\n    else if (obj instanceof Date) {\n        return Date_$type;\n    }\n    return Base.prototype.$type;\n}\nvar Base = /** @class */ /*@__PURE__*/ (function () {\n    function Base() {\n    }\n    Base.prototype.equals = function (other) {\n        return this === other;\n    };\n    Base.equalsStatic = function (a, b) {\n        var aIsNull = (a == null) || (!!a.isNullable && !a.hasValue);\n        var bIsNull = (b == null) || (!!b.isNullable && !b.hasValue);\n        if (aIsNull || bIsNull) {\n            return aIsNull && bIsNull;\n        }\n        if (a.equals) {\n            return a.equals(b);\n        }\n        if (b.equals) {\n            return b.equals(a);\n        }\n        if (Number.isNaN(a) && Number.isNaN(b)) {\n            return true;\n        }\n        if (a instanceof Date) {\n            return b instanceof Date && +a === +b;\n        }\n        return a == b && typeof a == typeof b;\n    };\n    Base.equalsSimple = function (item1, item2) {\n        return item1 == item2;\n    };\n    ;\n    Base.compareSimple = function (item1, item2) {\n        if (item1 == item2) {\n            return 0;\n        }\n        if (item1 < item2) {\n            return -1;\n        }\n        return 1;\n    };\n    ;\n    Base.compare = function (item1, item2) {\n        if (item1 === item2) {\n            return 0;\n        }\n        var xComparable = typeCast(IComparable_$type, item1);\n        if (xComparable !== null && xComparable.compareToObject) {\n            return xComparable.compareToObject(item2);\n        }\n        var yComparable = typeCast(IComparable_$type, item2);\n        if (yComparable !== null && yComparable.compareToObject) {\n            return -yComparable.compareToObject(item1);\n        }\n        return Base.compareSimple(item1, item2);\n    };\n    ;\n    Base.prototype.getHashCode = function () {\n        if (this.$hashCode === undefined) {\n            this.$hashCode = Base.nextHashCode++;\n        }\n        return this.$hashCode;\n    };\n    Base.getHashCodeStatic = function (obj) {\n        if (obj.getHashCode) {\n            return obj.getHashCode();\n        }\n        if (obj.$hashCode !== undefined) {\n            return obj.$hashCode;\n        }\n        if (!(typeof obj == \"object\")) {\n            return Type.getPrimitiveHashCode(obj);\n        }\n        else {\n            obj.$hashCode = Base.nextHashCode++;\n            return obj.$hashCode;\n        }\n    };\n    Base.prototype.memberwiseClone = function () {\n        var clone;\n        try {\n            clone = Object.create(this.$type.InstanceConstructor.prototype);\n        }\n        catch (e) {\n            var Cons = /** @class */ /*@__PURE__*/ (function () {\n                function Cons() {\n                }\n                return Cons;\n            }());\n            Cons.prototype = this.$type.InstanceConstructor.prototype;\n            clone = new Cons();\n        }\n        for (var prop in this) {\n            if (this.hasOwnProperty(prop)) {\n                clone[prop] = this[prop];\n            }\n        }\n        return clone;\n    };\n    Base.referenceEquals = function (a, b) {\n        return a === b || (a == null && b == null);\n    };\n    Base.getArrayOfValues = function (obj) {\n        var result = [];\n        for (var i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                result.push(obj[i]);\n            }\n        }\n        return result;\n    };\n    Base.getArrayOfProperties = function (obj) {\n        var result = [];\n        for (var i in obj) {\n            if (obj.hasOwnProperty(i)) {\n                result.push(i);\n            }\n        }\n        return result;\n    };\n    ;\n    Base.nextHashCode = 0;\n    return Base;\n}());\nexport { Base };\nvar Type = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(Type, _super);\n    function Type(instanceConstructor, identifier, baseType, interfaces, staticInitializer) {\n        if (baseType === void 0) {\n            baseType = Base.prototype.$type;\n        }\n        if (interfaces === void 0) {\n            interfaces = null;\n        }\n        if (staticInitializer === void 0) {\n            staticInitializer = null;\n        }\n        var _this = _super.call(this) || this;\n        _this.specializationCache = null;\n        _this._staticInitializer = null;\n        _this.name = null;\n        _this.typeArguments = null;\n        _this.baseType = null;\n        _this.interfaces = null;\n        _this.isEnumType = false;\n        _this._isGenericType = undefined;\n        _this._staticFields = null;\n        _this.isNullable = false;\n        _this._$nullNullable = null;\n        _this.enumInfo = null;\n        _this.specializationCache = {};\n        _this._staticInitializer = staticInitializer;\n        _this._fullName = identifier;\n        _this.name = identifier;\n        _this.InstanceConstructor = instanceConstructor;\n        var lastDotIndex = _this.name.lastIndexOf(\".\");\n        if (lastDotIndex >= 0) {\n            _this.name = _this.name.substr(lastDotIndex + 1);\n        }\n        _this.typeArguments = null;\n        _this.baseType = null;\n        _this.interfaces = null;\n        if (baseType) {\n            _this.baseType = baseType;\n        }\n        if (interfaces) {\n            _this.interfaces = interfaces;\n        }\n        if (_typeIdentifierCache[identifier]) {\n            _this.identifier = _typeIdentifierCache[identifier];\n        }\n        else {\n            _this.identifier = _nextTypeIdentifier++;\n            _typeIdentifierCache[identifier] = _this.identifier;\n        }\n        return _this;\n        // rather than always evaluating a function on a type to see if it is an enum\n        // we can just cache it once on the type\n        // if (baseType && Enum && baseType == Enum.prototype.$type) {\n        //     this.isEnumType = true;\n        // }\n    }\n    Object.defineProperty(Type.prototype, \"typeName\", {\n        get: function () {\n            return this.name;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Type.prototype, \"fullName\", {\n        get: function () {\n            return this._fullName;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Type.prototype.getSpecId = function (types) {\n        if (types.length === 1) {\n            if (!types[0]) {\n                return \"undef\";\n            }\n            else if (types[0] === -1) {\n                return undefined;\n            }\n            else if (!types[0].typeName) {\n                return types[0].toString();\n            }\n            else if (types[0].stringId) {\n                return types[0].stringId;\n            }\n            else {\n                return types[0].identifier.toString();\n            }\n        }\n        var ret = \"\";\n        for (var i = 0; i < types.length; i++) {\n            var type = types[i];\n            if (!type) {\n                ret += \"undef\";\n            }\n            else if (type == -1) {\n                return undefined;\n            }\n            else if (!type.typeName) {\n                ret += type.toString();\n            }\n            else if (type.stringId) {\n                ret += type.stringId;\n            }\n            else {\n                ret += type.identifier.toString();\n            }\n        }\n        return ret;\n    };\n    Object.defineProperty(Type.prototype, \"isGenericType\", {\n        get: function () {\n            if (this._isGenericType === undefined) {\n                this._isGenericType = this.name.indexOf(\"$\") >= 0;\n            }\n            return this._isGenericType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Type.prototype, \"isGenericTypeDefinition\", {\n        get: function () {\n            return this.typeArguments === null && this.isGenericType;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Type.prototype, \"genericTypeArguments\", {\n        get: function () {\n            return this.typeArguments;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Type.prototype.getStaticFields = function (type) {\n        if (type === undefined) {\n            type = this;\n        }\n        var t = this;\n        while (t != null) {\n            if (t === type || t._fullName == type._fullName) {\n                if (t._staticFields == null && t._staticInitializer) {\n                    t._staticFields = {};\n                    t._staticInitializer.apply(t._staticFields, t.typeArguments);\n                }\n                return t._staticFields;\n            }\n            t = t.baseType;\n        }\n        return null;\n    };\n    Type.prototype.initSelfReferences = function (replacement) {\n        var i, j;\n        if (replacement) {\n            if (this.typeArguments) {\n                var updateCache = false;\n                for (j = 0; j < this.typeArguments.length; j++) {\n                    var typeArg = this.typeArguments[j];\n                    if (typeArg == -1) {\n                        updateCache = true;\n                        this.typeArguments[j] = replacement;\n                    }\n                    else if (typeArg &&\n                        typeArg instanceof Type &&\n                        typeArg.initSelfReferences) {\n                        typeArg.initSelfReferences(replacement);\n                    }\n                }\n                if (updateCache) {\n                    var specId = this.getSpecId(this.typeArguments);\n                    var ret = this.specializationCache[specId];\n                    if (!ret) {\n                        this.specializationCache[specId] = this;\n                    }\n                }\n            }\n        }\n        else {\n            if (this.baseType) {\n                this.baseType.initSelfReferences(this);\n            }\n            if (this.interfaces) {\n                for (i = 0; i < this.interfaces.length; i++) {\n                    this.interfaces[i].initSelfReferences(this);\n                }\n            }\n        }\n        return this;\n    };\n    Type.prototype.specialize = function () {\n        var rest = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            rest[_i] = arguments[_i];\n        }\n        var i;\n        if (!this.isGenericType) {\n            return this;\n        }\n        var specId = this.getSpecId(Array.from(arguments));\n        var ret = this.specializationCache[specId];\n        if (ret) {\n            return ret;\n        }\n        ret = new Type(this.InstanceConstructor, this._fullName, this.baseType, this.interfaces, this._staticInitializer);\n        ret.specializationCache = this.specializationCache;\n        var placeholders = this.typeArguments;\n        var hasPlaceholders = false;\n        // Make sure the placeholders are actually numbers. If they are types, we are re-specializing an\n        // already specialized type.\n        if (placeholders && placeholders.length) {\n            /* going back to how it used to be. we shouldn't assume that the number/order of the arguments\n                relates to the typearguments. this may be an interface that has its type information already\n                and either has placeholders or is a closed type\n            // you can have a mixed bag where some are placeholders and others are not and the\n            // placeholder doesn't have to be the first slot\n            for (i = 0; i < placeholders.length; i++) {\n                if (isFinite(placeholders[ i ])) {\n                    hasPlaceholders = true;\n                    break;\n                }\n            }*/\n            hasPlaceholders = true;\n        }\n        ret.typeArguments = [];\n        if (hasPlaceholders) {\n            for (i = 0; i < placeholders.length; i++) {\n                // if the argument being provided is a placeholder index and we already have\n                // a placeholder then keep the index we have. otherwise we're taking the index\n                // of the parent type\n                if (typeof placeholders[i] === \"number\" &&\n                    isFinite(placeholders[i]) && !isFinite(arguments[placeholders[i]])) {\n                    ret.typeArguments[i] = arguments[placeholders[i]];\n                }\n                else {\n                    ret.typeArguments[i] = placeholders[i];\n                }\n            }\n        }\n        else {\n            for (i = 0; i < arguments.length; i++) {\n                ret.typeArguments[i] = arguments[i];\n            }\n        }\n        // since the placeholder indexes for the basetype and interfaces implemented are based\n        // on the order of the type arguments for the defining types we should pass its typeargs\n        // and not the outermost type's type arguments which may be different in number and order\n        // than the base type of the base types and interfaces implemented\n        if (this.baseType && this.baseType.typeArguments) {\n            ret.baseType = this.specialize.apply(this.baseType, ret.typeArguments);\n        }\n        if (this.interfaces) {\n            ret.interfaces = [];\n            for (i = 0; i < this.interfaces.length; i++) {\n                ret.interfaces[i] = this.specialize.apply(this.interfaces[i], ret.typeArguments);\n            }\n        }\n        // rather than doing this check in various places we could just cache a field on the type\n        if (this._fullName == \"Nullable$1\" && ret.typeArguments.length == 1) {\n            ret.isNullable = true;\n        }\n        // if this was a self referencing type (e.g. IEquatable<Int32> for Int32 then we won't have the\n        // specId yet because we don't know the type argument. we'll update the cache when we update\n        // the self references. otherwise other types that use self references (but for a different type)\n        // will get and use the wrong type arguments\n        if (specId) {\n            this.specializationCache[specId] = ret;\n            ret.stringId = ret.generateString();\n        }\n        else {\n            // the self referencing type needs to be able to put itself into the specialization cache\n            // of the original type\n            //ret.specializationCache = this.specializationCache;\n        }\n        if (this.InstanceConstructor != null) {\n            var _self = this;\n            ret.InstanceConstructor = function () {\n                _self.InstanceConstructor.apply(this, ret.typeArguments.concat(Array.prototype.slice.call(arguments, 0)));\n                return this;\n            };\n            ret.InstanceConstructor.prototype = this.InstanceConstructor.prototype;\n        }\n        return ret;\n    };\n    Type.prototype.equals = function (other) {\n        if (!(other instanceof Type)) {\n            return false;\n        }\n        if (this.identifier !== other.identifier) {\n            return false;\n        }\n        if (this.typeArguments === null && other.typeArguments === null) {\n            return true;\n        }\n        if (this.typeArguments === null && other.typeArguments !== null) {\n            return false;\n        }\n        if (this.typeArguments !== null && other.typeArguments === null) {\n            return false;\n        }\n        if (this.typeArguments.length !== other.typeArguments.length) {\n            return false;\n        }\n        for (var i = 0; i < this.typeArguments.length; i++) {\n            //TODO: handle covariance case here.\n            //if (!$.ig.util.canAssign(this.typeArguments[ i ], other.typeArguments[ i ])) {\n            //    return false;\n            //}\n            if (!Type.checkEquals(this.typeArguments[i], other.typeArguments[i])) {\n                return false;\n            }\n        }\n        return true;\n    };\n    Type.checkEquals = function (type1, type2) {\n        if (type1 instanceof Type) {\n            return type1.equals(type2);\n        }\n        else if (type2 instanceof Type) {\n            return type2.equals(type1);\n        }\n        else {\n            return type1 === type2;\n        }\n    };\n    Type.op_Equality = function (type1, type2) {\n        return type1.equals(type2);\n    };\n    Type.op_Inequality = function (type1, type2) {\n        return !type1.equals(type2);\n    };\n    Type.prototype.generateString = function () {\n        if (!this.typeArguments || !this.typeArguments.length) {\n            return this.identifier.toString();\n        }\n        else {\n            var ret = this.identifier.toString() + \"[\";\n            var first = true;\n            for (var i = 0; i < this.typeArguments.length; i++) {\n                if (this.typeArguments[i] == undefined) {\n                    continue;\n                }\n                if (first) {\n                    first = false;\n                }\n                else {\n                    ret += \",\";\n                }\n                if (this.typeArguments[i].toString) {\n                    ret += this.typeArguments[i].toString();\n                }\n                else {\n                    ret += this.typeArguments[i].identifier.toString();\n                }\n            }\n            ret += \"]\";\n            return ret;\n        }\n    };\n    Object.defineProperty(Type.prototype, \"isValueType\", {\n        get: function () {\n            return this.baseType === ValueType.prototype.$type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Type.prototype.isAssignableFrom = function (tOther) {\n        // TODO: Unit test and make sure this is right (especially with generics\n        if (this === tOther) {\n            return true;\n        }\n        if (tOther.baseType && this.isAssignableFrom(tOther.baseType)) {\n            return true;\n        }\n        if (tOther.interfaces) {\n            for (var i = 0; i < tOther.interfaces.length; i++) {\n                if (this.isAssignableFrom(tOther.interfaces[i])) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    Type.prototype.isInstanceOfType = function (value) {\n        return typeCast(this, value) !== null;\n    };\n    Object.defineProperty(Type.prototype, \"isPrimitive\", {\n        get: function () {\n            return this === Number_$type ||\n                this === Boolean_$type;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Type.canAssign = function (targetType, type) {\n        if (targetType.name === 'Nullable$1' && type.name !== 'Nullable$1') {\n            targetType = Nullable.getUnderlyingType(targetType);\n        }\n        return Type.canAssignSimple(targetType, type);\n    };\n    Type.canAssignSimple = function (targetType, type) {\n        if (targetType === type || Type.checkEquals(targetType, type)) {\n            return true;\n        }\n        if (type.interfaces) {\n            for (var i = 0; i < type.interfaces.length; i++) {\n                if (Type.canAssignSimple(targetType, type.interfaces[i])) {\n                    return true;\n                }\n            }\n        }\n        if (type.baseType) {\n            return Type.canAssignSimple(targetType, type.baseType);\n        }\n        return false;\n    };\n    Type.createInstance = function ($t) {\n        if ($t === Number || $t == Number_$type ||\n            $t.isEnumType) {\n            return 0;\n        }\n        if ($t == Boolean || $t == Boolean_$type) {\n            return false;\n        }\n        if ($t.InstanceConstructor) {\n            var result;\n            //result = Object.create((<Type>$t).InstanceConstructor.prototype);\n            var C = $t.InstanceConstructor;\n            //(<Type>$t).InstanceConstructor.apply(result, Array.prototype.slice.call(arguments, 1));\n            result = new (C.bind.apply(C, __spreadArray([void 0], __read(Array.prototype.slice.call(arguments, 1)), false)))();\n            return result;\n        }\n        throw new Error(\"Cannot find instance constructor for the type parameter\");\n    };\n    ;\n    Type.getDefaultValue = function ($t) {\n        if ($t === Number_$type ||\n            $t.isEnumType) {\n            return 0;\n        }\n        if ($t == Boolean_$type) {\n            return false;\n        }\n        if ($t.baseType === ValueType.$type) {\n            return Type.createInstance($t);\n        }\n        return null;\n    };\n    ;\n    Type.getPrimitiveHashCode = function (v) {\n        var val = typeof v;\n        if (val === \"string\" || v instanceof String) {\n            var hash = 0, i, chr, len;\n            if (v.length === 0) {\n                return hash;\n            }\n            for (i = 0, len = this.length; i < len; i++) {\n                chr = v.charCodeAt(i);\n                /*jslint bitwise: true */\n                hash = ((hash << 5) - hash) + chr;\n                hash |= 0; // Convert to 32bit integer\n            }\n            return hash;\n        }\n        else if (val === \"boolean\" || v instanceof Boolean) {\n            return +v;\n        }\n        else {\n            return v;\n        }\n    };\n    // static mark(t: Function, name: string,\n    //     baseType: Type = Base.prototype.$type, \n    //     interfaces: Type[] = null, \n    //     staticInitializer: () => void = null) {\n    //     t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\n    //     (<any>t).$type = t.prototype.$type;\n    // }\n    Type.decodePropType = function (val) {\n        if (val === 0) {\n            return Boolean_$type;\n        }\n        else if (val === 1) {\n            return Number_$type;\n        }\n        else if (val === 2) {\n            return String_$type;\n        }\n        else if (val === 3) {\n            return Date_$type;\n        }\n        else {\n            return val;\n        }\n    };\n    return Type;\n}(Base));\nexport { Type };\nexport function markDep(depProp, PropMeta, t, changedFunction, props) {\n    var names = [];\n    var currName = \"\";\n    var currOpts = [];\n    var hasDefaultValue = false;\n    var defaultValue = null;\n    var propType = null;\n    var changeHandler = null;\n    var setterFunc = null;\n    var getterFunc = null;\n    var aliasName = null;\n    var propertyAlias = null;\n    var _loop_1 = function () {\n        if (i % 2 == 0) {\n            currName = props[i];\n            if (currName.indexOf(\":\") >= 0) {\n                var parts = currName.split(':');\n                if (parts.length == 2) {\n                    currName = parts[0];\n                    aliasName = parts[1];\n                    propertyAlias = currName.substring(0, 1).toLowerCase() + currName.substring(1) + \"Property\";\n                }\n                else {\n                    currName = parts[0];\n                    aliasName = parts[1];\n                    if (aliasName.length == 0) {\n                        aliasName = currName.substring(0, 1).toLowerCase() + currName.substring(1);\n                    }\n                    propertyAlias = parts[2];\n                }\n            }\n            else {\n                aliasName = currName.substring(0, 1).toLowerCase() + currName.substring(1);\n                propertyAlias = aliasName + \"Property\";\n            }\n            names.push(currName);\n        }\n        else {\n            currOpts = props[i];\n            if (currOpts.length == 2) {\n                hasDefaultValue = true;\n                defaultValue = currOpts[1];\n                propType = Type.decodePropType(currOpts[0]);\n            }\n            else {\n                hasDefaultValue = false;\n                propType = Type.decodePropType(currOpts[0]);\n            }\n            var changedName_1 = currName;\n            changeHandler = function (o, a) {\n                o[changedFunction].call(o, changedName_1, a.oldValue, a.newValue);\n            };\n            var meta = null;\n            if (hasDefaultValue) {\n                meta = PropMeta.createWithDefaultAndCallback(defaultValue, changeHandler);\n            }\n            else {\n                meta = PropMeta.createWithCallback(changeHandler);\n            }\n            var dp_1 = depProp.registerAlt(currName, propType, t.$type, meta);\n            setterFunc = function (v) {\n                this.setValueAlt(dp_1, v);\n            };\n            if (propType.isEnumType) {\n                getterFunc = function () {\n                    return typeGetValue(this.getValueAlt(dp_1));\n                };\n            }\n            else {\n                getterFunc = function () {\n                    return this.getValueAlt(dp_1);\n                };\n            }\n            Object.defineProperty(t.prototype, aliasName, {\n                set: setterFunc,\n                get: getterFunc,\n                configurable: true\n            });\n            t[propertyAlias] = dp_1;\n        }\n    };\n    //debugger;\n    for (var i = 0; i < props.length; i++) {\n        _loop_1();\n    }\n    // let superClass = (<any>t).$type.baseType;\n    // if (superClass !== null && superClass !== undefined) {\n    //     let superNames = superClass.InstanceConstructor.$$p;\n    //     if (superNames) {\n    //         for (var j = superNames.length - 1; j >= 0; j--) {\n    //             names.unshift(superNames[j]);\n    //         }\n    //     }\n    // }\n    //(<any>t).$$p = names;\n    return names;\n}\nexport function typeGetValue(v) {\n    if (v !== null && v.$type && v.$type.isEnumType) {\n        return v.value;\n    }\n    return v;\n}\nexport function typeCast(targetType, obj) {\n    if (obj === undefined || obj === null) {\n        return null;\n    }\n    if (targetType === Array) {\n        return ((obj instanceof Array) ? obj : null);\n    }\n    if (targetType === String) {\n        targetType = String_$type;\n    }\n    if (targetType === Number) {\n        targetType = Number_$type;\n    }\n    if (targetType === Boolean) {\n        targetType = Boolean_$type;\n    }\n    if (targetType === Date) {\n        targetType = Date_$type;\n    }\n    var type = obj;\n    if (obj.$type) {\n        type = obj.$type;\n    }\n    else if (typeof obj === 'number') {\n        type = targetType === Number ? Number : Number_$type;\n    }\n    else if (typeof obj === 'string') {\n        type = String_$type;\n    }\n    else if (typeof obj === 'boolean') {\n        type = Boolean_$type;\n    }\n    else if (obj instanceof Date) {\n        type = Date_$type;\n    }\n    else if (obj instanceof Array) {\n        type = Array_$type;\n    }\n    if (Type.canAssignSimple(targetType, type)) {\n        return obj;\n    }\n    if (targetType.name === 'Nullable$1' && type.name !== 'Nullable$1') {\n        targetType = Nullable.getUnderlyingType(targetType);\n        if (Type.canAssignSimple(targetType, type)) {\n            return toNullable(targetType, obj);\n        }\n        return toNullable(targetType, null);\n    }\n    return null;\n}\nexport function typeCastObjTo$t($t, v) {\n    var shouldWrap = false;\n    if ($t.isNullable) {\n        $t = $t.typeArguments[0];\n        shouldWrap = true;\n    }\n    if (v !== null && $t.isEnumType) {\n        v = v.value;\n    }\n    return shouldWrap ? toNullable($t, v) : v;\n}\nvar pendingStaticCtors = /*@__PURE__*/ new Array();\nexport function markStruct(t, name, baseType, interfaces, staticInitializer) {\n    if (baseType === void 0) {\n        baseType = ValueType.prototype.$type;\n    }\n    if (interfaces === void 0) {\n        interfaces = null;\n    }\n    if (staticInitializer === void 0) {\n        staticInitializer = null;\n    }\n    t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\n    //TODO: do we need/want a flag on the function like we have in js?\n    if (typeof t.staticInit === \"function\") {\n        pendingStaticCtors.push(t);\n    }\n    t.$type = t.prototype.$type;\n    t.$ = t.prototype.$type;\n    return t.prototype.$type;\n}\n/* #__PURE__ */\nexport function markEnum(name, encodedDef) {\n    var t = new Type(null, name, Base.prototype.$type, [IConvertible_$type]);\n    t.isEnumType = true;\n    var parts = encodedDef.split(\"|\");\n    var names = [];\n    var actualNames = [];\n    var namesValuesMap = {};\n    var actualNamesValuesMap = {};\n    for (var i = 0; i < parts.length; i++) {\n        var subParts = parts[i].split(\",\");\n        var nameParts = subParts[0].split(\":\");\n        var name_1 = nameParts[0];\n        var actualName = nameParts[0];\n        if (nameParts.length > 1) {\n            actualName = nameParts[1];\n        }\n        names.push(name_1);\n        actualNames.push(actualName);\n        //TODO: did we support string enums??\n        namesValuesMap[name_1] = parseInt(subParts[1]);\n        actualNamesValuesMap[actualName] = parseInt(subParts[1]);\n    }\n    var info = {\n        names: names,\n        actualNames: actualNames,\n        namesValuesMap: namesValuesMap,\n        actualNamesValuesMap: actualNamesValuesMap\n    };\n    t.enumInfo = info;\n    return t;\n}\nvar markTypeInitialized = false;\nexport function markType(t, name, baseType, interfaces, staticInitializer) {\n    if (baseType === void 0) {\n        baseType = Base.prototype.$type;\n    }\n    if (interfaces === void 0) {\n        interfaces = null;\n    }\n    if (staticInitializer === void 0) {\n        staticInitializer = null;\n    }\n    t.prototype.$type = new Type(t, name, baseType, interfaces, staticInitializer);\n    if (!markTypeInitialized) {\n        markTypeInitialized = true;\n        markType(Type, \"Type\");\n        markType(Base, \"Base\", null);\n    }\n    //TODO: do we need/want a flag on the function like we have in js?\n    if (typeof t.staticInit === \"function\") {\n        pendingStaticCtors.push(t);\n    }\n    //t.prototype.$ = t.prototype.$type;\n    t.$type = t.prototype.$type;\n    t.$ = t.prototype.$type;\n    return t.prototype.$type;\n}\nexport function callStaticConstructors() {\n    var e_1, _a;\n    if (pendingStaticCtors.length > 0) {\n        //TODO: is the copy of the array needed? \n        var classes = Array.from(pendingStaticCtors);\n        pendingStaticCtors.length = 0;\n        try {\n            for (var classes_1 = __values(classes), classes_1_1 = classes_1.next(); !classes_1_1.done; classes_1_1 = classes_1.next()) {\n                var c = classes_1_1.value;\n                c.staticInit();\n            }\n        }\n        catch (e_1_1) {\n            e_1 = { error: e_1_1 };\n        }\n        finally {\n            try {\n                if (classes_1_1 && !classes_1_1.done && (_a = classes_1.return))\n                    _a.call(classes_1);\n            }\n            finally {\n                if (e_1)\n                    throw e_1.error;\n            }\n        }\n    }\n}\nexport var IConvertible_$type = /*@__PURE__*/ new Type(null, \"IConvertible\");\nvar Enum = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(Enum, _super);\n    function Enum() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Enum.$t = markType(Enum, \"Enum\");\n    return Enum;\n}(Base));\nexport { Enum };\nvar EnumBox = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(EnumBox, _super);\n    function EnumBox(value, type) {\n        var _this = _super.call(this) || this;\n        _this.value = value;\n        _this.$type = type;\n        return _this;\n    }\n    EnumBox.prototype.getHashCode = function () {\n        return this.value;\n    };\n    // TODO: Fill out remaining IConvertible implementation\n    EnumBox.prototype.toDouble = function (provider) {\n        return this.value;\n    };\n    EnumBox.prototype.toString = function () {\n        return EnumUtil.getName(this.$type, this.value);\n    };\n    return EnumBox;\n}(Enum));\nexport function getBoxIfEnum($t, v) {\n    if (v !== null && $t) { // TODO: Remove the $t check here and fix the null ref issue\n        if ($t.isNullable) {\n            $t = $t.typeArguments[0];\n        }\n        if ($t.isEnumType) {\n            return enumGetBox($t, v);\n        }\n    }\n    return v;\n}\n;\nexport function enumGetBox($t, v) {\n    if (!$t._boxes) {\n        $t._boxes = {};\n    }\n    if (!$t._boxes[v]) {\n        $t._boxes[v] = new EnumBox(v, $t);\n    }\n    return $t._boxes[v];\n}\nvar EnumUtil = /** @class */ /*@__PURE__*/ (function () {\n    function EnumUtil() {\n    }\n    EnumUtil.getValueFromName = function (values, enumType, value, ignoreCase) {\n        if (values.hasOwnProperty(value)) {\n            return enumGetBox(enumType, values[value]);\n        }\n        else if (ignoreCase) {\n            var upper = value.toUpperCase();\n            for (var x in values) {\n                if (x.toUpperCase() === upper) {\n                    return enumGetBox(enumType, values[x]);\n                }\n            }\n        }\n        else {\n            // A.S. Nov 4, 2016 Adjusted to handle case where leading char is _.\n            var firstChar = value.charAt(0);\n            if (firstChar != \"_\") {\n                value = firstChar.toLowerCase() + value.substr(1);\n            }\n            else {\n                value = \"_\" + value.charAt(1).toLowerCase() + value.substr(2);\n            }\n            if (values.hasOwnProperty(value)) {\n                return enumGetBox(enumType, values[value]);\n            }\n        }\n        return null;\n    };\n    EnumUtil.parse = function (enumType, value, ignoreCase) {\n        //var info = Type.getDefinedNameAndNamespace(enumType.fullName);\n        //if (Type.canAssign(this.$type, enumType)) \n        {\n            //var p = info.namespace[ info.name ].prototype;\n            var values = enumType.isEnumType ? enumType.enumInfo.actualNamesValuesMap : enumType.InstanceConstructor.prototype;\n            var val = EnumUtil.getValueFromName(values, enumType, value, ignoreCase);\n            if (val !== null) {\n                return val;\n            }\n            if (enumType.isEnumType) {\n                values = enumType.enumInfo.namesValuesMap;\n                var val_1 = EnumUtil.getValueFromName(values, enumType, value, ignoreCase);\n                if (val_1 !== null) {\n                    return val_1;\n                }\n            }\n        }\n        throw new Error(\"Invalid \" + enumType.name + \" value: \" + value);\n    };\n    // static $getName(value: number): string {\n    // }\n    // static $value(): number {\n    // }\n    //private _v: number;\n    EnumUtil.enumHasFlag = function (value, flag) {\n        /*jslint bitwise: true */\n        return (value & flag) === flag;\n    };\n    EnumUtil.toString = function (enumType, value) {\n        return EnumUtil.getName(enumType, value);\n    };\n    EnumUtil.getName = function (enumType, v) {\n        if (enumType._nameMap == undefined) {\n            var vals = EnumUtil.getValues(enumType);\n            var names = enumType.isEnumType ? enumType.enumInfo.names : EnumUtil.getNames(enumType);\n            var map = {};\n            for (var i = 0; i < vals.length; i++) {\n                map[vals[i]] = names[i];\n            }\n            enumType._nameMap = map;\n        }\n        var lookup = enumType._nameMap;\n        return lookup[v];\n    };\n    EnumUtil.getFlaggedName = function (enumType, v, getName) {\n        var _this = this;\n        var names = [];\n        var original = v;\n        var zeroValueName;\n        var value;\n        var values = [];\n        for (var p in this) {\n            if (this.hasOwnProperty(p)) {\n                value = enumType[p];\n                if (typeof enumType[p] == \"number\") {\n                    values.push(p);\n                }\n            }\n        }\n        values.sort(function (a, b) { return _this[a] - _this[b]; });\n        for (var i = values.length - 1; i >= 0; i--) {\n            value = this[values[i]];\n            if (value === 0) {\n                zeroValueName = getName(0);\n            }\n            /*jslint bitwise: true */\n            else if ((v & value) === value) {\n                v -= value;\n                names.unshift(getName(value));\n            }\n        }\n        if (v !== 0) {\n            return original.toString();\n        }\n        if (original !== 0) {\n            return names.join(\", \");\n        }\n        return zeroValueName || \"0\";\n    };\n    EnumUtil.getValues = function ($t) {\n        var result = [];\n        if ($t.isEnumType) {\n            for (var i = 0; i < $t.enumInfo.actualNames.length; i++) {\n                result.push($t.enumInfo.actualNamesValuesMap[$t.enumInfo.actualNames[i]]);\n            }\n            return result;\n        }\n        var p = $t.isEnumType ?\n            $t.enumInfo.actualNames : $t.InstanceConstructor.prototype;\n        for (var member in p) {\n            if (p.hasOwnProperty(member)) {\n                if (typeof p[member] === \"number\") {\n                    result.push(p[member]);\n                }\n            }\n        }\n        return result;\n    };\n    EnumUtil.getNames = function ($t) {\n        var result = [];\n        if ($t.isEnumType) {\n            for (var i = 0; i < $t.enumInfo.actualNames.length; i++) {\n                result.push($t.enumInfo.actualNames[i]);\n            }\n            return result;\n        }\n        var p = $t.isEnumType ?\n            $t.enumInfo.actualNames : $t.InstanceConstructor.prototype;\n        for (var member in p) {\n            if (p.hasOwnProperty(member)) {\n                if (typeof p[member] === \"number\") {\n                    result.push(member);\n                }\n            }\n        }\n        return result;\n    };\n    EnumUtil.getEnumValue = function ($t, v) {\n        if (v !== null) {\n            if (typeof v === \"number\") {\n                return v;\n            }\n            else {\n                return v.value;\n            }\n        }\n        return 0;\n    };\n    EnumUtil.isDefined = function ($t, value) {\n        value = typeGetValue(value);\n        var p = $t.isEnumType ?\n            $t.enumInfo.actualNamesValuesMap : $t.InstanceConstructor.prototype;\n        for (var member in p) {\n            if (p.hasOwnProperty(member)) {\n                if (p[member] === value) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\n    // TODO: Fill out remaining IConvertible implementation\n    EnumUtil.toDouble = function (enumType, value, provider) {\n        return value.value;\n    };\n    EnumUtil.toObject = function ($t, value) {\n        return value;\n    };\n    EnumUtil.tryParse$1 = function ($tEnum, value, ignoreCase, result) {\n        try {\n            return {\n                ret: true,\n                p2: typeGetValue(EnumUtil.parse($tEnum, value, ignoreCase))\n            };\n        }\n        catch (e) {\n            result = Type.createInstance($tEnum);\n            return {\n                ret: false,\n                p2: result\n            };\n        }\n    };\n    return EnumUtil;\n}());\nexport { EnumUtil };\nvar ValueType = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ValueType, _super);\n    function ValueType() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ValueType.$t = markType(ValueType, \"ValueType\");\n    return ValueType;\n}(Base));\nexport { ValueType };\nvar Nullable = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(Nullable, _super);\n    function Nullable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Nullable.getUnderlyingType = function (nullableType) {\n        if (nullableType.isGenericType !== undefined && nullableType.isGenericType &&\n            !nullableType.isGenericTypeDefinition &&\n            Nullable$1.prototype.$type.typeName == nullableType.typeName) {\n            return nullableType.genericTypeArguments[0];\n        }\n        return null;\n    };\n    Nullable.$t = markType(Nullable, \"Nullable\");\n    return Nullable;\n}(Base));\nexport { Nullable };\nvar Nullable$1 = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(Nullable$1, _super);\n    function Nullable$1($t, value) {\n        var _this = _super.call(this) || this;\n        _this.$t = null;\n        _this._value = null;\n        _this.isNullable = true;\n        _this.$t = $t;\n        _this.$type = _this.$type.specialize(_this.$t);\n        if (value !== undefined) {\n            _this._value = value;\n        }\n        return _this;\n    }\n    Nullable$1.nullableEquals = function (v1, v2) {\n        /*jshint eqnull:true */\n        var v1IsNull = (v1 == null) || (!!v1.isNullable && !v1.hasValue);\n        var v2IsNull = (v2 == null) || (!!v2.isNullable && !v2.hasValue);\n        if (v1IsNull && v2IsNull) {\n            return true;\n        }\n        if (v1IsNull != v2IsNull) {\n            return false;\n        }\n        var val1 = v1;\n        var val2 = v2;\n        if (v1.isNullable) {\n            val1 = v1.value;\n        }\n        if (v2.isNullable) {\n            val2 = v2.value;\n        }\n        return val1 == val2;\n    };\n    Nullable$1.prototype.equals = function (value) {\n        return Nullable$1.nullableEquals(this, value);\n    };\n    Nullable$1.prototype.getHashCode = function () {\n        if (this._value === null) {\n            return 0;\n        }\n        if (this._value[\"getHashCode\"] !== undefined) {\n            return this._value.getHashCode();\n        }\n        return Type.getPrimitiveHashCode(this._value);\n    };\n    Object.defineProperty(Nullable$1.prototype, \"hasValue\", {\n        get: function () {\n            return this._value !== null;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Nullable$1.prototype.toString = function () {\n        return this._value === null ? \"\" : this._value.toString();\n    };\n    Object.defineProperty(Nullable$1.prototype, \"value\", {\n        get: function () {\n            return this._value;\n        },\n        set: function (value) {\n            this._value = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Nullable$1.prototype.getValueOrDefault = function () {\n        if (this.hasValue) {\n            return this._value;\n        }\n        else {\n            return this.getDefaultValue();\n        }\n    };\n    Nullable$1.prototype.getDefaultValue = function () {\n        if (Type.canAssign(Number_$type, this.$t)) {\n            return 0;\n        }\n        else if (Type.canAssign(Boolean_$type, this.$t)) {\n            return false;\n        }\n        else if (this.$t.baseType == ValueType.prototype.$type) {\n            return Type.createInstance(this.$t);\n        }\n        else {\n            return null;\n        }\n    };\n    Nullable$1.prototype.getValueOrDefault1 = function (defaultValue) {\n        if (this.hasValue) {\n            return this._value;\n        }\n        else {\n            return defaultValue;\n        }\n    };\n    Nullable$1.prototype.preIncrement = function () {\n        if (!this.hasValue) {\n            return this;\n        }\n        this._value = (this._value + 1);\n        return this;\n    };\n    Nullable$1.prototype.preDecrement = function () {\n        if (!this.hasValue) {\n            return this;\n        }\n        this._value = (this._value - 1);\n        return this;\n    };\n    Nullable$1.prototype.postIncrement = function () {\n        if (!this.hasValue) {\n            return this;\n        }\n        var originalValue = this._value;\n        this._value = (this._value + 1);\n        return new Nullable$1(this.$t, originalValue);\n    };\n    Nullable$1.prototype.postDecrement = function () {\n        if (!this.hasValue) {\n            return this;\n        }\n        var originalValue = this._value;\n        this._value = (this._value - 1);\n        return new Nullable$1(this.$t, originalValue);\n    };\n    Nullable$1.$t = markType(Nullable$1, \"Nullable$1\");\n    return Nullable$1;\n}(Base));\nexport { Nullable$1 };\nexport function toNullable(t, value) {\n    if (value == null) {\n        return t._$nullNullable || (t._$nullNullable = new Nullable$1(t, null));\n    }\n    else if (value.isNullable) {\n        return value;\n    }\n    return new Nullable$1(t, value);\n}\nexport var IComparable_$type = /*@__PURE__*/ new Type(null, \"IComparable\");\nexport var IComparable$1_$type = /*@__PURE__*/ new Type(null, \"IComparable$1\");\nexport var IEquatable$1_$type = /*@__PURE__*/ new Type(null, \"IEquatable$1\");\nexport var INotifyPropertyChanged_$type = /*@__PURE__*/ new Type(null, \"INotifyPropertyChanged\");\nvar PropertyChangedEventArgs = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(PropertyChangedEventArgs, _super);\n    function PropertyChangedEventArgs(propertyName) {\n        var _this = _super.call(this) || this;\n        _this._propertyName = null;\n        _this._propertyName = propertyName;\n        return _this;\n    }\n    Object.defineProperty(PropertyChangedEventArgs.prototype, \"propertyName\", {\n        get: function () {\n            return this._propertyName;\n        },\n        set: function (value) {\n            this._propertyName = value;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    PropertyChangedEventArgs.$t = markType(PropertyChangedEventArgs, \"PropertyChangedEventArgs\");\n    return PropertyChangedEventArgs;\n}(Base));\nexport { PropertyChangedEventArgs };\nvar IteratorWrapper = /** @class */ /*@__PURE__*/ (function () {\n    function IteratorWrapper(inner, getNew) {\n        this._inner = null;\n        this._getNew = null;\n        this._hasNext = true;\n        this._current = null;\n        this._inner = inner;\n        this._getNew = getNew;\n    }\n    IteratorWrapper.prototype.moveNext = function () {\n        var next = this._inner.next();\n        this._hasNext = !next.done;\n        this._current = next.value;\n        return this._hasNext;\n    };\n    Object.defineProperty(IteratorWrapper.prototype, \"current\", {\n        get: function () {\n            return this._current;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IteratorWrapper.prototype, \"currentObject\", {\n        get: function () {\n            return this._current;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IteratorWrapper.prototype.dispose = function () {\n    };\n    IteratorWrapper.prototype.reset = function () {\n        this._inner = this._getNew();\n        this._current = null;\n        this._hasNext = true;\n    };\n    return IteratorWrapper;\n}());\nexport { IteratorWrapper };\nvar IterableWrapper = /** @class */ /*@__PURE__*/ (function () {\n    function IterableWrapper(inner) {\n        this._inner = null;\n        this._inner = inner;\n    }\n    IterableWrapper.prototype.getEnumerator = function () {\n        var _this = this;\n        return new IteratorWrapper(this._inner()[Symbol.iterator](), function () { return _this._inner()[Symbol.iterator](); });\n    };\n    IterableWrapper.prototype.getEnumeratorObject = function () {\n        var _this = this;\n        return new IteratorWrapper(this._inner()[Symbol.iterator](), function () { return _this._inner()[Symbol.iterator](); });\n    };\n    return IterableWrapper;\n}());\nexport { IterableWrapper };\nvar EnumeratorWrapper = /** @class */ /*@__PURE__*/ (function () {\n    function EnumeratorWrapper(inner) {\n        this._inner = null;\n        this._inner = inner;\n    }\n    EnumeratorWrapper.prototype.next = function () {\n        var done = !this._inner.moveNext();\n        var value = null;\n        if (!done) {\n            value = this._inner.current;\n        }\n        return {\n            done: done,\n            value: value\n        };\n    };\n    return EnumeratorWrapper;\n}());\nexport { EnumeratorWrapper };\nvar EnumeratorWrapperObject = /** @class */ /*@__PURE__*/ (function () {\n    function EnumeratorWrapperObject(inner) {\n        this._inner = null;\n        this._inner = inner;\n    }\n    EnumeratorWrapperObject.prototype.next = function () {\n        var done = !this._inner.moveNext();\n        var value = null;\n        if (!done) {\n            value = this._inner.currentObject;\n        }\n        return {\n            done: done,\n            value: value\n        };\n    };\n    return EnumeratorWrapperObject;\n}());\nexport { EnumeratorWrapperObject };\nexport function getEn(arr) {\n    var arr_1, arr_1_1, item, e_2_1;\n    var e_2, _a;\n    return __generator(this, function (_b) {\n        switch (_b.label) {\n            case 0:\n                _b.trys.push([0, 5, 6, 7]);\n                arr_1 = __values(arr), arr_1_1 = arr_1.next();\n                _b.label = 1;\n            case 1:\n                if (!!arr_1_1.done)\n                    return [3 /*break*/, 4];\n                item = arr_1_1.value;\n                return [4 /*yield*/, item];\n            case 2:\n                _b.sent();\n                _b.label = 3;\n            case 3:\n                arr_1_1 = arr_1.next();\n                return [3 /*break*/, 1];\n            case 4: return [3 /*break*/, 7];\n            case 5:\n                e_2_1 = _b.sent();\n                e_2 = { error: e_2_1 };\n                return [3 /*break*/, 7];\n            case 6:\n                try {\n                    if (arr_1_1 && !arr_1_1.done && (_a = arr_1.return))\n                        _a.call(arr_1);\n                }\n                finally {\n                    if (e_2)\n                        throw e_2.error;\n                }\n                return [7 /*endfinally*/];\n            case 7: return [2 /*return*/];\n        }\n    });\n}\nexport function getEnumeratorObject(en) {\n    if ((en instanceof Array || Array.isArray(en))) {\n        var arr_2 = en;\n        return new IteratorWrapper(getEn(arr_2), function () { return getEn(arr_2); });\n    }\n    return en.getEnumeratorObject();\n}\nexport function getEnumerator(en) {\n    if ((en instanceof Array || Array.isArray(en))) {\n        var arr_3 = en;\n        return new IteratorWrapper(getEn(arr_3), function () { return getEn(arr_3); });\n    }\n    return en.getEnumerator();\n}\nvar EnumerableWrapper = /** @class */ /*@__PURE__*/ (function () {\n    function EnumerableWrapper(inner) {\n        this._inner = null;\n        this._inner = inner;\n    }\n    EnumerableWrapper.prototype[Symbol.iterator] = function () {\n        return new EnumeratorWrapper(getEnumerator(this._inner));\n    };\n    return EnumerableWrapper;\n}());\nexport { EnumerableWrapper };\nvar EnumerableWrapperObject = /** @class */ /*@__PURE__*/ (function () {\n    function EnumerableWrapperObject(inner) {\n        this._inner = null;\n        this._inner = inner;\n    }\n    EnumerableWrapperObject.prototype[Symbol.iterator] = function () {\n        return new EnumeratorWrapperObject(getEnumeratorObject(this._inner));\n    };\n    return EnumerableWrapperObject;\n}());\nexport { EnumerableWrapperObject };\nexport function toEnum(v) {\n    return new IterableWrapper(v);\n}\nexport function fromEnum(v) {\n    return new EnumerableWrapper(v);\n}\nexport function toEn(v) {\n    return new IterableWrapper(v);\n}\nexport function fromEn(v) {\n    return new EnumerableWrapperObject(v);\n}\nexport function fromDict(v) {\n    var v_1, v_1_1, item, _a, key, value, e_3_1;\n    var e_3, _b;\n    return __generator(this, function (_c) {\n        switch (_c.label) {\n            case 0:\n                _c.trys.push([0, 5, 6, 7]);\n                v_1 = __values(v), v_1_1 = v_1.next();\n                _c.label = 1;\n            case 1:\n                if (!!v_1_1.done)\n                    return [3 /*break*/, 4];\n                item = v_1_1.value;\n                _a = __read(item, 2), key = _a[0], value = _a[1];\n                return [4 /*yield*/, { key: key, value: value }];\n            case 2:\n                _c.sent();\n                _c.label = 3;\n            case 3:\n                v_1_1 = v_1.next();\n                return [3 /*break*/, 1];\n            case 4: return [3 /*break*/, 7];\n            case 5:\n                e_3_1 = _c.sent();\n                e_3 = { error: e_3_1 };\n                return [3 /*break*/, 7];\n            case 6:\n                try {\n                    if (v_1_1 && !v_1_1.done && (_b = v_1.return))\n                        _b.call(v_1);\n                }\n                finally {\n                    if (e_3)\n                        throw e_3.error;\n                }\n                return [7 /*endfinally*/];\n            case 7: return [2 /*return*/];\n        }\n    });\n}\nexport var Number_$type = /*@__PURE__*/ new Type(Number, \"Number\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\nexport var String_$type = /*@__PURE__*/ new Type(String, \"String\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\nexport var Date_$type = /*@__PURE__*/ new Type(Date, \"Date\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\nexport var Boolean_$type = /*@__PURE__*/ new Type(Boolean, \"Boolean\", Base.prototype.$type, [IComparable_$type, IConvertible_$type]);\nexport var Void_$type = /*@__PURE__*/ new Type(null, \"Void\", Base.prototype.$type);\nexport var n$ = Number_$type;\nexport var s$ = String_$type;\nexport var d$ = Date_$type;\nexport var b$ = Boolean_$type;\nexport var v$ = Void_$type;\nexport var Delegate_$type = /*@__PURE__*/ new Type(null, \"Delegate\");\nexport function runOn(target, func) {\n    var self = func;\n    var ret = function () {\n        return self.apply(target, arguments);\n    };\n    ret.original = self;\n    ret.target = target;\n    return ret;\n}\nexport function delegateCombine(del1, del2) {\n    if (!del1) {\n        return del2;\n    }\n    if (!del2) {\n        return del1;\n    }\n    var ret = function () {\n        del1.apply(null, arguments);\n        return del2.apply(null, arguments);\n    };\n    ret.enumerate = function (arr) {\n        if (del1) {\n            if (del1.enumerate) {\n                del1.enumerate(arr);\n            }\n            else {\n                arr.push(del1);\n            }\n        }\n        if (del2) {\n            if (del2.enumerate) {\n                del2.enumerate(arr);\n            }\n            else {\n                arr.push(del2);\n            }\n        }\n    };\n    return ret;\n}\n;\nexport function delegateRemove(del1, del2) {\n    if (!del1) {\n        return null;\n    }\n    if (!del2) {\n        return del1;\n    }\n    var arr = [];\n    var del = null;\n    if (del1.enumerate) {\n        del1.enumerate(arr);\n    }\n    else {\n        arr.push(del1);\n    }\n    for (var i = 0; i < arr.length; i++) {\n        if (del2.original) {\n            if (arr[i].original == del2.original &&\n                arr[i].target == del2.target) {\n                continue;\n            }\n        }\n        if (arr[i] == del2) {\n            continue;\n        }\n        del = delegateCombine(del, arr[i]);\n    }\n    return del;\n}\n;\nexport var IDisposable_$type = /*@__PURE__*/ new Type(null, 'IDisposable');\nexport var IEnumerable_$type = /*@__PURE__*/ new Type(null, \"IEnumerable\");\nexport var IEnumerator_$type = /*@__PURE__*/ new Type(null, \"IEnumerator\");\nexport var IEqualityComparer$1_$type = /*@__PURE__*/ new Type(null, \"IEqualityComparer$1\");\nexport var IEqualityComparer_$type = /*@__PURE__*/ new Type(null, \"IEqualityComparer\");\nexport var ICollection_$type = /*@__PURE__*/ new Type(null, \"ICollection\", null, [IEnumerable_$type]);\nexport var IList_$type = /*@__PURE__*/ new Type(null, \"IList\", null, [IEnumerable_$type, ICollection_$type]);\nexport var IEnumerable$1_$type = /*@__PURE__*/ new Type(null, \"IEnumerable$1\", null, [IEnumerable_$type]);\nexport var ICollection$1_$type = /*@__PURE__*/ new Type(null, \"ICollection$1\", null, [/*@__PURE__*/ IEnumerable$1_$type.specialize(0), IEnumerable_$type]);\nexport var IList$1_$type = /*@__PURE__*/ new Type(null, \"IList$1\", null, [\n    /*@__PURE__*/ ICollection$1_$type.specialize(0),\n    /*@__PURE__*/ IEnumerable$1_$type.specialize(0),\n    IEnumerable_$type\n]);\nexport var IEnumerator$1_$type = /*@__PURE__*/ new Type(null, \"IEnumerator$1\", null, [IEnumerator_$type, IDisposable_$type]);\nexport var IDictionary_$type = /*@__PURE__*/ new Type(null, \"IDictionary\");\nvar BaseError = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(BaseError, _super);\n    function BaseError(initNumber) {\n        if (initNumber === void 0) {\n            initNumber = -1;\n        }\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this._message = null;\n        _this._innerException = null;\n        if (initNumber >= 0) {\n            switch (initNumber) {\n                case 1:\n                    _this.init1.apply(_this, arguments);\n                    break;\n                case 2:\n                    _this.init2.apply(_this, arguments);\n                    break;\n            }\n        }\n        return _this;\n    }\n    BaseError.prototype.get_message = function () {\n        return this._message;\n    };\n    Object.defineProperty(BaseError.prototype, \"message\", {\n        get: function () {\n            return this.get_message();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(BaseError.prototype, \"innerException\", {\n        get: function () {\n            return this._innerException;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    BaseError.prototype.init1 = function (initNumber, message) {\n        this._message = message;\n    };\n    BaseError.prototype.init2 = function (initNumber, message, innerException) {\n        this._message = message;\n        this._innerException = innerException;\n    };\n    BaseError.prototype.toString = function () {\n        return this._message;\n    };\n    BaseError.$t = markType(BaseError, \"BaseError\");\n    return BaseError;\n}(Base));\nexport { BaseError };\nvar SystemException = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(SystemException, _super);\n    function SystemException(initNumber) {\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, 0) || this;\n        if (initNumber > 0) {\n            switch (initNumber) {\n                case 1:\n                    _this.init1.apply(_this, arguments);\n                    break;\n                case 2:\n                    _this.init2.apply(_this, arguments);\n                    break;\n            }\n            return _this;\n        }\n        return _this;\n        //super(0);\n    }\n    SystemException.prototype.init1 = function (initNumber, message) {\n        _super.prototype.init1.call(this, 1, message);\n    };\n    SystemException.prototype.init2 = function (initNumber, message, innerException) {\n        _super.prototype.init2.call(this, 2, message, innerException);\n    };\n    SystemException.$t = markType(SystemException, \"SystemException\", BaseError.prototype.$type);\n    return SystemException;\n}(BaseError));\nexport { SystemException };\nvar NotSupportedException = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(NotSupportedException, _super);\n    function NotSupportedException(initNumber) {\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, 0) || this;\n        if (initNumber > 0) {\n            switch (initNumber) {\n                case 1:\n                    _this.init1.apply(_this, arguments);\n                    break;\n                case 2:\n                    _this.init2.apply(_this, arguments);\n                    break;\n            }\n            return _this;\n        }\n        return _this;\n    }\n    NotSupportedException.prototype.init1 = function (initNumber, message) {\n        _super.prototype.init1.call(this, 1, message);\n    };\n    NotSupportedException.prototype.init2 = function (initNumber, message, innerException) {\n        _super.prototype.init2.call(this, 2, message, innerException);\n    };\n    NotSupportedException.$t = markType(NotSupportedException, \"NotSupportedException\", SystemException.prototype.$type);\n    return NotSupportedException;\n}(SystemException));\nexport { NotSupportedException };\nvar FormatException = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(FormatException, _super);\n    function FormatException(initNumber) {\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        var _this = _super.call(this, 0) || this;\n        if (initNumber > 0) {\n            switch (initNumber) {\n                case 1:\n                    _this.init1.apply(_this, arguments);\n                    break;\n                case 2:\n                    _this.init2.apply(_this, arguments);\n                    break;\n            }\n            return _this;\n        }\n        return _this;\n    }\n    FormatException.prototype.init1 = function (initNumber, message) {\n        _super.prototype.init1.call(this, 1, message);\n    };\n    FormatException.prototype.init2 = function (initNumber, message, innerException) {\n        _super.prototype.init2.call(this, 2, message, innerException);\n    };\n    FormatException.$t = markType(FormatException, \"FormatException\", SystemException.prototype.$type);\n    return FormatException;\n}(SystemException));\nexport { FormatException };\nvar PointUtil = /** @class */ /*@__PURE__*/ (function () {\n    function PointUtil() {\n    }\n    PointUtil.equals = function (p1, p2) {\n        if (p1 == null && p2 == null) {\n            return true;\n        }\n        if (p1 == null && p2 != null) {\n            return false;\n        }\n        if (p1 != null && p2 == null) {\n            return false;\n        }\n        return p1.x == p2.x && p1.y == p2.y;\n    };\n    PointUtil.notEquals = function (p1, p2) {\n        return !PointUtil.equals(p1, p2);\n    };\n    PointUtil.create = function () {\n        return { x: 0, y: 0, $type: Point_$type };\n    };\n    PointUtil.createXY = function (x, y) {\n        return { x: x, y: y, $type: Point_$type };\n    };\n    return PointUtil;\n}());\nexport { PointUtil };\nexport var Point_$type = /*@__PURE__*/ new Type(null, \"Point\");\nexport var SeekOrigin = /*@__PURE__*/ (function (SeekOrigin) {\n    SeekOrigin[SeekOrigin[\"Begin\"] = 0] = \"Begin\";\n    SeekOrigin[SeekOrigin[\"Current\"] = 1] = \"Current\";\n    SeekOrigin[SeekOrigin[\"End\"] = 2] = \"End\";\n    return SeekOrigin;\n})({});\nvar Stream = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(Stream, _super);\n    function Stream() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Stream.prototype.close = function () {\n        this.disposeCore(true);\n    };\n    Stream.prototype.dispose = function () {\n        this.close();\n    };\n    Stream.prototype.disposeCore = function (disposing) {\n    };\n    Stream.prototype.readByte = function () {\n        var bytes = [0];\n        var count = this.read(bytes, 0, 1);\n        if (count === 0) {\n            return -1;\n        }\n        return bytes[0];\n    };\n    Stream.prototype.writeByte = function (value) {\n        this.write([value], 0, 1);\n    };\n    Stream.$t = markType(Stream, \"Stream\");\n    return Stream;\n}(Base));\nexport { Stream };\nvar EventArgs = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(EventArgs, _super);\n    function EventArgs() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Object.defineProperty(EventArgs, \"empty\", {\n        get: function () {\n            if (EventArgs._empty) {\n                return EventArgs._empty;\n            }\n            EventArgs._empty = new EventArgs;\n            return EventArgs._empty;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    EventArgs.$t = markType(EventArgs, \"EventArgs\");\n    return EventArgs;\n}(Base));\nexport { EventArgs };\nexport var IFormatProvider_$type = /*@__PURE__*/ new Type(null, 'IFormatProvider');\nexport var Array_$type = /*@__PURE__*/ new Type(Array, \"Array\", Base.prototype.$type, [IEnumerable_$type, ICollection_$type]);\nexport var a$ = Array_$type;\nvar TypeRegistrar = /** @class */ /*@__PURE__*/ (function () {\n    function TypeRegistrar() {\n    }\n    TypeRegistrar.create = function (typeName) {\n        var rest = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            rest[_i - 1] = arguments[_i];\n        }\n        if (TypeRegistrar.isRegistered(typeName)) {\n            var C = TypeRegistrar.get(typeName);\n            if (C.htmlTagName) {\n                return document.createElement(C.htmlTagName);\n            }\n            else {\n                return new (C.bind.apply(C, __spreadArray([void 0], __read(rest), false)))();\n            }\n        }\n        else {\n            return null;\n        }\n    };\n    TypeRegistrar.register = function (typeName, type) {\n        TypeRegistrar._registrar.set(typeName, type.InstanceConstructor);\n    };\n    TypeRegistrar.registerCons = function (typeName, type) {\n        TypeRegistrar._registrar.set(typeName, type);\n    };\n    TypeRegistrar.callRegister = function (typeName) {\n        var type = TypeRegistrar.get(typeName);\n        if (type !== undefined && type !== null &&\n            type[\"register\"] !== undefined) {\n            type[\"register\"]();\n        }\n    };\n    TypeRegistrar.isRegistered = function (typeName) {\n        return TypeRegistrar.get(typeName) !== null;\n    };\n    TypeRegistrar.get = function (typeName) {\n        if (TypeRegistrar._registrar.has(typeName)) {\n            return TypeRegistrar._registrar.get(typeName);\n        }\n        if (typeName.indexOf(\"Igx\") == 0) {\n            var igc = typeName.replace(\"Igx\", \"Igc\");\n            if (TypeRegistrar._registrar.has(igc)) {\n                return TypeRegistrar._registrar.get(igc);\n            }\n            var igr = typeName.replace(\"Igx\", \"Igr\");\n            if (igr.indexOf(\"Component\") == igr.length - 9) {\n                igr = igr.substring(0, igr.length - 9);\n            }\n            if (TypeRegistrar._registrar.has(igr)) {\n                return TypeRegistrar._registrar.get(igr);\n            }\n        }\n        return null;\n    };\n    TypeRegistrar.createFromInternal = function (internal, prefix, postfix) {\n        if (!internal) {\n            return null;\n        }\n        if (!internal.$type) {\n            return null;\n        }\n        var name = internal.$type.name;\n        var externalName = prefix + name + postfix;\n        if (!TypeRegistrar.isRegistered(externalName)) {\n            return null;\n        }\n        return TypeRegistrar.create(externalName);\n    };\n    TypeRegistrar._registrar = new Map();\n    return TypeRegistrar;\n}());\nexport { TypeRegistrar };\n"]},"metadata":{},"sourceType":"module"}