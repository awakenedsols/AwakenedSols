{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar CommodityChannelIndexIndicatorStrategy =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(CommodityChannelIndexIndicatorStrategy, _super);\n\n  function CommodityChannelIndexIndicatorStrategy() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CommodityChannelIndexIndicatorStrategy.prototype.b = function (a, b) {\n    var c = new List$1(String_$type, 0);\n    c.o(a.typicalColumn.basedOn);\n    c.o(b.c.c);\n    return c;\n  };\n\n  CommodityChannelIndexIndicatorStrategy.prototype.a = function (a, b) {\n    var c = a.period;\n    var d = a.typicalColumn;\n    var e = a.indicatorColumn;\n    var f = getEnumerator(b.c.b(d, c));\n    var g = getEnumerator(d);\n    var h = new Array(c);\n\n    for (var i = 0; i < c; i++) {\n      h[i] = 0;\n    }\n\n    var j = 0;\n\n    while (g.moveNext() && f.moveNext()) {\n      h[j % c] = g.current;\n      var k = 0;\n\n      for (var l = 0; l < c; ++l) {\n        k += Math.abs(f.current - h[l]);\n      }\n\n      k /= c;\n      e.item(j, b.i((g.current - f.current) / (0.015 * k)));\n      ++j;\n    }\n\n    return true;\n  };\n\n  CommodityChannelIndexIndicatorStrategy.$t = markType(CommodityChannelIndexIndicatorStrategy, 'CommodityChannelIndexIndicatorStrategy', IndicatorCalculationStrategy.$);\n  return CommodityChannelIndexIndicatorStrategy;\n}(IndicatorCalculationStrategy);\n\nexport { CommodityChannelIndexIndicatorStrategy };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/CommodityChannelIndexIndicatorStrategy.js"],"names":["__extends","IndicatorCalculationStrategy","String_$type","markType","getEnumerator","List$1","CommodityChannelIndexIndicatorStrategy","_super","apply","arguments","prototype","b","a","c","o","typicalColumn","basedOn","period","d","e","indicatorColumn","f","g","h","Array","i","j","moveNext","current","k","l","Math","abs","item","$t","$"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,4BAAT,QAA6C,gCAA7C;AACA,SAASC,YAAT,EAAuBC,QAAvB,EAAiCC,aAAjC,QAAsD,qBAAtD;AACA,SAASC,MAAT,QAAuB,qBAAvB;AACA;AACA;AACA;;AACA,IAAIC,sCAAsC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACxFP,EAAAA,SAAS,CAACM,sCAAD,EAAyCC,MAAzC,CAAT;;AACA,WAASD,sCAAT,GAAkD;AAC9C,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,sCAAsC,CAACI,SAAvC,CAAiDC,CAAjD,GAAqD,UAAUC,CAAV,EAAaD,CAAb,EAAgB;AACjE,QAAIE,CAAC,GAAG,IAAIR,MAAJ,CAAWH,YAAX,EAAyB,CAAzB,CAAR;AACAW,IAAAA,CAAC,CAACC,CAAF,CAAIF,CAAC,CAACG,aAAF,CAAgBC,OAApB;AACAH,IAAAA,CAAC,CAACC,CAAF,CAAIH,CAAC,CAACE,CAAF,CAAIA,CAAR;AACA,WAAOA,CAAP;AACH,GALD;;AAMAP,EAAAA,sCAAsC,CAACI,SAAvC,CAAiDE,CAAjD,GAAqD,UAAUA,CAAV,EAAaD,CAAb,EAAgB;AACjE,QAAIE,CAAC,GAAGD,CAAC,CAACK,MAAV;AACA,QAAIC,CAAC,GAAGN,CAAC,CAACG,aAAV;AACA,QAAII,CAAC,GAAGP,CAAC,CAACQ,eAAV;AACA,QAAIC,CAAC,GAAGjB,aAAa,CAACO,CAAC,CAACE,CAAF,CAAIF,CAAJ,CAAMO,CAAN,EAASL,CAAT,CAAD,CAArB;AACA,QAAIS,CAAC,GAAGlB,aAAa,CAACc,CAAD,CAArB;AACA,QAAIK,CAAC,GAAG,IAAIC,KAAJ,CAAUX,CAAV,CAAR;;AACA,SAAK,IAAIY,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGZ,CAApB,EAAuBY,CAAC,EAAxB,EAA4B;AACxBF,MAAAA,CAAC,CAACE,CAAD,CAAD,GAAO,CAAP;AACH;;AACD,QAAIC,CAAC,GAAG,CAAR;;AACA,WAAOJ,CAAC,CAACK,QAAF,MAAgBN,CAAC,CAACM,QAAF,EAAvB,EAAqC;AACjCJ,MAAAA,CAAC,CAACG,CAAC,GAAGb,CAAL,CAAD,GAAWS,CAAC,CAACM,OAAb;AACA,UAAIC,CAAC,GAAG,CAAR;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGjB,CAApB,EAAuB,EAAEiB,CAAzB,EAA4B;AACxBD,QAAAA,CAAC,IAAIE,IAAI,CAACC,GAAL,CAASX,CAAC,CAACO,OAAF,GAAYL,CAAC,CAACO,CAAD,CAAtB,CAAL;AACH;;AACDD,MAAAA,CAAC,IAAIhB,CAAL;AACAM,MAAAA,CAAC,CAACc,IAAF,CAAOP,CAAP,EAAUf,CAAC,CAACc,CAAF,CAAI,CAACH,CAAC,CAACM,OAAF,GAAYP,CAAC,CAACO,OAAf,KAA2B,QAAQC,CAAnC,CAAJ,CAAV;AACA,QAAEH,CAAF;AACH;;AACD,WAAO,IAAP;AACH,GAtBD;;AAuBApB,EAAAA,sCAAsC,CAAC4B,EAAvC,GAA4C/B,QAAQ,CAACG,sCAAD,EAAyC,wCAAzC,EAAmFL,4BAA4B,CAACkC,CAAhH,CAApD;AACA,SAAO7B,sCAAP;AACH,CApCyE,CAoCxEL,4BApCwE,CAA1E;;AAqCA,SAASK,sCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { IndicatorCalculationStrategy } from \"./IndicatorCalculationStrategy\";\nimport { String_$type, markType, getEnumerator } from \"igniteui-react-core\";\nimport { List$1 } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar CommodityChannelIndexIndicatorStrategy = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(CommodityChannelIndexIndicatorStrategy, _super);\n    function CommodityChannelIndexIndicatorStrategy() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CommodityChannelIndexIndicatorStrategy.prototype.b = function (a, b) {\n        var c = new List$1(String_$type, 0);\n        c.o(a.typicalColumn.basedOn);\n        c.o(b.c.c);\n        return c;\n    };\n    CommodityChannelIndexIndicatorStrategy.prototype.a = function (a, b) {\n        var c = a.period;\n        var d = a.typicalColumn;\n        var e = a.indicatorColumn;\n        var f = getEnumerator(b.c.b(d, c));\n        var g = getEnumerator(d);\n        var h = new Array(c);\n        for (var i = 0; i < c; i++) {\n            h[i] = 0;\n        }\n        var j = 0;\n        while (g.moveNext() && f.moveNext()) {\n            h[j % c] = g.current;\n            var k = 0;\n            for (var l = 0; l < c; ++l) {\n                k += Math.abs(f.current - h[l]);\n            }\n            k /= c;\n            e.item(j, b.i((g.current - f.current) / (0.015 * k)));\n            ++j;\n        }\n        return true;\n    };\n    CommodityChannelIndexIndicatorStrategy.$t = markType(CommodityChannelIndexIndicatorStrategy, 'CommodityChannelIndexIndicatorStrategy', IndicatorCalculationStrategy.$);\n    return CommodityChannelIndexIndicatorStrategy;\n}(IndicatorCalculationStrategy));\nexport { CommodityChannelIndexIndicatorStrategy };\n"]},"metadata":{},"sourceType":"module"}