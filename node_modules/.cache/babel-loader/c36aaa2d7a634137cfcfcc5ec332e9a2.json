{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { isNaN_, isInfinity } from \"./number\";\n/**\n * @hidden\n */\n\nvar AngleSimplifier =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(AngleSimplifier, _super);\n\n  function AngleSimplifier() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  AngleSimplifier.a = function (a) {\n    if (isNaN_(a) || isInfinity(a)) {\n      return a;\n    }\n\n    while (a > 360) {\n      a -= 360;\n    }\n\n    while (a < 0) {\n      a += 360;\n    }\n\n    return a;\n  };\n\n  AngleSimplifier.$t = markType(AngleSimplifier, 'AngleSimplifier');\n  return AngleSimplifier;\n}(Base);\n\nexport { AngleSimplifier };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/AngleSimplifier.js"],"names":["__extends","Base","markType","isNaN_","isInfinity","AngleSimplifier","_super","apply","arguments","a","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,UAAnC;AACA;AACA;AACA;;AACA,IAAIC,eAAe;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACjEN,EAAAA,SAAS,CAACK,eAAD,EAAkBC,MAAlB,CAAT;;AACA,WAASD,eAAT,GAA2B;AACvB,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,eAAe,CAACI,CAAhB,GAAoB,UAAUA,CAAV,EAAa;AAC7B,QAAIN,MAAM,CAACM,CAAD,CAAN,IAAaL,UAAU,CAACK,CAAD,CAA3B,EAAgC;AAC5B,aAAOA,CAAP;AACH;;AACD,WAAOA,CAAC,GAAG,GAAX,EAAgB;AACZA,MAAAA,CAAC,IAAI,GAAL;AACH;;AACD,WAAOA,CAAC,GAAG,CAAX,EAAc;AACVA,MAAAA,CAAC,IAAI,GAAL;AACH;;AACD,WAAOA,CAAP;AACH,GAXD;;AAYAJ,EAAAA,eAAe,CAACK,EAAhB,GAAqBR,QAAQ,CAACG,eAAD,EAAkB,iBAAlB,CAA7B;AACA,SAAOA,eAAP;AACH,CAnBkD,CAmBjDJ,IAnBiD,CAAnD;;AAoBA,SAASI,eAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { isNaN_, isInfinity } from \"./number\";\n/**\n * @hidden\n */\nvar AngleSimplifier = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(AngleSimplifier, _super);\n    function AngleSimplifier() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    AngleSimplifier.a = function (a) {\n        if (isNaN_(a) || isInfinity(a)) {\n            return a;\n        }\n        while (a > 360) {\n            a -= 360;\n        }\n        while (a < 0) {\n            a += 360;\n        }\n        return a;\n    };\n    AngleSimplifier.$t = markType(AngleSimplifier, 'AngleSimplifier');\n    return AngleSimplifier;\n}(Base));\nexport { AngleSimplifier };\n"]},"metadata":{},"sourceType":"module"}