{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\n\nvar LinkedListNode$1 =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(LinkedListNode$1, _super);\n\n  function LinkedListNode$1($t, a) {\n    var _rest = [];\n\n    for (var _i = 2; _i < arguments.length; _i++) {\n      _rest[_i - 2] = arguments[_i];\n    }\n\n    var _this = _super.call(this) || this;\n\n    _this.$t = null;\n    _this.c = null;\n    _this.b = null;\n    _this.a = null;\n    _this.$t = $t;\n    _this.$type = _this.$type.specialize(_this.$t);\n    a = a == void 0 ? 0 : a;\n\n    switch (a) {\n      case 0:\n        break;\n\n      case 1:\n        {\n          var c = _rest[0];\n          _this.c = c;\n        }\n        break;\n    }\n\n    return _this;\n  }\n\n  LinkedListNode$1.$t = markType(LinkedListNode$1, 'LinkedListNode$1');\n  return LinkedListNode$1;\n}(Base);\n\nexport { LinkedListNode$1 };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/LinkedListNode$1.js"],"names":["__extends","Base","markType","LinkedListNode$1","_super","$t","a","_rest","_i","arguments","length","_this","call","c","b","$type","specialize"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA;AACA;AACA;;AACA,IAAIC,gBAAgB;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAClEJ,EAAAA,SAAS,CAACG,gBAAD,EAAmBC,MAAnB,CAAT;;AACA,WAASD,gBAAT,CAA0BE,EAA1B,EAA8BC,CAA9B,EAAiC;AAC7B,QAAIC,KAAK,GAAG,EAAZ;;AACA,SAAK,IAAIC,EAAE,GAAG,CAAd,EAAiBA,EAAE,GAAGC,SAAS,CAACC,MAAhC,EAAwCF,EAAE,EAA1C,EAA8C;AAC1CD,MAAAA,KAAK,CAACC,EAAE,GAAG,CAAN,CAAL,GAAgBC,SAAS,CAACD,EAAD,CAAzB;AACH;;AACD,QAAIG,KAAK,GAAGP,MAAM,CAACQ,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACAD,IAAAA,KAAK,CAACN,EAAN,GAAW,IAAX;AACAM,IAAAA,KAAK,CAACE,CAAN,GAAU,IAAV;AACAF,IAAAA,KAAK,CAACG,CAAN,GAAU,IAAV;AACAH,IAAAA,KAAK,CAACL,CAAN,GAAU,IAAV;AACAK,IAAAA,KAAK,CAACN,EAAN,GAAWA,EAAX;AACAM,IAAAA,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAACI,KAAN,CAAYC,UAAZ,CAAuBL,KAAK,CAACN,EAA7B,CAAd;AACAC,IAAAA,CAAC,GAAIA,CAAC,IAAI,KAAK,CAAX,GAAgB,CAAhB,GAAoBA,CAAxB;;AACA,YAAQA,CAAR;AACI,WAAK,CAAL;AAAQ;;AACR,WAAK,CAAL;AACI;AACI,cAAIO,CAAC,GAAGN,KAAK,CAAC,CAAD,CAAb;AACAI,UAAAA,KAAK,CAACE,CAAN,GAAUA,CAAV;AACH;AACD;AAPR;;AASA,WAAOF,KAAP;AACH;;AACDR,EAAAA,gBAAgB,CAACE,EAAjB,GAAsBH,QAAQ,CAACC,gBAAD,EAAmB,kBAAnB,CAA9B;AACA,SAAOA,gBAAP;AACH,CA5BmD,CA4BlDF,IA5BkD,CAApD;;AA6BA,SAASE,gBAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\n/**\n * @hidden\n */\nvar LinkedListNode$1 = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(LinkedListNode$1, _super);\n    function LinkedListNode$1($t, a) {\n        var _rest = [];\n        for (var _i = 2; _i < arguments.length; _i++) {\n            _rest[_i - 2] = arguments[_i];\n        }\n        var _this = _super.call(this) || this;\n        _this.$t = null;\n        _this.c = null;\n        _this.b = null;\n        _this.a = null;\n        _this.$t = $t;\n        _this.$type = _this.$type.specialize(_this.$t);\n        a = (a == void 0) ? 0 : a;\n        switch (a) {\n            case 0: break;\n            case 1:\n                {\n                    var c = _rest[0];\n                    _this.c = c;\n                }\n                break;\n        }\n        return _this;\n    }\n    LinkedListNode$1.$t = markType(LinkedListNode$1, 'LinkedListNode$1');\n    return LinkedListNode$1;\n}(Base));\nexport { LinkedListNode$1 };\n"]},"metadata":{},"sourceType":"module"}