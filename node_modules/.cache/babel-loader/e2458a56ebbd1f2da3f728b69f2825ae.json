{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { CheckboxChangeEventArgsDescriptionMetadata } from \"./CheckboxChangeEventArgsDescriptionMetadata\";\nimport { CheckboxDescription } from \"./CheckboxDescription\";\n/**\n * @hidden\n */\n\nvar CheckboxDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(CheckboxDescriptionMetadata, _super);\n\n  function CheckboxDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CheckboxDescriptionMetadata.b = function (a) {\n    if (CheckboxDescriptionMetadata.a == null) {\n      CheckboxDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      CheckboxDescriptionMetadata.c(CheckboxDescriptionMetadata.a);\n    }\n\n    if (a.g(CheckboxDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(CheckboxDescriptionMetadata.a);\n    CheckboxChangeEventArgsDescriptionMetadata.d(a);\n  };\n\n  CheckboxDescriptionMetadata.c = function (a) {\n    a.item(\"__qualifiedNameTS\", \"String:XCheckbox\");\n    a.item(\"BaseTheme\", \"ExportedType:string:BaseControlTheme\");\n    a.item(\"BaseTheme@names\", \"Default;DenaliLight;MaterialLight\");\n    a.item(\"UncheckedBackgroundColor\", \"Brush\");\n    a.item(\"ActualUncheckedBackgroundColor\", \"Brush\");\n    a.item(\"CheckedBackgroundColor\", \"Brush\");\n    a.item(\"TickColor\", \"Brush\");\n    a.item(\"ActualTickColor\", \"Brush\");\n    a.item(\"UncheckedBorderColor\", \"Brush\");\n    a.item(\"CheckedBorderColor\", \"Brush\");\n    a.item(\"ActualUncheckedBorderColor\", \"Brush\");\n    a.item(\"ActualCheckedBorderColor\", \"Brush\");\n    a.item(\"BorderWidth\", \"Number:double\");\n    a.item(\"ActualBorderWidth\", \"Number:double\");\n    a.item(\"CornerRadius\", \"Number:double\");\n    a.item(\"TickStrokeWidth\", \"Number:double\");\n    a.item(\"ActualTickStrokeWidth\", \"Number:double\");\n    a.item(\"ActualCornerRadius\", \"Number:double\");\n    a.item(\"ActualCheckedBackgroundColor\", \"Brush\");\n    a.item(\"InputId\", \"String\");\n    a.item(\"Id\", \"String\");\n    a.item(\"LabelId\", \"String\");\n    a.item(\"Name\", \"String\");\n    a.item(\"TabIndex\", \"Number:int\");\n    a.item(\"Required\", \"Number:int\");\n    a.item(\"AriaLabelledBy\", \"String\");\n    a.item(\"AriaLabel\", \"String\");\n    a.item(\"ValueRef\", \"(w:Value,wf:Value)DataRef\");\n    a.item(\"Focused\", \"(w:IsFocused,xam:IsFocused,wf:IsFocused)Boolean\");\n    a.item(\"LabelPosition\", \"ExportedType:string:CheckboxLabelPosition\");\n    a.item(\"LabelPosition@names\", \"After;Before\");\n    a.item(\"DisableRipple\", \"Boolean\");\n    a.item(\"Checked\", \"(w:IsChecked,xam:IsChecked,wf:IsChecked)Boolean\");\n    a.item(\"Indeterminate\", \"(w:IsIndeterminate,xam:IsIndeterminate,wf:IsIndeterminate)Boolean\");\n    a.item(\"Disabled\", \"(w:IsDisabled,xam:IsDisabled,wf:IsDisabled)Boolean\");\n    a.item(\"DisableTransitions\", \"Boolean\");\n    a.item(\"ChangeRef\", \"EventRef::change\");\n  };\n\n  CheckboxDescriptionMetadata.d = function (a) {\n    CheckboxDescriptionMetadata.b(a);\n    a.u(\"Checkbox\", function () {\n      return new CheckboxDescription();\n    });\n    a.t(\"Checkbox\", CheckboxDescriptionMetadata.a);\n  };\n\n  CheckboxDescriptionMetadata.$t = markType(CheckboxDescriptionMetadata, 'CheckboxDescriptionMetadata');\n  CheckboxDescriptionMetadata.a = null;\n  return CheckboxDescriptionMetadata;\n}(Base);\n\nexport { CheckboxDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/CheckboxDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","CheckboxChangeEventArgsDescriptionMetadata","CheckboxDescription","CheckboxDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","u","t","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { CheckboxChangeEventArgsDescriptionMetadata } from \"./CheckboxChangeEventArgsDescriptionMetadata\";\nimport { CheckboxDescription } from \"./CheckboxDescription\";\n/**\n * @hidden\n */\nvar CheckboxDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(CheckboxDescriptionMetadata, _super);\n    function CheckboxDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CheckboxDescriptionMetadata.b = function (a) {\n        if (CheckboxDescriptionMetadata.a == null) {\n            CheckboxDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            CheckboxDescriptionMetadata.c(CheckboxDescriptionMetadata.a);\n        }\n        if (a.g(CheckboxDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(CheckboxDescriptionMetadata.a);\n        CheckboxChangeEventArgsDescriptionMetadata.d(a);\n    };\n    CheckboxDescriptionMetadata.c = function (a) {\n        a.item(\"__qualifiedNameTS\", \"String:XCheckbox\");\n        a.item(\"BaseTheme\", \"ExportedType:string:BaseControlTheme\");\n        a.item(\"BaseTheme@names\", \"Default;DenaliLight;MaterialLight\");\n        a.item(\"UncheckedBackgroundColor\", \"Brush\");\n        a.item(\"ActualUncheckedBackgroundColor\", \"Brush\");\n        a.item(\"CheckedBackgroundColor\", \"Brush\");\n        a.item(\"TickColor\", \"Brush\");\n        a.item(\"ActualTickColor\", \"Brush\");\n        a.item(\"UncheckedBorderColor\", \"Brush\");\n        a.item(\"CheckedBorderColor\", \"Brush\");\n        a.item(\"ActualUncheckedBorderColor\", \"Brush\");\n        a.item(\"ActualCheckedBorderColor\", \"Brush\");\n        a.item(\"BorderWidth\", \"Number:double\");\n        a.item(\"ActualBorderWidth\", \"Number:double\");\n        a.item(\"CornerRadius\", \"Number:double\");\n        a.item(\"TickStrokeWidth\", \"Number:double\");\n        a.item(\"ActualTickStrokeWidth\", \"Number:double\");\n        a.item(\"ActualCornerRadius\", \"Number:double\");\n        a.item(\"ActualCheckedBackgroundColor\", \"Brush\");\n        a.item(\"InputId\", \"String\");\n        a.item(\"Id\", \"String\");\n        a.item(\"LabelId\", \"String\");\n        a.item(\"Name\", \"String\");\n        a.item(\"TabIndex\", \"Number:int\");\n        a.item(\"Required\", \"Number:int\");\n        a.item(\"AriaLabelledBy\", \"String\");\n        a.item(\"AriaLabel\", \"String\");\n        a.item(\"ValueRef\", \"(w:Value,wf:Value)DataRef\");\n        a.item(\"Focused\", \"(w:IsFocused,xam:IsFocused,wf:IsFocused)Boolean\");\n        a.item(\"LabelPosition\", \"ExportedType:string:CheckboxLabelPosition\");\n        a.item(\"LabelPosition@names\", \"After;Before\");\n        a.item(\"DisableRipple\", \"Boolean\");\n        a.item(\"Checked\", \"(w:IsChecked,xam:IsChecked,wf:IsChecked)Boolean\");\n        a.item(\"Indeterminate\", \"(w:IsIndeterminate,xam:IsIndeterminate,wf:IsIndeterminate)Boolean\");\n        a.item(\"Disabled\", \"(w:IsDisabled,xam:IsDisabled,wf:IsDisabled)Boolean\");\n        a.item(\"DisableTransitions\", \"Boolean\");\n        a.item(\"ChangeRef\", \"EventRef::change\");\n    };\n    CheckboxDescriptionMetadata.d = function (a) {\n        CheckboxDescriptionMetadata.b(a);\n        a.u(\"Checkbox\", function () { return new CheckboxDescription(); });\n        a.t(\"Checkbox\", CheckboxDescriptionMetadata.a);\n    };\n    CheckboxDescriptionMetadata.$t = markType(CheckboxDescriptionMetadata, 'CheckboxDescriptionMetadata');\n    CheckboxDescriptionMetadata.a = null;\n    return CheckboxDescriptionMetadata;\n}(Base));\nexport { CheckboxDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}