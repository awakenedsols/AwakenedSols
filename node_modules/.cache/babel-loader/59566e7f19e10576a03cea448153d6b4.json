{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { NumericAngleAxisDescriptionModule } from \"./NumericAngleAxisDescriptionModule\";\nimport { NumericRadiusAxisDescriptionModule } from \"./NumericRadiusAxisDescriptionModule\";\nimport { DataChartCoreDescriptionModule } from \"./DataChartCoreDescriptionModule\";\n/**\n * @hidden\n */\n\nvar DataChartPolarCoreDescriptionModule =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(DataChartPolarCoreDescriptionModule, _super);\n\n  function DataChartPolarCoreDescriptionModule() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  DataChartPolarCoreDescriptionModule.register = function (a) {\n    NumericAngleAxisDescriptionModule.register(a);\n    NumericRadiusAxisDescriptionModule.register(a);\n    DataChartCoreDescriptionModule.register(a);\n  };\n\n  DataChartPolarCoreDescriptionModule.$t = markType(DataChartPolarCoreDescriptionModule, 'DataChartPolarCoreDescriptionModule');\n  return DataChartPolarCoreDescriptionModule;\n}(Base);\n\nexport { DataChartPolarCoreDescriptionModule };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/DataChartPolarCoreDescriptionModule.js"],"names":["__extends","Base","markType","NumericAngleAxisDescriptionModule","NumericRadiusAxisDescriptionModule","DataChartCoreDescriptionModule","DataChartPolarCoreDescriptionModule","_super","apply","arguments","register","a","$t"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,QAA/B;AACA,SAASC,iCAAT,QAAkD,qCAAlD;AACA,SAASC,kCAAT,QAAmD,sCAAnD;AACA,SAASC,8BAAT,QAA+C,kCAA/C;AACA;AACA;AACA;;AACA,IAAIC,mCAAmC;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AACrFP,EAAAA,SAAS,CAACM,mCAAD,EAAsCC,MAAtC,CAAT;;AACA,WAASD,mCAAT,GAA+C;AAC3C,WAAOC,MAAM,KAAK,IAAX,IAAmBA,MAAM,CAACC,KAAP,CAAa,IAAb,EAAmBC,SAAnB,CAAnB,IAAoD,IAA3D;AACH;;AACDH,EAAAA,mCAAmC,CAACI,QAApC,GAA+C,UAAUC,CAAV,EAAa;AACxDR,IAAAA,iCAAiC,CAACO,QAAlC,CAA2CC,CAA3C;AACAP,IAAAA,kCAAkC,CAACM,QAAnC,CAA4CC,CAA5C;AACAN,IAAAA,8BAA8B,CAACK,QAA/B,CAAwCC,CAAxC;AACH,GAJD;;AAKAL,EAAAA,mCAAmC,CAACM,EAApC,GAAyCV,QAAQ,CAACI,mCAAD,EAAsC,qCAAtC,CAAjD;AACA,SAAOA,mCAAP;AACH,CAZsE,CAYrEL,IAZqE,CAAvE;;AAaA,SAASK,mCAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, markType } from \"./type\";\nimport { NumericAngleAxisDescriptionModule } from \"./NumericAngleAxisDescriptionModule\";\nimport { NumericRadiusAxisDescriptionModule } from \"./NumericRadiusAxisDescriptionModule\";\nimport { DataChartCoreDescriptionModule } from \"./DataChartCoreDescriptionModule\";\n/**\n * @hidden\n */\nvar DataChartPolarCoreDescriptionModule = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(DataChartPolarCoreDescriptionModule, _super);\n    function DataChartPolarCoreDescriptionModule() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    DataChartPolarCoreDescriptionModule.register = function (a) {\n        NumericAngleAxisDescriptionModule.register(a);\n        NumericRadiusAxisDescriptionModule.register(a);\n        DataChartCoreDescriptionModule.register(a);\n    };\n    DataChartPolarCoreDescriptionModule.$t = markType(DataChartPolarCoreDescriptionModule, 'DataChartPolarCoreDescriptionModule');\n    return DataChartPolarCoreDescriptionModule;\n}(Base));\nexport { DataChartPolarCoreDescriptionModule };\n"]},"metadata":{},"sourceType":"module"}