{"ast":null,"code":"import { __extends } from \"tslib\";\nimport { IgrAxis } from \"./igr-axis\";\nimport { IgrSeries } from \"./igr-series\";\nimport { ValueOverlay } from \"./ValueOverlay\";\nimport { ensureBool, brushToString, stringToBrush, toPoint, fromPoint } from \"igniteui-react-core\";\n/**\n * Represents the class of the value overlay. The value overlay is a line or circle representing a value on an axis.\n*/\n\nvar IgrValueOverlay =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(IgrValueOverlay, _super);\n\n  function IgrValueOverlay(props) {\n    var _this = _super.call(this, props) || this;\n\n    _this._axisName = null;\n    return _this;\n  }\n\n  IgrValueOverlay.prototype.createImplementation = function () {\n    return new ValueOverlay();\n  };\n\n  Object.defineProperty(IgrValueOverlay.prototype, \"i\", {\n    /**\n                                 * @hidden\n                                 */\n    get: function () {\n      return this._implementation;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axis\", {\n    /**\n     * Gets or sets the axis used by the value overlay.\n    */\n    get: function () {\n      if (this.i.p4 == null) {\n        return null;\n      }\n\n      if (!this.i.p4.externalObject) {\n        var e = IgrAxis._createFromInternal(this.i.p4);\n\n        if (e) {\n          e._implementation = this.i.p4;\n        }\n\n        this.i.p4.externalObject = e;\n      }\n\n      return this.i.p4.externalObject;\n    },\n    set: function (v) {\n      if (v != null && this._stylingContainer && v._styling) v._styling(this._stylingContainer, this, this);\n      v == null ? this.i.p4 = null : this.i.p4 = v.i;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisName\", {\n    /**\n    * Gets or sets the name to use to resolve axis from markup.\n    */\n    get: function () {\n      return this._axisName;\n    },\n    set: function (v) {\n      this._axisName = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"value\", {\n    /**\n     * Gets or sets the value of the overlay.\n    */\n    get: function () {\n      return this.i.qn;\n    },\n    set: function (v) {\n      this.i.qn = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"isAxisAnnotationEnabled\", {\n    /**\n     * Gets or sets whether to draw annotations over the axes where the crosshair meets with them.\n    */\n    get: function () {\n      return this.i.p8;\n    },\n    set: function (v) {\n      this.i.p8 = ensureBool(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationFormatLabel\", {\n    /**\n     * Sets or gets a function which takes an object that produces a formatted label for the axis annotation.\n    */\n    get: function () {\n      return this.i.p6;\n    },\n    set: function (v) {\n      this.i.p6 = v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationTextColor\", {\n    /**\n     * Gets or sets the color to use for the axis annotation text. Leave unset for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.rn);\n    },\n    set: function (v) {\n      this.i.rn = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationBackground\", {\n    /**\n     * Gets or sets the color to use for the axis annotation backing. Leave unset for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.rl);\n    },\n    set: function (v) {\n      this.i.rl = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationBackgroundCornerRadius\", {\n    /**\n     * Gets or sets the corner radius to use for the axis annotation backing. Leave unset for an automatic value.\n    */\n    get: function () {\n      return this.i.qc;\n    },\n    set: function (v) {\n      this.i.qc = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationInterpolatedValuePrecision\", {\n    /**\n     * Gets or sets the precision to use displaying values for interpolated positions.\n    */\n    get: function () {\n      return this.i.qo;\n    },\n    set: function (v) {\n      this.i.qo = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationOutline\", {\n    /**\n     * Gets or sets the color to use for the axis annotation outline. Leave unset for an automatic value.\n    */\n    get: function () {\n      return brushToString(this.i.rm);\n    },\n    set: function (v) {\n      this.i.rm = stringToBrush(v);\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationPaddingLeft\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.qe;\n    },\n    set: function (v) {\n      this.i.qe = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationPaddingTop\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.qg;\n    },\n    set: function (v) {\n      this.i.qg = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationPaddingRight\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.qf;\n    },\n    set: function (v) {\n      this.i.qf = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationPaddingBottom\", {\n    /**\n     * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n    */\n    get: function () {\n      return this.i.qd;\n    },\n    set: function (v) {\n      this.i.qd = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationStrokeThickness\", {\n    /**\n     * Gets or sets the stroke thickness for the axis annotation backing. Leave unset for an automatic value.\n    */\n    get: function () {\n      return this.i.qh;\n    },\n    set: function (v) {\n      this.i.qh = +v;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"isValueOverlay\", {\n    /**\n     * Gets whether the series is a value overlay.\n    */\n    get: function () {\n      return this.i.isValueOverlay;\n    },\n    enumerable: false,\n    configurable: true\n  });\n  Object.defineProperty(IgrValueOverlay.prototype, \"labelResolved\", {\n    get: function () {\n      return this.i.q3;\n    },\n    enumerable: false,\n    configurable: true\n  });\n\n  IgrValueOverlay.prototype.bindAxes = function (axes) {\n    _super.prototype.bindAxes.call(this, axes);\n\n    for (var i = 0; i < axes.length; i++) {\n      if (this.axisName && this.axisName.length > 0 && axes[i].name == this.axisName) {\n        this.axis = axes[i];\n      }\n    }\n  };\n\n  IgrValueOverlay.prototype.findByName = function (name) {\n    var baseResult = _super.prototype.findByName.call(this, name);\n\n    if (baseResult) {\n      return baseResult;\n    }\n\n    if (this.axis && this.axis.name && this.axis.name == name) {\n      return this.axis;\n    }\n\n    return null;\n  };\n\n  IgrValueOverlay.prototype._styling = function (container, component, parent) {\n    _super.prototype._styling.call(this, container, component, parent);\n\n    this._inStyling = true;\n\n    if (this.axis && this.axis._styling) {\n      this.axis._styling(container, component, this);\n    }\n\n    this._inStyling = false;\n  };\n\n  IgrValueOverlay.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.gj(toPoint(world), useInterpolation, skipUnknowns);\n    return iv;\n  };\n\n  IgrValueOverlay.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n    var iv = this.i.pm(toPoint(world), useInterpolation, skipUnknowns);\n    return fromPoint(iv);\n  };\n  /**\n   * Gets the item index associated with the specified world position\n  \r\n  * @param world\n  */\n\n\n  IgrValueOverlay.prototype.getItemIndex = function (world) {\n    var iv = this.i.hd(toPoint(world));\n    return iv;\n  };\n  /**\n   * Gets the item that is the best match for the specified world coordinates.\n  \r\n  * @param world  * The world coordinates to use.\n  */\n\n\n  IgrValueOverlay.prototype.getItem = function (world) {\n    var iv = this.i.ht(toPoint(world));\n    return iv;\n  };\n  /**\n   * Requests that the provided item should be brought into view if possible.\n  \r\n  * @param item  * The item to attempt to bring into view.\n  */\n\n\n  IgrValueOverlay.prototype.scrollIntoView = function (item) {\n    var iv = this.i.en(item);\n    return iv;\n  };\n  /**\n   * Gets the label for a data item.\n  \r\n  * @param value  * The unscaled value to get a label for.\n  */\n\n\n  IgrValueOverlay.prototype.getLabel = function (value) {\n    var iv = this.i.q1(value);\n    return iv;\n  };\n\n  return IgrValueOverlay;\n}(IgrSeries);\n\nexport { IgrValueOverlay };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/igr-value-overlay.js"],"names":["__extends","IgrAxis","IgrSeries","ValueOverlay","ensureBool","brushToString","stringToBrush","toPoint","fromPoint","IgrValueOverlay","_super","props","_this","call","_axisName","prototype","createImplementation","Object","defineProperty","get","_implementation","enumerable","configurable","i","p4","externalObject","e","_createFromInternal","set","v","_stylingContainer","_styling","qn","p8","p6","rn","rl","qc","qo","rm","qe","qg","qf","qd","qh","isValueOverlay","q3","bindAxes","axes","length","axisName","name","axis","findByName","baseResult","container","component","parent","_inStyling","getSeriesValue","world","useInterpolation","skipUnknowns","iv","gj","getSeriesValuePosition","pm","getItemIndex","hd","getItem","ht","scrollIntoView","item","en","getLabel","value","q1"],"mappings":"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","sourcesContent":["import { __extends } from \"tslib\";\nimport { IgrAxis } from \"./igr-axis\";\nimport { IgrSeries } from \"./igr-series\";\nimport { ValueOverlay } from \"./ValueOverlay\";\nimport { ensureBool, brushToString, stringToBrush, toPoint, fromPoint } from \"igniteui-react-core\";\n/**\n * Represents the class of the value overlay. The value overlay is a line or circle representing a value on an axis.\n*/\nvar IgrValueOverlay = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(IgrValueOverlay, _super);\n    function IgrValueOverlay(props) {\n        var _this = _super.call(this, props) || this;\n        _this._axisName = null;\n        return _this;\n    }\n    IgrValueOverlay.prototype.createImplementation = function () {\n        return new ValueOverlay();\n    };\n    Object.defineProperty(IgrValueOverlay.prototype, \"i\", {\n        /**\n                                     * @hidden\n                                     */\n        get: function () {\n            return this._implementation;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axis\", {\n        /**\n         * Gets or sets the axis used by the value overlay.\n        */\n        get: function () {\n            if (this.i.p4 == null) {\n                return null;\n            }\n            if (!this.i.p4.externalObject) {\n                var e = IgrAxis._createFromInternal(this.i.p4);\n                if (e) {\n                    e._implementation = this.i.p4;\n                }\n                this.i.p4.externalObject = e;\n            }\n            return this.i.p4.externalObject;\n        },\n        set: function (v) {\n            if (v != null && this._stylingContainer && v._styling)\n                v._styling(this._stylingContainer, this, this);\n            v == null ? this.i.p4 = null : this.i.p4 = v.i;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisName\", {\n        /**\n        * Gets or sets the name to use to resolve axis from markup.\n        */\n        get: function () {\n            return this._axisName;\n        },\n        set: function (v) {\n            this._axisName = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"value\", {\n        /**\n         * Gets or sets the value of the overlay.\n        */\n        get: function () {\n            return this.i.qn;\n        },\n        set: function (v) {\n            this.i.qn = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"isAxisAnnotationEnabled\", {\n        /**\n         * Gets or sets whether to draw annotations over the axes where the crosshair meets with them.\n        */\n        get: function () {\n            return this.i.p8;\n        },\n        set: function (v) {\n            this.i.p8 = ensureBool(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationFormatLabel\", {\n        /**\n         * Sets or gets a function which takes an object that produces a formatted label for the axis annotation.\n        */\n        get: function () {\n            return this.i.p6;\n        },\n        set: function (v) {\n            this.i.p6 = v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationTextColor\", {\n        /**\n         * Gets or sets the color to use for the axis annotation text. Leave unset for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.rn);\n        },\n        set: function (v) {\n            this.i.rn = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationBackground\", {\n        /**\n         * Gets or sets the color to use for the axis annotation backing. Leave unset for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.rl);\n        },\n        set: function (v) {\n            this.i.rl = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationBackgroundCornerRadius\", {\n        /**\n         * Gets or sets the corner radius to use for the axis annotation backing. Leave unset for an automatic value.\n        */\n        get: function () {\n            return this.i.qc;\n        },\n        set: function (v) {\n            this.i.qc = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationInterpolatedValuePrecision\", {\n        /**\n         * Gets or sets the precision to use displaying values for interpolated positions.\n        */\n        get: function () {\n            return this.i.qo;\n        },\n        set: function (v) {\n            this.i.qo = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationOutline\", {\n        /**\n         * Gets or sets the color to use for the axis annotation outline. Leave unset for an automatic value.\n        */\n        get: function () {\n            return brushToString(this.i.rm);\n        },\n        set: function (v) {\n            this.i.rm = stringToBrush(v);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationPaddingLeft\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.qe;\n        },\n        set: function (v) {\n            this.i.qe = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationPaddingTop\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.qg;\n        },\n        set: function (v) {\n            this.i.qg = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationPaddingRight\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.qf;\n        },\n        set: function (v) {\n            this.i.qf = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationPaddingBottom\", {\n        /**\n         * Gets or sets the padding to use withing the axis annotation callout. Leaving this NaN will use an automatic value related to the axis label margins.\n        */\n        get: function () {\n            return this.i.qd;\n        },\n        set: function (v) {\n            this.i.qd = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"axisAnnotationStrokeThickness\", {\n        /**\n         * Gets or sets the stroke thickness for the axis annotation backing. Leave unset for an automatic value.\n        */\n        get: function () {\n            return this.i.qh;\n        },\n        set: function (v) {\n            this.i.qh = +v;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"isValueOverlay\", {\n        /**\n         * Gets whether the series is a value overlay.\n        */\n        get: function () {\n            return this.i.isValueOverlay;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(IgrValueOverlay.prototype, \"labelResolved\", {\n        get: function () {\n            return this.i.q3;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    IgrValueOverlay.prototype.bindAxes = function (axes) {\n        _super.prototype.bindAxes.call(this, axes);\n        for (var i = 0; i < axes.length; i++) {\n            if (this.axisName && this.axisName.length > 0 &&\n                axes[i].name == this.axisName) {\n                this.axis = axes[i];\n            }\n        }\n    };\n    IgrValueOverlay.prototype.findByName = function (name) {\n        var baseResult = _super.prototype.findByName.call(this, name);\n        if (baseResult) {\n            return baseResult;\n        }\n        if (this.axis && this.axis.name && this.axis.name == name) {\n            return this.axis;\n        }\n        return null;\n    };\n    IgrValueOverlay.prototype._styling = function (container, component, parent) {\n        _super.prototype._styling.call(this, container, component, parent);\n        this._inStyling = true;\n        if (this.axis && this.axis._styling) {\n            this.axis._styling(container, component, this);\n        }\n        this._inStyling = false;\n    };\n    IgrValueOverlay.prototype.getSeriesValue = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.gj(toPoint(world), useInterpolation, skipUnknowns);\n        return (iv);\n    };\n    IgrValueOverlay.prototype.getSeriesValuePosition = function (world, useInterpolation, skipUnknowns) {\n        var iv = this.i.pm(toPoint(world), useInterpolation, skipUnknowns);\n        return fromPoint(iv);\n    };\n    /**\n     * Gets the item index associated with the specified world position\n    \r\n    * @param world\n    */\n    IgrValueOverlay.prototype.getItemIndex = function (world) {\n        var iv = this.i.hd(toPoint(world));\n        return (iv);\n    };\n    /**\n     * Gets the item that is the best match for the specified world coordinates.\n    \r\n    * @param world  * The world coordinates to use.\n    */\n    IgrValueOverlay.prototype.getItem = function (world) {\n        var iv = this.i.ht(toPoint(world));\n        return (iv);\n    };\n    /**\n     * Requests that the provided item should be brought into view if possible.\n    \r\n    * @param item  * The item to attempt to bring into view.\n    */\n    IgrValueOverlay.prototype.scrollIntoView = function (item) {\n        var iv = this.i.en(item);\n        return (iv);\n    };\n    /**\n     * Gets the label for a data item.\n    \r\n    * @param value  * The unscaled value to get a label for.\n    */\n    IgrValueOverlay.prototype.getLabel = function (value) {\n        var iv = this.i.q1(value);\n        return (iv);\n    };\n    return IgrValueOverlay;\n}(IgrSeries));\nexport { IgrValueOverlay };\n"]},"metadata":{},"sourceType":"module"}