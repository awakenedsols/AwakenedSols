{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StyleDescriptionMetadata } from \"./StyleDescriptionMetadata\";\nimport { ShapeSeriesBaseDescriptionMetadata } from \"./ShapeSeriesBaseDescriptionMetadata\";\nimport { ScatterPolygonSeriesDescription } from \"./ScatterPolygonSeriesDescription\";\n/**\n * @hidden\n */\n\nvar ScatterPolygonSeriesDescriptionMetadata =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(ScatterPolygonSeriesDescriptionMetadata, _super);\n\n  function ScatterPolygonSeriesDescriptionMetadata() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ScatterPolygonSeriesDescriptionMetadata.b = function (a) {\n    if (ScatterPolygonSeriesDescriptionMetadata.a == null) {\n      ScatterPolygonSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n      ScatterPolygonSeriesDescriptionMetadata.c(ScatterPolygonSeriesDescriptionMetadata.a);\n    }\n\n    if (a.g(ScatterPolygonSeriesDescriptionMetadata.a)) {\n      return;\n    }\n\n    a.s(ScatterPolygonSeriesDescriptionMetadata.a);\n    StyleDescriptionMetadata.d(a);\n  };\n\n  ScatterPolygonSeriesDescriptionMetadata.c = function (a) {\n    ShapeSeriesBaseDescriptionMetadata.c(a);\n    a.item(\"ShapeStyle\", \"ExportedType:Style\");\n    a.item(\"MarkerType\", \"ExportedType:string:MarkerType\");\n    a.item(\"MarkerType@names\", \"Unset;None;Automatic;Circle;Triangle;Pyramid;Square;Diamond;Pentagon;Hexagon;Tetragram;Pentagram;Hexagram;Hidden\");\n    a.item(\"MarkerTemplateRef\", \"(w:MarkerTemplate,wf:MarkerTemplate)DataRef::object\");\n    a.item(\"MarkerThickness\", \"Number:double\");\n    a.item(\"ActualMarkerTemplateRef\", \"(w:ActualMarkerTemplate,wf:ActualMarkerTemplate)DataRef::object\");\n    a.item(\"MarkerBrush\", \"Brush\");\n    a.item(\"ActualMarkerBrush\", \"Brush\");\n    a.item(\"MarkerOutline\", \"Brush\");\n    a.item(\"ActualMarkerOutline\", \"Brush\");\n    a.item(\"MarkerCollisionAvoidance\", \"ExportedType:string:CollisionAvoidanceType\");\n    a.item(\"MarkerCollisionAvoidance@names\", \"None;Omit;Fade;OmitAndShift;FadeAndShift\");\n    a.item(\"MarkerOutlineMode\", \"ExportedType:string:MarkerOutlineMode\");\n    a.item(\"MarkerOutlineMode@names\", \"Auto;Normal;MatchMarkerBrush\");\n    a.item(\"MarkerFillMode\", \"ExportedType:string:MarkerFillMode\");\n    a.item(\"MarkerFillMode@names\", \"Auto;Normal;MatchMarkerOutline\");\n  };\n\n  ScatterPolygonSeriesDescriptionMetadata.d = function (a) {\n    ScatterPolygonSeriesDescriptionMetadata.b(a);\n    a.u(\"ScatterPolygonSeries\", function () {\n      return new ScatterPolygonSeriesDescription();\n    });\n    a.t(\"ScatterPolygonSeries\", ScatterPolygonSeriesDescriptionMetadata.a);\n  };\n\n  ScatterPolygonSeriesDescriptionMetadata.$t = markType(ScatterPolygonSeriesDescriptionMetadata, 'ScatterPolygonSeriesDescriptionMetadata');\n  ScatterPolygonSeriesDescriptionMetadata.a = null;\n  return ScatterPolygonSeriesDescriptionMetadata;\n}(Base);\n\nexport { ScatterPolygonSeriesDescriptionMetadata };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-core/esm5/lib/ScatterPolygonSeriesDescriptionMetadata.js"],"names":["__extends","Base","String_$type","markType","Dictionary$2","StyleDescriptionMetadata","ShapeSeriesBaseDescriptionMetadata","ScatterPolygonSeriesDescription","ScatterPolygonSeriesDescriptionMetadata","_super","apply","arguments","b","a","c","g","s","d","item","u","t","$t"],"mappings":"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","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, String_$type, markType } from \"./type\";\nimport { Dictionary$2 } from \"./Dictionary$2\";\nimport { StyleDescriptionMetadata } from \"./StyleDescriptionMetadata\";\nimport { ShapeSeriesBaseDescriptionMetadata } from \"./ShapeSeriesBaseDescriptionMetadata\";\nimport { ScatterPolygonSeriesDescription } from \"./ScatterPolygonSeriesDescription\";\n/**\n * @hidden\n */\nvar ScatterPolygonSeriesDescriptionMetadata = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(ScatterPolygonSeriesDescriptionMetadata, _super);\n    function ScatterPolygonSeriesDescriptionMetadata() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ScatterPolygonSeriesDescriptionMetadata.b = function (a) {\n        if (ScatterPolygonSeriesDescriptionMetadata.a == null) {\n            ScatterPolygonSeriesDescriptionMetadata.a = new Dictionary$2(String_$type, String_$type, 0);\n            ScatterPolygonSeriesDescriptionMetadata.c(ScatterPolygonSeriesDescriptionMetadata.a);\n        }\n        if (a.g(ScatterPolygonSeriesDescriptionMetadata.a)) {\n            return;\n        }\n        a.s(ScatterPolygonSeriesDescriptionMetadata.a);\n        StyleDescriptionMetadata.d(a);\n    };\n    ScatterPolygonSeriesDescriptionMetadata.c = function (a) {\n        ShapeSeriesBaseDescriptionMetadata.c(a);\n        a.item(\"ShapeStyle\", \"ExportedType:Style\");\n        a.item(\"MarkerType\", \"ExportedType:string:MarkerType\");\n        a.item(\"MarkerType@names\", \"Unset;None;Automatic;Circle;Triangle;Pyramid;Square;Diamond;Pentagon;Hexagon;Tetragram;Pentagram;Hexagram;Hidden\");\n        a.item(\"MarkerTemplateRef\", \"(w:MarkerTemplate,wf:MarkerTemplate)DataRef::object\");\n        a.item(\"MarkerThickness\", \"Number:double\");\n        a.item(\"ActualMarkerTemplateRef\", \"(w:ActualMarkerTemplate,wf:ActualMarkerTemplate)DataRef::object\");\n        a.item(\"MarkerBrush\", \"Brush\");\n        a.item(\"ActualMarkerBrush\", \"Brush\");\n        a.item(\"MarkerOutline\", \"Brush\");\n        a.item(\"ActualMarkerOutline\", \"Brush\");\n        a.item(\"MarkerCollisionAvoidance\", \"ExportedType:string:CollisionAvoidanceType\");\n        a.item(\"MarkerCollisionAvoidance@names\", \"None;Omit;Fade;OmitAndShift;FadeAndShift\");\n        a.item(\"MarkerOutlineMode\", \"ExportedType:string:MarkerOutlineMode\");\n        a.item(\"MarkerOutlineMode@names\", \"Auto;Normal;MatchMarkerBrush\");\n        a.item(\"MarkerFillMode\", \"ExportedType:string:MarkerFillMode\");\n        a.item(\"MarkerFillMode@names\", \"Auto;Normal;MatchMarkerOutline\");\n    };\n    ScatterPolygonSeriesDescriptionMetadata.d = function (a) {\n        ScatterPolygonSeriesDescriptionMetadata.b(a);\n        a.u(\"ScatterPolygonSeries\", function () { return new ScatterPolygonSeriesDescription(); });\n        a.t(\"ScatterPolygonSeries\", ScatterPolygonSeriesDescriptionMetadata.a);\n    };\n    ScatterPolygonSeriesDescriptionMetadata.$t = markType(ScatterPolygonSeriesDescriptionMetadata, 'ScatterPolygonSeriesDescriptionMetadata');\n    ScatterPolygonSeriesDescriptionMetadata.a = null;\n    return ScatterPolygonSeriesDescriptionMetadata;\n}(Base));\nexport { ScatterPolygonSeriesDescriptionMetadata };\n"]},"metadata":{},"sourceType":"module"}