{"ast":null,"code":"/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, IEquatable$1_$type, typeCast, markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\n\nvar AxisRange =\n/** @class */\n\n/*@__PURE__*/\nfunction (_super) {\n  __extends(AxisRange, _super);\n\n  function AxisRange(a, b) {\n    var _this = _super.call(this) || this;\n\n    _this.c = 0;\n    _this.b = 0;\n    _this.c = a;\n    _this.b = b;\n    return _this;\n  }\n\n  AxisRange.prototype.equals = function (a) {\n    return a != null && this.c == a.c && this.b == a.b;\n  };\n\n  AxisRange.prototype.equals1 = function (a) {\n    return this.equals(typeCast(AxisRange.$, a));\n  };\n\n  AxisRange.prototype.getHashCode = function () {\n    return _super.prototype.getHashCode.call(this);\n  };\n\n  AxisRange.$t = markType(AxisRange, 'AxisRange', Base.$, [IEquatable$1_$type.specialize(-1)]).initSelfReferences();\n  return AxisRange;\n}(Base);\n\nexport { AxisRange };","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/node_modules/igniteui-react-charts/esm5/lib/AxisRange.js"],"names":["__extends","Base","IEquatable$1_$type","typeCast","markType","AxisRange","_super","a","b","_this","call","c","prototype","equals","equals1","$","getHashCode","$t","specialize","initSelfReferences"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,IAAT,EAAeC,kBAAf,EAAmCC,QAAnC,EAA6CC,QAA7C,QAA6D,qBAA7D;AACA;AACA;AACA;;AACA,IAAIC,SAAS;AAAG;;AAAc;AAAe,UAAUC,MAAV,EAAkB;AAC3DN,EAAAA,SAAS,CAACK,SAAD,EAAYC,MAAZ,CAAT;;AACA,WAASD,SAAT,CAAmBE,CAAnB,EAAsBC,CAAtB,EAAyB;AACrB,QAAIC,KAAK,GAAGH,MAAM,CAACI,IAAP,CAAY,IAAZ,KAAqB,IAAjC;;AACAD,IAAAA,KAAK,CAACE,CAAN,GAAU,CAAV;AACAF,IAAAA,KAAK,CAACD,CAAN,GAAU,CAAV;AACAC,IAAAA,KAAK,CAACE,CAAN,GAAUJ,CAAV;AACAE,IAAAA,KAAK,CAACD,CAAN,GAAUA,CAAV;AACA,WAAOC,KAAP;AACH;;AACDJ,EAAAA,SAAS,CAACO,SAAV,CAAoBC,MAApB,GAA6B,UAAUN,CAAV,EAAa;AACtC,WAAOA,CAAC,IAAI,IAAL,IAAa,KAAKI,CAAL,IAAUJ,CAAC,CAACI,CAAzB,IAA8B,KAAKH,CAAL,IAAUD,CAAC,CAACC,CAAjD;AACH,GAFD;;AAGAH,EAAAA,SAAS,CAACO,SAAV,CAAoBE,OAApB,GAA8B,UAAUP,CAAV,EAAa;AACvC,WAAO,KAAKM,MAAL,CAAYV,QAAQ,CAACE,SAAS,CAACU,CAAX,EAAcR,CAAd,CAApB,CAAP;AACH,GAFD;;AAGAF,EAAAA,SAAS,CAACO,SAAV,CAAoBI,WAApB,GAAkC,YAAY;AAC1C,WAAOV,MAAM,CAACM,SAAP,CAAiBI,WAAjB,CAA6BN,IAA7B,CAAkC,IAAlC,CAAP;AACH,GAFD;;AAGAL,EAAAA,SAAS,CAACY,EAAV,GAAeb,QAAQ,CAACC,SAAD,EAAY,WAAZ,EAAyBJ,IAAI,CAACc,CAA9B,EAAiC,CAACb,kBAAkB,CAACgB,UAAnB,CAA8B,CAAC,CAA/B,CAAD,CAAjC,CAAR,CAA8EC,kBAA9E,EAAf;AACA,SAAOd,SAAP;AACH,CArB4C,CAqB3CJ,IArB2C,CAA7C;;AAsBA,SAASI,SAAT","sourcesContent":["/*\nTHIS INFRAGISTICS ULTIMATE SOFTWARE LICENSE  AGREEMENT (\"AGREEMENT\") LOCATED HERE:\nhttps://www.infragistics.com/legal/license/igultimate-la\nhttps://www.infragistics.com/legal/license/igultimate-eula\nGOVERNS THE LICENSING, INSTALLATION AND USE OF INFRAGISTICS SOFTWARE. BY DOWNLOADING AND/OR INSTALLING AND USING INFRAGISTICS SOFTWARE:  you are indicating that you have read and understand this Agreement, and agree to be legally bound by it on behalf of the yourself and your company.\n*/\nimport { __extends } from \"tslib\";\nimport { Base, IEquatable$1_$type, typeCast, markType } from \"igniteui-react-core\";\n/**\n * @hidden\n */\nvar AxisRange = /** @class */ /*@__PURE__*/ (function (_super) {\n    __extends(AxisRange, _super);\n    function AxisRange(a, b) {\n        var _this = _super.call(this) || this;\n        _this.c = 0;\n        _this.b = 0;\n        _this.c = a;\n        _this.b = b;\n        return _this;\n    }\n    AxisRange.prototype.equals = function (a) {\n        return a != null && this.c == a.c && this.b == a.b;\n    };\n    AxisRange.prototype.equals1 = function (a) {\n        return this.equals(typeCast(AxisRange.$, a));\n    };\n    AxisRange.prototype.getHashCode = function () {\n        return _super.prototype.getHashCode.call(this);\n    };\n    AxisRange.$t = markType(AxisRange, 'AxisRange', Base.$, [IEquatable$1_$type.specialize(-1)]).initSelfReferences();\n    return AxisRange;\n}(Base));\nexport { AxisRange };\n"]},"metadata":{},"sourceType":"module"}