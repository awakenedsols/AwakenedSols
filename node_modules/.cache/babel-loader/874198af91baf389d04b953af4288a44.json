{"ast":null,"code":"var _jsxFileName = \"/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/CollectionsTable.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport ethereumIcon from './ethereumIcon.png';\nimport styled from 'styled-components';\nimport { useEffect } from 'react';\nimport { gql } from \"@apollo/client\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n//icy tools trending collections on eth query\nconst TRENDING_COLLECTIONS_QUERY = gql`\nquery TrendingCollections {\n  contracts(orderBy: SALES, orderDirection: DESC) {\n    edges {\n      node {\n        address\n        ... on ERC721Contract {\n          name\n          stats {\n            totalSales\n            average\n            ceiling\n            floor\n            volume\n          }\n          symbol\n        }\n      }\n    }\n  }\n}`; //icy tools trending collections on eth query\n\nconst USER_COLLECTIONS = gql`\nquery MEVTokens {\n  wallet(ensName: \"mevcollector.eth\") {\n    tokens {\n      edges {\n        node {\n          tokenId\n          contract {\n            ... on ERC721Contract {\n              symbol\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\nexport const CollectionsTable = _ref => {\n  _s();\n\n  let {\n    children,\n    ...props\n  } = _ref;\n  const data = {\n    contracts: {\n      edges: {\n        collection: {\n          node: {\n            name: \"\",\n            floor: \"\",\n            ceiling: \"\",\n            volume: \"\",\n            totalSales: \"\",\n            average: \"\"\n          }\n        }\n      }\n    }\n  };\n  const Styles = styled.div`\n  table {\n    background-color: #192026;\n    color:white;\n    border-spacing: 0;\n    position:relative;\n\n    tr {\n      td {\n        border-bottom: 0;\n      }\n    }\n\n    th{\n      background-color: #192026;\n      top:0;\n      position:sticky;\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.2rem;\n    }\n  }\n`;\n  useEffect(() => {\n    console.log('use effect');\n\n    if (data) {\n      console.log(data);\n    }\n  });\n\n  if (data) {\n    return /*#__PURE__*/_jsxDEV(Styles, {\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"FP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Ceiling\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Total Sales\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Average\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              align: \"left\",\n              children: \"Symbol\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: data.contracts.edges.map(collection => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                fontFamily: \"Press Start 2P\"\n              },\n              children: collection.node.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 14\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: collection.node.stats.floor\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"left\",\n              children: collection.node.stats.ceiling\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"left\",\n              children: collection.node.stats.volume\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"left\",\n              children: collection.node.stats.totalsales\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              align: \"left\",\n              children: collection.node.stats.average\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              style: {\n                fontFamily: \"Press Start 2P\"\n              },\n              align: \"left\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                className: \"symbolIcon\",\n                src: ethereumIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 69\n              }, this), collection.node.symbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 13\n            }, this)]\n          }, collection.node.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 5\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 3\n    }, this);\n  }\n};\n\n_s(CollectionsTable, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = CollectionsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CollectionsTable\");","map":{"version":3,"sources":["/Users/genesisbarrios/Documents/coding/web3/Awakened Sols/AwakenedSols/src/CollectionsTable.tsx"],"names":["React","ethereumIcon","styled","useEffect","gql","TRENDING_COLLECTIONS_QUERY","USER_COLLECTIONS","CollectionsTable","children","props","data","contracts","edges","collection","node","name","floor","ceiling","volume","totalSales","average","Styles","div","console","log","map","fontFamily","stats","totalsales","symbol"],"mappings":"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","sourcesContent":["import React, { ReactNode } from \"react\";\nimport {Row, Col, Container} from \"react-bootstrap\";\nimport enlargeIcon from './enlargeIcon.png'\nimport ethereumIcon from './ethereumIcon.png'\nimport styled from 'styled-components'\nimport { Key, ReactChild, ReactFragment, ReactPortal, useCallback, useEffect, useMemo, useState } from 'react';\nimport axios from 'axios';\nimport { useQuery, gql } from \"@apollo/client\";\n\ninterface Props {\n    children?: ReactNode\n    // any props that come into the component\n}\n\n//icy tools trending collections on eth query\nconst  TRENDING_COLLECTIONS_QUERY = gql`\nquery TrendingCollections {\n  contracts(orderBy: SALES, orderDirection: DESC) {\n    edges {\n      node {\n        address\n        ... on ERC721Contract {\n          name\n          stats {\n            totalSales\n            average\n            ceiling\n            floor\n            volume\n          }\n          symbol\n        }\n      }\n    }\n  }\n}`;\n\n//icy tools trending collections on eth query\n\nconst USER_COLLECTIONS = gql`\nquery MEVTokens {\n  wallet(ensName: \"mevcollector.eth\") {\n    tokens {\n      edges {\n        node {\n          tokenId\n          contract {\n            ... on ERC721Contract {\n              symbol\n              name\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`;\n\nexport const CollectionsTable = ({ children, ...props }: Props) => {\n\n  const data={contracts:{\n    edges:{\n      collection:{\n        node: {\n          name: \"\",\n          floor: \"\",\n          ceiling: \"\",\n          volume: \"\",\n          totalSales: \"\",\n          average: \"\"\n        }\n\n      }\n    }\n  }\n  };\n\n  const Styles = styled.div`\n  table {\n    background-color: #192026;\n    color:white;\n    border-spacing: 0;\n    position:relative;\n\n    tr {\n      td {\n        border-bottom: 0;\n      }\n    }\n\n    th{\n      background-color: #192026;\n      top:0;\n      position:sticky;\n    }\n\n    th,\n    td {\n      margin: 0;\n      padding: 0.2rem;\n    }\n  }\n`\n\nuseEffect(() => {\n  console.log('use effect');\n\n  if(data){\n    console.log(data);\n  }\n\n});\n\nif(data){\n  return (\n    <Styles>\n    <table>\n      <thead>\n        <tr>\n          <th align=\"left\">Name</th>\n          <th align=\"left\">FP</th>\n          <th align=\"left\">Ceiling</th>\n          <th align=\"left\">Volume</th>\n          <th align=\"left\">Total Sales</th>\n          <th align=\"left\">Average</th>\n          <th align=\"left\">Symbol</th>\n        </tr>\n      </thead>\n      <tbody>\n        {data.contracts.edges.map((collection: { node: { name: Key | null | undefined; stats: { floor: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; ceiling: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; volume: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; totalsales: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; average: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; }; symbol: boolean | ReactChild | ReactFragment | ReactPortal | null | undefined; }; }) => (\n          <tr \n            key={collection.node.name}\n          >\n             <td style={{fontFamily: \"Press Start 2P\"}}>\n              {collection.node.name} \n            </td>\n            <td >\n              {collection.node.stats.floor}\n            </td>\n            <td align=\"left\">{collection.node.stats.ceiling}</td>\n            <td align=\"left\">{collection.node.stats.volume}</td>\n            <td align=\"left\">{collection.node.stats.totalsales}</td>\n            <td align=\"left\">{collection.node.stats.average}</td>\n            <td style={{fontFamily: \"Press Start 2P\"}} align=\"left\"><img className=\"symbolIcon\" src={ethereumIcon}></img>{collection.node.symbol}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n    </Styles>\n  );\n}else{\n  return(\n  <h1>Loading...</h1>\n  );\n}\n};"]},"metadata":{},"sourceType":"module"}